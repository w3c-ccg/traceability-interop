{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2a911d1f-6536-485c-a2cf-68de3b76d65e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "fd53bb3b-09fa-4030-9458-9d948fc40c75",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "63d17129-9c28-48e6-88e0-3038f89abbd6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "935c0106-378d-4a31-a25d-7c25b7ea3123"
                }
              }
            ]
          },
          {
            "id": "6a9c3644-f7d8-4e9a-902c-7b137058dff3",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2c399b0a-18f8-4a7f-acc1-7c7a0281495d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "53db9ece-9bac-4fcd-809f-3dfc71687222"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e5f6675a-c25c-4d4c-bf68-eb72888dbd99",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "7d079f76-d62b-4464-b9f0-86c9a1d3865c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "93dfab1d-cb77-443c-877b-48a93081eb02",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb67b74b-842a-4e6f-bdcf-fe1d59ce43fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ce11091c-018b-41ce-a1ed-b2e1bea4a1e8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "82bb31e7-6e4e-4d5d-82d6-e7647d40d399",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5c94c4e4-608b-42da-884b-24141cbaf6f6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9693e1e4-1980-48d7-b07d-2b6e84b7b4a9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8b1cefbc-416b-474f-b360-19e105c2e91f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e8a51b4a-817f-4726-99ab-a6e27db20bdb",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d8a3a0e5-1e7b-41dc-9e66-a11dda9af8f3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c4f52e87-d253-4472-a4f5-e30c25e71765",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "db86bfe2-27cc-45e4-91e7-c7a9d98077a7"
            }
          }
        ]
      },
      {
        "id": "68d53088-30d3-4d06-b7fd-0612afc84cee",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "aface51a-e361-4048-b316-5bde12738ec5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "224ad293-3b8a-4949-8255-a53c9214b50a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "eac8b994-70b8-4960-a784-7b5ac10f05e4",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db62ef07-d75f-455b-82ea-63b910aad6cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "53ddbbf3-a64e-4b51-8124-82a7e8221963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6008773-be5a-4e98-a652-37a00bc759a1",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf1cbd3-bf08-4510-b292-4a16183f9754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ebf06510-b810-443b-9665-5a82078f8f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8dfcad0-f882-452c-a51b-76814c2b1ec5",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a1cec8f-a1a4-4565-8efe-01bf12532e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "455fc3a1-fe53-43f9-9380-07317ca8a934"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "83ebfe04-e933-41a9-8a9e-b46efd7c51ed",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9a12b821-b0d2-4cc2-8a10-9ac28865f4eb",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c496b4-a693-460c-b060-164358e721de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f648b4e6-6b03-4a59-80e7-96b687f6bf7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0721ef-95cc-48b5-81b0-dc15bc4e51cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d41ee6b6-d35a-421e-ab35-b8e09b44003f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "47a0eef3-d92f-4081-98ac-577ccd35de93",
            "name": "Positive Testing",
            "item": [
              {
                "id": "79538c2b-f76a-49f9-8547-926018a88d39",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd6132a3-92c9-4c4b-881c-c1fa786a97a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b7d96aee-79a3-434b-9080-1edb371724b3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7dc4d0f1-2acd-41f2-be02-959cc1834c49",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "9336cb31-14da-4a8d-b067-9d76e288f917"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "49e2ef18-d272-4f5d-b104-ce57a1996c84",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1e9dcec7-8605-442d-a99e-a8443179c231"
            }
          }
        ]
      },
      {
        "id": "b7887f41-2635-4edc-b732-df5b1041bbb8",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a4e097f4-c5cf-453a-912a-9f1b5f13ec5b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4bede866-e37d-4308-aae1-0bf170d24e03",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9cbaacca-0f47-4239-91b8-0be249a16a8d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2edba67-4d30-4e62-b0b1-571a76250cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1e317e8-81b3-4084-b2ce-ca2d7f6f2a5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc7fc894-ddce-42fc-86da-404be28e2459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9653f343-ec29-48bb-90bf-b1079c654089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "241a7231-19e9-4a3b-98f8-79013a043998",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d984d65-90b1-42e6-90d4-7c2dbc9e7269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b367408f-a372-42cd-90d5-2fbc9bb184a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5971065f-4c30-4a18-b81f-5453dd838304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a884fa5-6a87-4f44-8487-5440be5841cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca86010c-3da3-4c3e-adba-87e06704a948",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b022ee5-dcd1-47a1-9d92-d55e65f0dcc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50df29da-f83c-4854-88e3-b92e03ef0fa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf170ff-4e83-48da-9691-4469788a33d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "192809ae-f4f5-4866-bb6e-b6b156a5aa23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a4aff7b-fcfb-4bdd-ab27-fb967069dda5",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c1485a0-b400-49fc-9f84-3305613f0584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baaf2f71-62c8-4ec2-80a0-b669f98a51d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e5f30d-3cbd-46c4-acf4-6d911976f543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9982138-439a-4417-9de2-bf13ecf7b641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d62d2b1-9d74-40be-995d-a7969b7ed32b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "802ea0f7-6450-4e9c-b494-6edb8d0e67e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ab93d8b-f7a8-43e9-b137-52a9700a4794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b28bfde9-d961-4176-b06a-660a3f81f589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "979df0b9-4054-4c8d-b1a3-1dabcee45a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b803f4d2-1c8d-4782-b5b8-c6724713e329",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa71437-da15-4a7a-9c58-2265879ad125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9cd525b-a41e-40fe-bea7-adedb3a1212b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "108a987d-5056-4a31-ac64-6502a9ec6530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "967b9254-0929-446d-b14f-c81e09754ced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58edb662-c20b-4459-a022-fdbe86867101",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e05291d-d1f4-4209-a607-9f682271b064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "730b1582-f851-4846-bd59-b91b15885b54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0342561a-676a-43e4-a71b-a29af4f3baa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87cf8997-866d-4caf-b0ed-262dc542257b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e61dcef-d46e-4a0c-a0c0-c602d95ee57b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "796e3e36-3673-4717-aef5-1841e77c573c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21c624c3-effc-46bd-b7fa-b85c185f8d04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6856d62-167d-4db3-bbcf-675273de1f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9150b01d-1c51-4fbe-89bd-b491bebcc152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb82802-96bf-42b9-a15c-37e9c7bee69b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19396a1-d006-45b5-9d24-a092bb61fbaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83a61d6c-57cb-4adf-8884-087387ff8aa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc1abcf-c877-4b8d-96da-04f29f95c401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2eb7a4b8-703c-4ec7-a882-c28a513cd6b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f3bd9a8-d6a5-4d1d-a0e1-0d225484b040",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab8f7b0a-5c5e-4bc5-b7a0-19588d676610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89bbe1cf-8310-485d-803a-9e55a2daf8a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b30806-b6ed-4593-b8de-d6d664871749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a43b2d34-e3ee-4438-b637-6aa6732831d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3fa0b0f-5bfe-4716-b938-483f2dc72c8c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb45a1cd-c5f1-4033-9d8f-a50fd1ecb081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a177d13-6bba-49b6-9e57-8832b249bf66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee96ec1c-8a48-4740-8025-8e1baf2288b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f89396f-19c6-4ca9-b905-968cf17611f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e6086c9-54e7-4597-97d9-d1a07d99c790",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa334ebb-0f9c-4e30-812f-e51832844dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2a0afc9-9b01-40de-810b-83171907bf5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e2806b0-b228-4ddb-83b8-8d25ede115cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29a465dc-0735-4192-8c60-6c329ec03a14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd4fed1-c789-4743-b17c-f040fa979615",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96212d7a-4b9a-4dce-91f7-7bb137c71afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccf0a1bb-6e98-4176-bbeb-bf362211d7e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b3cdab-74f9-473d-abb4-4eeafe7833d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "485f0f85-1e6b-442b-b99b-a86cca36b9cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f3e889e-c47a-4b26-a8d5-87d26fbaf29d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b5ccf1-0e71-4465-8a9b-7e7120f58e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5f9601f-e38d-4aad-80b8-7c420cbc99f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc84defc-b82f-4e16-a5d3-1b7a0118eb43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84f9646b-cf45-4734-a1e0-0416d1b78337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a5ce05-393f-4975-8a5e-68186bd98816",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b657d13-2701-4a21-a497-cc278fe88b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "936eb967-c7e6-4a5a-84b1-d683379901fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f0f12c-feac-4961-b343-026dc1a10d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14521547-e1e9-4d59-90c4-315ad15e6d8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c130f2-6a6d-46fd-9264-1fb9e8c2fbee",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc1e9c0-5d39-4b77-b1d4-4defaa1ada5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb05e6c2-8b6c-458b-919c-1f0a709325af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea313999-f8f6-4635-a130-3f4c861219f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9327aad-a027-4ed6-8c7c-cb8d22242d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f06b4fb8-8741-4b55-b0e9-00a7f751eca2",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "684fa0d6-b221-4450-8858-fdfbebc3b0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8847d4ab-be1b-4858-9141-ce027bd63b78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b38ed0b1-7520-4ad8-8077-60c006d8c185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71c5573d-d33a-4b13-a966-c72274280068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c4984c-c42a-4a67-af3d-397c124d5b8b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed78204-efc5-473a-a688-2a98a0798ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9d8198a-e6fe-485e-9de9-e84c0b27755b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f05e77ff-70f7-4b86-b197-037cf2d9b344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "587ed625-4935-42b3-b0c8-8be2709ddd2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d61d5e-5ba9-4f8b-b668-e5bdae20c0f5",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fab5c747-e4ac-4503-b96f-4dcf76dc52b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aee99326-c27a-416d-aea6-6fcb5d0cc750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "715d5f64-f970-439b-ae44-39bcfb33bdb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "99a6bdc4-8781-418a-b098-8a1d5f3d2782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d43ebeef-dfdc-400d-8f04-2602a0d64c7b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7001bcd-ffab-4165-9bd2-3cc7bf3d73e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "384c5420-d7db-4f5b-8cc8-fca4f40428cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b953e3-a455-4a3d-8ac7-14eed828a302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "293b74f1-2934-4903-a459-78ed7723a79d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e4f12c-7ece-4940-a0c9-cf119d20e963",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8488dd5f-3011-4a05-ae6b-1cfa7be94998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b92df2cc-a906-4c9c-8a69-fe91d1c3805d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f81b32b7-0794-4163-9e7f-f16b2d43eb9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "67e0682a-add1-4070-8c4d-b3fc7e0fd485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1da941c2-1a6b-482a-8cf1-fa5e073c5dce",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68758c10-e1e4-4841-8562-cde2f55e8668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cb39fd8-5117-4073-ab65-1bdf61d70b95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d0be00d-3a8a-4e46-badc-fd33285a4daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a6314f1-f2cd-4da8-8685-e5c41d01e43a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03795531-352c-4be1-b14a-a0790bac4ee3",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f2e0fe-e573-4b4b-acb7-1b533161ef65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6018c4c9-65a7-466b-b7df-135c0c3a0833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c35f877-747f-4004-a67f-8f0f8a0af087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "68f8d8c0-52cf-499d-9344-16ea5777b340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9afdaf03-82ad-4603-8c4f-b51cf5894ba8",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0429c0b-b6f2-4a56-a2ee-f51e34ab0f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1fa2011-9d19-4209-9f08-bfb040b3e496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a7eac6-4562-4af6-8ad6-25f961012fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b88d22e6-a6fe-4e19-b7c1-889aae8a5022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab843f8-c6ef-4a82-8a08-68aedc4a9242",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "467a1af4-7721-4398-a2b0-49f678649c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06e922ef-09e1-4556-b5bb-08db47865f31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "696d3513-9d87-498f-aaf9-d2fab1e18006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1e7e42b-ab24-4ba1-9029-d81140d50975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bbe59c9-5627-4fef-81d7-d36b6316014e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4876e62f-9bde-44ed-95c8-29985fdc8550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "054c057f-c7b6-4317-a7f9-f56ac874dcd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d23481-3520-408b-a706-704508ee62eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "16ff0012-1989-4152-a850-c6fa9e259e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a49147b-9196-4c1c-9d1e-347c3e8f8dc6",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6fdce5a-75d4-42d8-9bad-9461914661d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89552cf0-0f1e-40d7-90e0-88c480934197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecca9969-c336-4156-be54-8829f6f95a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2589d4df-2917-4407-b229-fdd7ed00487a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1fe51e-2cb9-4551-a264-c95673a4a5b4",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e19369-a2e4-48cc-a6a9-6f3bb18c4bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a469674-d90b-4f60-b78e-a491f5b42e08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44923a09-f4ac-4fa7-ac25-b928f72b4d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f98f5c9-65f4-4d01-90f9-334d11e2df8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4c0328-7f4a-4bf9-9a5a-3aac13425511",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45e9155-4943-4da4-ae95-48a43de7c41f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d60a2a0f-c8bc-4dca-a16e-692567ad30ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7230e3af-64df-4ec7-beee-ae674c723495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2bbe909-5041-4b77-9c39-b219c5cfeab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2170a37-cdff-4d4c-b124-752e264cd6d9",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d57af2e-862b-46fa-963a-b85aed341dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f68c041-69c2-4c36-9cee-e50379c71224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c4807e-7c85-47ca-91e6-3b3748c8bb06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "70152fac-6da1-4bb8-82d9-80744e24fbeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45dc4efa-fb1a-459b-8593-394b392f4633",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75b660d4-7ff9-476e-b730-bcb94e1c0e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adfec1c6-c4e5-42ce-891b-e41bc79cf101"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e133387-b568-4303-8f89-33d9b1d8c79f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b0c2a9e-a133-457a-9b3c-daad8f652028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d658c107-9fd4-4f80-8858-58257602d4e8",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cc7d91c-cd5e-4194-adad-f1a4ab4bb20a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44161cbc-0be2-4991-b4f8-51d7f0e1ee6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2098f625-6b8d-4895-945b-70c542896611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "db068677-6e68-466e-aecb-4bfe07ca9224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "174cf68b-1d56-4e2f-9467-31a2a4604b2a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe0d5b96-4264-42c6-9bf2-86645826581b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dab4757f-87da-46b8-b0c2-a838e685962e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc927cd-0651-4cd7-b8da-fabd2318ce57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee450018-5d5f-4a28-8881-de4c78c8dafa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f85364e6-85d7-4854-8353-a1d031267033",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b7698f9-2f75-4a4d-85a4-fe37c37758c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "625acb31-bd57-4ae5-b936-b66b78537cc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "684b4577-9c23-482e-afa8-bae10ffc8729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c9e8a73-f806-454a-a2e7-99f27d393657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beec3921-47ef-4966-9f3f-9a8dbd9d30e0",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d72e570-4a23-44cd-9b2f-85406d8ac14f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67eac358-79ed-4e01-ad4a-dcf3bf713cce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c39bc3-7757-43ed-8245-87498d686917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "17c768c3-9ebd-4241-812f-4516997045e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98cd563f-d57e-4204-8b92-89cc62ec720c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2702e82-23c1-45dd-8e2e-e8ab4755251d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f995f938-3572-4a28-9889-2d290251ce6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d02730-2202-4625-8c8d-0aa31eb8df1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d89a4fff-6399-4bfc-bd82-a9868257e342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca9b1501-41af-4c0c-8789-38cc8335e97e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb50831-7389-48f5-b6ca-b782978c058b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be54610c-f1f6-4d82-89a1-26d02a91a1a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f9b85a1-a500-4f05-b10f-1cad66b8ca6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f19703a3-773f-450c-bf1f-98f6bb61e540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e1faa9-0a10-4b09-8d9c-3dcf3bdfc39e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb3bf15b-c5e4-4e6d-8166-c881a3a8b93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "877e04c3-d71f-4fbd-a42b-3a6e387f0682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b5e1660-7bf6-4ace-980f-bda670b47808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3e4ef60-8993-4ba3-93a0-540ea3ea6b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ae2de5a-b66f-46de-888a-77785b486a40",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a1d881-ce3c-4f34-98c8-1a4e8fc33e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68606bec-098e-4b9c-a9c2-9ea04b1d19d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d78e9731-9e88-4477-9821-27d7ec794965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ec9a1fd-c78c-47a6-ae0e-7e8e7f447b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c68656b-7aa3-4198-b339-4a76c9b92f89",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad7fd7d4-bae3-48f6-9d58-42f9ef5b5351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "391743f6-8d78-4718-974a-0f9b4e219a5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09fbe299-3378-4d28-a19a-9e666a6e2a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "24e644c5-99d2-4572-be32-8020403f412c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719fb54f-0e5f-4bd3-b144-bf1ee16802ae",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7e651a-1b93-4d99-ac78-c715c60cf217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65b2913d-60aa-47a9-bece-4f428d5d2fee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3419ca3a-dd71-47ef-b7c5-ae574301f6b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9377e52a-f3cd-4810-9b39-be25906aaea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e89a79a0-4a05-4933-b092-4922694ad366",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60ee024-9594-4509-89e9-4a2b43970a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c8d3fac-85d3-4931-8f8e-e0f33618e987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eae76f4-8139-42b4-bdc3-e3f3562d86b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0c6756d9-b635-4770-b7c5-b0c884be352b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "285d605a-13ef-43ad-bafe-db707008a9c7",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb1758e-79bc-4506-bd06-c3fe14885760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "832d5cf1-d7c4-4a5c-813a-bc5b11560f88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e68bdb3-c0e0-45a1-a132-fe04e3d8b825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d18bef20-e84b-4df1-a382-464435dd79b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd524a0a-98c5-4102-89b8-9cfa515263e6",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2890a571-7b35-4c89-9e3e-e2bb299df5f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb9aba3c-5299-451a-8762-9cccdccbc13a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "710bcce4-2260-4b6d-a5fb-fc829121f677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d49fa7fb-0d4a-4bd7-8293-794e63d7e88c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d16befd-c531-40e2-a74b-326806073d4b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae2a225-a948-45f2-82c1-35c6b5df8680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32fe8326-5fe7-4310-8e86-48cd005f24b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc6303d-9855-421d-b87a-cfb23b6e213d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "784f6dad-2e5d-4aa7-b660-a976964b1d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ec1724-e721-4c3e-a1c8-34efecd7e1bb",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1424c51-dfa9-47d5-87d1-df8282c23ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "455d8c50-5340-45a5-b000-006bf7865e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e63a07-e7da-4b97-9c79-04c999168c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9bc9da5-728d-4c58-84e6-dfd85536e5fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be70465b-adea-49a2-8765-fae5406b2341",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "005d1cca-fc04-4dda-90d8-60243dce9a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3da37c61-232a-4ac5-934d-99de8c2c74de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3238c6d5-b410-4fbe-8bd5-9cd88ba221b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dc97202-bf15-430d-83d5-649234c0ac3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44550be6-b0dd-49e3-930d-d2966a2d1287",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "607ac340-4115-4d41-bc89-22ec7d553aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82e61fc1-31f3-479d-87f8-527724e923a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba667761-5b52-4a20-82da-b06cc08464d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe5b3d3f-3cdf-4d39-80e6-63c7ad0a7d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8391e4cd-4905-459c-922e-e2e33ddf1bab",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a003be-879b-4351-b23c-492e2b9d2cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e935c7f4-a341-4693-8e25-f1f093b077e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "739b184e-5a37-40f3-bcc9-afb0f3a021d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9bb1557e-a81f-45e4-855f-d4136836098a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a875b3-fee8-4b30-93e1-5ad928cf066a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3717c8f1-a35c-40c1-98da-3586d7edb6a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9b7f7ac-4454-439b-8921-7e8a02f9c2aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9237bf95-fd47-4994-8f0a-c27bf9a48bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c860054b-6015-4a69-9d2f-207fb698342c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56423788-feb6-4aae-829d-1068b86e1bf6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d39e0d4-1d73-4ef4-b456-18fe8c7aa745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6d03687-e459-44c6-bd16-53dac3cb2b71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d02aa71-6b9c-4821-9452-7f945ebf6fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "16a1b20f-380d-4826-9634-ddcb8376aabd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a885d9-e19f-4a16-a2c7-ad35c893a487",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7adf112a-977c-482d-80e4-956526a3ceaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62d4460f-49c4-4e20-9593-9a3dfdff2daa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca007ae-2fe0-4d57-a5ea-02efb36a7902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f08901d7-7acd-446b-9239-64b3efe4989c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30abd723-4f82-47dd-853f-0de9ed1ad508",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c33e364-adaa-4d83-90fe-5c1cef07bb6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbdcf704-6900-4f36-806e-5d0a28527a48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e01bc73-9e25-4ac6-be36-92fadd38590b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7219b527-51cb-4c6e-907b-4ab75739c2d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa19ccc-f958-415a-9e76-a945a8938d45",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f38171-489f-47b3-b241-e7178d934766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0f337f3-ead3-41c3-b16c-7c4ca77935a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea9dfb2a-7e84-4640-943a-72e83a0ea07b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea5b79c9-9b26-4bcf-8194-7ce0b5cdfdbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6d47a1-b299-4c78-965a-fe5039e688e0",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "275bed6d-4429-4955-8aeb-8987ab67d1d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8a1ff75-1472-4cb4-9981-22d907eec292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abae87b2-a7b7-4073-b45c-327330599be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3eb3a01a-90ec-48f1-ae71-6f8d19aed06a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1240887-1678-47ca-bd67-f1e63e94a4b1",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d9dd15-5420-4caf-90a8-834738f72164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20bcdd2d-688f-4a78-9c33-915b5b9c38a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ca8639-ecd0-4400-988f-72183f21dff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6b247f9d-de81-44d9-abcb-8d8ddbd7d7ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd80d63c-0457-44eb-9c00-22e22d017257",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6513a5d-8a04-4cbe-8e58-ad3dc18504ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5404ea11-359d-4672-900b-3cf09d600d82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b57c62e2-61bd-419e-b168-50f66363d0c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c98d0c6f-84aa-4611-85d3-1f851cce6468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "958c5172-9f95-4acf-9d23-f92ffcf760ad",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8d2906-4ce9-4165-ab52-f03b014c77cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b30a2f0-921f-41bf-8583-ceadf14b907f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "614323bf-e1ee-4bf6-89ce-02f47f72a628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "402c276c-52e2-4106-8647-69bbce285f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a170f1f-499c-4e2a-afad-4e6a23809659",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f4ce6f-3bf9-4d85-ba59-68bbb3c52a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b639447-d737-4f08-bff4-0556e256bc6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a3443b-c621-4a60-b236-ef2879cc4fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e975272-050b-427b-bae7-9bab59fb7e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be01d20-6b2f-4ad2-b2f1-cb508001f595",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa31b86-ccba-417d-a9f6-b5a6e11b1de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94b84d59-cfaa-4f14-ab67-32d4000e312e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ed3408-5d2c-45e7-bf81-3771965b34eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ebeac2f-3dd9-4123-ab00-10749d7d7416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ef78c1-d1b7-4615-9b6e-60b4de54b57e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d93271b-56f5-4580-8d7e-2a72a149fe88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c401295-7d81-4a9d-a03c-f5e0b98abb3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd223766-a2bd-4ceb-8f4a-9ed2311434b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d76b3da0-89b5-45f4-a00b-ff179fa3630a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be7c5ec-56e3-42e3-8904-88e034130fac",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90930426-7374-4ec8-8747-4ac04b5aad4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab5677f5-4eda-4154-8626-9f1f7b29b7b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58331b3c-6c07-4f6a-80d6-b1715224e1e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0494949b-a16f-476d-9b9d-5f1af840997d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d093aa39-ab64-43f6-8d9f-5e391c092986",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b16451-1fd2-4bec-9256-13691e5afe0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38e54c5f-8f30-43b0-92fc-c70721524e87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc47cb9-14d5-42db-ae74-5d4674d890a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6aba9e7-1d5c-4d4f-b182-e10776029e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3202088-220b-44db-84a7-9aaefabc778a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a8bd44-758c-4616-8479-fba7f4d9e4d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1605daf7-7c47-47d9-ab07-c9d89215f82e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d36d5a6-6a58-4470-b0fe-58f682405469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "567088e5-885d-43d0-b659-d02145f55841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ac2724-683c-4779-a287-96f7950b6e2a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3569131-5005-4e33-ad1c-312b853c5e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d296db8-349d-4cc5-80d0-88c021154201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c023ae1-e615-4dc5-99ec-e480293602af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "663cadc8-30af-4795-a1fb-8265114ccfe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b36704e9-f2ec-4ee6-af46-488ac5db59fd",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e4cdc7-bd11-4e5a-bf82-33a9a7ff0ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2744340b-c31d-41fe-a20c-0e76ddbdb9d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf96b954-b705-4a18-84c8-8b45797a43a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "28527339-ebfb-4649-a826-15da7fc0f57f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027c3b88-dd7d-4819-83f8-1b69ace39c16",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0989f51d-c154-4a13-870f-8c274910bda6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d31dd91-0ebb-44f5-bf5e-e16cd2f7748f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f432ffc0-c26e-423a-b464-3095ba30848e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f4915a05-3159-4ada-b13e-0dce7ba40fe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b79ed1-66ee-4393-ba1e-0fb9a5edc7b3",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00368cd5-c37c-4df3-9c94-84babb67386e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8de1bcf9-823e-4bbb-9267-01c16ddabe18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60226c62-f509-4b57-8205-0f1760677808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "52635128-e96a-441a-bbe2-be74ddfd2397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8e160e8-d634-4707-ac67-62e39352f824",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc7ce9d-4a81-4d56-9cbf-966642e6a108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0716b6e-8fc8-4b45-aee1-9e6a079a4ac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da5e1bb4-281b-408b-82a9-a3c15ab7f642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb643b0f-f083-40bc-a335-14a93e58bcc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd2e0c35-870e-4016-8450-d67fc549761a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02abb7d5-7f81-4c51-98be-b1f11d172169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b00e3844-0e47-45cf-8e87-0c69211fd7a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fad8408-2228-4e0d-bf23-6522772693d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c19d290c-3182-4554-abea-7c4f67042098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2787701-a7fb-41e7-bc15-b8ba818653db",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df5918af-d308-417e-85cc-525d5b3fbe7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bfce179-503e-497d-8514-3e837870ae64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62c5a53-b987-4167-8bb7-d6fff92aa80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e1ef795-7df3-4ca5-8356-6b63501934b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a57b6a-f828-4c08-9b58-7bc8d5b5dee9",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e0d3683-1e4a-47b9-b50a-af7a77c29e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ed65f6b-7300-4e22-b1d0-fcb7d474af69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd7a8c4-263b-4b24-b61b-e86fb8ffe088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "de2e5d97-d5fb-46ea-a199-65c925d1337b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac154c3f-3c8e-440f-82aa-0dc8862cbd62",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10c80f6-0740-483f-81d2-4a06aee60968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c156649d-4cb1-43ce-a3eb-88ab76d5bca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22149c62-4ed5-4787-9e72-126be14f3f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba3109fa-9345-4557-aeec-22cc8093130b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ac3000-04d3-4571-838c-663fe92e71f2",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b04557-734e-46fc-b5c1-39ce7be7b5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4531e633-0c58-49c7-89a2-3e8d4ce6ea3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40516021-2bef-45dd-aadb-cb74c7719ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eeaba3ab-3d44-4f5c-afc2-a45ff4ad42d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "026d1635-a1e5-497b-81d8-bd25c7b276bc",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7060a8c-d727-4d55-8f51-d6340ff23490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bba73918-a35f-4c12-a025-9dbc25f499c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18bee17e-2177-4fff-82fd-faf1a604100f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "69295237-7868-4d10-9585-ed40550e3eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeeab68f-158c-4df1-8759-904ffcaf9325",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2797271-58c6-4d00-9968-1a72b06d977f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae7257c5-f888-4b4c-b4b9-2926c32d2e45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f16849c2-cb2d-406e-bb8f-65ca0e096edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b445a646-137a-4c41-a3a1-98940999e769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e1a1736-20da-4a97-b66a-9ef6c4754cea",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e916a31-5ed2-4702-bf13-a4132c0467a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d4b13d9-a6fb-45c5-9b7d-8924ac1b3109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "168d69d0-755a-4dce-824c-ec9b5641c4c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "712b5901-8f26-43d2-90da-bcb3a0ffd2b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f50d63c-0549-4214-be4b-a45ca13c6541",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c83b52c4-1d62-4af5-ae38-dd1a33276188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e13a944-44e8-4cdb-bc35-abe5ea120e20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c210993-b830-477d-8771-27996cc362aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c4ffda4-eec8-4f3e-bc2c-aee5e923fe06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f83a0fb-1fff-4f3d-abd9-00c4c9428b22",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd18dec3-78be-4613-9c00-8905a8adffc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a51de7c-f5c2-4b4d-b338-8de9dacfb757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f38fa14d-e9d6-432e-bf57-facfdc920ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f029db3-dbee-4e52-b173-eed36ff1e4db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e82e1ee-a06c-4fd1-a216-f58bd4976601",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead687e4-6c57-4dea-a74a-6ebdd94ca2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03487234-84e1-4e75-9a14-6f57de1158c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956fe5db-b795-42e9-b481-c8d28c900318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e7f1e084-ba04-46d4-b51b-ee281be798cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5229a7-187a-4aa6-a97a-000feb119f07",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67872224-4ed4-467e-85ca-b048a93ccf73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aeaad53-b651-4dee-bc66-8e82ecb60a47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d64758-a90b-48e0-85e9-87a01d548c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "81a86bbc-f7e8-4cee-96e7-c8b33402653a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb5594f-214c-4b5c-b4e8-b4545dc68b0d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2824b3c3-78b8-4bdd-a1ec-b960086d7a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "427875a2-a184-4e39-b0fd-e658c060481c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d226d196-c814-4539-979d-d58e400bbdf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "afdeedce-3d67-4863-a142-ec3b0a2f464c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d95798e3-0b35-4352-8f41-bc26d0b83884",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "840e56f4-1cd1-4bf8-969a-6c0ba9d90298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3ad52ef-7b22-4bd9-9f3a-269100e91431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b782ade4-a6d3-4c91-a2e4-8808921e9874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "179bec44-01c1-406f-93ed-cc39f310f4c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9c23274-0806-4b95-aed8-7d66698581a3",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81947e81-d0ef-4b40-ab2f-efa2c0846d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0500872d-9648-4e30-b9c2-6550f0f1ed0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1552c30b-1b50-4443-804f-dd7b1ecf3c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "937e265e-d1cd-46ab-adf2-78e34d473dad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edbc72c4-8425-449c-903d-1dd9cc9fb0e5",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86245fb4-811d-4410-a535-cf09d29165e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a2c072f-3927-4012-99db-4a5d70c4c167"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4fddcc8-c44a-4def-b54e-9120f74e8479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "06ef7095-95b7-4553-a6c9-36a5e64ad96a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e604efd-a0d4-4451-a4d1-76eb067cbd88",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1f8731-1719-45c2-926d-368ee395e9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc4e2c9a-1aaf-4d8e-a8ee-9d17aa0c3e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db2a034-9b0c-4735-ac29-190df78d9134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d46f1267-89dd-4ef4-9a04-d29be7cf468e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f965bd99-82a2-4308-88a0-3bae95f8576e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae297b79-88d3-49bf-892e-2f3db636167e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2a64476-950e-461f-b0e9-ee64490eded2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0fe23b-036d-493d-9b74-a15c26b87ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "000df8b9-602a-4c8f-b909-857c6c66dacf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2be19953-b0a3-4157-9425-84523a87f7a5",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c74a73eb-5d34-4f19-a3b8-db4318d077cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ca7f29a-3981-4966-8f8f-c60f1ec6b47c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b535a8e5-a6f5-466b-ba56-4cfe0e5c9ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "25bf011c-181f-4280-ace6-9f4f7e70ef1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc39191-3b0a-4640-baa1-1d56e9f09ad8",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82a177c-2d98-4ebc-9436-a7477ab8acff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c48e2ac-24cf-4ee0-b4da-897c6926ca77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ed3b3e-13cd-4e30-9830-7d2a019803ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "abb4c0ed-8270-4c45-9b26-b6b27887b3ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54150b43-da33-4f9f-993d-c2d76ac33db4",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2858715e-e30b-404a-9e98-c25fcd6cd6a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54c43321-9914-4985-a99b-337eb482f769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b0b028f-866a-4cf8-adc8-48ecc6d3a296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "029ef264-f8d0-4bd6-9d2a-8b8f5060597e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13883ef1-a949-4945-a1b6-12fb940e8602",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1440be08-8c50-403f-a249-a96d02ead41c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d86a9947-749c-45c8-bd0f-b87a9f2d9e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b467d2dd-ed41-464a-95ea-4de87e90fe6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "38199ba6-cea7-4443-b731-0fae284fb664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05bb8a30-387f-4912-8ac4-fc5bfde24355",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6908ac6-2eef-40d0-b0bb-cec4263f9c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d0d690d6-6b10-4075-80bc-24629646e40b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c24ecd-bfeb-4603-bcb3-eff4d06692a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "771ba4d0-6fc5-4652-9092-973c065b53bd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dd3f7325-a171-412b-9de1-ab5848923179",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ddaa7cc0-8593-458a-926b-1946e3f64219",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce35935-4971-4ff3-96da-f5c274081efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a86151e5-95d0-4b06-9581-37c92b4038af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec638167-c3b8-4cf0-9482-601b97399c93",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e108800e-4025-416a-91a2-bdfae6e1afe6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "044c2cd7-bc1f-4492-b252-cf8b2500b86c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "75672f45-81e8-4802-b0ac-467677125bdd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1873d78f-55cc-479f-8df2-d63b80911d7c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1979bfa-34bb-4798-9b4e-67aecd2e47f8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f7e15c26-ad30-4280-9b6a-ee7301446273",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "50289438-d06a-4b2e-a847-04496d0dc851"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b2ae8e67-74b4-4d40-91f6-57b42f22d795",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0a8f157c-9757-441a-a42c-d306ba86cbab"
                }
              }
            ]
          },
          {
            "id": "36468830-edb5-40c1-af0f-a476b4773a9f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d4ac1b9f-ad32-48df-9dc3-57a7f3980939",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6183187-afbd-4af6-9c5c-e07034ac4976",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "919c8c69-a755-4406-9fc1-64b2d109d1b2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "32f0476b-d372-4f7c-907a-6997de4c790c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "08903882-d18e-4084-99e6-67440eafd705"
                    }
                  }
                ]
              },
              {
                "id": "22bd3999-99f2-4ad8-a154-064039d58685",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae17a336-a19f-41e5-93d9-4c303011b741",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4add4c7a-3f96-46e8-9499-112e26061707"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8939151-de0f-49f3-8021-298dabbd68f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ad3ed26e-8407-47b0-9a20-26c43d541bc5"
                    }
                  }
                ]
              },
              {
                "id": "72f7488c-f6b4-4f7c-b0d1-1f89cc3d604b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9872a4cd-ad05-4b26-a8e6-d9deaa65aec6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6d2fa4a4-b4cc-4489-9185-8f76bf2bace7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0477c676-6b21-4d46-9c91-ae94d64b0850",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b7685856-17ab-4842-a979-c7a09ab54ccb"
                    }
                  }
                ]
              },
              {
                "id": "eebeffe0-0ea2-45fc-a1ec-3f1297bcdd5b",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "08e85838-e82e-4a05-92b9-cbe783db196d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ffe5cfa1-ea4f-4961-9fa6-b5790de563ae"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "74769a96-31c3-4c78-84a4-ef20edbe0f90",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0dbaf0d3-4308-42d3-8e98-d34f8cd259b4"
                    }
                  }
                ]
              },
              {
                "id": "9b271e8f-d4dc-47c3-81d2-b674770c9b9e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "93f22b1a-6bd3-44b7-b12e-36ed7a3f7610",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "35940112-fb22-4967-8b21-7043eb7f3518"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f8aeadf-2bf9-4ace-8c69-3dbcfa3e4073",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b20bdef3-e4dc-4a19-a8ca-2616df680054"
                    }
                  }
                ]
              },
              {
                "id": "c27fa7cc-8391-4cbb-b828-a4ae89751e3d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf565b3d-28e1-4116-b41c-823dcd9cef8c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8cd73c9d-e0ea-46cd-ba17-78b2969a4e41"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2952e1f9-eb6a-475a-b711-fb24e905c241",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6938629d-f266-4d58-8acb-180cca07bf2b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5aceae3b-d5e9-4f8d-9941-ad12fbb7aefa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d4864a61-4142-43d0-8b60-063fb9441b22"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d72f212c-63a9-4600-bd89-57e483c84f17",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "38209091-32c7-4662-baa7-6c4983e222a3"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "450b8c36-fffa-447c-be62-b479fab18ba6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e8450aa7-ca89-4240-abe1-59a819b4274f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f6504a06-7bef-4d13-a820-551d075bd152",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b71ebdf8-3c53-4a5a-a85c-574c44c12f92"
            }
          }
        ]
      },
      {
        "id": "c6ba1c4e-7296-4e23-bc7a-8b19068ba330",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "61e3b8cc-0ede-41f3-9a88-5c2587b0bc40",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2d75eaac-bf73-4ed6-80cc-79fa8b45c0ae",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cdec8d34-2b13-44e0-abe1-b2aac60f611f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed01031-e56e-4ca4-a349-b12c5535cb9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0aea07c-be53-44e0-ba37-a782395917c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e119639-4818-492a-8357-b3a43970ee75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "03f65026-1a8f-4db0-8032-0d04a9527262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0811917b-8f7d-4ba0-8d5d-f45446032379",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adbb0fc2-502f-44f6-a29e-575a1f2c62bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6bf4baa-9574-4a9d-96d5-499a61f0cdf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8aaab85-559a-42f0-9b55-5389acb3825e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0434465-8e0b-4177-a17f-99ecb838127c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d2466ac-c72b-4c24-bd98-ccc57280150a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d43899-4c99-41fb-92d3-c92395615159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65888086-deb7-46e2-b586-01e4be1dc2a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99da6095-9de9-498f-9189-d5b1123f69c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd0b2dcd-395e-4945-b295-3a557539fa21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1137aa2b-15ff-478c-8809-9887592df830",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a07d73-64b5-40e7-8a77-2156097f0921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cf42fbc-9f0e-47d5-8339-19ac234daadd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b4fd3a-5c98-44ab-bf71-17f0e4930f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "471bba1b-67e3-4e6a-821f-de9a47f243cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6801c52-09aa-4b86-8ba0-2dcd2927f0e9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84db8cd6-9c85-4777-907b-b6e9a52dadc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86f60f50-fb74-41a2-930d-1b33ff296439"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b11a174d-63d7-4103-b0f3-ce1769963b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "39a62f6e-488f-4b54-8913-ce2277e5ce98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e61acfdf-717b-4f8e-80ef-e6145d0b09fd",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7efca31-cdfb-448c-91be-c1766f7180dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7afa033d-d84c-4a69-9ddd-2494a3c70a43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2301cca6-355d-4611-8ebc-027612823479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "57d976e3-1b56-4cfc-9c5e-00ce0ec9aeb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feec87e7-be79-4829-a3dc-b323fe0cf042",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f61a52d-e14e-41b8-9da8-0622a5740f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c675bd19-fa28-4f01-909b-7d9c238f850d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f914ce9-b73d-4f8a-92b1-66f9272723cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "937618dc-a091-443b-8938-ff172add2a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa2633a4-2d7f-410b-b66b-afbfeb75b10a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5735520a-fc14-4aff-a845-e3da2098477e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6fea744-365b-469c-8ce1-72fd259e718a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff5160e0-3ea6-449a-a4d6-14d435c874be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d625b119-78bc-411d-9261-fac54d9b835a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fe7ebe6-0307-4dd9-9322-db49541d3569",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de83406-4972-4b10-8545-5f64779a65f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d860dba0-4841-4717-b4c1-53727a3015a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d6b3d7f-19a3-4178-b4bc-aed155807223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0edf085c-3083-4317-9278-6d5d26dc272b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b83e2a-c58f-41b4-92b2-1e2f00e30047",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4343fbf6-f24f-4d4c-8934-819675c3b050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3df55023-da3e-4328-8acf-5825a69d50bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5101dc4-2f8e-4377-9fce-a7e43f159257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdc6a2a3-e7cd-4976-a9e9-b288fa12a622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f2a866a-ca74-4a02-8a6a-88a0710c5159",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35999fea-2ab6-4497-baa3-134e94ee399b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24e8e0c0-2e9b-4669-9a78-ed91aa848213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "761285f7-96b0-4c86-b13f-e91ff3342bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7dd6f9d9-ae74-4429-92c6-bc3a09ce4ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2763fe2-f8a3-4e1c-8fc2-6dae8ad72821",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7126e313-4f9e-45b7-9ab1-b369d9afbbc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43a953a4-1438-4ee2-b2dc-3e65daa32946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d2a184-5151-47b2-93e7-3e0977867c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6f81ef1f-7ccb-4557-8029-298056d98828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f398c8aa-ccf2-4974-b369-3bebb19b361e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d3a87b2-179c-4c99-a4cc-7175b1151017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a765f7ff-0946-49c5-8798-bd76e9b7ce05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed2f591-9aaa-4a16-92c1-2714f061e5e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb25ee35-ec65-48e4-8535-33a5a8ec675b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9154a91-361b-4ef7-9835-1d929b0c747c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ae47e3-ef83-4254-8a59-26117c644851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66067a4c-9982-491d-8ae5-920e88a3b7a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b59d101-1696-45a7-bf65-b609f11b90c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6dba1bf-23db-4e50-92f8-5a9a115f10cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a400bccf-52dc-4563-967a-54054471a5ce",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26608a8c-0562-48ef-aeb9-a5a6aef5516a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "451887b4-4b65-4ffc-a541-f14099795587"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28efc95e-81cb-4151-b6dd-ba0423292ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "40630a29-09e1-4147-90f7-379c35a9018a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "039a29e0-5a08-4862-b150-f21f651eacc8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c5d9875-653f-4082-b8bc-114f31f51e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f55e6258-f87a-4380-9d43-8ef3164b5408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f169d8-1951-4705-9358-8de930e600e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "93b01169-3688-4268-8c36-d359a29d70de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1dc562f-8234-49eb-a326-93791771bda8",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e3a0ef-eb69-4c20-bbda-0906b5d3e111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1446dc32-129a-4c9e-95d2-81f7b54c8b89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2771cd58-e38d-4a00-a831-5becf5a3cf66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a6c9f5d-cbd8-46e7-bbae-c40da5eb9786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c153a201-ae66-4292-bbe7-2cd162b23c36",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c4ee87-b897-4f5a-87f8-4b50d60526ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a468b25-5de7-4b6a-a9c0-0e6996d9e22a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f9de1c-7250-4b13-8eb9-381bbd73aa09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7da32b74-8b4b-4cb6-89cd-c7ec2f6a6896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "055f2a6c-7620-45e0-bd6f-12b3930d6acc",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8376ad70-f420-4fd6-b528-b9b15a25c4d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79601f8a-fc23-43b0-9187-26a9b557cbae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53c303c-77a9-4650-9b15-cc3fa3e3759c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de29be71-4a45-4e76-83f0-a65ff9a1c5f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b4c4755-6e3d-4400-b02b-7096feff6db8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb959992-4838-4003-93e0-e2097ba0a42f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "047924e6-37c6-4b11-a4b0-93d061e3178f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e29d7d3-83d2-47bc-b459-dccabdc0b1ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5334511-0416-4042-99d2-8ed846c10d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80a464c3-f737-412b-b0af-da32981e36b3",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09120da2-04e2-4910-aa7b-0a67a9c220a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d32eca13-5aa1-4aa9-927d-65d4a751e790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf6f1783-3293-40b0-bdb3-9be8d6d5727d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b24723b6-683c-4d84-8a17-824707f0fd37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12cfa97a-a568-4a7f-8fbf-a5a7ce0ef1fd",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a090f786-cf76-4dbb-83ff-abaeb337a1e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1d9fde2-d434-4523-8f13-4951cb65e845"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a42ae7-861f-4994-b499-7a9f62a11a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5577c82-5938-48fa-a4b2-90bedd910d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4371f7-62ce-46c6-a91b-64c07572fba1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a61745-3888-40be-96ab-d6ff6d78db01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4098fa8f-1085-44c2-9b6d-83d7ec902cea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9903bbf-8abf-4148-9504-c1e6ac697a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43831146-31e8-4aae-9a3b-c439ca87471c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ebd9522-424a-4972-a1a3-61d9636ca951",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6247c4c-5f9a-4114-910d-d7ab2a1f8d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb9f65dc-b408-4b60-9a9a-55aebd72090f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35fe77e7-ec58-461e-872a-6f0fdce08ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6b57e51-1b94-469d-b6e8-d686128de5ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "904bb46d-184d-4911-b1fe-5fda191c7f0f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79bea286-c802-4826-92df-e5c0cf1e5550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1c4b737-4723-40b6-89fa-1c5098e7dda4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb2407c2-22c2-46ea-9ce7-5817d29abceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e3ca39a-2aee-4eec-b27d-441e3b8714b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73fd7b7a-7977-4ccc-8cc2-f9c7437afba5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2bb0a02-4cab-44f4-a3a2-bdf873dbf2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a367a820-7f34-4592-97d4-62820cbcde24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ee3535-bbe3-4647-b6ef-7892d935013c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02bb45f3-9c41-412b-b7bd-c8e878f855e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e23307-0647-4e8b-8f6d-8fe4f17ac541",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd939a72-a8c6-4b0f-ad85-0a2e43690366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a43fc0ae-e3b5-4880-89e1-c604576f17c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8962046d-9ef9-4910-a6d9-674ec84d804a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f34f2c5-1e2a-4da6-84ad-cd5f77c04aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b050d0b-fc72-4eea-a0a3-6e2cf4d36d99",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2aa072f-a3d9-4c7d-a184-6dd91baa46ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a039b05-63d2-4d20-aa9f-adffca95716e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f8067d-31c8-45f9-b0ea-3f7f3f3723c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0ed4f1c-9090-4e19-9c81-303b2054d086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9cdaba3-5464-4386-a1b9-f5058a9896ee",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb8edbb6-96f7-4bd0-8162-de64b2c43385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4e5268c-1d77-4bb0-8a67-0185bcfc3ad1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92336cac-0878-41f6-ae02-8f31816b2339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a017242-ee44-4b9f-bbd0-3e81e59ad2c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3aec2c-966b-43bc-bfb4-ae7b4e2656ae",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a01b9d0d-e715-4dd4-889b-61ddc0224ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c090e33a-dacb-415c-8b83-a819ee37665e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79519c05-de18-453b-9c46-8ab38d77ddce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa96dca2-0b02-4268-bd04-850c38b8acd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c67b23e-3088-4bf7-9479-111c36401e56",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd4e8eb-d30e-4727-97d3-a4ecba93042f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca274f19-13a3-4730-b1d8-6df78f172e5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3843424-3f23-4cb3-aa3c-eda77936c6a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfac0854-c625-4ffe-b35e-c497bfb19ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a50e37d-3a1d-45cc-b380-bb406d4cdcba",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dee4083d-b612-450d-9082-2f390a36d068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40b8e989-e095-4ba3-9fe2-51729a125b28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8748238b-5e8a-4fa8-ab14-ad63b3f2f735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28993875-d3c7-4f8b-ae08-4ce6c936480a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1bfcc885-3390-40e2-9e81-3aef5a9fe988",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ceaa341e-19a3-4ceb-afdb-6443fcd4687d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd7c969-630f-464a-a652-008450ef81dc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6099d893-d3be-4ca2-80e5-2486c8834244"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb00d3f6-d045-4afa-8771-649b4e317b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "096b02d7-67c8-4c66-a646-38a59878ae18"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "42397f81-6b74-4538-9dda-02f0f7434d9e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11efff30-4f7f-4f94-91f0-641a414dcf80"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a05539c0-8914-41dc-83a1-a93f9447aca0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c3faf53e-1fac-4737-a107-40704edbd5c4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c877bc70-5078-4060-8ca4-c1c2e291b53e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9bf0c136-b36d-4018-8c06-b4491aa2e1e7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "25d11de6-fb84-49f3-9c94-cb9d9772661c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5e86461f-961a-4c39-8860-81dec4951fe1"
            }
          }
        ]
      },
      {
        "id": "f971f96b-9963-4b28-a636-3662dcb45186",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "e0efd513-0d1d-403c-9050-2ea417d7e081",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1ff0af6a-76c1-43fa-b847-aa5ec99f09a2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "19896502-e001-4619-b0d7-b1c777481222",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f9e946-235c-43f4-a24b-acde25dcd809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "333fa495-1af6-4030-971b-87c16a3a1e71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b94040d8-9a11-40ec-9d7b-7498a0233e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e661f6b-9512-4165-ac62-e1a59fb2068f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "954e65df-0556-4e0d-bb62-680eff603d01",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96fd0b05-c0b5-4ceb-bfde-8cb55c73e8cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f6e4ac7-e6c1-400a-b18b-080b76f7d2e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28509850-4d50-44af-a9d8-7dd762dd6adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e905c5a3-1d07-4168-a187-df8d7ef8ca6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c1b64d0-765c-4531-a91c-87c161901de6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d46408-7490-41b0-b765-30c268cc924f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "519b8e80-6c17-4a41-9722-761027a01abd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3abe803-138d-450b-bd09-637d61b50e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1eb23dbb-9e71-42b1-97f4-c31c54654835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e80ac5-363c-4bfd-a9d3-c1aa160a91e4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ecfce7-1af9-4c3c-be44-031ac3904ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c9151af-9129-41f7-88f4-141cf924fbb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0998938-b097-4e49-8f85-20f15dd73db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1211f0b-3ee4-4d16-8c91-c120ecdb6e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98465ce3-874e-4c4a-96f4-1f0dab3c7148",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec98d718-9c12-47b6-834c-559b4d555d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aa18590-ece1-4881-93ce-ecec89e98986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b5a3e9c-7dbd-4d5d-9cf8-43575032233d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4166e23a-22f5-4028-99d5-f5496f1a4238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74037684-30f5-4219-8800-610354e4f8ed",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d944c6f-cd3f-4649-9ea4-0b63f07a0645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67869e3a-9cb4-4bf4-a0fe-8114644a4507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6245147-44fc-4e64-9f07-fe7e3cd5d33a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "53209aca-fa08-4654-a80f-b75b9034be84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d50796d1-6679-4f94-a5c4-8c97ac8c89cc",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f057d96-d286-4ebf-bf3f-7d4e9c1e1cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8fb0137-c793-4ab5-ba38-fa38df7a0fd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d660693c-688d-4aae-9247-4504c8f999aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "317be9a9-f4ad-4762-ac89-3b3d75ee30e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "692a1a52-8b09-4937-a3a8-4d002168efdc",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec21ff99-afa2-4882-8ca2-49fde3a36e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e3eedf0-42e8-4c61-9867-99c8253bc102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b8166f-ac90-4b09-b96b-fe5744007899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60b300f5-fbb2-4d0b-be30-aade29cebf19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97896845-9114-494e-bed4-8480a9b74dee",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1592aa8b-2fb5-405f-b0be-42314ba66442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eeda510-e12a-4506-b307-0a8145ec5132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "485548e2-ba7a-445e-b245-25512ebb1c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "438a9fe6-5b12-4291-b3fb-6a9d465ba8cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8290e2d-3b04-4b02-a014-9930720f3c4a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f14b40-c339-4e7c-afda-41defad99c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41ea2801-f667-447f-9b14-974ede41d042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a2578b-278a-4713-b250-17543a43f6db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "12a72565-d10a-4c75-a933-392304f3a95a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67608598-6457-4c01-95e7-b5c5c1824e25",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16333e7e-a139-40a1-a082-f6206c28c769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab104dce-91c0-4826-8c39-9455d904a253"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523d009e-26a2-4bc9-aed9-8d6bc4f04c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "acb4b53c-c222-49b2-9677-62c1d98cff0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2dbb007-7411-4323-a874-e02e9c43b119",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "309ea7e5-ed70-4f33-a907-279869a8e2a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f838b5c1-4ede-4c55-bf95-a77d99fdfded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e54ed163-7a42-44ba-9385-d842f876f6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b6db989c-fe77-49e7-a959-451fb112a244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4744b898-a421-4559-b617-ed826a7201c6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "418eb41e-50d9-4556-a1f5-6734e46714dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "532ecd7e-a2ce-4aca-ac3e-fe8a009baa3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "513c0de0-807f-489d-85a0-a417f8944a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "086dbb5f-83b1-4731-9e38-dd1689e1b88a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8228350f-f535-4f68-b51c-de3e997e45cb",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f95f31b9-60dc-4af0-9414-648de42fd1d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61d280de-7277-4ade-8881-23514d7796d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d986bd0-9fb0-49e4-aae6-5c881e8f875c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8e85d59-2355-4e6c-a161-d56923ee7849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d92261-aac9-4867-a599-a49c5f19048d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3738c015-f95a-45ea-8d50-ab8e80c132df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eb2f887-b214-4e94-be7e-54d43b49be6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a3fc9fe-b97b-47cf-8c34-86c6a220f954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "07b78ff2-0650-4c38-9f66-a6047d2910b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fbe14e7-16ad-4ff1-811a-c0afd08bf0b7",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00bde2ee-8c57-4b98-a3bb-e46fc57b3979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "487f5846-362c-4413-88c9-134b60bc7a97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a224ac18-aba4-4675-ac49-a63a984d1a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f39a4311-af51-4e73-9f74-ceeb27ee614f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "723c8ae5-21c6-4173-a8b9-59944b800e53",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "806c243b-6786-4a04-a684-dc0e16f52bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb775c8b-6535-43a6-9e01-8d46f47c8f24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93fad887-7282-41d0-93dd-602d79d05da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fe126ed-4dfb-4cfa-a1c6-a581417fab6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a73bb5-3d43-46dd-893d-f6bd88329cae",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a15b1e15-586e-442e-a3f7-046d33460b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6863797d-1ca6-46f8-89cb-2915bd1b55de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c51bc326-2562-4858-8879-7ab9016548bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "51981be0-c2e9-4fdf-b7e9-b35db874d0e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf678098-7030-407a-b667-475b941be08e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b58591f-6e26-4d10-a3ad-4975bd57fc57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10f99a95-3c99-45ff-87ed-695395007c93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f28ec5-c407-4cef-8b78-cb5d54668ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f6e53a8-ce38-4cc9-87a6-dfa1cae180d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dfc192e-ea65-48bd-823a-77a9326a6e21",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b6fccc-836b-4b6b-81d5-34204a939629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b593c0c4-d1ea-4279-9c45-365b00d5a098"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37e24a6f-b601-4a9c-8358-667fb53a0762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89abc019-9d80-4b77-8dca-ed31afd9abab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0606e97-d014-4af8-a2a5-fbec3f813c2a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae145707-5e17-4895-84b6-caf832bdf1b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc08a385-eedb-4828-9541-3b12323c50b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db426511-ad13-4841-a0f5-7a03d95adac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "022696d2-80cf-4f4e-adda-16260c53d472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f7495df-ee41-4120-8a04-067031a3f13e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd60af59-9419-4810-80a6-5966c3b49a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "874cc11f-c151-4694-be72-91639aea1378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cde8f70-6a58-4975-875a-042ac444b90d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01089613-13e4-475a-9243-843854be2c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "185dd3e7-c07e-44c2-80b9-558ef1b61b55",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f074aab-c86d-4743-a074-7bd69f21c847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78d6c2ac-3dad-45b3-8031-7a3b046a5e8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe4bf0b-8105-410d-9c72-90d11e047c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "282bc1e2-7d7d-4907-8c87-4873b0091e11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1647a54-bf6b-4c31-ba93-df24b06e24f7",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "852f4619-98ba-4341-8502-5d3621f98247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3607023-0ded-4126-ba01-85318ed2a297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f502786-f4e9-4256-93f9-8c7a4170c33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "997c09ca-97a5-4386-9acd-536f8e6200f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af813a7-fb55-42ca-9d72-a268c604b7c3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0503661-f794-4049-9025-183f4bb946e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5bcbf4a-57fa-4629-8581-4f06933db5ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be94ffd-417d-456a-889e-6910c4cbd897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce674f8d-4e6e-4eb2-ba4c-534159756892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d6deec-8b39-4600-8b03-c02f3f4fbcd3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab95cd3d-085f-4628-a6b6-2975c3b9a86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f3c6781-70eb-4c85-9671-18f2973a7b20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cee70ad-84de-48d1-bdb3-5d395ba006ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2d2c252-1234-42e8-82d5-3a4d4d334f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "307d21b6-8f14-4c80-ae0f-591371dcb41c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a89060-7219-48dc-98e5-da1e23965038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50435c47-1d44-49e8-8266-0ba5fe2790f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06ddff7-d57e-4365-ab38-58427162b31f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10c804e5-8a9d-470f-89c3-0be729f41104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5216701b-42e1-4e56-96aa-975538f3ff1e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e58a2a3c-b3ef-4adf-8fdd-390325ae1800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2f42179-7897-4c65-b198-58ddbaa48f04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e76c6778-de7d-4f96-b839-447c7110e601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3baf55d5-c218-4684-b0da-a223b38fbf1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2071d42d-687d-4b44-ae24-b482903e72ac",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7224587c-6ec7-4c35-b8dc-b9e46f668448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2693e192-b8bb-4d10-aeac-9d8eb2d3fcf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a2f58e-6660-4fb9-a583-1396b403cfc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7642464d-bab5-4c16-baff-95ddf892f993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dea1a1d-0f37-48c7-87f8-6b27cd6958c1",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cc01d3e-9f14-4bd9-bdeb-ea67339788ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aca95b80-1590-4a4b-8bcf-6a1f78f8e722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "552c5dc5-20bd-4ffe-8379-31d726737e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "480d4d89-435d-488c-adc8-6e6cef0f487b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276457ae-86d1-4961-ae55-37b829154905",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "551cd566-80a4-42d8-8779-39954836ebd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f95a6ef-e515-45f0-81bd-be0eb45047b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bba54ae-d561-4143-a899-a29368529060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23beaf6a-4574-4b61-9512-227ea31e3bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ff945a-47ac-43e5-baa0-8442d5052699",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0968e67-9fd1-4b13-a6e5-b49ea3f5ef54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61a07f9e-d10b-4a0f-85d7-5d79f13b7915"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845f3f31-ccea-4a8d-abac-16574eb1a333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b46ab5a-98b1-4acb-90e6-efb399768c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab15c527-7d1d-4ded-b970-53dd6094839b",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41ed67f-174c-4294-9ece-ada526739141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5613883-8752-42b4-b6ee-59ebb10b6642"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac6db43c-1661-42b0-8806-4e69474fbf2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbcd0d25-5e54-4abf-9da1-74c4745c3efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0569b474-4f43-47c1-a201-fbe01b2bf1a6",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3deb8591-cff0-43ed-8994-1519ecaf744d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf6848ed-89e3-4a88-b0cd-d9cc54924a0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa9373b-3b72-4b02-a8e9-1a2fc3b5b83b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25877dd6-79a2-4c00-89ae-4723bdc059d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "259987aa-9c64-4e9e-9c9a-b950dcff55a6",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd06faf4-db3d-4578-9cf2-1e64a7dac2d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "000642d1-7dfd-4cf6-bf8f-270741db229f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed1793a-4faa-4495-a484-2ef3811bc4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be631c8e-c5f8-43c8-acad-810e2b95fb82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d177a1-d6bf-40c6-9c80-cdfdd794c543",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86fe2136-c883-42ed-bc71-8cb6bfc8edcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "451e5b4e-ea26-4277-b087-b4279ec9a4ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732d5d85-9049-412c-9438-a38fa58d2ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "daf009d1-ea6e-4c44-8846-2c62e2b71255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6493753-136c-417c-bd9c-5b950288a1f8",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d94af0-316c-4eb5-9a73-17b46688295c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53a2fbd6-de79-46f5-beab-c57e55f281c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55647605-5bf1-4072-a65f-5fc51fe5602f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "efa29beb-dede-4fe4-a8b6-881f2efd888c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "40cd7bb6-81d9-48f5-8e23-387752baf2b7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2ec511fa-c30b-4cc7-9428-def55e173012",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce8b6ba-8c29-4b8a-a101-e520459611de",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "58b86d7b-40ca-4833-9fb7-bf321f3fddfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa8ff28-2104-4e40-9ae9-4f6f31a820b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9704d26c-d64b-4098-a30d-e99db61653c9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4ada259-b798-48ca-8e0e-7ce43367cb9a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "630925a5-af90-42ee-a272-55b61ba26693"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ad31105-2445-4acf-958e-39a67df4880a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83b4b1ae-8322-4aba-8979-92589ca1aa66"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "355b0b44-4be3-4089-855f-896285439104",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fdc6ffda-da77-472e-aed3-7ef26c9f3a81"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "05b33df6-0771-4b0a-b7bf-4e0d9085806a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e02ad503-6130-4069-a786-d5a865325929"
            }
          }
        ]
      },
      {
        "id": "6b214f28-5336-4b30-ad11-c5e84734d0c5",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "4374fc24-04cf-450a-b6a8-54cb875e7093",
            "name": "Negative Testing",
            "item": [
              {
                "id": "975bc586-914e-43d0-8061-bfaaed6f7b51",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e73d282e-45d5-4ac0-8927-9c140da94ce0",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c7d90c-febb-4b6a-b50d-bc9c4b8f6704",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19953304-9021-4c79-a3a2-ce5573b60762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f39d7ab-60f9-4d07-b2a4-0b3fe18e26de",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be5f5c4-b7b8-4e08-b5fd-ac7ce8555a50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a42aa804-1f70-4b58-9397-3b11e3be22cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53cda656-0a77-462f-82dc-132dbe219edc",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b7a65de-adeb-481e-8e22-b834a7e4b881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94006f69-b700-4f9f-8df1-2ce4291c5e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa800ef-9801-4687-a92c-01e5e3b2be74",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "392d97b5-4f36-4ae9-80f3-1082563ffac7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6c38201-7242-46d7-b688-8fc499d0d624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04090102-2bdd-49a3-a4a8-73f7f795070e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8132f31e-48ea-4933-a480-944973a920d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0a89b30-9aeb-4c3e-9732-c9f84c7bafae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9812f4c8-a0b0-4bab-808e-af54bd7d7562",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15ffd21-242a-40fa-a6c4-f3e93827cfe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6413444f-6a03-439d-b478-535650f8a85b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d81f8a9-0e02-4011-961d-7bb0506b3179",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afab7200-e258-46d8-8afe-bed3be20a640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e759a5e1-3abd-4c15-824c-23781e33c4dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc9e96d-2e28-4101-b8a8-5c7a35c8d241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63477abc-b7ee-4c23-b452-38815bb19089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "354ce8d6-e304-4374-b445-bc3327ebe717",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a25f53-1ae0-4946-ab93-1fe3fa490523",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc896c78-1c13-494a-8a7f-65a54f4581fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74270a48-9e6c-4759-a475-bd54c6089eeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6180e158-eae8-4d1e-b6be-73201059ff94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cfd2c20-936f-45bd-940c-13b9a14557ef",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d36546-2d90-4e91-821b-8b307579197a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "849649aa-994d-48b1-b1d4-4cebf3f5833c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7823b80-28b6-421b-88ad-1059fc93bf6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8abc71b2-9e9c-45e3-b09b-28508b1de6a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec87278-d40f-4485-9248-a2e4c57a3b9d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef96232e-9bc0-4035-9a2b-153ac23c472a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a03ff37-c513-4fd0-a00f-21508e1da9f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c78d9059-12eb-4727-b156-2cd02fe84379",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abd97e1a-9fa9-4246-a0a5-188873125b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ba04ac-2830-404f-8116-a266b4430d11",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa06384-f2a3-4467-84a8-e9caa06500fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c73f3986-cef6-4107-9006-3202b3731193"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df99094-85d5-44bc-b47e-deaccc331892",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "613d57d7-6dfe-45f5-9aaf-7219fb0f291d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5de2b62e-a577-4518-9676-6de8196b28a3",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdee9155-bc35-4970-bf6a-b02b9b9599ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7d72456-2101-4e9d-be28-35a56d4e1f41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6c4fb4-606d-4f3f-a399-a507e1cc0a94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8d49352-5fb7-43e7-b8ec-ef8be411aa25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53ac711-0228-4c87-8c03-31f2a365d5e6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8549add-5c57-482e-935a-501911553365",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bebee1ee-7fa1-46cf-a0e0-5b0ef635fd66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "605592a2-1205-4555-a027-34f699024e21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c81bddd-9df9-40e8-8b50-285b165cfc51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f76104-06fb-4533-9738-819fa702fac3",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd220b1b-0bdc-44e6-834f-9866725f1d26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "500c72fe-f394-4deb-badc-7afd419af0b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73d10df1-8586-4774-b84f-ede7b3ce1ee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51909f27-fc47-45f6-8111-6a994e1580ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf3566ba-0658-40d6-86da-4acfd131adc0",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e47e7b-1c7e-4268-8476-46c5bc7e731b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b099735c-8063-4c64-ba40-e130b1e1fd8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ccdff31-609b-42f9-adef-7262444ae30c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2dad528-3c19-4247-b928-b84d2a76b814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15de126f-1f23-45bc-8aec-20e3835a75e0",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012fccff-b0d5-468d-99ec-130481cd3097",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af18fd44-2a94-4aa7-b0e4-c63ad1440832"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "601fc760-799e-4533-8f48-39d54bbff642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7066e51b-654d-47fb-8741-6b497dce69b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef32affe-9ee1-4735-bc84-f556423bfeb5",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7edf320a-1c1a-4607-836e-c08de2d1da83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39b864a8-d143-4114-86f3-a522b9596459"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17ab4bf-151d-411f-8407-e9fb1b2054b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0b5f4be-0965-4541-bacb-1aeefae00e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56788338-f55e-45e9-94e5-5d79d8ad4a6a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b339f61b-682f-4f57-af89-f933eb4baa5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40b0d3c9-51b9-4346-882b-6464a4b8ede4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ff0f46-7c6e-4754-af29-1f6fac1bdbba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ddb3886-75c8-4126-9045-02e9a8608caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f1b0215-1109-447b-82a8-c98f88a4a624",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "925b0ad2-ce51-4589-b575-e73f398fa27a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aca3240-7461-4e08-b804-6ebcdbf2f26e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f50b59-91b5-4f07-a505-61b2372c58bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d317111d-9bdc-48d0-92f1-df34220d60de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d90599-eb05-47ff-8f37-a46458523cb8",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d8fc875-bae3-408b-8027-4bbe48fe2d48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc9470b0-c93a-480a-94ad-2a8e3c5155bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f5db0ce-57d8-4df8-a048-e03180d5aeb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdf1b2d1-2958-4c98-b20a-d3256806078e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b27b89b-ca3a-415c-8d5f-91faea4e5b7c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c469ce-3014-43ca-bcf9-6d6cd74db761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0d9352f-995e-4a5e-b774-18564a6f2280"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c874ac7e-95ec-49c8-96cb-1625e8b77fbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fae87101-99c0-4f32-8091-517397982acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f844eb2c-e818-4dee-9cdc-fde76b062049",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49cd2d83-d0ab-40da-a187-afbd30452964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd034765-490b-41ff-88aa-5cd1592433d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8bea4d-8f63-49b3-b4c2-2b4bdf50dfad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bef03330-acae-4de2-acdc-11feefafc952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "245daa9e-86d7-48b4-8684-80dc00710abc",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ce9d13-40d3-490e-af0e-2df223a5a216",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76a11f49-b5f1-4a8c-bf82-5663c1f2a311"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b20d14-b6ab-4c66-a282-3b4fcf59481d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbb3f5ba-5b25-4f84-85c0-ce181e782d79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e3aabd-3eee-4ea0-b1b0-3834c3852aee",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1537a58e-4090-4a55-b590-c520703bb650",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d758e948-d79c-4ed2-9906-470f4c7b2937"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2679ed-fbed-467e-91ff-ef7b1ff81597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ee897e5-6b06-43f1-869e-d9f6ff9adb62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5109c18f-981f-4374-819f-57e9d79162db",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "359533c7-20b1-41cf-b857-0ef01b94e423",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d01b549b-c521-4ea6-87f5-6383a2183ba2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "216399be-5d2b-4083-831d-5f61ae3d78a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eeec90a-5db6-44e6-89ce-6eeda549f147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a9bcfca-1168-4d74-bdec-26fb5d76e48a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb22f08-18c5-48e8-91f0-8edacceb4f74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08a399a1-3332-48b2-a393-f598ad68621b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e70bae-07b3-4161-b8b7-ff43d82b2f8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb19505d-0534-4bac-a9e4-a8386af32a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f70098-c2ea-420b-a96f-60c9040bec74",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d3f76a-b28a-4bf5-aa10-2b33440dfbcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8c9c559-d5c2-4d38-adea-8740454afb82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd7450c2-7235-406d-9bd5-815266771014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f02bbb8-afd5-4eab-afa5-8ad8a8903354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a51586e6-8a3b-4405-a464-576e0f5cb291",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5898b5cb-d0bf-4271-98e0-899a143412bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07c415ca-5b61-4ca6-af6b-89d65c4a36d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd3596d-a87e-4ecd-a54c-02f6d08b0cf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cd248fd-d7e5-4022-9eea-1a1eb67fe4ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd2e426a-4638-4332-aa10-57809dafe755",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15a80419-9bb4-4ba4-b35f-64e7ab379c83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f3e732f-575e-49c0-bc62-40ba3e2dc149"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "946153fb-4862-42ca-a420-7eed5a34be78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8efba961-402a-4071-8571-61981b61d735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd45521e-11dc-49c8-94e0-9699e47f32a2",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d0fa09-ddd2-444a-a209-0ed4fff73388",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d73d33d4-ed92-446a-b385-8b63acd979d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1edac2-ea3f-4dcd-bf73-e01c7366976b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e400f0c-4e4c-48ee-9e50-79a98d67fe95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb455f4-edd7-4f97-964a-f4cca3273d75",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9cb5fd1-54d4-41b6-8098-8fa5de6805a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed18de10-71b2-42a9-bf71-f50fa7b02cbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e12a874d-9d7b-4fe7-bbe1-c87587148b84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59e395a3-5a8a-4a00-8a31-657c49db4fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6aa3f03-cb92-4a1d-ae5b-8ad11b363c2f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede952a8-6d1c-4425-a67b-8f6a88bb5f7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcb32d73-8234-488d-9557-868242699aee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a654da40-36c4-4376-8790-1f8ad6281971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9f9490c-46fb-4d24-8422-006e069e2dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd161356-edaa-4021-837b-bf173ee0c08f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48ff0ae-66df-4519-bc93-78e9f8d35aa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dda646a7-9776-436f-9702-dfc56d520625"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "387fe4ca-6637-47e3-9055-bbe1573fbbec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fddfb36-d6fb-4ab6-bd30-99176d6a98df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d531f729-71d7-4952-8ba3-9cf44e73ef26",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e28e600-2fa3-4f64-9360-bef2db46525f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9afec82-0088-4b2e-9c8d-0deae8669f06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1393bf6-08f4-46b1-b536-a971e5cfd848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec59b5ff-ed9e-4f17-a7a5-644320f51baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e601785-ec74-43c4-b0f1-7c1224584328",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb536f8f-bc3e-4a93-a60c-7c13fb96815f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55c25c0f-b3e6-47e0-b093-ecf57e002317"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d4cd52-2c5d-46b4-9f95-b30a593ec28d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99a7e26b-170a-4c48-be5a-a44df54f49b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d31dad36-106d-4d50-a24d-671d9d00f76d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e2bbff-d639-4e7d-904c-4c92650ef3ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3b71286-469d-41a8-b98c-bd2f5bbf6f3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bfd9645-f1db-4c64-ab77-6e93e73d2e2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4a6c83b-9225-4067-9b23-d216cd3534e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9fc71a2-5227-484c-8cc6-18cef49f8527",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ff8d8c-9f06-4ba8-8dda-3c870a0146c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13b4e00c-b479-4827-bd35-58d72d08f37b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba06ce44-5c3a-4299-bb33-f496232cf888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09740cd3-a6dd-4b95-aaad-bb1a89609858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d27abcc3-f223-4943-8705-7dc195d88de1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "704b877b-0d87-4c63-9676-d3ab51a625a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e50f1f09-f18b-4923-b529-c0a0f3fc0e70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "735a8098-b40c-476f-8e2c-387935ca774d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e14de6e-b3f2-4fed-a045-452de06cee1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ea244a-e0e2-4320-8cef-6efacecda32e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de50f740-94a5-4247-8552-5c69770171e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3503efb3-1f8c-4765-ac37-134f66411819"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c481d5-8565-44ea-89d5-cb9b524151ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aee80fc0-9c19-46de-ac3f-bdc9e2b92228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e2924a3-84ad-44d6-a8bd-bb771f19e319",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "896d0d36-92d2-4ec8-8e58-a20fc5a75a2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "488f939d-db36-4a59-bf0e-568497d1a7ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c0c484-58a9-4267-b9db-eeda7ed0b98d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9b4c226-5be1-435c-9865-7f52268c0eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b02cb6-e8c9-4bfd-a157-2d9effac0336",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480ab606-4cb8-4e87-bf07-4a6f8f6a755c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e3d8765-dc9d-4328-b56b-b883d6ea6c4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96faa4f3-a66f-4225-a420-6661fcdc8de6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "228f08f3-3d04-4ef9-827f-4c80e2b0ab6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e023a6f4-7ddf-4682-8887-1d3c542578d5",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d0bf9f8-9076-4926-818e-c2f1442ba91c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad4ecec8-5ff8-4ef5-b333-c7b868170662"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60537ce3-6d9a-44aa-a4bb-f0a9cc4a0b42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aded97c2-e790-4227-8116-e73f566cea5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e129c5-840e-44a4-8ce2-777727a1066e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805dc2eb-6809-40f4-87f0-eb252b33e224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b0e934e-3549-47bb-b74d-5ac06cc84a01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "befe7c8d-3412-4adb-ac00-338beb941778",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39ccc865-9e7a-4e11-8ecb-333f71518859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e7c711-10cb-4f17-875f-0cbba6506f31",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c3d3135-7fcd-4735-930a-9d17c5914914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02d8deb9-3d74-4c94-8f46-e97fcfb0cd17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df9e3bd-a27f-458d-80d9-164301f6ff69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9127837f-4fb8-469f-9dfc-5a19c931bfd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d153573c-d5b2-4425-8744-09bfb192f261",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e92a10-e016-427d-a6e3-99e97e77827f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f65388e6-73d9-416c-9b58-0c0308f771b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df8d445-e2e2-4da2-b99a-d5af2f07b675",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3caed13a-54f9-4a80-9e0c-c8db70ce29d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "070a7154-8b0d-4608-b8aa-3f367c074e83",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982258c6-60a8-44a6-870c-9d929d138502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86651421-4c18-4bc5-ad21-4f840023c2d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "003b971d-a13f-4c9d-b393-107499250592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b47c6c27-cb01-4fdc-b1a6-498490d8603c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f793d05-adb6-4ec9-ba67-90a7dee0d166",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b65f672-2bbe-4abe-894b-794b83945412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ae91618-2121-4bc8-b33a-0b4277704afc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f180fbf-2271-43e1-a056-938239ab01e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "397a991c-f783-45ac-b07f-85c912ba8244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c35767-5ea4-41cc-ab2c-40f46cb3e5cc",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f01d523-bbb2-4660-a51c-bc87cc77d870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a58a4d62-9627-4987-8c14-5beac0a45a95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c4e245-b3ee-4c57-b202-77bf98220731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6946fc0c-e711-41c0-acb3-a60cd5c48842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a315877d-2300-4cb6-a635-7b27ab87266f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c106e799-f706-46bd-a866-aba3707b5bb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "920f1ecd-c018-4ded-a21f-67faa05d52fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd58566-6c51-42a8-a0ef-88dc61222a74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5268a86-2490-42be-ade2-6cb23270ad7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eea81c5-cccd-4c17-a929-02c8c0774dc7",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ebef626-25e3-4ce7-919c-c3575944996b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e6977b4-5802-4eaf-ab21-e4ce152b8d37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92dd28c-9006-4c53-9044-723fa22ab438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac3bcb6c-384f-4251-9143-fcc3a6b1ea0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c843993a-dd59-4e63-80b7-fdad614b6e1e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e0a13c9-bfc3-4f8c-bcfc-603196d5ba86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42c594f4-ed59-4f05-85c6-10323aa720af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d0871a-1611-4456-ada0-559a0dfefb27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd2e93c4-14aa-44e6-8d5e-bfc91f7be877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db2b404-e16a-4366-8a38-8d8716c1793d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751762b3-d5c8-4407-bf13-56a6e3322326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8314ff2-8a00-4b73-beb9-c73563b98628"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c4b85f-b475-4d63-b634-6af2c2cb5f8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62e7d186-6e28-4f20-95e0-5e8b56ec88f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87dc5219-a48d-492a-a490-0276042b30cc",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54af336f-69f3-4155-b54a-f0481c701136",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "260a058b-b2d7-4bb0-b036-b616db2a4a00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04638d8-814f-4ab3-9c7d-c8809996aa39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28f5d71c-323f-4d48-8532-4e245c8ded87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dafc95cb-a8b5-45df-8fa4-7a0efdfb4b48",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83984558-5c52-488c-92d5-127253f7e861",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e66f9cf3-873c-4208-bc6f-ac94af1d9044"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06677a5c-82f0-42a4-8f01-1c81cb74a3fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0675ac64-a898-4b9e-8cba-d268ec130558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1345ada9-4efe-40b1-bda7-f3fa3247f6ba",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9555e9c-41f0-4ef5-9994-5beeeb5794f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "927a0914-4bcd-4667-94f4-1e73ee6c6598"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16513278-8165-429d-9c44-7b4c0440f356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14bc85ed-f361-4097-8d41-7080a8472174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "740c252d-7214-4a0c-aa4c-4d05a34b9d30",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "662ee4e7-d963-4ed2-a16d-d958fc85ba72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6d8357e-5ee9-4afc-abf0-d0af31cbba66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15df095f-4f87-464f-abc6-1051d946d368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28b92c87-3bca-4f2b-bcae-448ba927c336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccfbde2f-0d05-4d8d-bbfe-a2bac6fe0548",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a966aa4-f64b-4060-933c-2bf4193c7d68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "563bcc2d-2ab4-42f6-b917-9857d4bc5088"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae28069-acc8-4442-84d9-8bce41676bd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "129045ac-576f-4201-b4f9-a42894d3bb2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88fc4474-ef72-447d-a7d9-eb81fcbeff53",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f01bdc-647c-4194-bcb7-29b9a796162c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95df32e2-5c12-437e-bcbe-d701d268f35e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "698d77ad-56d9-4edb-956f-4b0a352295aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2b82baa-e25c-4fdb-9178-8c70229a3e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65faf71b-59d0-4854-ad5b-13000d1f1a85",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc94a502-7fb8-4392-aaf8-1d8a28f148fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b03506a-b2b0-404f-8989-af02345f18ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9dd271-aec1-4cb3-a3e7-bc4362b6235e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51ee4d35-71d1-4646-b2d2-98d79e468a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa00e95-e965-42f9-831c-a4d1cad8b8ae",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e993c5e1-7165-435f-825a-d584032587cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dd495fa-d92d-4e60-af7c-ccec22f29f94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fafb9dd8-ccc2-425b-b61c-5884df70175c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d715b22-5dca-4c73-bc64-cde740d4a140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8156e049-aca9-4caf-9687-4c9e1a01ab00",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf32aaf-1c4e-444c-b31f-86c13cc1146b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6195e8a2-8d22-4936-9bd5-f57d126910a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d90cf4-8959-4659-b35a-b030d93dde85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43f5e66f-e101-4641-a075-e037c586be78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64fb4241-01ee-4da9-bc84-82b0106fcb49",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b8f9121-7800-420f-820e-913f06742e54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f155989c-2328-4cf7-820d-47846c735d9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b72def9-0285-4272-94ca-bda77a921bbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50deb3bb-645d-4ba3-b15e-4f226ac9794d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da065176-61df-4a0c-8558-24b13661e7da",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2abfac09-e00f-43d8-a3d2-847d2d30012b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4a82380-0d3e-4d42-9ce2-92862e179d1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e2d420-8d98-411e-acdb-850f55074928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93e44335-0b37-42e4-8fa7-3b6663e74368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb3fcb7-a465-4f1b-8e73-2ae15e4f74d9",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "325a893b-479d-45b9-ba04-a334404b8493",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "085b8e64-84c4-424f-964c-28eca5f43faa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "309758b1-9214-43e0-9150-a0ab5ede48d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e336dfa4-4317-4763-9b58-a8069f0edc67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e0374c5-2be8-4182-8ecf-8a7a87af58c2",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b843032-4ddb-4d8d-ae2b-490b31114c4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84564fb7-1cbd-4d07-b107-a10d5df83e4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddaad512-0553-4ed7-9a80-5f530e8594c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c64f0c0f-73ed-48f2-9a83-50ed73b5a185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1479a3f0-913e-47b0-afc7-3a5ecf57efc3",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2601e5a2-3fd9-4136-aa52-6cefbb2bf1e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccc0fb27-084f-47b5-8d94-a263c4e3a613"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "025fc1a0-a6ad-4208-a065-ac33bb332011",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6887fe26-b4e8-4e7b-88c9-e5097450f041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d904e2-06d3-4f2a-b305-cf7f53c7db6b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1974f67c-914b-4f3f-87fc-fedef8315b25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97cfdfb0-46a5-4f91-b0be-c3d38fa5f4ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2dc9af8-fedd-45df-b0eb-aa98e92251fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "139d96f8-1aa1-4ab5-b8d3-a2e4729cdfaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c6332e5-4f40-44a8-80e4-777ad17b76e9",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424dd394-3858-4d6d-b8e9-df2c634b3325",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1111db5-6f23-481d-8bcd-f32d41aa2996"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c66e7b83-5b9f-457a-a595-4fcbcc94ea20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff67559a-1ef4-4d37-836a-aea613a5db5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ee6a2d-b0d0-4f79-af1f-3f568b7dd689",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d55d58f-7ce8-4096-ac80-aaa14a4439fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcd42b8d-4a28-4b88-bd34-928df6c2c78e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a04811-d0a0-470f-a6ba-22626a0e4515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35fc1bf1-34ac-430c-8b4d-d05a844b9a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48562333-bd2e-436d-b2a3-18258a3ce326",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a10d94-c77c-485a-80c5-b81c55bb15ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "434c9157-6199-4061-891f-bef8f10b30e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7204c33-f785-49d3-988d-d8289b91632f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b60ee79b-0bee-406c-85e3-681d8b3b615e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "305668c6-2db7-4704-ad46-24cdbe179bc0",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd5d4f2-1206-485e-bb92-838e1107072b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b481faa-d863-447e-baa3-05c9dbb6a7fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c229f8-1ba7-4136-b8bc-eac2e290ca0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f721eb08-da66-4b69-841e-a50d2aeadc95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f67b2429-6529-4857-964f-733f5093c9cb",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e233961-094f-4ee0-b0c1-84e56f84f24d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fea69f59-79fb-4bcd-bb34-449b30249bf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f92006-ecc6-413c-8be4-e4b16dcc10cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a69047fb-1376-431d-a8ec-102316d8da78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f230963a-adf8-4f91-99c5-77f923f920e3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca22133-e433-4d99-8802-8a258b939226",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cdd5582-5b36-4ffb-acb3-170d1b955f36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb4bc1b-e77a-4399-97c0-d2b06d1720c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5796ac8a-cbcc-4d97-b8d8-4697c45b4890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e02afe6-795f-40c0-a162-c1f0f5913611",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef7cf0c-04cc-4aec-bb0c-01e9914c2b50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6aa2638-17eb-44d5-998f-ef06108a735e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "741bd62c-a052-4154-bd1b-523ffa2f7c73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5577efe4-0912-4f0b-9e9d-915da1c0f690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db4d5111-b4da-4f37-afa3-703503d73a0e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd37b391-e00c-462c-83a4-747b5a0c694e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb1ebd47-5d46-4565-b9d6-5bb9088aa7d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21b79ba-577a-4189-90cd-223ca8672ec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa4e93ef-5c10-4aa6-8ab2-626b5befa49e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f91f7d73-9d3f-4057-b411-dc3aae7cd7b1",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea38a5f6-e9b2-4e0b-a0f4-1d6d29a5c0b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dced6308-0d97-48ac-9628-05faaa289711"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1129725-0d9a-4536-ba4d-d89b87fefc42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0b8e6e9-63d5-4feb-bbc3-a5f453fdbe94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14bd0c7a-e33b-4a7c-b700-09cbda599749",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0def1b-94b8-40c9-806b-51c1ca6bd78d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4d431cd-66c1-437a-91cf-4c769c2fd116"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19518fce-e638-4c97-afc9-beed5279800d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ec4cc9b-c1d5-4784-b5e7-99222e2fc0b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9450b33-ea12-4ec9-9c80-11447b7d0d6e",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "476d073f-6545-457e-a5b6-1100c4f56eba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e34036d-130a-4052-969f-14fec851604d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5755c6c-9a11-43e3-b3d7-4070079de95a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "649ecb84-d965-4b5c-a344-a46739ac21a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a3be3b-1f84-4630-aaa8-df96d82274a7",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a59cc2c0-a3ce-42f8-ab73-1d84470b4f6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7f70231-cdbf-421e-b351-41e98bf43859"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15ff553-dec0-4a7c-8d4f-8975d46a8b5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e07cf46-f750-4961-a6f7-b07e76ea393c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44194e16-df1a-40e7-a4e8-d8b945a02b7b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950ee4b7-edaf-439b-95e1-fda75278fcf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fe1b1d4-54ac-4e81-82ed-c56dddafd3e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "164a5199-2a96-4cb8-8d7a-dab8532b597f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9678bce5-726a-4673-be4d-8e3a84f34646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f4f244-795f-401b-9ba6-230cd7989e70",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "390eca08-6de1-43a4-b3a8-05e4ac02d722",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36b27736-5a7d-4af6-9d20-ace052286f92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16d9799-cf4a-4281-9209-9fc36db0eab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edb58a03-280c-473e-b28c-4f9abbf38311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b5968a-f3e1-4d47-8d42-44fb8d4a5135",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0303af3a-0f2b-4d8b-ad9f-b2d990f8299a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c746bfd-c883-4fb0-97c0-728f914eb8c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea8f607-cd04-4d51-b201-9745fb9c372c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4c350a9-1e46-4c1e-8824-e51c40acc0f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4cc0059-cc62-47b6-88b9-82fdab0ef20d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd47a00a-302a-4e5e-9ec6-a0ddb52d16c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95e16031-bb59-4f0d-9a52-83f46bb89c04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2c1030-01ba-43ac-9b02-cfaf54608e80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c514ca2d-26b3-4b3e-8008-fa8f4015ca33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9cef8e6-e7b3-4d98-b033-51a23ebd92eb",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "396eebda-633f-427f-bcd2-4efb96ab12e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "956400d8-ef0a-43e7-a8f3-8f356e534c82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca274ba-52fc-48a3-8b8b-8164f0bbeb0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09cb09d8-b4bc-4e7f-97aa-d086675b6971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95646e4a-0bd6-4e11-bb4a-45c71d012e3f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e46f1e-b4a9-4d5a-aba5-f0d98e859413",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cae0a7f-774d-4bcd-a359-4db99377b339"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54cd9b9-9846-4db1-a59d-a0f2f3bb70f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c718968-4efb-4f06-a9c9-a2e949730e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c5b42c-2b73-437b-b3d9-712a21b9a29d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c51ab47c-6e7b-4a0c-afec-d69fed72fd1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cea5eb0-f277-4e0f-aa44-34e36b1785f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "841db621-86ce-4a77-bd30-0c41958a62ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78046ddb-0c44-4b3c-8de0-bea36e975615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee90958f-5da0-40ac-8dd6-4d0dd5a69cc3",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71607f97-cd58-4023-8916-0292b4aab459",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c69ae5fa-5c3e-4ba4-ae81-149a6bf9c514"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e056518a-2bbc-4b6f-a66c-e2d72287cd87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58a1ebf2-a484-4db8-a453-9fd1cedd77fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27864fd-e00d-40e0-8321-136b28b9e771",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "223b164d-3006-4999-bb25-ca90e795185f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15497b96-b8bf-49bb-a00b-c966adce82c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d45f848-ae77-41a6-9cea-383a8f7cc691",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "369cef56-18ab-4b10-bec4-bd6d0ceac5ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2cb4854-283c-4560-b563-8ff4bc4572e5",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523aba22-cc10-4603-94d7-5ad336926668",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fefdafd3-f6d6-4bfc-992d-4aa6870b72e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc47b5f-1abe-4cd9-bd92-5a40da9002ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "debeecd5-50ca-4642-b9b3-0516a86e9864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "208251f7-eeaf-482e-9205-aa1308017b04",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ad7fd0-5351-4697-8802-88f0b3272680",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "656453fc-de4a-47b0-9b7f-312dac54c4e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8ed33b-c8d7-457b-be71-4ec638d18a9f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2474d270-2334-4427-a9be-b7d97b703602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56645599-8871-4ef6-a595-46c0648a9834",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de264ab5-f53f-4be0-bb26-276c0b81cb75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5701db75-9dc8-48e9-a5af-30953070b930"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a8450ba-b35f-44ca-9b1b-1961f986956c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cb4d3a2-5c77-4b84-98fb-ce3f7d673246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94498c76-4c11-40fb-8360-1b17cea77ced",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f637978-cfb1-486f-9f35-809f7e545ac6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4386d47f-94c7-4ea1-89a9-a1cc4258e3fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "835b5bcd-a459-4003-b248-03f227cbef9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97f21cdf-0c9f-4222-9c2a-4e6a91af5d49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab3168a7-cb8c-4b48-b82a-fa159f0869df",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b7610e1-2653-416e-a1bb-dfc545cfaeba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fe29e96-9709-47b4-9090-695693c4a58f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "308e22b3-29a7-4e41-8864-2334e2980b2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32743c0f-68a2-43fd-9b66-e31929e46159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb89c375-2f1d-4470-91fb-70105d3c8331",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a779aa-8291-4a5d-a1b8-e5f216fa0ded",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "611a6e03-5cfe-41d6-a055-7f5938d06ec2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c020cd-1420-4258-8c9d-1c68fac0af7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01b44493-8075-46b3-8d4e-cde09254cb15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b0324c-d359-4e49-9544-5576a4900806",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1522698c-ab8f-45ef-b63d-305d2609c984",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a823354a-9809-4245-a305-5507bce8339b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91579a4d-31fc-4fdc-ad30-fa0dc8cc667c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da7cf75b-9e85-4344-9b65-a0f9f72ef977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd6b7eb-4be1-46a3-ac5f-df6c2ffe4c91",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78c4562-d0f7-43f6-9d16-c2ab0cf19e1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19d988b0-8ce9-431f-9c19-32eba8056e38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c39c8249-069f-4243-8374-0be41460e4a0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfaa9f9b-3168-46a9-959a-b620d8fe0400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b1185b1-ca29-4ccb-acf4-cd0919b461e2",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a2e8cf2-1648-41c9-8d7a-396408f698c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eff9f183-ebb4-44c3-94c0-eed5807dc915"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f34bd8d-e52d-4ec5-8c60-e03fe2c950b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65cd785c-bd25-4c04-9fe8-f5c87775d91a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c58089fe-1db8-4c4f-a37d-ab73c88f3de1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed6083ed-e0db-4993-aab9-025c0e066658"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d9a3c66-1d3c-4a6e-858c-03523e35b0d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "30db7aff-b568-42c5-a1d9-84ac2d4f60fe"
                    }
                  }
                ]
              },
              {
                "id": "7a0158f4-0375-4c03-b849-06327cfd3250",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "74ff6e85-27f4-40a5-ac88-ee8954e21a1b",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d1db46-c208-45c1-b90e-5acad2daadff",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "51b32f29-5f46-4ace-9dfc-9d96c8c14723"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db343066-3acc-4ba0-8fcc-7fc9b961cd58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f09dc3ca-b65a-41b5-902b-81e47cfdd310"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "980a59a2-f39f-4da6-a0b2-959ceb218b3b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79bc1cd0-b51f-4330-8e6d-10300785ea7b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e915488-0f3c-4da5-ab25-2516d080158d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a9035e53-2206-4c65-bece-40d0fe25559c"
                    }
                  }
                ]
              },
              {
                "id": "5b882037-408b-49ca-b641-c25a0c207fc7",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "74776cf5-7f21-4fe9-9e9c-0ac42e76c191",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf66102-7be3-4b67-a8e6-fd21e32042e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a1630e13-388b-4814-bb25-44124e6f911b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b8bad2-2afe-4234-8299-ca6eadb7b6ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3585c2b-db03-4cb3-b0ff-e34309972ee0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "296f36b0-7221-41da-8f3d-dd0c844df0a8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "38464244-57e1-47f5-9a55-be7e4955eb5b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a0453a4-8e68-4a7c-a25b-88140abea00d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "936a4dae-4cd4-4560-87b5-e0c4d33a4468"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3902c6fb-c2ad-494f-8975-63b6913c5996",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80b9f6ee-cd02-4887-a754-632ed0acf063"
                    }
                  }
                ]
              },
              {
                "id": "96fca456-0244-4580-a226-acc6962e5236",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f86a7e30-c58b-4450-a71d-41432e7ccebe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b25690ac-6e06-423a-94d8-2f2ab5631b37"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f3b613b-199c-4168-831e-df84b83ce876",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b3e4c797-1e17-4a1d-8090-f0b90d855ddb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7c45b6a-1f11-4fbd-b24c-324fddb7ca5f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ce6f3c8d-e018-4972-b56e-385290dc2a6e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4a048c77-39df-4912-ad1e-bd2eb7310f16",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2005c42c-b193-4815-823a-3777c5161e06"
            }
          }
        ]
      },
      {
        "id": "b3fab85d-c695-468a-b8ca-ff065c24f40f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a4bcdacc-4da5-454d-8634-a73d894f6c42",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d87edb2f-54df-4771-b0ce-3375a3d7ec2c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f59998e2-6575-4528-842f-e48e64dabd36",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991f5843-2293-4d44-83d9-f66a05037268",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d0321613-552c-49e1-9042-3451e232a46a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e2f191-1ea0-408d-95aa-9ecbdc9c04e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bea0403d-4797-4ba1-b33b-39f8a6b4e67a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "959be639-ec49-4341-9d8f-2d594019ccda",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f79dc24-d3e7-4c53-a399-cf2962957c2b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "23ddeabb-daf0-4fa6-91f1-df6137aa05d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82d10709-f280-4139-849c-0d40eda85521"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f02b8e93-ed86-440b-bde2-2d2992816ae9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ef94c04f-71c3-42f1-b8d9-93070ba225b7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "59967f88-b86d-438c-ac05-d47d524c3ae6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6cd9c5d9-73bc-48aa-877c-81bbc614499b"
            }
          }
        ]
      },
      {
        "id": "a7a3ec65-bc4b-45cb-99c9-ce1a419897a8",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a9431720-346c-4124-986a-b4334ce9c29c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "647c2085-f101-4a80-9e6b-8dff8190d5c0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ab34374a-f673-4d40-a5b9-c5df6a443ad8",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69575ff6-d0ca-4272-8d98-f2fd55d0968e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b10a7353-eba3-49cb-a98a-5fc05c3f2dcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45c1abe1-32c7-491e-a6f7-08b6ada6227a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "84166f3e-111d-45d6-988c-4894bc4880a8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "575ff796-6552-4078-ae57-f35ce3635cd9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27b29244-606d-40aa-86f1-389edccb2e7d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "89210af1-b82c-4b74-b1a6-24f59e245764",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "33f2fc0b-2246-45ca-86f9-028e24627585"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "06e5c343-ecb1-4f86-9523-e436f0ebe456",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f06741d0-023d-4cef-bf11-73746b510387"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fe587b7c-b9fb-4ced-98bc-f64a9b5d8928",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eefff36b-15e1-41cc-a81c-d872310713fe"
            }
          }
        ]
      },
      {
        "id": "f2cf2648-a951-4e78-a9e3-7481b58fb483",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5dc627da-7b8a-4a79-ab6e-eecba342b7f7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fa5ad6f1-1fcc-4210-ad01-3fbef732c57f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b47d3fa6-0eb9-4e06-892a-52aaf7d1b180",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9bc56a0-da2e-4d70-a314-a8062cb3c71f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf260eaa-d748-485c-8835-8b6051c778eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40796d2b-75f5-4ee0-8f34-8f5e28167e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f75cc80-b6be-41e5-ad37-5a251e67c87a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58967e3c-1425-461d-97cc-88df3cc78989",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43dfbc9d-45ae-4126-8438-01e273f73534"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d13b038e-bb9b-45b9-82ab-1ece838a4faf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a2735d9-431e-480d-af0c-3faff654c932"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c43966b3-24da-4227-a95d-db4e6404e8d6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "14a0e52a-175a-4cf7-9e1d-ff2d994aab4d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b915fa8a-69e2-461c-9694-9dc8907123be",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "93a1eeea-bcbc-4a8a-9b46-23e209df0008"
            }
          }
        ]
      },
      {
        "id": "cd770544-341b-4930-9795-6dae971d3acd",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4829af08-ea8a-4f93-8e7f-8a6877722878",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e9eb1764-f809-425d-acfe-930b926f3398",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "add36d6e-6676-4cb5-9ca6-38ce13f72386",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2b12d280-0868-4f7c-ba72-cc93d3ca45db",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "515c5842-c521-4841-bb2d-4b2597551c35",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 627.3908450704222,
      "responseMin": 9,
      "responseMax": 6078,
      "responseSd": 725.399296590265,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1687826813497,
      "completed": 1687827003992
    },
    "executions": [
      {
        "id": "fd53bb3b-09fa-4030-9458-9d948fc40c75",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "22d78284-9aee-475b-aa44-29c982b82371",
          "httpRequestId": "f055252d-5481-49b1-a2e4-e88237d147d9"
        },
        "item": {
          "id": "fd53bb3b-09fa-4030-9458-9d948fc40c75",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "4d7709ef-e7f2-4c41-a055-01e6eec7128e",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 0
        }
      },
      {
        "id": "6a9c3644-f7d8-4e9a-902c-7b137058dff3",
        "cursor": {
          "ref": "d775e4c6-39d8-4fb9-a1f1-4dedbdb345f4",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "4b9909e2-85c4-4b24-896b-7f615ae6ba80"
        },
        "item": {
          "id": "6a9c3644-f7d8-4e9a-902c-7b137058dff3",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "206175e3-2be7-4629-93f3-de38ea0b8143",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "93dfab1d-cb77-443c-877b-48a93081eb02",
        "cursor": {
          "ref": "5109d335-8ad6-491e-a3f5-228916e08257",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f13270f0-004d-4d68-9dbd-74fa8873b60e"
        },
        "item": {
          "id": "93dfab1d-cb77-443c-877b-48a93081eb02",
          "name": "did_json"
        },
        "response": {
          "id": "b44f73eb-f3c6-4436-9acc-a6aa06027b48",
          "status": "OK",
          "code": 200,
          "responseTime": 933,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac8b994-70b8-4960-a784-7b5ac10f05e4",
        "cursor": {
          "ref": "6f389b73-ec20-45ee-a783-611f9530a4f2",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "42c52cb4-a0f6-4bbc-b37b-15ac3641042a"
        },
        "item": {
          "id": "eac8b994-70b8-4960-a784-7b5ac10f05e4",
          "name": "did:invalid"
        },
        "response": {
          "id": "238f3db2-9cab-47f7-9557-4854e6d73fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac8b994-70b8-4960-a784-7b5ac10f05e4",
        "cursor": {
          "ref": "6f389b73-ec20-45ee-a783-611f9530a4f2",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "42c52cb4-a0f6-4bbc-b37b-15ac3641042a"
        },
        "item": {
          "id": "eac8b994-70b8-4960-a784-7b5ac10f05e4",
          "name": "did:invalid"
        },
        "response": {
          "id": "238f3db2-9cab-47f7-9557-4854e6d73fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6008773-be5a-4e98-a652-37a00bc759a1",
        "cursor": {
          "ref": "4ba0c0fb-5ac9-493b-bb1f-c5d4c7d7e851",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8c1f9d88-4179-4662-876a-c324f9b8613d"
        },
        "item": {
          "id": "f6008773-be5a-4e98-a652-37a00bc759a1",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "677d8b40-b36a-4b09-9da8-24c9b53972c4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 785,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8dfcad0-f882-452c-a51b-76814c2b1ec5",
        "cursor": {
          "ref": "204b358d-7585-4e4e-a58f-2cfcefc4dabd",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "8a10b64f-11d4-4f16-b6fe-d0320fcc6771"
        },
        "item": {
          "id": "d8dfcad0-f882-452c-a51b-76814c2b1ec5",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "47561ee1-8c89-4903-a106-2748c4a3158a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 635,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a12b821-b0d2-4cc2-8a10-9ac28865f4eb",
        "cursor": {
          "ref": "dd76875e-ec8b-4280-86fa-c2314c9e3905",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8f38b938-250f-4743-ba6f-5ddb63338d4e"
        },
        "item": {
          "id": "9a12b821-b0d2-4cc2-8a10-9ac28865f4eb",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "9559ab45-e1b3-4e1f-b292-ad891eac99b0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79538c2b-f76a-49f9-8547-926018a88d39",
        "cursor": {
          "ref": "9dd6df18-3f12-46c6-8d49-4d435bb2175a",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "03de97e2-1664-4f05-855e-5f51c2bc9217"
        },
        "item": {
          "id": "79538c2b-f76a-49f9-8547-926018a88d39",
          "name": "identifiers"
        },
        "response": {
          "id": "188867f6-30e8-4215-8811-d5830b756585",
          "status": "OK",
          "code": 200,
          "responseTime": 1299,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cbaacca-0f47-4239-91b8-0be249a16a8d",
        "cursor": {
          "ref": "f0cae219-c84a-4023-898a-30d2befc5b7e",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "112e5ea1-adc4-46d3-aef2-fcdc25c88c0b"
        },
        "item": {
          "id": "9cbaacca-0f47-4239-91b8-0be249a16a8d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1641adf8-8af9-421a-b085-28682ed94188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "241a7231-19e9-4a3b-98f8-79013a043998",
        "cursor": {
          "ref": "ad1e7a66-9602-4ba7-93b6-d08816824601",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "12630b19-db28-49ba-9c45-55cbacfc83b0"
        },
        "item": {
          "id": "241a7231-19e9-4a3b-98f8-79013a043998",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "23b684b6-db44-400f-b487-9e9d4b5bee9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca86010c-3da3-4c3e-adba-87e06704a948",
        "cursor": {
          "ref": "259ed888-0cea-4f0a-bffe-bdae56414555",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "65191ddf-a8be-4aeb-92e2-b7162f22a98f"
        },
        "item": {
          "id": "ca86010c-3da3-4c3e-adba-87e06704a948",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6acbaf0d-459d-4346-bc21-b0a0350ad459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a4aff7b-fcfb-4bdd-ab27-fb967069dda5",
        "cursor": {
          "ref": "593a8f72-8b5f-48bf-964e-2d84edce039f",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "55a9b240-6c68-4f87-98fc-ca9736be2dc4"
        },
        "item": {
          "id": "8a4aff7b-fcfb-4bdd-ab27-fb967069dda5",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "4261cf93-5f62-4dad-aff8-070fed4c5adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d62d2b1-9d74-40be-995d-a7969b7ed32b",
        "cursor": {
          "ref": "088fba66-f7c7-46a2-99d0-48640be5fb17",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ceacdf81-c79d-497f-8abe-7905608881a4"
        },
        "item": {
          "id": "6d62d2b1-9d74-40be-995d-a7969b7ed32b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "51779f57-e073-41db-a1be-fba77b8abc61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b803f4d2-1c8d-4782-b5b8-c6724713e329",
        "cursor": {
          "ref": "15163496-bc7c-46f4-bcd6-3ba87722a30a",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f10a32d5-80ab-4cf8-aeb3-45bd6eb7efa7"
        },
        "item": {
          "id": "b803f4d2-1c8d-4782-b5b8-c6724713e329",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9742ca49-d081-404b-99fa-f632d3de7725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58edb662-c20b-4459-a022-fdbe86867101",
        "cursor": {
          "ref": "376dc5a6-f948-4621-9fc9-b16b39fbc707",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "3d8c292e-2bce-4ab6-99d1-8ab35f11475b"
        },
        "item": {
          "id": "58edb662-c20b-4459-a022-fdbe86867101",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "100162b4-a8e8-49c8-899b-09c507598556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e61dcef-d46e-4a0c-a0c0-c602d95ee57b",
        "cursor": {
          "ref": "28d39b44-8e69-488a-92ab-4a9c3a7d97dc",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "322be7ba-8463-4543-b8cc-7ac897f5a1b9"
        },
        "item": {
          "id": "6e61dcef-d46e-4a0c-a0c0-c602d95ee57b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f5486e3e-0e3f-49ba-80d2-99ccce497401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb82802-96bf-42b9-a15c-37e9c7bee69b",
        "cursor": {
          "ref": "0d3dc60b-cb07-4889-bb12-17a19b6bf862",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "878c8eae-b6f0-40e5-b362-c5c1be04dff7"
        },
        "item": {
          "id": "9eb82802-96bf-42b9-a15c-37e9c7bee69b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "275fa327-ba09-45bc-8a8e-3e10b043baa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f3bd9a8-d6a5-4d1d-a0e1-0d225484b040",
        "cursor": {
          "ref": "9eeccd92-71dc-41a6-a7ae-09f7e131b146",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "90774e04-c673-4061-8b26-babd470e845a"
        },
        "item": {
          "id": "2f3bd9a8-d6a5-4d1d-a0e1-0d225484b040",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "fad54fe5-cf8a-4e26-adc3-9bc2b2b0bcdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3fa0b0f-5bfe-4716-b938-483f2dc72c8c",
        "cursor": {
          "ref": "265035c6-2e32-48b5-a5fb-ff97ca574751",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "35e37a88-2065-4a45-ae1a-36b5d3a8df13"
        },
        "item": {
          "id": "a3fa0b0f-5bfe-4716-b938-483f2dc72c8c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "8f1c3bb9-2ae1-4b8a-bed1-284402d9806a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e6086c9-54e7-4597-97d9-d1a07d99c790",
        "cursor": {
          "ref": "b35e5f59-3e90-4d81-ab5a-9b263d6e40b8",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2b67bc21-3f1c-41ba-b705-fad58ea81292"
        },
        "item": {
          "id": "0e6086c9-54e7-4597-97d9-d1a07d99c790",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "ebfb1be7-9f34-4ee5-98e8-bab4f4a2906b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd4fed1-c789-4743-b17c-f040fa979615",
        "cursor": {
          "ref": "b225583e-85df-4a4a-ba0b-5550144aea40",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "78585e72-c4e9-47c1-8818-537b551ebb67"
        },
        "item": {
          "id": "ddd4fed1-c789-4743-b17c-f040fa979615",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "34db2acc-2baf-4448-8c34-a3d8ce96470f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3e889e-c47a-4b26-a8d5-87d26fbaf29d",
        "cursor": {
          "ref": "57851577-fb38-4e87-ae38-1241f769cda3",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ac6b130a-c09c-4c87-87c8-9fdbbf4487ef"
        },
        "item": {
          "id": "0f3e889e-c47a-4b26-a8d5-87d26fbaf29d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e92e9ecc-259a-4cc8-babb-d0a51961ae7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a5ce05-393f-4975-8a5e-68186bd98816",
        "cursor": {
          "ref": "b706006f-b99f-47ec-b97c-8bbe240fcc7a",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6ff72679-d681-4e00-9bcc-e95e9b702fd9"
        },
        "item": {
          "id": "91a5ce05-393f-4975-8a5e-68186bd98816",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "fe3a35f6-9067-4bfc-83b9-4e6bd8b663c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c130f2-6a6d-46fd-9264-1fb9e8c2fbee",
        "cursor": {
          "ref": "ed878dfd-781d-4864-949c-3001ceef6514",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e0720d52-ce8b-4023-92e5-77740497c227"
        },
        "item": {
          "id": "29c130f2-6a6d-46fd-9264-1fb9e8c2fbee",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "38233840-1a70-4b3f-87be-7985419108c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f06b4fb8-8741-4b55-b0e9-00a7f751eca2",
        "cursor": {
          "ref": "21e449a7-afce-45c2-8921-4a3896c6c7b9",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7f717c41-08db-4f08-9529-5f2291af4784"
        },
        "item": {
          "id": "f06b4fb8-8741-4b55-b0e9-00a7f751eca2",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "9e77fa60-de6c-492d-aef0-5082d5e40044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c4984c-c42a-4a67-af3d-397c124d5b8b",
        "cursor": {
          "ref": "3d071b2c-656f-4684-b7c2-d271f8909050",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6e2bf163-f6cf-480a-b3bd-f790531c2888"
        },
        "item": {
          "id": "63c4984c-c42a-4a67-af3d-397c124d5b8b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "944c47d1-1873-4fe3-b9b6-e6c6afb41778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d61d5e-5ba9-4f8b-b668-e5bdae20c0f5",
        "cursor": {
          "ref": "c63dd1dc-b171-400d-8519-7b52fb991856",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f885b3d9-33de-4719-9def-e85f2120ecf4"
        },
        "item": {
          "id": "72d61d5e-5ba9-4f8b-b668-e5bdae20c0f5",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "dfd924e7-a559-45d1-a144-b66d6634a96f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 776,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43ebeef-dfdc-400d-8f04-2602a0d64c7b",
        "cursor": {
          "ref": "8e3f0149-dd75-43f4-97f3-8fe6a4129cf8",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "6ea2f5d3-fb67-4a7f-9dff-0ee2c4f01974"
        },
        "item": {
          "id": "d43ebeef-dfdc-400d-8f04-2602a0d64c7b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "54f05adf-13db-4c88-8614-f768ecbc6e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e4f12c-7ece-4940-a0c9-cf119d20e963",
        "cursor": {
          "ref": "77c24367-4e03-4b86-8b76-21d45609a72a",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c7d11616-b80b-457d-8cef-bb33c502b2f9"
        },
        "item": {
          "id": "79e4f12c-7ece-4940-a0c9-cf119d20e963",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "07011bf9-f44f-401c-aaee-34503d50eddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da941c2-1a6b-482a-8cf1-fa5e073c5dce",
        "cursor": {
          "ref": "2b531703-b8bd-440d-b537-18b1a34feafa",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "6805330c-027a-4ba9-9a7d-7cae9ff09969"
        },
        "item": {
          "id": "1da941c2-1a6b-482a-8cf1-fa5e073c5dce",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "4648e365-1da6-4e05-bf68-d14a7fd960ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03795531-352c-4be1-b14a-a0790bac4ee3",
        "cursor": {
          "ref": "095961c0-f485-4736-a89e-acb2970a67a1",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "4adbe790-6594-4bda-87eb-99a851581ee1"
        },
        "item": {
          "id": "03795531-352c-4be1-b14a-a0790bac4ee3",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c9306ff6-a7b5-4913-9d9f-140571be58ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9afdaf03-82ad-4603-8c4f-b51cf5894ba8",
        "cursor": {
          "ref": "ca0f80af-cc5d-4eaf-966b-d4557ef9e3e3",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "72a0f9f5-28ba-4d20-8c39-2090fc82a110"
        },
        "item": {
          "id": "9afdaf03-82ad-4603-8c4f-b51cf5894ba8",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a7aaff01-8d79-4ad4-81b1-454359be4f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab843f8-c6ef-4a82-8a08-68aedc4a9242",
        "cursor": {
          "ref": "6835615f-1b27-4819-8574-b9327717eb3b",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "af21b9af-7622-4fbd-8cd7-a6fc859964c4"
        },
        "item": {
          "id": "aab843f8-c6ef-4a82-8a08-68aedc4a9242",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "dfd569c0-628d-45f7-9deb-2a2f898067e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bbe59c9-5627-4fef-81d7-d36b6316014e",
        "cursor": {
          "ref": "639a9002-00c3-46b0-a299-8aa119d6a1d3",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "fe896609-e340-471f-a80f-205adb4be73a"
        },
        "item": {
          "id": "4bbe59c9-5627-4fef-81d7-d36b6316014e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f48ecd7a-6601-4ff3-9dea-6a182d590715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a49147b-9196-4c1c-9d1e-347c3e8f8dc6",
        "cursor": {
          "ref": "0754c5c8-90a9-4c04-b764-0a82cd6aa724",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1f454f56-095b-4b92-8de1-db9d6b461cef"
        },
        "item": {
          "id": "0a49147b-9196-4c1c-9d1e-347c3e8f8dc6",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "63d4565a-7200-4e5f-865e-3dbe779d5bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1fe51e-2cb9-4551-a264-c95673a4a5b4",
        "cursor": {
          "ref": "12a819e1-2e4d-4682-92e5-0ea61514632d",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "57f336a5-440a-4759-a605-8a5dcceab662"
        },
        "item": {
          "id": "8d1fe51e-2cb9-4551-a264-c95673a4a5b4",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c6b7ade3-508c-45eb-955e-53efa9be37a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4c0328-7f4a-4bf9-9a5a-3aac13425511",
        "cursor": {
          "ref": "c62c7c77-c734-43a3-ba7b-5e41c415422f",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "70f5ecd0-b8e7-4cd0-9512-f242a5427b17"
        },
        "item": {
          "id": "2b4c0328-7f4a-4bf9-9a5a-3aac13425511",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "86642164-b538-45c5-8c24-9a961b9642e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2170a37-cdff-4d4c-b124-752e264cd6d9",
        "cursor": {
          "ref": "b0f75c83-4538-40b0-b9b1-0302962da6db",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "cb96b184-4a76-487a-87af-6fa3b9f37ae1"
        },
        "item": {
          "id": "e2170a37-cdff-4d4c-b124-752e264cd6d9",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0f7e9f54-a937-48c5-9bfa-6df8c7d78bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45dc4efa-fb1a-459b-8593-394b392f4633",
        "cursor": {
          "ref": "5b027686-0ccf-4a0b-ae34-a078ae8bfa98",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "318359c1-976c-4a39-b013-a1a524841780"
        },
        "item": {
          "id": "45dc4efa-fb1a-459b-8593-394b392f4633",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c4fa14c2-463d-49e8-84ac-1f6d80d50a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d658c107-9fd4-4f80-8858-58257602d4e8",
        "cursor": {
          "ref": "8d71a3eb-8438-4a8f-abe4-83c56e161df8",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "9d43354c-ee58-400b-9f4a-c2b8ff9a4569"
        },
        "item": {
          "id": "d658c107-9fd4-4f80-8858-58257602d4e8",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "6c9303a5-a086-45b9-ae08-a3f74d6cf28c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "174cf68b-1d56-4e2f-9467-31a2a4604b2a",
        "cursor": {
          "ref": "12cad23e-e3c9-4abf-a650-90cd53173b10",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "6283deae-e217-4b84-b290-e48e160d9c69"
        },
        "item": {
          "id": "174cf68b-1d56-4e2f-9467-31a2a4604b2a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "62338c02-dc6e-4269-a2d9-7e54afe29eeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f85364e6-85d7-4854-8353-a1d031267033",
        "cursor": {
          "ref": "27c8ec08-c42d-404d-9fdf-9093fed6ff51",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "eeb1461a-5546-4006-9345-810b494b0ab8"
        },
        "item": {
          "id": "f85364e6-85d7-4854-8353-a1d031267033",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c2b5f097-7af2-4e57-8229-f77b34a504af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beec3921-47ef-4966-9f3f-9a8dbd9d30e0",
        "cursor": {
          "ref": "feca062f-ea47-4885-ae1c-0416fb9964e3",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5d70b35e-5a27-4254-9fe0-2efb64234c55"
        },
        "item": {
          "id": "beec3921-47ef-4966-9f3f-9a8dbd9d30e0",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "93cde114-171b-4dc1-bc0b-3e32231b4e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98cd563f-d57e-4204-8b92-89cc62ec720c",
        "cursor": {
          "ref": "7bc54cae-e9c5-4fa5-a37c-60cb0891d9bc",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f9759400-c96f-4dff-9dce-9020ddb3f443"
        },
        "item": {
          "id": "98cd563f-d57e-4204-8b92-89cc62ec720c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "3d8d7ef7-5396-416d-8a14-97fd4b4bfbdb",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 848,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca9b1501-41af-4c0c-8789-38cc8335e97e",
        "cursor": {
          "ref": "96916224-5977-4541-abef-92b16131cdd6",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "453afdf6-5b86-4908-823a-1dd7f24f859b"
        },
        "item": {
          "id": "ca9b1501-41af-4c0c-8789-38cc8335e97e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f9afb292-b2db-4fa9-a4bb-a68f23724d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e1faa9-0a10-4b09-8d9c-3dcf3bdfc39e",
        "cursor": {
          "ref": "737d70e9-4dd2-4baa-852c-d5be9e414474",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "4343e7a2-a677-42f5-b348-d8e75aa1c571"
        },
        "item": {
          "id": "17e1faa9-0a10-4b09-8d9c-3dcf3bdfc39e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "febf234f-92a1-4209-afe4-b225134dd586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ae2de5a-b66f-46de-888a-77785b486a40",
        "cursor": {
          "ref": "2334748b-c5c3-4917-a3ff-9be2a81b5dc4",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a85b497f-230a-423d-b643-6899990ea383"
        },
        "item": {
          "id": "4ae2de5a-b66f-46de-888a-77785b486a40",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "2332e558-9142-48f0-a7d7-80d8e8367e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1280,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c68656b-7aa3-4198-b339-4a76c9b92f89",
        "cursor": {
          "ref": "5ac697f1-228a-4b25-b471-3bcbc6b63dd7",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6c6ea5c5-a7f0-4664-881b-8a96fa01bf28"
        },
        "item": {
          "id": "0c68656b-7aa3-4198-b339-4a76c9b92f89",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "21e63055-fed2-4c65-a1df-7713200a2b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719fb54f-0e5f-4bd3-b144-bf1ee16802ae",
        "cursor": {
          "ref": "2fa5035d-2dfa-47c2-8b3e-79540546a396",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0e452d4c-4256-472e-b2fe-b2407c049d03"
        },
        "item": {
          "id": "719fb54f-0e5f-4bd3-b144-bf1ee16802ae",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "11cdb606-24c0-4f3a-ad12-b5dc758716c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e89a79a0-4a05-4933-b092-4922694ad366",
        "cursor": {
          "ref": "bcdd7c8c-4eb3-4735-ba9b-99a31840b3d2",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e774f7a7-690a-4f0c-980b-cb1d51e78b98"
        },
        "item": {
          "id": "e89a79a0-4a05-4933-b092-4922694ad366",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "2230f163-b729-4f45-8310-fa334e991f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "285d605a-13ef-43ad-bafe-db707008a9c7",
        "cursor": {
          "ref": "cd9b4c5e-7d34-46e4-9f5e-7ae1817c34dc",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "72ea7572-b53e-4ff1-ac99-664a9301e76c"
        },
        "item": {
          "id": "285d605a-13ef-43ad-bafe-db707008a9c7",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0f37992b-3437-438b-aede-798506c1f418",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 802,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd524a0a-98c5-4102-89b8-9cfa515263e6",
        "cursor": {
          "ref": "796f84f4-f6e6-4ff0-8352-927fd39858b8",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "99aaac73-faf3-4289-b6a4-4c67623aae1e"
        },
        "item": {
          "id": "dd524a0a-98c5-4102-89b8-9cfa515263e6",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0183f1b5-4ff6-4c1d-b43b-8978dc9a4f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d16befd-c531-40e2-a74b-326806073d4b",
        "cursor": {
          "ref": "4031443e-72f3-4f5f-b9f2-087a166c8c99",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "9fce9a94-38b4-4b12-af22-d1110e915fea"
        },
        "item": {
          "id": "6d16befd-c531-40e2-a74b-326806073d4b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "060dca3c-a5c6-4c04-b071-c97a8e0c75d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ec1724-e721-4c3e-a1c8-34efecd7e1bb",
        "cursor": {
          "ref": "65fad4b2-10a7-4c9d-8798-dabcd6355c4f",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "8f74556a-d26c-438e-ba70-4a0953a2406a"
        },
        "item": {
          "id": "03ec1724-e721-4c3e-a1c8-34efecd7e1bb",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e811d995-4d72-4848-bcaf-271b933a0016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be70465b-adea-49a2-8765-fae5406b2341",
        "cursor": {
          "ref": "15cf92fe-9cc6-409e-846e-03866e7b74e9",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "37b6ec18-bf35-4d3c-a936-16b825cc2119"
        },
        "item": {
          "id": "be70465b-adea-49a2-8765-fae5406b2341",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0b23e7ea-1d60-4b67-816f-c04bd00f9bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44550be6-b0dd-49e3-930d-d2966a2d1287",
        "cursor": {
          "ref": "cad2fe5e-7b82-4197-83b2-154163978400",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "35679f03-110e-4be7-b9e5-db8f8963b9e3"
        },
        "item": {
          "id": "44550be6-b0dd-49e3-930d-d2966a2d1287",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "5ba4e54f-25b6-4459-b9a5-c3dd2728000f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8391e4cd-4905-459c-922e-e2e33ddf1bab",
        "cursor": {
          "ref": "c73fb672-30c0-4bc5-a6b0-9ddb2b066542",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "53b997c8-fdda-4a08-ac32-ce9189e21457"
        },
        "item": {
          "id": "8391e4cd-4905-459c-922e-e2e33ddf1bab",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ed43a253-8320-4dbb-acc1-afef723f53b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a875b3-fee8-4b30-93e1-5ad928cf066a",
        "cursor": {
          "ref": "a5ffef9b-7b12-4acc-9110-104aefbe7fcd",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "12336e83-08a7-497c-aaca-90790bec123c"
        },
        "item": {
          "id": "49a875b3-fee8-4b30-93e1-5ad928cf066a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "495b2a68-57e8-4d13-aa09-d0e7a867c241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56423788-feb6-4aae-829d-1068b86e1bf6",
        "cursor": {
          "ref": "b48b5f85-d2a0-4809-ac09-948c1fe8ab8e",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "512437b4-90e3-4a6e-ae36-682558334fec"
        },
        "item": {
          "id": "56423788-feb6-4aae-829d-1068b86e1bf6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "28056071-7fad-4c2b-9119-94131c5db48b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a885d9-e19f-4a16-a2c7-ad35c893a487",
        "cursor": {
          "ref": "8e7b897c-5e08-4cf1-8e7a-22f681717785",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "08ab9e0e-6c2d-4eda-ac85-e1300e3236f8"
        },
        "item": {
          "id": "c0a885d9-e19f-4a16-a2c7-ad35c893a487",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f1368c9f-5d4b-4f7b-9856-b8de09288cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30abd723-4f82-47dd-853f-0de9ed1ad508",
        "cursor": {
          "ref": "f5440261-6742-4b91-9296-7f22f1d1766c",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "fe84df98-bd38-4b98-a738-6842da85b8a6"
        },
        "item": {
          "id": "30abd723-4f82-47dd-853f-0de9ed1ad508",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ff0f1a85-4991-4c2c-b1fd-1668b1cf85e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa19ccc-f958-415a-9e76-a945a8938d45",
        "cursor": {
          "ref": "ff00b83a-fbc8-4420-8e38-df11f06f560d",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "4cefdf3a-55c2-4f48-acfa-d3c9ef2d1737"
        },
        "item": {
          "id": "6aa19ccc-f958-415a-9e76-a945a8938d45",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "2c00607d-f077-4f35-a510-49389ff44115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6d47a1-b299-4c78-965a-fe5039e688e0",
        "cursor": {
          "ref": "c9751859-1d2c-4d80-a403-5a5f124deb3b",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "4986f7c9-43dd-4964-b3ef-541f8952e5c7"
        },
        "item": {
          "id": "cf6d47a1-b299-4c78-965a-fe5039e688e0",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "439801c6-b9d6-487b-879c-99f9925f545e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1240887-1678-47ca-bd67-f1e63e94a4b1",
        "cursor": {
          "ref": "2946c3c1-d882-4bbd-ae45-6bab4b27f41b",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "6513346f-b4af-4f1c-9d87-7a3347cb9aac"
        },
        "item": {
          "id": "c1240887-1678-47ca-bd67-f1e63e94a4b1",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7425c3bf-302d-4f91-891e-16d5c02a9bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd80d63c-0457-44eb-9c00-22e22d017257",
        "cursor": {
          "ref": "dbd83946-c12a-4d6e-86a4-fd3c2761a6d8",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9e383498-3eec-4dda-a1d3-2b206486fb3a"
        },
        "item": {
          "id": "cd80d63c-0457-44eb-9c00-22e22d017257",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "72fc0b55-aac7-4025-b037-66786cb86be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "958c5172-9f95-4acf-9d23-f92ffcf760ad",
        "cursor": {
          "ref": "4b7f7195-8652-43a3-b821-73924dc90bd5",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "0576cf60-3cfa-4981-8165-94e011ac7b33"
        },
        "item": {
          "id": "958c5172-9f95-4acf-9d23-f92ffcf760ad",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3f610898-f5fc-4472-9b26-b204a433ac8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a170f1f-499c-4e2a-afad-4e6a23809659",
        "cursor": {
          "ref": "fe495153-0519-49ae-a2fe-c68ae8bfacd6",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a6a54b6c-db64-49e4-b87f-660c6e7bb70f"
        },
        "item": {
          "id": "1a170f1f-499c-4e2a-afad-4e6a23809659",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b1294156-5bc6-44f2-be28-54ac31231208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be01d20-6b2f-4ad2-b2f1-cb508001f595",
        "cursor": {
          "ref": "05a3161b-d61a-470d-968a-1d2d8f5d063f",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "89b92183-b520-4e8b-bb20-7080bef6d1bf"
        },
        "item": {
          "id": "8be01d20-6b2f-4ad2-b2f1-cb508001f595",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d835856a-6690-4e2b-b5b1-546a3e2c68be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ef78c1-d1b7-4615-9b6e-60b4de54b57e",
        "cursor": {
          "ref": "5eff806c-e536-4af4-bf22-72f0e1b10487",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "84b3e687-5df0-4351-b7ba-78801325cdb4"
        },
        "item": {
          "id": "e1ef78c1-d1b7-4615-9b6e-60b4de54b57e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "4f937091-c081-48e6-a0ce-d82a8f996fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be7c5ec-56e3-42e3-8904-88e034130fac",
        "cursor": {
          "ref": "6e3f162b-a311-4a2c-ab29-da347e10ab97",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "0f035295-99a6-41e1-9a42-d0dad07ca247"
        },
        "item": {
          "id": "4be7c5ec-56e3-42e3-8904-88e034130fac",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d0030535-40fa-4cec-9b2b-83f415ea694a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d093aa39-ab64-43f6-8d9f-5e391c092986",
        "cursor": {
          "ref": "0e6a463b-1a06-4220-90db-e115db868701",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "2b0ca8f5-3408-47da-966f-a1784edbe96b"
        },
        "item": {
          "id": "d093aa39-ab64-43f6-8d9f-5e391c092986",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "8e2fee7a-ade9-4feb-8d8b-0f567385a0da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3202088-220b-44db-84a7-9aaefabc778a",
        "cursor": {
          "ref": "8ce5741a-8f61-4eda-a46b-6641f0efe2bd",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "3c552456-0fd4-4783-ae3d-8cb2ffcacf6d"
        },
        "item": {
          "id": "b3202088-220b-44db-84a7-9aaefabc778a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b1e776f4-1829-4012-bd49-b17c145dfcb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ac2724-683c-4779-a287-96f7950b6e2a",
        "cursor": {
          "ref": "9985cf41-f080-4132-96cf-78d743fdf59e",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "8e137de5-a010-47a2-8206-d6ff96391cef"
        },
        "item": {
          "id": "78ac2724-683c-4779-a287-96f7950b6e2a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ed979ddd-0f57-4d78-a8f4-67963cd7ec56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36704e9-f2ec-4ee6-af46-488ac5db59fd",
        "cursor": {
          "ref": "4f675cb5-424f-4224-bfb7-49cb586cb064",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "736237e2-a048-416d-9dd7-382a40f2bb6f"
        },
        "item": {
          "id": "b36704e9-f2ec-4ee6-af46-488ac5db59fd",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d569a8f0-ae7a-484f-92aa-4d5cfd2759eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027c3b88-dd7d-4819-83f8-1b69ace39c16",
        "cursor": {
          "ref": "f58fbc9d-8a9a-4342-8b59-2db9a1437ce0",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d0891cb9-ef27-47a9-b664-dca9ad54e9a4"
        },
        "item": {
          "id": "027c3b88-dd7d-4819-83f8-1b69ace39c16",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "66dffdc3-a343-4bc9-9827-811971618553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b79ed1-66ee-4393-ba1e-0fb9a5edc7b3",
        "cursor": {
          "ref": "89adf153-2325-432c-a7bd-08e2d1fb50f1",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d78f97e9-c9bc-4c2f-be1c-04ac8ed22650"
        },
        "item": {
          "id": "27b79ed1-66ee-4393-ba1e-0fb9a5edc7b3",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e3be80f3-a56a-44b5-a18b-caf7a7fe4ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e160e8-d634-4707-ac67-62e39352f824",
        "cursor": {
          "ref": "9f6f1bc2-fe52-4bf3-a203-b9510a827770",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b4761061-166d-47ab-8829-5edaca75b2f7"
        },
        "item": {
          "id": "b8e160e8-d634-4707-ac67-62e39352f824",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e81f33b5-a304-4413-a937-53a3f655ee8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd2e0c35-870e-4016-8450-d67fc549761a",
        "cursor": {
          "ref": "4b9111e2-7acb-4b03-886f-771ba47c3ef3",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5fcef464-57d9-4c59-a961-9a5599b7c61a"
        },
        "item": {
          "id": "dd2e0c35-870e-4016-8450-d67fc549761a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "57a82691-3c4b-4d8d-b8d5-d470f4fca591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2787701-a7fb-41e7-bc15-b8ba818653db",
        "cursor": {
          "ref": "6a39a190-ec95-44a2-be15-411072f71205",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "6a39e05b-62fd-4d08-8742-5d6a9ce04a28"
        },
        "item": {
          "id": "e2787701-a7fb-41e7-bc15-b8ba818653db",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "6258cd2c-218c-44e8-abbb-e91b24f7ae0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a57b6a-f828-4c08-9b58-7bc8d5b5dee9",
        "cursor": {
          "ref": "ddcfe706-d520-4eaf-ba8a-454d7ebd2eda",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "07c0c7a6-650a-4824-b86c-9c5685b0a623"
        },
        "item": {
          "id": "91a57b6a-f828-4c08-9b58-7bc8d5b5dee9",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "78e79952-5262-4dae-a2b2-0ac3b1dc4760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac154c3f-3c8e-440f-82aa-0dc8862cbd62",
        "cursor": {
          "ref": "ec5a0d98-e89f-40c0-a3d3-59c7906eaf53",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a2ac1f13-21e5-4227-a14b-6d048a077aaf"
        },
        "item": {
          "id": "ac154c3f-3c8e-440f-82aa-0dc8862cbd62",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "146e44fe-a21e-415a-96ab-ae22051f4c7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ac3000-04d3-4571-838c-663fe92e71f2",
        "cursor": {
          "ref": "27352128-75b0-4d49-b635-1c6278d9d7c3",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "38423883-dab0-4518-a6b9-78b3ae9bcae3"
        },
        "item": {
          "id": "d5ac3000-04d3-4571-838c-663fe92e71f2",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "201a7479-455c-4cea-8db5-61e8a41ba0b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "026d1635-a1e5-497b-81d8-bd25c7b276bc",
        "cursor": {
          "ref": "d40ade2a-2b6d-4a99-8edc-6409973f7eee",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d1e12629-0dec-4b6a-82e2-58b9dd97b721"
        },
        "item": {
          "id": "026d1635-a1e5-497b-81d8-bd25c7b276bc",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "0e314e46-6e34-4ff0-ac32-b4d68a4f9e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeeab68f-158c-4df1-8759-904ffcaf9325",
        "cursor": {
          "ref": "f7fd1487-17eb-478e-885f-759a19bd90d7",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "74a66c9b-738e-4c4d-8905-3852ab73f6bb"
        },
        "item": {
          "id": "aeeab68f-158c-4df1-8759-904ffcaf9325",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ed91ae86-3b7e-42d4-aac1-8f9cf33d4149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e1a1736-20da-4a97-b66a-9ef6c4754cea",
        "cursor": {
          "ref": "4da87abb-ec4c-4e4e-8783-76ea2db7471b",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a3f23b1c-6059-4dd6-addd-2e57781956c8"
        },
        "item": {
          "id": "7e1a1736-20da-4a97-b66a-9ef6c4754cea",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "7aeb9570-a24a-4756-ad6d-e5d81c89d1ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f50d63c-0549-4214-be4b-a45ca13c6541",
        "cursor": {
          "ref": "f4289e40-a511-4183-a525-3f1277ee5279",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "650be8b1-a37c-4d7e-8bae-5021d0d184ff"
        },
        "item": {
          "id": "8f50d63c-0549-4214-be4b-a45ca13c6541",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d3a50a43-96f6-42df-9ffa-85351fc7fdaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f83a0fb-1fff-4f3d-abd9-00c4c9428b22",
        "cursor": {
          "ref": "f1cb2b97-cc5b-469a-8c72-a65180aef285",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b4a92a25-4ab6-48d7-bed3-b87dd067cdba"
        },
        "item": {
          "id": "3f83a0fb-1fff-4f3d-abd9-00c4c9428b22",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6d5673bc-68b1-4ccb-91ff-1c91dead2683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e82e1ee-a06c-4fd1-a216-f58bd4976601",
        "cursor": {
          "ref": "95dd0164-ce75-4648-800f-6e10f179d161",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "542a8f57-14c1-4e34-ba7e-3b3e60ec8b76"
        },
        "item": {
          "id": "0e82e1ee-a06c-4fd1-a216-f58bd4976601",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d32ec10d-9325-437b-a007-3811d410d56c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5229a7-187a-4aa6-a97a-000feb119f07",
        "cursor": {
          "ref": "66f8d791-07db-440c-a384-65ec49a43c01",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f48601db-df02-490b-9d59-58ac7cf82745"
        },
        "item": {
          "id": "aa5229a7-187a-4aa6-a97a-000feb119f07",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a1db635d-e575-4574-9baa-db13527d91c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb5594f-214c-4b5c-b4e8-b4545dc68b0d",
        "cursor": {
          "ref": "72ee3c8d-3d88-42ab-9c75-4914cddec3b5",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "0394b3b5-3f56-4f71-859d-6d8e05a44b62"
        },
        "item": {
          "id": "ceb5594f-214c-4b5c-b4e8-b4545dc68b0d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "8077f927-41cf-4078-84b5-5436b55cc4d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d95798e3-0b35-4352-8f41-bc26d0b83884",
        "cursor": {
          "ref": "49746caa-d7a6-4883-8f92-14a514b4eb61",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "dfecdd94-5de2-4fa3-8546-2277e492ea24"
        },
        "item": {
          "id": "d95798e3-0b35-4352-8f41-bc26d0b83884",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d08ef3f0-1940-4d9d-ac97-8052d2feb9c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c23274-0806-4b95-aed8-7d66698581a3",
        "cursor": {
          "ref": "21be450f-931a-44ce-8fca-e74b086a4782",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f970420f-3552-4217-a754-4cc059cfdc5f"
        },
        "item": {
          "id": "f9c23274-0806-4b95-aed8-7d66698581a3",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d054fab8-fe48-425b-8268-cd1c273b817f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edbc72c4-8425-449c-903d-1dd9cc9fb0e5",
        "cursor": {
          "ref": "090c6048-1168-48d8-be6d-3882db130f36",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "8bdd0be0-fe2b-476f-8d1f-66d77ad84fd6"
        },
        "item": {
          "id": "edbc72c4-8425-449c-903d-1dd9cc9fb0e5",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "56cb2613-14f6-4804-a263-7c6d42929b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e604efd-a0d4-4451-a4d1-76eb067cbd88",
        "cursor": {
          "ref": "1f486e30-50c6-4ae5-a7e9-c2c26e78b177",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "debedee8-2bb1-4ec8-9ee7-ca87f27ffc9d"
        },
        "item": {
          "id": "0e604efd-a0d4-4451-a4d1-76eb067cbd88",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b4548f11-583d-4367-81fd-0f6f5b673296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f965bd99-82a2-4308-88a0-3bae95f8576e",
        "cursor": {
          "ref": "9803e401-f928-4d05-a31a-9ce9a593901b",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7c76c64c-a2d1-45c8-be73-4dc9b09d8110"
        },
        "item": {
          "id": "f965bd99-82a2-4308-88a0-3bae95f8576e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "92ee1f65-82fd-4579-be40-31492445e2b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2be19953-b0a3-4157-9425-84523a87f7a5",
        "cursor": {
          "ref": "31eacd09-2db7-4775-baff-2bb25a1c175c",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "58308d92-b663-436d-9e4e-c50d1914dfaf"
        },
        "item": {
          "id": "2be19953-b0a3-4157-9425-84523a87f7a5",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "feceb538-400b-4ea3-ace6-a90a7ffc1d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc39191-3b0a-4640-baa1-1d56e9f09ad8",
        "cursor": {
          "ref": "b5acb0ea-3bff-4a20-b2fd-b46180adf49c",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d5817776-0cdb-4b77-85a3-85c3617b4bb3"
        },
        "item": {
          "id": "0dc39191-3b0a-4640-baa1-1d56e9f09ad8",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "94434e17-0ec8-46d2-a323-e48971328e1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54150b43-da33-4f9f-993d-c2d76ac33db4",
        "cursor": {
          "ref": "98cdf75b-a3cb-47c2-a20d-1c1377258f13",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "681ddbac-3fe1-41d4-add9-d82e2fcf7449"
        },
        "item": {
          "id": "54150b43-da33-4f9f-993d-c2d76ac33db4",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b3888b52-86dd-4c2a-affe-fa41d3c4b4c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13883ef1-a949-4945-a1b6-12fb940e8602",
        "cursor": {
          "ref": "e7732ae3-5373-4931-b2e7-0f856d5bac7f",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "bc793427-46a9-44c7-a009-c7cef2468bf4"
        },
        "item": {
          "id": "13883ef1-a949-4945-a1b6-12fb940e8602",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "03393395-6efd-4dc2-a189-b8172c5bb55d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05bb8a30-387f-4912-8ac4-fc5bfde24355",
        "cursor": {
          "ref": "37ef37e3-d22f-425c-9062-62dee8e04f9b",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "33dd5dbb-5e40-4863-a2d8-44b5f614155f"
        },
        "item": {
          "id": "05bb8a30-387f-4912-8ac4-fc5bfde24355",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "979cde73-dced-4322-9e8f-125d88633de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddaa7cc0-8593-458a-926b-1946e3f64219",
        "cursor": {
          "ref": "f6547884-ca7b-4435-be03-0f25a429c250",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e3985bdf-ee4e-415c-92e9-ab082a51234e"
        },
        "item": {
          "id": "ddaa7cc0-8593-458a-926b-1946e3f64219",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "07a18f7e-63f7-46bf-a001-1b1fd9285a02",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ac1b9f-ad32-48df-9dc3-57a7f3980939",
        "cursor": {
          "ref": "b807a30e-1fd3-4db4-9401-9069a7934c8a",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "46601d01-bace-4bcb-bcc0-58323f2613fc"
        },
        "item": {
          "id": "d4ac1b9f-ad32-48df-9dc3-57a7f3980939",
          "name": "credentials_issue"
        },
        "response": {
          "id": "80f84de6-c1ce-4af1-ba2c-a886a0b85f04",
          "status": "Created",
          "code": 201,
          "responseTime": 5931,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "22bd3999-99f2-4ad8-a154-064039d58685",
        "cursor": {
          "ref": "461b61ee-cb96-4007-a64f-8ab50e4fd821",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "18658a20-41d1-445e-8f01-4b7e26b79e86"
        },
        "item": {
          "id": "22bd3999-99f2-4ad8-a154-064039d58685",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "513a0e8a-62c8-48b5-83c5-88cc2dd032f9",
          "status": "Created",
          "code": 201,
          "responseTime": 6078,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f7488c-f6b4-4f7c-b0d1-1f89cc3d604b",
        "cursor": {
          "ref": "23b72a9e-990c-42f4-ab9b-61ed24209f66",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "bd232fe0-dfbe-494a-998a-f02a56188574"
        },
        "item": {
          "id": "72f7488c-f6b4-4f7c-b0d1-1f89cc3d604b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "6d7939df-d340-40f7-9a11-4bae59c94df4",
          "status": "Created",
          "code": 201,
          "responseTime": 5686,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "eebeffe0-0ea2-45fc-a1ec-3f1297bcdd5b",
        "cursor": {
          "ref": "70b93004-59a2-484d-87d7-89c1fa417ee6",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9a1d1668-8781-415a-9ac8-5acfaf6f1c31"
        },
        "item": {
          "id": "eebeffe0-0ea2-45fc-a1ec-3f1297bcdd5b",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a6522bc8-0384-4f9a-88ce-7af64b48fa10",
          "status": "Created",
          "code": 201,
          "responseTime": 5592,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b271e8f-d4dc-47c3-81d2-b674770c9b9e",
        "cursor": {
          "ref": "6fc9051f-a3d2-4558-be98-e861cf212bd6",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c68cd47b-e6e9-4f68-85d0-e74fcfe24703"
        },
        "item": {
          "id": "9b271e8f-d4dc-47c3-81d2-b674770c9b9e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "a88ab534-4db2-4e55-af2d-90daaa20da23",
          "status": "Created",
          "code": 201,
          "responseTime": 5961,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "c27fa7cc-8391-4cbb-b828-a4ae89751e3d",
        "cursor": {
          "ref": "f62fd94e-391a-40ee-9320-a7b356227acd",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "df583c7f-2fd5-4a7e-aae8-1a1e877d38b4"
        },
        "item": {
          "id": "c27fa7cc-8391-4cbb-b828-a4ae89751e3d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "3fb9dc6a-218d-450e-b96f-386d94548570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "cdec8d34-2b13-44e0-abe1-b2aac60f611f",
        "cursor": {
          "ref": "e8e77dcc-f396-47f5-9faf-6e74747a3f13",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "840f4869-d138-47dc-bcce-3025e8c663d4"
        },
        "item": {
          "id": "cdec8d34-2b13-44e0-abe1-b2aac60f611f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7f5693ce-027b-4ed0-b6c5-1347772f180d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0811917b-8f7d-4ba0-8d5d-f45446032379",
        "cursor": {
          "ref": "ffad5eda-2d7d-44a2-b2c2-1e05d03543a4",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "cd7df893-4a80-43ef-89d1-09c7d05bfaef"
        },
        "item": {
          "id": "0811917b-8f7d-4ba0-8d5d-f45446032379",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ee9606b0-e0bb-4e4b-a253-8f0160a78ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d2466ac-c72b-4c24-bd98-ccc57280150a",
        "cursor": {
          "ref": "78e8b6ad-bc16-41d1-8a56-8040cc62c4a3",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f994b1c3-beec-4621-9a27-68aa98e68ee9"
        },
        "item": {
          "id": "7d2466ac-c72b-4c24-bd98-ccc57280150a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "068dc027-6e25-4d5a-b04d-57f5d0a5e7dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1137aa2b-15ff-478c-8809-9887592df830",
        "cursor": {
          "ref": "81fcecbe-5e96-4142-a48b-6a2e575455fc",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4213d446-70c1-4d68-b709-b0a448ea1e09"
        },
        "item": {
          "id": "1137aa2b-15ff-478c-8809-9887592df830",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e5364bd7-0bd3-4acc-9590-ee308b0f102c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6801c52-09aa-4b86-8ba0-2dcd2927f0e9",
        "cursor": {
          "ref": "313bf943-b3dc-4b31-b212-f5ac5ba87a4e",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "4d052c9c-16b4-49f7-bca2-1593db281668"
        },
        "item": {
          "id": "c6801c52-09aa-4b86-8ba0-2dcd2927f0e9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "96305053-c18f-490b-a314-5cfaf80434fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e61acfdf-717b-4f8e-80ef-e6145d0b09fd",
        "cursor": {
          "ref": "c3a000cf-6d54-4323-9501-b70282d43c32",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0f894403-7aee-4e9e-bebe-ac760c6e5439"
        },
        "item": {
          "id": "e61acfdf-717b-4f8e-80ef-e6145d0b09fd",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a658691e-e40a-4ce5-8c37-5c3615911fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feec87e7-be79-4829-a3dc-b323fe0cf042",
        "cursor": {
          "ref": "8d491078-e701-4882-9633-f9a2e49697ac",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0072c9f2-b633-4257-9eab-b28d47a6ebb8"
        },
        "item": {
          "id": "feec87e7-be79-4829-a3dc-b323fe0cf042",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c759d82c-c45d-485f-904d-54e9cd6d788d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa2633a4-2d7f-410b-b66b-afbfeb75b10a",
        "cursor": {
          "ref": "92da4e70-21bc-4795-a037-466d6c2cdeee",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b770136d-c10a-4cee-a317-c3a4693f8712"
        },
        "item": {
          "id": "fa2633a4-2d7f-410b-b66b-afbfeb75b10a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d2c022b0-5db3-4f81-957b-559ad9aca72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe7ebe6-0307-4dd9-9322-db49541d3569",
        "cursor": {
          "ref": "56fd8991-75f8-4d65-9973-d60ab2b65d69",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "37d866c0-80ce-4d94-902d-58de94299390"
        },
        "item": {
          "id": "8fe7ebe6-0307-4dd9-9322-db49541d3569",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4de7497f-e1ab-4684-b37d-9bf629a3a4cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b83e2a-c58f-41b4-92b2-1e2f00e30047",
        "cursor": {
          "ref": "cddb95ac-e9e3-418c-b2e7-5e24572b0cdd",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c687f78f-6898-4ae4-8b6b-8d42454015ea"
        },
        "item": {
          "id": "60b83e2a-c58f-41b4-92b2-1e2f00e30047",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4a086c4d-8108-4670-bed6-caf6d6dc2f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f2a866a-ca74-4a02-8a6a-88a0710c5159",
        "cursor": {
          "ref": "d31fb0bf-3fa2-4590-b045-297dec412620",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "781889c2-a852-4f45-a81a-ed19fa82bb46"
        },
        "item": {
          "id": "7f2a866a-ca74-4a02-8a6a-88a0710c5159",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "bb14fc76-f39d-42be-aea3-11343d23d8a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2763fe2-f8a3-4e1c-8fc2-6dae8ad72821",
        "cursor": {
          "ref": "88c54b4b-6e40-4ec4-b736-2b34ae1f652e",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "89cd8fa1-fb38-495c-82b7-0fb8a199ec01"
        },
        "item": {
          "id": "b2763fe2-f8a3-4e1c-8fc2-6dae8ad72821",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "64fba08d-cbb8-471a-a779-c0ad6f23ca6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f398c8aa-ccf2-4974-b369-3bebb19b361e",
        "cursor": {
          "ref": "5c282211-31b7-4b36-93a7-a818599056fc",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a7370642-ed83-42f1-a548-4a5685b32db8"
        },
        "item": {
          "id": "f398c8aa-ccf2-4974-b369-3bebb19b361e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f95273c6-00c4-434d-9a51-aa1b68a0a643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9154a91-361b-4ef7-9835-1d929b0c747c",
        "cursor": {
          "ref": "a8eef1c7-79e0-471d-9a38-b0f1b7390bb5",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "85d529c9-2a82-4e50-9fb2-d38987d8978a"
        },
        "item": {
          "id": "c9154a91-361b-4ef7-9835-1d929b0c747c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "23b6f937-c676-420c-9a81-f09e618116a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a400bccf-52dc-4563-967a-54054471a5ce",
        "cursor": {
          "ref": "eaa59e5c-c3be-46a5-a152-e4499afb90aa",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "7e499dff-da59-4dd8-a9ba-bcba5d1fb794"
        },
        "item": {
          "id": "a400bccf-52dc-4563-967a-54054471a5ce",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b2b9b3e1-e499-4a57-b244-9f1b34776d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "039a29e0-5a08-4862-b150-f21f651eacc8",
        "cursor": {
          "ref": "f5f135d2-fbf6-493f-a96e-d5f49ad69772",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "7b988e59-82eb-4e47-b5e8-d6e2c596079c"
        },
        "item": {
          "id": "039a29e0-5a08-4862-b150-f21f651eacc8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1c14f779-9fc2-43d1-b690-8c4f018d7369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1dc562f-8234-49eb-a326-93791771bda8",
        "cursor": {
          "ref": "d1a14931-f050-4e47-96ad-079afc362f47",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "978888a4-3967-4b08-a5c4-234fb62d05ea"
        },
        "item": {
          "id": "a1dc562f-8234-49eb-a326-93791771bda8",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "fde972cc-a986-431c-8c87-48676b80afa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c153a201-ae66-4292-bbe7-2cd162b23c36",
        "cursor": {
          "ref": "a02722c1-4417-45f5-9225-d93380e1c704",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "62d44a18-1f55-4c47-b025-a2190453830a"
        },
        "item": {
          "id": "c153a201-ae66-4292-bbe7-2cd162b23c36",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "86cf8e0c-2e95-46bf-bdbd-38e1d8353c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "055f2a6c-7620-45e0-bd6f-12b3930d6acc",
        "cursor": {
          "ref": "fc99c538-e968-434b-bacf-f474e5f3d82d",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "fa6882af-264a-419a-adea-31085406bf8c"
        },
        "item": {
          "id": "055f2a6c-7620-45e0-bd6f-12b3930d6acc",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f06759de-5062-4bb7-92e2-655f3ee3a001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b4c4755-6e3d-4400-b02b-7096feff6db8",
        "cursor": {
          "ref": "f8b05a57-1bc1-4f76-923f-7590ec3199d3",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "34a6e484-8467-41ad-8580-4739e15b9d08"
        },
        "item": {
          "id": "1b4c4755-6e3d-4400-b02b-7096feff6db8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "857db2f4-3de0-43dd-943a-0f7ff901b928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a464c3-f737-412b-b0af-da32981e36b3",
        "cursor": {
          "ref": "fa4e91a5-f197-4a3b-8fd2-83dd220202bd",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "610429f6-ec4f-4ead-b79d-ab2e943de97b"
        },
        "item": {
          "id": "80a464c3-f737-412b-b0af-da32981e36b3",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "388333f4-3010-44ef-93c9-8b69d49560d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12cfa97a-a568-4a7f-8fbf-a5a7ce0ef1fd",
        "cursor": {
          "ref": "2b1dfd84-a281-42cc-8b41-0e18033e8e08",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "46a70e45-1ef9-4fad-b715-e4ac5839ca5b"
        },
        "item": {
          "id": "12cfa97a-a568-4a7f-8fbf-a5a7ce0ef1fd",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e2c24dce-05c1-47c1-8972-31a52422665b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4371f7-62ce-46c6-a91b-64c07572fba1",
        "cursor": {
          "ref": "2a25d6d0-6934-487a-b91f-1e1950095d6c",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "829e5c8a-3123-444e-b5e4-d32537334749"
        },
        "item": {
          "id": "ba4371f7-62ce-46c6-a91b-64c07572fba1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "12acbc88-c73a-42f3-b8fd-0f2486ccd7b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ebd9522-424a-4972-a1a3-61d9636ca951",
        "cursor": {
          "ref": "dea98ec8-eae0-47aa-8c4a-1ea2c1759545",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f546b4ff-1db2-40fe-80f3-ce411e0cc2be"
        },
        "item": {
          "id": "2ebd9522-424a-4972-a1a3-61d9636ca951",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f341ae38-8492-44cf-ab51-d7c6f484b265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "904bb46d-184d-4911-b1fe-5fda191c7f0f",
        "cursor": {
          "ref": "b67e100a-f77d-424f-8ab0-2816cd94b93f",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "cd658ac9-f13d-42fd-9e6c-63b9e2f8a1c0"
        },
        "item": {
          "id": "904bb46d-184d-4911-b1fe-5fda191c7f0f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "cb9dea83-36cb-44d3-bae7-82da03d757bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73fd7b7a-7977-4ccc-8cc2-f9c7437afba5",
        "cursor": {
          "ref": "1770b849-a42e-4033-8324-ac4c19acc436",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "060890f0-13cf-4165-b4f6-e8ae7226bb12"
        },
        "item": {
          "id": "73fd7b7a-7977-4ccc-8cc2-f9c7437afba5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c759dcbb-d32c-4f7d-a231-bb0bfbaba903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e23307-0647-4e8b-8f6d-8fe4f17ac541",
        "cursor": {
          "ref": "2a6cd308-edf2-485d-b920-7d43a79a1963",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ec8d4c18-9a9e-4e5d-9d7e-b7ca0a48ff28"
        },
        "item": {
          "id": "53e23307-0647-4e8b-8f6d-8fe4f17ac541",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "aa87adcd-c4e9-448b-94f8-8b48ddffc363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b050d0b-fc72-4eea-a0a3-6e2cf4d36d99",
        "cursor": {
          "ref": "ae2460c6-3b15-4f5b-ad22-4b93adec9032",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4b9c9360-2f8a-4775-8b1f-468def8c793f"
        },
        "item": {
          "id": "6b050d0b-fc72-4eea-a0a3-6e2cf4d36d99",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e23c3d16-6efa-45ce-9a74-df51a5d8f710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9cdaba3-5464-4386-a1b9-f5058a9896ee",
        "cursor": {
          "ref": "b06cc6e2-3b4c-44e5-a92c-d111c183f176",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6ffdec52-de26-4a6c-a9d3-85d3d2137c0a"
        },
        "item": {
          "id": "e9cdaba3-5464-4386-a1b9-f5058a9896ee",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "59b9213b-ea7a-4451-999d-9a7fde4eb4eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3aec2c-966b-43bc-bfb4-ae7b4e2656ae",
        "cursor": {
          "ref": "7264ce9f-e4ab-473f-baaf-dfe3541e73a7",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "105cfc21-9b1a-43de-8d9e-ee1b758b2215"
        },
        "item": {
          "id": "da3aec2c-966b-43bc-bfb4-ae7b4e2656ae",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "35baf11c-6075-45d9-9527-f9f90f3f8d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c67b23e-3088-4bf7-9479-111c36401e56",
        "cursor": {
          "ref": "055bfd56-eeba-45d5-9a46-b6d393f8257e",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c61d5b1d-d285-4949-8a33-5632a1c9f3b8"
        },
        "item": {
          "id": "6c67b23e-3088-4bf7-9479-111c36401e56",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ead4e1be-c3f2-49a0-87ef-6e9c88130bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a50e37d-3a1d-45cc-b380-bb406d4cdcba",
        "cursor": {
          "ref": "f0ae2c5b-7640-44e6-b3c5-2f219b22cab5",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0a3abc0a-0503-46bc-83f6-b714103610f9"
        },
        "item": {
          "id": "1a50e37d-3a1d-45cc-b380-bb406d4cdcba",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "3367c538-5e40-4764-9c90-a8e4f6b123fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceaa341e-19a3-4ceb-afdb-6443fcd4687d",
        "cursor": {
          "ref": "22731809-8eb1-4e5f-9457-767dff2cea0c",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "8fea1fe7-1a69-45aa-8d5d-8edb9c0aad2d"
        },
        "item": {
          "id": "ceaa341e-19a3-4ceb-afdb-6443fcd4687d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0f6ef9c6-8516-4352-98b0-df4fb8579bef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19896502-e001-4619-b0d7-b1c777481222",
        "cursor": {
          "ref": "feb08514-792e-4b9e-af24-6d44e8069a2f",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "06fcf8dc-26e0-48f1-875f-d72d52e7fb02"
        },
        "item": {
          "id": "19896502-e001-4619-b0d7-b1c777481222",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1e024fd7-f7d0-4c44-b28c-b2e7bd3d3d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "954e65df-0556-4e0d-bb62-680eff603d01",
        "cursor": {
          "ref": "ab13a24d-a4f4-443f-8c11-55239180f0a3",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "dc05db57-950d-4e68-8be8-893a4603aede"
        },
        "item": {
          "id": "954e65df-0556-4e0d-bb62-680eff603d01",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8388fe5d-3d37-488a-8c32-27913c57c8e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c1b64d0-765c-4531-a91c-87c161901de6",
        "cursor": {
          "ref": "aaeadbf3-3872-413e-ad0f-95da3dbfb0cd",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f10e777e-72c4-4226-84cf-d5e7fd9f4053"
        },
        "item": {
          "id": "7c1b64d0-765c-4531-a91c-87c161901de6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ea4a1bda-5016-404a-b1bb-3d6906ed9957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e80ac5-363c-4bfd-a9d3-c1aa160a91e4",
        "cursor": {
          "ref": "e04c7915-63f3-44ef-996a-fdb667468806",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "fa3f0df8-542f-4f37-bfd4-3eff4b0fb729"
        },
        "item": {
          "id": "d4e80ac5-363c-4bfd-a9d3-c1aa160a91e4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0bf8c6f8-90bf-436e-b3f7-7acee7c6dd80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98465ce3-874e-4c4a-96f4-1f0dab3c7148",
        "cursor": {
          "ref": "6cb2ded1-730f-4de9-a8f1-7de29abf6a72",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "279c121c-bdc6-4cad-9c12-c9053f86e5e1"
        },
        "item": {
          "id": "98465ce3-874e-4c4a-96f4-1f0dab3c7148",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "72fdca1f-55bb-4415-a61f-6e486ba920a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74037684-30f5-4219-8800-610354e4f8ed",
        "cursor": {
          "ref": "655b80b0-c9da-4f90-9893-58b324c45bfb",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "4b5fd4a8-ccd7-4abd-b80d-0704906161b6"
        },
        "item": {
          "id": "74037684-30f5-4219-8800-610354e4f8ed",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3fcd58d3-8f54-47a5-a9ed-7b6362354b64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50796d1-6679-4f94-a5c4-8c97ac8c89cc",
        "cursor": {
          "ref": "fe12d0cf-51f3-480e-aa9e-b2567af306e0",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7c76c735-d280-451d-b0a7-7b20da9165df"
        },
        "item": {
          "id": "d50796d1-6679-4f94-a5c4-8c97ac8c89cc",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4a6874bb-4bf1-493c-8539-a99be089d038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "692a1a52-8b09-4937-a3a8-4d002168efdc",
        "cursor": {
          "ref": "a84c12f9-024f-4764-9004-b01a665aa007",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d68c8b50-090f-4195-9e8d-66e1f39963fd"
        },
        "item": {
          "id": "692a1a52-8b09-4937-a3a8-4d002168efdc",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9ffb958b-1e8d-4dab-b725-2981a1271256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97896845-9114-494e-bed4-8480a9b74dee",
        "cursor": {
          "ref": "732eea5c-90c9-440e-aa94-36db0055d827",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "2cf64340-e088-472c-9a06-ea586477cfa3"
        },
        "item": {
          "id": "97896845-9114-494e-bed4-8480a9b74dee",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "243e0d59-8610-4bac-96d8-95313908548c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8290e2d-3b04-4b02-a014-9930720f3c4a",
        "cursor": {
          "ref": "e3c9aa5e-f92f-417e-9105-50c07ab8e0fc",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8c81f05d-19af-439d-8bc2-368d33ae72be"
        },
        "item": {
          "id": "e8290e2d-3b04-4b02-a014-9930720f3c4a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "39daf6b7-f56c-4006-b1db-74d5f8a37353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67608598-6457-4c01-95e7-b5c5c1824e25",
        "cursor": {
          "ref": "474de3b3-79b2-42c1-9179-084025bbcdb9",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4713b491-c9a1-4d36-b8ad-0dc27341cbf0"
        },
        "item": {
          "id": "67608598-6457-4c01-95e7-b5c5c1824e25",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "51cb670f-59f7-4fad-b9b0-2fd5990e877c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2dbb007-7411-4323-a874-e02e9c43b119",
        "cursor": {
          "ref": "5f6c4c9d-1368-41fd-9a24-be378a9f921f",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "947f68c6-7b16-4a8e-bd4e-a11ba6126e08"
        },
        "item": {
          "id": "c2dbb007-7411-4323-a874-e02e9c43b119",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b3a74734-8adc-4230-8408-cac56552fd83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4744b898-a421-4559-b617-ed826a7201c6",
        "cursor": {
          "ref": "5d15aa0c-2e60-4966-bc03-896ec1a943f3",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6466458e-e8eb-4db8-8f00-1a53aa71bc49"
        },
        "item": {
          "id": "4744b898-a421-4559-b617-ed826a7201c6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "61629da2-574b-4461-956c-c831a349807c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8228350f-f535-4f68-b51c-de3e997e45cb",
        "cursor": {
          "ref": "95808aa4-fc52-4884-95b2-05adbaeb0ee4",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "96c88ccf-7d8e-4ddf-87a7-809c52d87b43"
        },
        "item": {
          "id": "8228350f-f535-4f68-b51c-de3e997e45cb",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a5a284f8-879a-4214-831b-f11d41acb014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d92261-aac9-4867-a599-a49c5f19048d",
        "cursor": {
          "ref": "d4217865-9ce6-4335-9635-4823a157416f",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a3e3b78d-e07d-4f6a-ac23-6cdf60cd0dfc"
        },
        "item": {
          "id": "c8d92261-aac9-4867-a599-a49c5f19048d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7da00824-67a8-4b9f-9b2f-57fbff8873db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fbe14e7-16ad-4ff1-811a-c0afd08bf0b7",
        "cursor": {
          "ref": "7b50ae8d-b2d2-48c3-bc5e-9b257440195a",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1f6f3c1f-a892-4be0-a4b3-d2c687d26020"
        },
        "item": {
          "id": "4fbe14e7-16ad-4ff1-811a-c0afd08bf0b7",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7670c3fa-c84a-4f11-930f-dce2ab2857f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "723c8ae5-21c6-4173-a8b9-59944b800e53",
        "cursor": {
          "ref": "81c2908a-b9ba-47e5-b644-43fa9355092e",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "8f7717b9-a801-4a27-844d-5cc9468869af"
        },
        "item": {
          "id": "723c8ae5-21c6-4173-a8b9-59944b800e53",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ea35006a-14da-4fd1-924f-abde7c8f3580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a73bb5-3d43-46dd-893d-f6bd88329cae",
        "cursor": {
          "ref": "b9b955aa-c2df-4440-a247-0e826ea1bf3e",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c6bf76cb-97be-447f-9f4a-e847aa3aa13b"
        },
        "item": {
          "id": "b8a73bb5-3d43-46dd-893d-f6bd88329cae",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "82940e3b-38ef-4864-9cd2-829229fe62b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf678098-7030-407a-b667-475b941be08e",
        "cursor": {
          "ref": "d43c5842-1088-4dbf-9001-50b1a43307b8",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "6e346c34-b29f-45c3-8b48-483ff3685673"
        },
        "item": {
          "id": "cf678098-7030-407a-b667-475b941be08e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5e0cb2db-746c-4b27-843c-edc13acd2866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dfc192e-ea65-48bd-823a-77a9326a6e21",
        "cursor": {
          "ref": "67cac2b4-e467-4e79-83c3-0d53d73e9210",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7e6cc41e-139a-4235-a2fd-a4370f6a3677"
        },
        "item": {
          "id": "6dfc192e-ea65-48bd-823a-77a9326a6e21",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "daa4de6d-3bdb-4494-980f-b24218220e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0606e97-d014-4af8-a2a5-fbec3f813c2a",
        "cursor": {
          "ref": "1c5b5fd2-eaeb-4d3e-94a2-286105cfd3c7",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "5a72651f-b12f-4469-b408-2f65fa6d5b3f"
        },
        "item": {
          "id": "c0606e97-d014-4af8-a2a5-fbec3f813c2a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "03a4189c-adf3-4d45-bc2d-0d1e81496d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f7495df-ee41-4120-8a04-067031a3f13e",
        "cursor": {
          "ref": "582323a1-c4a8-45db-90de-be29097aab1a",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "0a3cdf98-f74c-4a57-9db7-183d8deecf96"
        },
        "item": {
          "id": "1f7495df-ee41-4120-8a04-067031a3f13e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6eeabb8d-00fc-4e7f-b88d-921a4b48e06e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "185dd3e7-c07e-44c2-80b9-558ef1b61b55",
        "cursor": {
          "ref": "0156d0d1-df94-406c-93bf-43ce908a6673",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d9207913-0029-4e33-83e6-56a7fc715c41"
        },
        "item": {
          "id": "185dd3e7-c07e-44c2-80b9-558ef1b61b55",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "72f82d76-9a9b-4746-92cd-fce74cf9984b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1647a54-bf6b-4c31-ba93-df24b06e24f7",
        "cursor": {
          "ref": "14f9d2db-dab8-440e-a9e0-02a681541aa6",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9899fe59-0d71-4a54-bf1f-eb00fba842b1"
        },
        "item": {
          "id": "c1647a54-bf6b-4c31-ba93-df24b06e24f7",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1ea01f8b-80f4-4d1f-bcad-3ae24bb9fb2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af813a7-fb55-42ca-9d72-a268c604b7c3",
        "cursor": {
          "ref": "655dadb6-252e-438a-bafb-033a60c34a7e",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ddca9de5-9036-453b-abf8-90a495338386"
        },
        "item": {
          "id": "1af813a7-fb55-42ca-9d72-a268c604b7c3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f639839f-84b4-4f1e-8294-4a1447cb6c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d6deec-8b39-4600-8b03-c02f3f4fbcd3",
        "cursor": {
          "ref": "1bfbd6b7-60e5-4af5-8144-dda95c24c0c4",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f6b58508-d467-458c-a64d-5769eee8738b"
        },
        "item": {
          "id": "34d6deec-8b39-4600-8b03-c02f3f4fbcd3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "72943712-a322-463c-ae34-b6fa54568a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307d21b6-8f14-4c80-ae0f-591371dcb41c",
        "cursor": {
          "ref": "0b9e75e4-e3bb-46da-a7c6-a4eb9e9fd358",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "70a8b6bf-a0af-4740-b48f-25089bfb2228"
        },
        "item": {
          "id": "307d21b6-8f14-4c80-ae0f-591371dcb41c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5dcb57b3-b824-4fba-a72c-48ed3b1cb750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5216701b-42e1-4e56-96aa-975538f3ff1e",
        "cursor": {
          "ref": "45b43644-00c6-4ff9-895f-ee512428dee4",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c007b526-974a-497b-ab31-d6e48b3226ff"
        },
        "item": {
          "id": "5216701b-42e1-4e56-96aa-975538f3ff1e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d8c2fcd6-7769-49c3-83a7-71ddaf6b7d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2071d42d-687d-4b44-ae24-b482903e72ac",
        "cursor": {
          "ref": "7dac70e3-ddff-470b-95da-bf22cef91f0c",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "60e9675c-69b0-4484-bb01-76d1e0d91461"
        },
        "item": {
          "id": "2071d42d-687d-4b44-ae24-b482903e72ac",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "22b6963f-d774-4849-a6a8-0f186bae4a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dea1a1d-0f37-48c7-87f8-6b27cd6958c1",
        "cursor": {
          "ref": "9fe36833-1883-4558-8c1a-d768b0a35154",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "6acba54a-d1d7-40bd-9f9d-92aacf2e2dae"
        },
        "item": {
          "id": "0dea1a1d-0f37-48c7-87f8-6b27cd6958c1",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7652c254-e859-4e39-8a8c-a8b972e0c9aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276457ae-86d1-4961-ae55-37b829154905",
        "cursor": {
          "ref": "e2c6529a-bcb1-49fe-a49e-d516b0a3c381",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ed85f57c-dd28-46e4-9bb2-09ce036d1c7c"
        },
        "item": {
          "id": "276457ae-86d1-4961-ae55-37b829154905",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9fbe769c-1211-49ce-b471-f6a253f6f3c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ff945a-47ac-43e5-baa0-8442d5052699",
        "cursor": {
          "ref": "66728eeb-4eb7-4f15-a958-138fe6300a59",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "fa67b8f4-717e-437c-9b24-144e7756fa5c"
        },
        "item": {
          "id": "21ff945a-47ac-43e5-baa0-8442d5052699",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "2d00a3fb-fe7c-41f1-89d4-96312bb6958f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab15c527-7d1d-4ded-b970-53dd6094839b",
        "cursor": {
          "ref": "96af6f0d-5d6c-4077-9b3c-3ee53714d384",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "afddfaae-b004-478f-8920-119bed8a7777"
        },
        "item": {
          "id": "ab15c527-7d1d-4ded-b970-53dd6094839b",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "8ec90a34-9427-4c6c-bd32-719175eb3531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0569b474-4f43-47c1-a201-fbe01b2bf1a6",
        "cursor": {
          "ref": "2b607896-2c39-4540-af20-74547959e5cf",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "8a6888b2-4456-4e60-9200-87d297c51266"
        },
        "item": {
          "id": "0569b474-4f43-47c1-a201-fbe01b2bf1a6",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "9299c651-0706-4643-8f14-0e6050864593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "259987aa-9c64-4e9e-9c9a-b950dcff55a6",
        "cursor": {
          "ref": "ca773077-e4b4-4f5f-800b-307f6e192a9c",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3f335dd2-47f3-4c99-bd87-d5e94f6bed0a"
        },
        "item": {
          "id": "259987aa-9c64-4e9e-9c9a-b950dcff55a6",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "00253b0c-352d-4a11-8a34-d3b1a2faf746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d177a1-d6bf-40c6-9c80-cdfdd794c543",
        "cursor": {
          "ref": "d29654a6-d976-43ff-8fca-e9afdda9a701",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "32ff1084-0fd1-42ff-b3f0-76e1371aad88"
        },
        "item": {
          "id": "44d177a1-d6bf-40c6-9c80-cdfdd794c543",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d98b0c56-094c-4e59-8558-cb94166ea8b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6493753-136c-417c-bd9c-5b950288a1f8",
        "cursor": {
          "ref": "d894da0b-d50a-4ccd-be63-5b428af0b19f",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "8c2bee5f-8ef0-4d54-ab94-7ee1f29f795c"
        },
        "item": {
          "id": "e6493753-136c-417c-bd9c-5b950288a1f8",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "11cc6de9-10dd-4fa3-8f15-6fb4da05e110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec511fa-c30b-4cc7-9428-def55e173012",
        "cursor": {
          "ref": "2e6372eb-b08b-4d2f-8e8a-502bf584c293",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9712d35f-3122-4fed-9c85-f754856de7e6"
        },
        "item": {
          "id": "2ec511fa-c30b-4cc7-9428-def55e173012",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1a589a7c-1e7a-44b6-a128-a42530aec4b7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e73d282e-45d5-4ac0-8927-9c140da94ce0",
        "cursor": {
          "ref": "077ef6d0-ea64-4532-9549-f740f4bfe2c8",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "42e2df53-160a-4f3a-bc0a-0ec00359c0d8"
        },
        "item": {
          "id": "e73d282e-45d5-4ac0-8927-9c140da94ce0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "15ffd45d-aa68-427a-85aa-90f2019fab08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f39d7ab-60f9-4d07-b2a4-0b3fe18e26de",
        "cursor": {
          "ref": "a167018d-0258-4e13-9bbf-42585e6d7187",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a92b624e-9041-4818-8ead-8ecf144bba37"
        },
        "item": {
          "id": "0f39d7ab-60f9-4d07-b2a4-0b3fe18e26de",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "965bd4f3-83f9-4877-a0c1-09d05b9fbdf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53cda656-0a77-462f-82dc-132dbe219edc",
        "cursor": {
          "ref": "d4412d88-9a55-42aa-9e35-40c1a6c517da",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "914d8337-f418-4ce0-a892-a1f2d294db65"
        },
        "item": {
          "id": "53cda656-0a77-462f-82dc-132dbe219edc",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "44f89727-0caf-409c-aebd-7cefa5dcee20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa800ef-9801-4687-a92c-01e5e3b2be74",
        "cursor": {
          "ref": "dadd0bfa-952d-4e78-be96-b781a59886b5",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "80b3f880-7875-48da-b37e-859482cc670b"
        },
        "item": {
          "id": "baa800ef-9801-4687-a92c-01e5e3b2be74",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "601b4d79-b084-49a9-a634-9f902c21ef80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04090102-2bdd-49a3-a4a8-73f7f795070e",
        "cursor": {
          "ref": "bf545348-a00b-450a-ba62-27b4b790c592",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c0565391-bec1-42e3-8735-47e1e5edf473"
        },
        "item": {
          "id": "04090102-2bdd-49a3-a4a8-73f7f795070e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "643d1be0-126d-44ff-956b-732b34ad0991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9812f4c8-a0b0-4bab-808e-af54bd7d7562",
        "cursor": {
          "ref": "ba6e3bd0-6c7b-4ecd-9736-0f6202631fb8",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e327b345-dd89-44f0-9e18-25a18ae6b980"
        },
        "item": {
          "id": "9812f4c8-a0b0-4bab-808e-af54bd7d7562",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "77fe42f2-6372-4d90-b1f7-4a1857c46272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d81f8a9-0e02-4011-961d-7bb0506b3179",
        "cursor": {
          "ref": "d066c749-97c4-438d-9cb8-1ce7ef4ae99e",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d7e0af0b-8c00-4869-9c76-f64b32174f81"
        },
        "item": {
          "id": "2d81f8a9-0e02-4011-961d-7bb0506b3179",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ca9009ec-7c2f-440c-9233-fa26b3f5b827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "354ce8d6-e304-4374-b445-bc3327ebe717",
        "cursor": {
          "ref": "d82f1689-b19f-48f1-8e34-945d0e0da5ac",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5074aa10-b47c-4b08-a395-ffe1782b0b74"
        },
        "item": {
          "id": "354ce8d6-e304-4374-b445-bc3327ebe717",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "97d3b5c2-a1d8-414e-a948-5aa2fdc69e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cfd2c20-936f-45bd-940c-13b9a14557ef",
        "cursor": {
          "ref": "0d6ee906-e091-48de-9641-78a03f08589f",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "38940720-8d55-4122-a5b8-08b31184fc33"
        },
        "item": {
          "id": "3cfd2c20-936f-45bd-940c-13b9a14557ef",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f3fedfcf-e37a-4c8d-a290-d5ef09b07628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec87278-d40f-4485-9248-a2e4c57a3b9d",
        "cursor": {
          "ref": "63a6f238-be83-4ed2-a560-a8a910bc25cf",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "0f57ffdc-37e2-4bbc-b404-95d1d3a10a08"
        },
        "item": {
          "id": "3ec87278-d40f-4485-9248-a2e4c57a3b9d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "4f9049e0-6add-44d2-9e3a-c580f969aa2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ba04ac-2830-404f-8116-a266b4430d11",
        "cursor": {
          "ref": "1641c5e4-5565-4461-b8ed-01876b455de6",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f890f372-0d3b-4155-95ea-18b7cdd680df"
        },
        "item": {
          "id": "47ba04ac-2830-404f-8116-a266b4430d11",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "53f3410a-e98b-4b56-91cf-5e64fd5c6c19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de2b62e-a577-4518-9676-6de8196b28a3",
        "cursor": {
          "ref": "3a98a19e-0e61-470a-b07b-9e8a9c749084",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f210f6f4-9154-49cb-8962-5c18b810d5dd"
        },
        "item": {
          "id": "5de2b62e-a577-4518-9676-6de8196b28a3",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "2d293f37-7d32-4e93-a82b-af2e05d2439b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53ac711-0228-4c87-8c03-31f2a365d5e6",
        "cursor": {
          "ref": "b1ad6c1e-2966-4030-aa1e-394dded48b04",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "adc4b0bc-9d90-46f9-b840-880e47f2a2bd"
        },
        "item": {
          "id": "f53ac711-0228-4c87-8c03-31f2a365d5e6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3ca45809-8e65-47b5-a1d6-bd836eb58ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f76104-06fb-4533-9738-819fa702fac3",
        "cursor": {
          "ref": "f5595333-a829-4432-a007-22cdbd8d535a",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "80b14f23-76cc-467e-9dc5-ab047cd5a2f6"
        },
        "item": {
          "id": "28f76104-06fb-4533-9738-819fa702fac3",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0630e4cd-ca2b-455d-accc-39e201f8205c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3566ba-0658-40d6-86da-4acfd131adc0",
        "cursor": {
          "ref": "b26bce61-0808-4b73-8ee9-c617495436c3",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d879cc1e-508b-4306-9f4c-ecb69dacb852"
        },
        "item": {
          "id": "bf3566ba-0658-40d6-86da-4acfd131adc0",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "660bd749-0cd9-4687-a642-68e494f56314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15de126f-1f23-45bc-8aec-20e3835a75e0",
        "cursor": {
          "ref": "533c6aa0-fddb-4004-9bb0-03c2548b8afd",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d357656a-c237-47a5-ad02-285ebe2cb437"
        },
        "item": {
          "id": "15de126f-1f23-45bc-8aec-20e3835a75e0",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a386c67d-debf-4f49-aa34-5fbfad466eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef32affe-9ee1-4735-bc84-f556423bfeb5",
        "cursor": {
          "ref": "0e559ba6-9e09-4e6f-8fa8-b3413bdf5593",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6d02179e-18fa-4dcb-b427-76005d90593c"
        },
        "item": {
          "id": "ef32affe-9ee1-4735-bc84-f556423bfeb5",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "97a7dd1f-8cb8-4556-9ab5-9a8a2a6f679d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56788338-f55e-45e9-94e5-5d79d8ad4a6a",
        "cursor": {
          "ref": "d9f94afe-7352-489a-a93c-3f2b285528d9",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c5d3d5b0-2d91-426c-930d-5c95119c6211"
        },
        "item": {
          "id": "56788338-f55e-45e9-94e5-5d79d8ad4a6a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b3906829-f70f-466e-ad30-a8cd93e76789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1b0215-1109-447b-82a8-c98f88a4a624",
        "cursor": {
          "ref": "4c745eb8-91ec-41c1-916c-6323b393706c",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "94506a91-68fe-451f-9060-98e946b610bf"
        },
        "item": {
          "id": "0f1b0215-1109-447b-82a8-c98f88a4a624",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "85af8bdb-ac57-43c7-9ae9-80d3e60de75c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d90599-eb05-47ff-8f37-a46458523cb8",
        "cursor": {
          "ref": "955d00d9-4ac6-4331-a6be-3015fa71fb8a",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3d18e361-476c-432b-9379-d1de90d53f91"
        },
        "item": {
          "id": "18d90599-eb05-47ff-8f37-a46458523cb8",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "fa30fe3c-d5f8-4118-b59a-ad8095b424c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b27b89b-ca3a-415c-8d5f-91faea4e5b7c",
        "cursor": {
          "ref": "5163c496-1e23-4560-90fa-9b86f3f47e66",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e3383bb7-720b-4604-8ad1-1e6b141c2008"
        },
        "item": {
          "id": "9b27b89b-ca3a-415c-8d5f-91faea4e5b7c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "59f802e4-e45f-4588-9e86-2ba41b7bc81d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f844eb2c-e818-4dee-9cdc-fde76b062049",
        "cursor": {
          "ref": "1dec712e-c81e-40e7-b4ea-8194b5f5448b",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7a484121-785b-480e-93c7-24638fcb737e"
        },
        "item": {
          "id": "f844eb2c-e818-4dee-9cdc-fde76b062049",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "8dead3e9-3fc7-4acb-875f-9069c8ef3f49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "245daa9e-86d7-48b4-8684-80dc00710abc",
        "cursor": {
          "ref": "5457b5c8-9209-434b-89bb-6bb4ad6576f5",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "629adbc9-17ce-4fcd-b119-60386be0bbd2"
        },
        "item": {
          "id": "245daa9e-86d7-48b4-8684-80dc00710abc",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "53f05651-cbbb-4ee8-96d4-70f20f3e187f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e3aabd-3eee-4ea0-b1b0-3834c3852aee",
        "cursor": {
          "ref": "4249c11d-f62f-47ce-be44-5aa6e138ea4a",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "183e2033-171c-4d29-8c8d-edade202af47"
        },
        "item": {
          "id": "44e3aabd-3eee-4ea0-b1b0-3834c3852aee",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "263daa81-4325-440d-9ae9-583856ad49d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5109c18f-981f-4374-819f-57e9d79162db",
        "cursor": {
          "ref": "c9aa3775-1513-4f37-8094-f7008275e59e",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "3a4f1a5e-541f-4ab9-b477-df4b21242917"
        },
        "item": {
          "id": "5109c18f-981f-4374-819f-57e9d79162db",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "08901b0b-5161-4e0c-8898-2b56b1170703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9bcfca-1168-4d74-bdec-26fb5d76e48a",
        "cursor": {
          "ref": "59c94ba5-4e0b-4f28-9186-9f43aa348329",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "eecc4d12-20e6-4564-9173-c04dd97bb2ef"
        },
        "item": {
          "id": "5a9bcfca-1168-4d74-bdec-26fb5d76e48a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b69a294c-6594-48fd-932c-42dbb118f6af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f70098-c2ea-420b-a96f-60c9040bec74",
        "cursor": {
          "ref": "f55a8b24-9afb-4291-a530-d579e23498e2",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0341dcfe-95b6-4db0-96b3-61eb45ead404"
        },
        "item": {
          "id": "89f70098-c2ea-420b-a96f-60c9040bec74",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8135df0c-cd0d-433f-8a6d-95bffbd226e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51586e6-8a3b-4405-a464-576e0f5cb291",
        "cursor": {
          "ref": "d288892f-6579-4db2-93d0-f830bbb015f4",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "44a5f259-e0b2-4beb-b6e2-a166c9b66f66"
        },
        "item": {
          "id": "a51586e6-8a3b-4405-a464-576e0f5cb291",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e591a964-e718-439b-b339-dcc6ece11bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd2e426a-4638-4332-aa10-57809dafe755",
        "cursor": {
          "ref": "56fba580-4725-4d2c-9286-12743ded0ad6",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "992da6bf-c992-4e9a-b84e-76394213e510"
        },
        "item": {
          "id": "cd2e426a-4638-4332-aa10-57809dafe755",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "bd831583-65df-4c43-8adf-dde1e186637e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd45521e-11dc-49c8-94e0-9699e47f32a2",
        "cursor": {
          "ref": "b15d0a3f-fb97-4b7e-a0e9-9a174631fa78",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d0c0f1d8-00b5-42e4-a504-991280096cad"
        },
        "item": {
          "id": "cd45521e-11dc-49c8-94e0-9699e47f32a2",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "04e094e9-fe98-4851-b25e-e3389834e658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb455f4-edd7-4f97-964a-f4cca3273d75",
        "cursor": {
          "ref": "eaa52eca-2547-41f3-bac9-19487d7bb230",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "00d51c1e-5cf3-4103-b167-7f1c2ec862f0"
        },
        "item": {
          "id": "cbb455f4-edd7-4f97-964a-f4cca3273d75",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8a0b8cb6-8a14-4783-b141-a8a9608c3b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6aa3f03-cb92-4a1d-ae5b-8ad11b363c2f",
        "cursor": {
          "ref": "ce4ccbef-d131-4ea8-a214-8df71e98eda3",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "16a673eb-c620-402c-8c99-145f77981fa1"
        },
        "item": {
          "id": "e6aa3f03-cb92-4a1d-ae5b-8ad11b363c2f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e5474eb2-b1e8-45ca-b8fa-988034f8df8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd161356-edaa-4021-837b-bf173ee0c08f",
        "cursor": {
          "ref": "a49441ca-4108-420d-85c5-cd334f4a3491",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "69023463-ae89-4ebd-b0b9-8e9172a4a8da"
        },
        "item": {
          "id": "dd161356-edaa-4021-837b-bf173ee0c08f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "443b21fd-c69f-4a74-a9f7-6edeb8b57985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d531f729-71d7-4952-8ba3-9cf44e73ef26",
        "cursor": {
          "ref": "dd6ad0f0-c4b3-40f8-ad5f-8acd5c7a9406",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9b82a335-944c-4aa0-b924-00cafdef3e09"
        },
        "item": {
          "id": "d531f729-71d7-4952-8ba3-9cf44e73ef26",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "27b7db99-7d87-4139-84c9-b17eba919659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e601785-ec74-43c4-b0f1-7c1224584328",
        "cursor": {
          "ref": "9d5a6ed1-d5cd-413b-8a2d-120a9c8a7df9",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f8d3b7e3-4d86-4965-921b-190bc6118be1"
        },
        "item": {
          "id": "1e601785-ec74-43c4-b0f1-7c1224584328",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f823553b-c296-473d-98bc-8bb5b7030e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d31dad36-106d-4d50-a24d-671d9d00f76d",
        "cursor": {
          "ref": "f9e79867-6778-4e9d-8f23-ba54c5d3d1e2",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a06f49a8-9399-4924-8838-84004ec966ef"
        },
        "item": {
          "id": "d31dad36-106d-4d50-a24d-671d9d00f76d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "69f41e69-6a09-4a8f-aee1-31e46c0e4384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9fc71a2-5227-484c-8cc6-18cef49f8527",
        "cursor": {
          "ref": "b9469516-c820-42b9-b64b-35a6ea7be2f1",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "2af23720-d9c2-4bef-95ba-5b454bfd6bf1"
        },
        "item": {
          "id": "f9fc71a2-5227-484c-8cc6-18cef49f8527",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "3ff1fda7-9fe7-4028-9e5b-99085cff768e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d27abcc3-f223-4943-8705-7dc195d88de1",
        "cursor": {
          "ref": "d275f507-3476-4074-8a83-5fbf6b9ac766",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "774045d6-d215-4e36-a343-b33bbbdc1e3d"
        },
        "item": {
          "id": "d27abcc3-f223-4943-8705-7dc195d88de1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a50b5a04-8073-40d8-b1ed-350991fc5839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ea244a-e0e2-4320-8cef-6efacecda32e",
        "cursor": {
          "ref": "4d375e43-5383-4985-8f61-5ede07fe774a",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d4ab1725-6509-4e84-b856-0af497802e30"
        },
        "item": {
          "id": "35ea244a-e0e2-4320-8cef-6efacecda32e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "11f71768-574c-4163-8dc7-7f5091944003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2924a3-84ad-44d6-a8bd-bb771f19e319",
        "cursor": {
          "ref": "f65947ec-6602-40ef-964f-9c674b99e679",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e4eb8676-f5f1-4412-9adc-90e1227aaf9e"
        },
        "item": {
          "id": "3e2924a3-84ad-44d6-a8bd-bb771f19e319",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c885ee50-e9bd-40ef-8880-ab2a344eeee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b02cb6-e8c9-4bfd-a157-2d9effac0336",
        "cursor": {
          "ref": "5ae4e9db-c8d2-4dc2-a3a6-093a57988761",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "b7a8ccdf-e953-402d-9fbb-07a352439d7e"
        },
        "item": {
          "id": "e0b02cb6-e8c9-4bfd-a157-2d9effac0336",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1afc0fae-8435-47af-893d-b5c6e878668e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e023a6f4-7ddf-4682-8887-1d3c542578d5",
        "cursor": {
          "ref": "af954673-e9e4-4ff4-94d8-c4642f4def3d",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "93542c99-7ad8-4286-87a1-ef46d942530b"
        },
        "item": {
          "id": "e023a6f4-7ddf-4682-8887-1d3c542578d5",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "906ad51e-f8bd-423f-97df-e417e8c1bb49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e129c5-840e-44a4-8ce2-777727a1066e",
        "cursor": {
          "ref": "3768b47f-8719-4ae1-9a52-fdfd70782bcc",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7e72b38e-3bed-42fe-8d87-4a9364c0a011"
        },
        "item": {
          "id": "03e129c5-840e-44a4-8ce2-777727a1066e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ea1698fb-2ee4-4c67-8874-e08d4b8dd16a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e7c711-10cb-4f17-875f-0cbba6506f31",
        "cursor": {
          "ref": "e404df3d-1cce-4773-869a-ad5512c952dc",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "827e278e-4624-454e-955b-c86d4b8a29f9"
        },
        "item": {
          "id": "80e7c711-10cb-4f17-875f-0cbba6506f31",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "4f35db35-6c90-46fb-b3cb-e37623051ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d153573c-d5b2-4425-8744-09bfb192f261",
        "cursor": {
          "ref": "de777770-b026-4933-ba47-b90628743599",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "beec700d-25b9-464a-a849-29f7a7eeaf75"
        },
        "item": {
          "id": "d153573c-d5b2-4425-8744-09bfb192f261",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "9f3fc928-103e-47f5-bbcf-6b9d4b6e89ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "070a7154-8b0d-4608-b8aa-3f367c074e83",
        "cursor": {
          "ref": "fa1ffa5c-6625-45d0-bfe9-d6fe58ab8023",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "4bb847f8-9109-40c3-8503-8432f8afdd7d"
        },
        "item": {
          "id": "070a7154-8b0d-4608-b8aa-3f367c074e83",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c87d587c-65fd-45cf-b7cd-5309538d8e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f793d05-adb6-4ec9-ba67-90a7dee0d166",
        "cursor": {
          "ref": "6ecca35b-4440-4e50-855e-c4eb4623cda5",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "fcedb0d6-0cf5-44c3-8305-dedec833300a"
        },
        "item": {
          "id": "9f793d05-adb6-4ec9-ba67-90a7dee0d166",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6af25043-5300-45c3-aa8d-d48d22aaf469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c35767-5ea4-41cc-ab2c-40f46cb3e5cc",
        "cursor": {
          "ref": "39e27a41-413f-4f09-8b09-d6e6c6e6b95e",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "adf86339-82c9-4b1e-b87e-4a4a38a25999"
        },
        "item": {
          "id": "36c35767-5ea4-41cc-ab2c-40f46cb3e5cc",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "868654af-cf5c-44be-bab6-a3393aa93100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a315877d-2300-4cb6-a635-7b27ab87266f",
        "cursor": {
          "ref": "2c9a8502-999d-4341-a39b-4d66afe47ddb",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "86a2ae92-9417-45ac-acbd-69a40ae3d485"
        },
        "item": {
          "id": "a315877d-2300-4cb6-a635-7b27ab87266f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "813d99bd-1bc0-432c-962f-955422b4a638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eea81c5-cccd-4c17-a929-02c8c0774dc7",
        "cursor": {
          "ref": "203dd3d9-1d8c-4af3-bd3d-2b25ab604346",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "57ea14de-af05-48a8-8bae-1614d11e559e"
        },
        "item": {
          "id": "8eea81c5-cccd-4c17-a929-02c8c0774dc7",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b068d765-cfc2-4f6f-8e41-1d95398412bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c843993a-dd59-4e63-80b7-fdad614b6e1e",
        "cursor": {
          "ref": "5e86e1ed-781d-46d0-921b-c68449aef9c0",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4d362c94-a2b6-4fc0-bb96-913d67fffd0c"
        },
        "item": {
          "id": "c843993a-dd59-4e63-80b7-fdad614b6e1e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f0a07dc2-06fb-4623-9b02-4914d6854a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db2b404-e16a-4366-8a38-8d8716c1793d",
        "cursor": {
          "ref": "ab8b54c0-7ae5-472b-93a9-a75eab6ca61e",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "870d1ec9-fe69-42c4-981e-0c07bded44f2"
        },
        "item": {
          "id": "4db2b404-e16a-4366-8a38-8d8716c1793d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c2a0f5df-2c0f-49f2-8d71-b29fab5ccf2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87dc5219-a48d-492a-a490-0276042b30cc",
        "cursor": {
          "ref": "580f3b80-5916-4589-804f-e27f36e9445a",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3d52ccc8-67e1-428f-a4cf-02accc6e6dac"
        },
        "item": {
          "id": "87dc5219-a48d-492a-a490-0276042b30cc",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "498d62e4-5d9e-4158-a9a3-f0b4ef25d197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dafc95cb-a8b5-45df-8fa4-7a0efdfb4b48",
        "cursor": {
          "ref": "e8912afe-6de1-4ef1-90dc-6a8b29e56b4c",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e206968c-7b6f-4f9d-8fc8-706464e0569c"
        },
        "item": {
          "id": "dafc95cb-a8b5-45df-8fa4-7a0efdfb4b48",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f7196ad7-ce71-4fae-9990-d16d361c66cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1345ada9-4efe-40b1-bda7-f3fa3247f6ba",
        "cursor": {
          "ref": "3df00497-baaf-4c49-8bb2-b5bab2fe9d9c",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "6f4d2476-48e2-4650-b137-377862376753"
        },
        "item": {
          "id": "1345ada9-4efe-40b1-bda7-f3fa3247f6ba",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "255db9ef-1fa7-409e-8893-4fd4c1a1c38c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740c252d-7214-4a0c-aa4c-4d05a34b9d30",
        "cursor": {
          "ref": "81065926-e53e-4b67-98de-ab90087bfe5c",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "fabf2890-59f0-4df7-861a-392857daa002"
        },
        "item": {
          "id": "740c252d-7214-4a0c-aa4c-4d05a34b9d30",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "046f5078-1441-468b-aeaa-0a6eee2f35b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccfbde2f-0d05-4d8d-bbfe-a2bac6fe0548",
        "cursor": {
          "ref": "05b0b439-0a57-4eca-a672-3c0bfdd4130e",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f59c0569-8ee1-4a29-910e-5b8145d3698c"
        },
        "item": {
          "id": "ccfbde2f-0d05-4d8d-bbfe-a2bac6fe0548",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "7f916444-0efd-436f-8a1d-c9b6232ebebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88fc4474-ef72-447d-a7d9-eb81fcbeff53",
        "cursor": {
          "ref": "f38a78ea-81dc-4387-a6a5-c4c31676e458",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "fb9ab71e-ad2b-4e3d-b32b-6332c4b7877f"
        },
        "item": {
          "id": "88fc4474-ef72-447d-a7d9-eb81fcbeff53",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "142c604f-be65-4bf9-bd49-fc3072662773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65faf71b-59d0-4854-ad5b-13000d1f1a85",
        "cursor": {
          "ref": "212834b4-bb2f-4bd1-9301-0d946c99f992",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "01fe6c5e-04fc-4ece-87ff-b9853a90ace5"
        },
        "item": {
          "id": "65faf71b-59d0-4854-ad5b-13000d1f1a85",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "bbd15a03-de32-4fbc-8315-8846cac11987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa00e95-e965-42f9-831c-a4d1cad8b8ae",
        "cursor": {
          "ref": "330530c7-781e-47fc-a840-15c46c190d7d",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "48ddce13-b544-4021-aa0c-95c2bb2a1dce"
        },
        "item": {
          "id": "0fa00e95-e965-42f9-831c-a4d1cad8b8ae",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0bddbc1a-1b8f-4a1a-ae5a-181943a24cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8156e049-aca9-4caf-9687-4c9e1a01ab00",
        "cursor": {
          "ref": "6b6949d1-4ce9-454c-848a-dc208db6b708",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "6022e901-c3f3-42fb-8ce4-47b50febc338"
        },
        "item": {
          "id": "8156e049-aca9-4caf-9687-4c9e1a01ab00",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ad8a57d5-ea93-421e-9b63-b5b42dd1d5d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64fb4241-01ee-4da9-bc84-82b0106fcb49",
        "cursor": {
          "ref": "cf422a7c-90db-49ac-a1c9-6bf459af914b",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a717e12d-ce18-4c80-8c30-949e0fa7075f"
        },
        "item": {
          "id": "64fb4241-01ee-4da9-bc84-82b0106fcb49",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "426e0a8c-f9e7-444a-882a-3237b52f1486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da065176-61df-4a0c-8558-24b13661e7da",
        "cursor": {
          "ref": "9c4bc38c-6118-41ed-9192-480eb18908a2",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9cf45ed5-f5ba-475a-94a7-6fd30d2d92dd"
        },
        "item": {
          "id": "da065176-61df-4a0c-8558-24b13661e7da",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "5c2e7793-896d-41ab-ae68-906351ac7973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb3fcb7-a465-4f1b-8e73-2ae15e4f74d9",
        "cursor": {
          "ref": "843ce8cf-e432-4129-8d4e-d29c08435953",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "897953db-f0db-467a-aa1f-eba87d443ee2"
        },
        "item": {
          "id": "6cb3fcb7-a465-4f1b-8e73-2ae15e4f74d9",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "73779a39-77f9-4116-81d0-3580180ed8f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e0374c5-2be8-4182-8ecf-8a7a87af58c2",
        "cursor": {
          "ref": "91ecbc70-33e6-4275-ad65-7a9db2341d9d",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d6706f35-bd32-434e-b101-ca5f085e375b"
        },
        "item": {
          "id": "7e0374c5-2be8-4182-8ecf-8a7a87af58c2",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e6459674-b020-4ea4-9382-af712e141b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1479a3f0-913e-47b0-afc7-3a5ecf57efc3",
        "cursor": {
          "ref": "3c45b1a3-6948-4251-8425-190ebf6779b9",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "90b2eb8e-8d4c-4796-bb29-e4678954ddd2"
        },
        "item": {
          "id": "1479a3f0-913e-47b0-afc7-3a5ecf57efc3",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ae17731b-e44b-45bc-be54-89ff212c89fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d904e2-06d3-4f2a-b305-cf7f53c7db6b",
        "cursor": {
          "ref": "a9bca5e5-c20d-4f65-8022-38ea03bee0c2",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "21eea867-e0ff-4854-bffd-afecae9d174f"
        },
        "item": {
          "id": "58d904e2-06d3-4f2a-b305-cf7f53c7db6b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "5aa03189-e3d6-4bb8-b6a6-42b8eabc7a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c6332e5-4f40-44a8-80e4-777ad17b76e9",
        "cursor": {
          "ref": "f2bc2f9f-6422-4baa-9aab-b6eba78eca21",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c9d5951a-d311-4cdc-a7d4-1b0280d0b418"
        },
        "item": {
          "id": "4c6332e5-4f40-44a8-80e4-777ad17b76e9",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ff942998-f424-4953-a43a-36bef7680a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ee6a2d-b0d0-4f79-af1f-3f568b7dd689",
        "cursor": {
          "ref": "711b2759-aeb4-47db-b6e4-2bd0fe9b3339",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5a15ee21-4aa2-4350-8c98-590864f13d46"
        },
        "item": {
          "id": "e3ee6a2d-b0d0-4f79-af1f-3f568b7dd689",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e178a37f-52f0-42bd-b7dc-4ab2c1267013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48562333-bd2e-436d-b2a3-18258a3ce326",
        "cursor": {
          "ref": "ef168243-bb78-4157-a33d-4f65a19d50ba",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d233cb0b-09fc-4044-83f8-126dd08e0fa6"
        },
        "item": {
          "id": "48562333-bd2e-436d-b2a3-18258a3ce326",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f14ca8da-4cd3-4308-a270-7a3baf0e0555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "305668c6-2db7-4704-ad46-24cdbe179bc0",
        "cursor": {
          "ref": "adcc7217-9cab-4aeb-b0e7-a28496720ad4",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f6c6a33f-dd05-4aa2-97b0-cbcc03df7958"
        },
        "item": {
          "id": "305668c6-2db7-4704-ad46-24cdbe179bc0",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "bbf48d57-1276-451c-ae3a-10447ccc086f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f67b2429-6529-4857-964f-733f5093c9cb",
        "cursor": {
          "ref": "26e2e376-4a7e-43b8-b1ca-736c7acd1242",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "1d458fd6-8a70-4d6c-88fd-10c0eca3e615"
        },
        "item": {
          "id": "f67b2429-6529-4857-964f-733f5093c9cb",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2c538ad9-cd2a-4133-9878-ab0442fc53a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f230963a-adf8-4f91-99c5-77f923f920e3",
        "cursor": {
          "ref": "cd877d37-d9b3-43e7-af53-5155c8cb2636",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f04998f2-d40f-4d04-b612-c04d3dcd9504"
        },
        "item": {
          "id": "f230963a-adf8-4f91-99c5-77f923f920e3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "2add82fa-a8a5-4fc0-9cee-2d9cb32225aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e02afe6-795f-40c0-a162-c1f0f5913611",
        "cursor": {
          "ref": "c03087e9-630d-4035-bd36-6a7a11b2f0c2",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "ec78455e-d080-4824-8995-65ce7bf5eefc"
        },
        "item": {
          "id": "2e02afe6-795f-40c0-a162-c1f0f5913611",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b24b8604-5130-49d0-9cb0-99f3c49587ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4d5111-b4da-4f37-afa3-703503d73a0e",
        "cursor": {
          "ref": "ec480173-0cd1-43e5-96c9-6d8a9a869538",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "4cf270ee-5f73-4b02-add7-21e2294e8e5e"
        },
        "item": {
          "id": "db4d5111-b4da-4f37-afa3-703503d73a0e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "fd155cb5-8c3d-4995-9213-f2a384f56138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f91f7d73-9d3f-4057-b411-dc3aae7cd7b1",
        "cursor": {
          "ref": "8f3e9045-89ca-4ce5-bddc-c335b550544a",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "7c52312e-5137-477b-a041-95af75d69ab3"
        },
        "item": {
          "id": "f91f7d73-9d3f-4057-b411-dc3aae7cd7b1",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c6d27ee9-a762-4e75-8276-daff1fe084a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14bd0c7a-e33b-4a7c-b700-09cbda599749",
        "cursor": {
          "ref": "bc1ed8b6-4920-488c-9539-76ce5c1ecc83",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "1fa99b0d-bffb-42ee-9953-d02972fb8e6d"
        },
        "item": {
          "id": "14bd0c7a-e33b-4a7c-b700-09cbda599749",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "fef01f83-68a9-49cf-b34f-5f4bb9eb473b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9450b33-ea12-4ec9-9c80-11447b7d0d6e",
        "cursor": {
          "ref": "eb6dc7f1-369d-43f5-9ae9-e1dc47cd53db",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "ea7e13d7-d3ee-4045-bf48-653d7090757a"
        },
        "item": {
          "id": "d9450b33-ea12-4ec9-9c80-11447b7d0d6e",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "2b0bfb92-fc5e-4a7c-9339-4a0dfe068170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a3be3b-1f84-4630-aaa8-df96d82274a7",
        "cursor": {
          "ref": "af214518-ac13-4dcf-a987-a020be31a679",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "51055d93-1cac-49a6-9585-92dbca7666a3"
        },
        "item": {
          "id": "d5a3be3b-1f84-4630-aaa8-df96d82274a7",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1d6d802c-a2c0-4c27-be0d-590aa59969da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44194e16-df1a-40e7-a4e8-d8b945a02b7b",
        "cursor": {
          "ref": "f64fe9db-5105-465a-af22-19973bf69a8b",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "14d43236-be13-4e93-8d77-f8fc88c4b11e"
        },
        "item": {
          "id": "44194e16-df1a-40e7-a4e8-d8b945a02b7b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "30388aee-fae0-4489-a4cb-01349c9f7bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f4f244-795f-401b-9ba6-230cd7989e70",
        "cursor": {
          "ref": "7e1eb909-91b0-47b5-8916-cceba912b557",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "c07612f2-bd9e-455b-9291-89bd4a682002"
        },
        "item": {
          "id": "73f4f244-795f-401b-9ba6-230cd7989e70",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "19383a2b-7de8-46d6-aa0b-b57ae6a19325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b5968a-f3e1-4d47-8d42-44fb8d4a5135",
        "cursor": {
          "ref": "1752c95a-32ba-4091-bd7b-18df8c96f58e",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "49540c5f-2f83-44ba-a670-193b8e5adf72"
        },
        "item": {
          "id": "71b5968a-f3e1-4d47-8d42-44fb8d4a5135",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "efcfbdfe-f00b-4fbd-be4f-dbf68c8f59c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4cc0059-cc62-47b6-88b9-82fdab0ef20d",
        "cursor": {
          "ref": "d22439e7-6da3-49de-a980-c3f552b00105",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "51baf04e-7a1f-4f58-aeba-66ed197fbfcc"
        },
        "item": {
          "id": "f4cc0059-cc62-47b6-88b9-82fdab0ef20d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "44a73dc0-69f4-4c12-8f36-abd948c1889d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9cef8e6-e7b3-4d98-b033-51a23ebd92eb",
        "cursor": {
          "ref": "92f31e54-afd9-4a00-b248-2d1463465ddb",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "e9b55b6d-8750-455c-8ef8-165dba430baa"
        },
        "item": {
          "id": "b9cef8e6-e7b3-4d98-b033-51a23ebd92eb",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "066b60c0-5a0b-4247-802e-55c19ceb06e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95646e4a-0bd6-4e11-bb4a-45c71d012e3f",
        "cursor": {
          "ref": "bc3d95eb-3e9d-4727-aa2d-6a18a857ddef",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "28a6f16a-3bb0-4cba-97d4-973f658a4463"
        },
        "item": {
          "id": "95646e4a-0bd6-4e11-bb4a-45c71d012e3f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "90893672-cdb7-44a0-9fe1-96d525541341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c5b42c-2b73-437b-b3d9-712a21b9a29d",
        "cursor": {
          "ref": "d4e5ab1f-cae8-4788-bdde-84bf37cb5080",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "82794a36-184e-4c2e-bc2a-cb0b2e60f6b1"
        },
        "item": {
          "id": "d3c5b42c-2b73-437b-b3d9-712a21b9a29d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "9472c988-5062-4f5f-a505-4cc6d825ba3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee90958f-5da0-40ac-8dd6-4d0dd5a69cc3",
        "cursor": {
          "ref": "5c71e889-b848-46e3-8121-27b3e3573ac0",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "1a5da9e6-cce7-4e49-8bb5-0b4d5f2ad95e"
        },
        "item": {
          "id": "ee90958f-5da0-40ac-8dd6-4d0dd5a69cc3",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "681e1a30-37c0-4c2c-9b12-57d65818729a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27864fd-e00d-40e0-8321-136b28b9e771",
        "cursor": {
          "ref": "2566dfbe-6427-421e-a8ad-b0290e6bdc48",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "8665ebbf-0ae8-4dc6-a0a1-739bc56409a7"
        },
        "item": {
          "id": "b27864fd-e00d-40e0-8321-136b28b9e771",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "7c2fd5a5-95bb-4914-a466-cc22a31b12c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2cb4854-283c-4560-b563-8ff4bc4572e5",
        "cursor": {
          "ref": "1086594b-a972-4fbb-9560-4e59cab525da",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "db0d4f2c-19a6-42d5-8c93-40b676eb6d25"
        },
        "item": {
          "id": "d2cb4854-283c-4560-b563-8ff4bc4572e5",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "56c9493a-03aa-40ee-b6c8-b4b9d115cf58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "208251f7-eeaf-482e-9205-aa1308017b04",
        "cursor": {
          "ref": "e67ecb70-a2e5-4409-8c83-b5cd199e797c",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "995c9338-cf49-4f2c-aca7-d33cc666e837"
        },
        "item": {
          "id": "208251f7-eeaf-482e-9205-aa1308017b04",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e65866eb-1571-4061-8232-4380b01a55d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56645599-8871-4ef6-a595-46c0648a9834",
        "cursor": {
          "ref": "47fb245d-7593-4e45-80ec-6e9dd4c7c9ac",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "08f14a09-e7a0-4bb1-aea4-dd7bdfccc3f3"
        },
        "item": {
          "id": "56645599-8871-4ef6-a595-46c0648a9834",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "1070c0f9-47a6-439a-b7a7-c83c10d95474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94498c76-4c11-40fb-8360-1b17cea77ced",
        "cursor": {
          "ref": "c2171f32-adb4-4739-893f-93c14eacbd65",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "c983fcb2-d296-48e0-b3f1-25ae0e20b168"
        },
        "item": {
          "id": "94498c76-4c11-40fb-8360-1b17cea77ced",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a044a8df-7b4e-4e75-beb5-11b1d154725f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab3168a7-cb8c-4b48-b82a-fa159f0869df",
        "cursor": {
          "ref": "b5160eff-e5a1-4ae2-9001-0aefcb32bf6f",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "e9c89a55-d2c4-4f2f-a1dc-373ccf86463e"
        },
        "item": {
          "id": "ab3168a7-cb8c-4b48-b82a-fa159f0869df",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "26c57dc0-ec20-4f48-87e1-ee6bebe731c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb89c375-2f1d-4470-91fb-70105d3c8331",
        "cursor": {
          "ref": "78835569-e688-4c2b-af5f-54b66c53a229",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "8c79865b-3fa8-44fb-8295-1568773f01f5"
        },
        "item": {
          "id": "bb89c375-2f1d-4470-91fb-70105d3c8331",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "bfcaa052-895c-4050-872e-15dc90ad1aae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b0324c-d359-4e49-9544-5576a4900806",
        "cursor": {
          "ref": "202859ad-2a3c-4472-8135-bb6385a8dbe5",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "73520018-32ab-4177-b3a2-59b78dec54aa"
        },
        "item": {
          "id": "86b0324c-d359-4e49-9544-5576a4900806",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "68675f7a-aafd-4d9e-8d2d-7a4b80ac0c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd6b7eb-4be1-46a3-ac5f-df6c2ffe4c91",
        "cursor": {
          "ref": "cf12ad82-1a5d-4b68-82ae-d3b2e2f01153",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "ef35a298-54ca-4b2d-b0f7-e8d5a00d67bb"
        },
        "item": {
          "id": "1bd6b7eb-4be1-46a3-ac5f-df6c2ffe4c91",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "68c72020-d41a-4971-99b6-99187ae4045c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b1185b1-ca29-4ccb-acf4-cd0919b461e2",
        "cursor": {
          "ref": "75b0ab5e-38a4-4273-bd94-a387a78caa51",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "a512f9b0-f5e5-4189-88fd-d6301bfb968f"
        },
        "item": {
          "id": "5b1185b1-ca29-4ccb-acf4-cd0919b461e2",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "48964db0-2b23-42d7-a8ab-5c18733f632f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ff6e85-27f4-40a5-ac88-ee8954e21a1b",
        "cursor": {
          "ref": "fe0f26db-8954-4316-80da-04a9e7139e07",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "26d6ee00-0d30-4595-a7c1-f448e89237aa"
        },
        "item": {
          "id": "74ff6e85-27f4-40a5-ac88-ee8954e21a1b",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ced57332-7071-41ff-ae43-1dcbca5e24f9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74776cf5-7f21-4fe9-9e9c-0ac42e76c191",
        "cursor": {
          "ref": "dff5a42c-c433-4490-937a-055c152c6c95",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "1c16f53f-a3b2-4fd6-a568-e0628dffe85f"
        },
        "item": {
          "id": "74776cf5-7f21-4fe9-9e9c-0ac42e76c191",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4ad21618-b7bc-4c26-982a-e9e0fa4d406e",
          "status": "OK",
          "code": 200,
          "responseTime": 446,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "38464244-57e1-47f5-9a55-be7e4955eb5b",
        "cursor": {
          "ref": "e18c937f-dfcf-4a27-acb9-fd81811410b1",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "00c4e220-8233-435b-9b1b-a84579be6860"
        },
        "item": {
          "id": "38464244-57e1-47f5-9a55-be7e4955eb5b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3004fdaa-3f44-4eab-88a5-b124ad1c0f25",
          "status": "OK",
          "code": 200,
          "responseTime": 1720,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "96fca456-0244-4580-a226-acc6962e5236",
        "cursor": {
          "ref": "db4d4c12-d75b-4fd2-b008-b4f318647533",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "57c705ec-590a-4cd2-82f0-67f5052b3b6a"
        },
        "item": {
          "id": "96fca456-0244-4580-a226-acc6962e5236",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7794209c-9f82-48a8-90c0-e1bcf5d1313f",
          "status": "OK",
          "code": 200,
          "responseTime": 1833,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59998e2-6575-4528-842f-e48e64dabd36",
        "cursor": {
          "ref": "fa73d640-5e9c-47c7-9c8b-bbd2f41b380b",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "85560cd1-6e63-4052-ac43-6d49510edf1f"
        },
        "item": {
          "id": "f59998e2-6575-4528-842f-e48e64dabd36",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0d199e0e-b752-4daa-9bf2-258746873acb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59998e2-6575-4528-842f-e48e64dabd36",
        "cursor": {
          "ref": "fa73d640-5e9c-47c7-9c8b-bbd2f41b380b",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "85560cd1-6e63-4052-ac43-6d49510edf1f"
        },
        "item": {
          "id": "f59998e2-6575-4528-842f-e48e64dabd36",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0d199e0e-b752-4daa-9bf2-258746873acb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab34374a-f673-4d40-a5b9-c5df6a443ad8",
        "cursor": {
          "ref": "750fa209-ac4b-48a1-b16e-8c3a70eeb334",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "81962ad4-253e-4157-9fac-46ba188e2139"
        },
        "item": {
          "id": "ab34374a-f673-4d40-a5b9-c5df6a443ad8",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "dc8ab5cf-ee47-4f69-98dc-fc18118ef512",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b47d3fa6-0eb9-4e06-892a-52aaf7d1b180",
        "cursor": {
          "ref": "26a6ce14-df5d-4c62-b9aa-12a9d0e68cb3",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "262bef9b-abe2-4dc7-8a0b-cfc769752eb5"
        },
        "item": {
          "id": "b47d3fa6-0eb9-4e06-892a-52aaf7d1b180",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c3ecec8a-f1dc-42be-8d58-785452717eb3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}