{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "29ecf7c0-411d-4050-90a6-b439693b789b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "fb5fbb7c-1eaf-4ac6-8f39-9057aa5dab07",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3af7596a-e593-4a0e-8fd9-19437538965e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "dbcd5b09-383d-4ba0-af84-a00d042b6115"
                }
              }
            ]
          },
          {
            "id": "15891d00-04fe-46cf-8f2b-d4c3b17e6d8e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "db1fde29-60d4-47d9-8ea2-22a48ac9ed91",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "40ff796f-79ca-416e-aaed-38ce6cb5e201"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ff142dd1-916a-4289-ae41-16f1fca378de",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8e1c2f86-77a1-4727-b151-30157bfe7e61",
            "name": "Positive Testing",
            "item": [
              {
                "id": "63096497-c0ef-470a-823a-d02deb618e76",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a986535f-672c-4dcf-a6b5-ee98897c1ab6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ba2e9ef9-1a48-4bf7-afc1-702c32f08cae"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1acf8291-9288-4f7e-b802-dd9e7a48f8f4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e9f4a8da-1dae-4f6f-998e-a1224c298f2d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f54b5991-48de-41b4-9b29-6aaf0ae3ec9c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "209977d0-cd06-4855-af34-064b3ebbf2cd"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5cccaf1e-575c-4037-af69-371ac97ce32b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "6ba4d511-73f8-45fb-8797-b135ad6a046e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "63fb1813-53ad-430e-81aa-d2eef5d30d63",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "45eb0311-6761-4381-bef5-92bbb6d51416"
            }
          }
        ]
      },
      {
        "id": "2fe21a35-a510-403f-a2d0-061c2fe923c9",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b5de23ed-8fd8-4a20-a9c4-5edf64d3e589",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3a0087bc-b9cc-4880-965b-fcbf2ad8572b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "435a9ae9-33a3-449b-99af-2993d3723854",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb09c18-0c8a-49a0-a7ef-601f72279d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "43eaa837-2680-46af-9921-49a55d4aa46f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8007172c-ca9a-4b6f-a288-3158b6813516",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d748f4-3ee4-4217-af59-e5ccccc5e38d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a6082777-4a3b-4ec5-af36-54505aa10ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6158ddd1-ae1b-48fd-a49c-693b99019064",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b3d6ada-c6dc-4e29-80c3-2a3fda83d5c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f5c05c8-ca57-4a99-bf7f-550f460b88b9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "08dd3ee0-c531-41fc-9ec1-dd19f083e716",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6c07e363-e491-4555-bea2-174cd2761f34",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc06b52a-4a02-4926-ac4d-a7670457b474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2842f795-cd41-45b6-b221-3f72d1685099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc1a5ee-cbdf-47dc-816f-8dcf8056d7c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa5a6388-f385-49dc-a980-2d788b8330df"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e8eb4cb5-8b08-4c80-873c-761d30f3a213",
            "name": "Positive Testing",
            "item": [
              {
                "id": "26bf40ca-f1b8-4979-b15e-17e634386703",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e93d246e-d69a-4ede-89da-49054c909121",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b8421910-0e13-444c-aa90-810e2c297d62"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fca2ffd9-a29d-45e2-8316-6a37fadd022a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "fd504b61-4ee2-480c-a026-6258d04248f4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "267265cd-cc38-4b6c-8e9d-a492809888ee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "afadbf07-834e-4b15-b696-632408bdcadd"
            }
          }
        ]
      },
      {
        "id": "a1c11ec9-4e96-422c-8351-6ebb5c572e21",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1217498b-9d54-4a49-bf7c-41aefd6b9826",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0e09d2e8-f59f-4040-9712-61d02b3e710e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d81b4a9d-9bd3-4599-89b9-b575fa1bb4aa",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bce566ff-f62e-47f9-9fe9-6016b0567fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12ddfe51-a377-40d2-94f3-687684e5da9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8858b3ca-b482-4e38-b8c6-f3b063373de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc007ef1-8735-401e-a469-0570536e99b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb75b3a7-784f-4f03-a14e-2581cbc93bf1",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4505a95-142a-496a-bdaa-315054e7f2fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ba22342-81dc-45e8-ac52-25d09eb5d536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60de6e28-16de-42c3-8344-71a26cca564c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "746cf487-52e8-432b-9d74-db926ef6f79b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "012454cf-0961-46bb-9b23-3b1483c4ac15",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eaf211d-ea09-4408-a8fe-587e13a9b1cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4218ca76-2f3e-4c9b-85c2-2117df6ab311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70493ce-221e-4cdb-9d86-a4a8d476a4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eaf96843-66df-4c3b-a7e0-2e65f6933ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4213cb83-b79c-4f6c-95da-626cd31bc7b4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b192ae59-477c-4572-a1e0-3ba8eb7f0156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1113a48d-bf73-4b19-91d3-0682941b69df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b453ba21-ea45-47db-a0f8-b992a018c83d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "faab9cb9-ed3f-4416-a669-b6b2756466fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4cad21f-31dc-498c-998e-2caa819463fe",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6960f3-85a1-4918-9c3d-88986a5b474f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2ae7012-01b5-4a84-8d47-d0b6516ae668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aead0160-cf99-4b63-a154-4c5a28bc7a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78ce88d6-9257-469e-994a-64232292b22f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30d78c1-05a8-4557-8ec0-2952c60c6285",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2773d2c-521d-4f5b-bf5e-c6501f554511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "615246aa-a2fb-4181-b9d8-a6bb8bac30e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b755292d-bc28-44e1-8df6-b5541db37ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19f73ba0-9aaa-44bc-bd38-168746a8f953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49e95c62-3014-47f4-b7e0-f804e906667f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e9e133-2f1d-4f42-9003-8e23548c4fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90ea4869-e942-4edc-8ded-1eaffe6f3ddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be3fa7d-423c-41dc-90d8-e18cbb782105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb8cf4cb-d55f-40df-b570-e6b19c2c359a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c22644-424a-4ab6-8cb4-1c85003917ca",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b800546-ff4d-4a27-9928-91d9fa9b830c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9ca2393-4128-4268-8336-124c2ec28045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac1a554f-1a8c-472a-985a-f75bb3302491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b90a5b89-67d1-4469-a0bc-6c83f9954884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f9b0709-2c8c-4e28-bfc6-5f79bf103478",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06e2f3bb-f95a-46b9-9a40-84804966f57a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91229fcf-d098-4ac1-9a46-3afde44c598c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "430c535b-d0ee-4ebd-bd72-f2dd8b47a468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80474f76-b80e-48e3-a999-4977bd31967b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f53419-10d0-4ee1-9994-29dfa54478e7",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "205b6c7b-8a6f-41a7-b56b-db9e243471fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "362a3da5-9f42-41ee-b1f1-c7aff5b20537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1975bd1a-56e4-4202-b245-0adad9e1ebd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "afe84395-4e7a-4d97-b2ac-77c2ee94263d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb20723-461b-4373-9514-9679628d21c7",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff4fdf6b-69fc-44dc-8978-404e8ebabb51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9baa19a-94b8-4ab7-b9bd-a485971c788e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5811f9b2-9073-40ff-bf0c-44f358fea1b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58627f7a-6772-4df4-9bda-332b2d202f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7030f0ef-1b76-463a-b3c9-eb01b6b43654",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5848153-913c-45d2-806a-6d83389ac422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9020f23d-5cae-4344-86a7-1ee96f1284c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7400ec7d-5025-4b1e-8ee2-263b5f401e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94ff00b0-a688-4509-adda-76277288a7fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec84f78a-b707-4803-abe0-df1b4e4b0fd6",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fcbd2ac-27fe-4cd6-ab9f-502ef2cbf2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37edbfa7-4583-4f86-8f94-a2be050894c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3687586-fa60-491b-a292-217532958afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "575972c3-0ec6-4a73-bb1b-8a0b5dbe6608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4030f392-b0a0-4536-931d-7127a631f979",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e58d40b5-3466-4730-8b01-01ba87da9ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18fe7091-d11b-41c5-b966-a0d936e98817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5887e37a-7c07-4bb1-8dde-318b8334faa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "08412905-ecc9-4d2a-a0e1-df7188f98828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d8ec45-511e-458a-b18d-c0861bfbab5d",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49606351-9927-4078-a791-d239899aac2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e902cdd-4336-460d-b20a-3b43a95ef1cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed9447c2-79a2-4c18-a7fe-77e1e56ea836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "460f186f-f0f0-4b88-9196-677773d57417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f72e2713-c475-4843-865a-f5c694b12e11",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49bc891-abf7-4b8b-97d9-2b3815f24442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d255d28-f01b-47f7-a130-550c16c0601c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "816d5245-3ec6-441c-a625-f8951601b058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c1e9b11-5094-4081-9b6c-dfb58748cf49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a06a4044-a256-4aed-b0d4-73dd63db70c2",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1664c420-a548-4be0-a23b-575ed428c1d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "739009c8-0a26-450e-9666-e7f04cdbd078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e84cca0e-72e9-4bfe-be64-df84e8c20354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f8595c0-60ec-4463-a818-9dbb48dc0437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a90b906-ea10-4c38-ae33-709c6fb979a7",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c290820-75c9-43d3-adc9-9eb3f378c8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80f596a0-1f02-4964-bc06-9d8fbd02cf96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4319724b-67d1-46ad-9f6c-65cbd549b7b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6998d7eb-2303-4a75-9156-ae86494f5553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c758262-326f-4003-8adf-125c555d5a25",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "467d5ed5-00a8-4795-a834-3b8511ac3155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2559fb09-b2b9-4408-a505-67b54964d454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a5fab2d-cb81-49c2-8fd1-e7f73351f7a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "29824035-f53c-4c34-a27e-8809d2b48761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c86e1572-4a5e-4d1a-97a3-2b21ffeb236b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e29daf78-4e55-4fd1-aec7-e72d6033502f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd057e9d-c630-4d6b-adda-5991c5b82a89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b2ac41f-b2f6-4fcb-be3d-5a65be07c8c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b28059c-7a45-4e51-8144-4ec73b3da47d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5405fe4-b8c3-44d8-b863-8f124a266a60",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d90e2dcd-ed1a-4edd-9a9c-c751739ba309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "264db979-00db-4672-a7ab-92a5930c9624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d35b1c1-ec59-43cf-bb62-f1d9c91d0e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0657a4e-a394-4f0b-b933-b342d735afe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ae43e1-dab7-4bfb-b457-dcbd58403f16",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57481548-40da-4551-9aee-3f585f00c122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da20b706-792b-4485-a580-a6e40efcb875"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cacf1de8-196a-4807-9537-cc2586cd19e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "81505756-7d75-4f2f-be11-d9b4d6eb9863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5905cdc-7398-46a3-82df-47f627474160",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "724c0613-6510-4f38-90f9-65edebda9a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5a281ed-200d-4a26-91d7-73b8037b7a38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480d84f9-cdc3-4c62-a1fb-25f6f19b96ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fde06777-fda8-4dba-ad00-0cc4713d7b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51cc338b-8cf6-487e-8faf-efbde38caf69",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d268d3-8aad-4036-b44c-e4d98a483382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3210c44d-aee4-4247-96b0-a4d223987ead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1893cabe-455d-4d15-9aca-e25828d85a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "673f6f41-8145-42c1-831d-e95c70c8a1f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66851700-ba67-4d04-9742-96d2ed054793",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5984e6cf-9743-42ce-8e02-1ae4d46109aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a52ca2f-f93c-452f-b8ec-58a261f6eab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f00f89-7955-4562-8fed-897a2265ea07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "db7fd6ca-4eac-4dd0-b0df-eb15e9aa3ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e078f91-431f-4dc3-98c7-9b932a8d25fb",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ccdf87-454c-4f0e-afb5-b5f1d618cc21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "052bf6c9-4e31-4ef0-a472-3e474702d6d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116b03d9-38d1-4d31-adcc-1272028dc544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e55c92dc-bf85-404e-9013-4eb22e5e0fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "604e40f5-0b3f-44bb-b9b3-b340fabe4c6c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e86b930-c5c7-4529-acd7-8ff80523d0e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ed8b352-a99f-43a1-bdf3-b59faf13d2b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c92de67-0cef-4ae3-bd2e-f042f2fccbae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "58c68ef1-4b7e-4f88-b771-a3cbd27a3d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2cca212-5dc6-4d3d-bb6f-92ea9fdd498e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92440da6-cba2-4893-95fc-557814a8d2b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23de6e73-5373-4612-a32a-0e55d66adf30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6176e143-e926-4dfb-8d65-4d9e75a90a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "16162ef2-52c0-4dba-acbc-151213b31778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3deb7b7-d8a8-4003-84ab-15562a23621b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b0d872-419f-4e00-a7a7-1cdff7fb6e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "175c490f-12c4-4fa2-805f-65440f7d0e04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3393a3a-8004-4254-99e5-f30c277ce968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "585382a9-5ddf-498c-a81f-b5daf8f6d82b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b35ac3-8d5b-4e84-a168-2b03d49a7764",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68f4df6-1a99-47b1-9f1d-e4ad7cb84da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1cf15b7-bae7-4876-9ee7-1130d065b23d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "883f2701-9fa9-42a4-b4fa-8bbffda16cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "177ce056-e1e3-43c1-a0ce-8653db4d8fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "218b941d-2361-4258-ac60-54c3e567ac1a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "615d81d3-3c2e-4054-9a5b-1ee4beba371e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb138faa-2b5d-44d6-8d57-fcbb26cde8fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ffe1e5-a962-4e08-99de-5afb5c527a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eeeee81d-d00a-4178-a6d1-cf30661aec13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74cb2aba-0c76-49a1-9dd0-193a69873639",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5931958f-1858-46c0-a7df-efc3a98ebdde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e67ab731-40fd-47ef-94d0-a487cf074f6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71df9e2a-c0ff-4664-8aef-241ee1c5c9db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca43c4b5-fff2-440b-96f3-213af81abca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af96c7a-1101-47ff-b4e1-601bafbf7caf",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d899b1-8344-4fd7-bfe7-5f1b78ce766e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa7b3704-fa08-4a7e-9222-5d38a221f31c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "085cebed-8895-4239-b0d7-28446eb082ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "84d4e66c-294b-4576-861a-f6d9ca712845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc401d6d-a353-4da7-8bb0-aedba0138445",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d111d33-45e2-4424-b028-532f8099f234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfeb1352-a03e-4317-842e-7621df4081b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae99d541-b356-4e0f-a92f-55b660d331ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "64638587-1f4f-4381-86a6-17a9e7145e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "695f28ea-46f6-4a50-a075-1113d18237bb",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "453f6891-c686-49eb-b561-a0cbc7ac1e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90bcdc04-db20-4248-8309-d18aac25500d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "843f153c-c9d8-43ac-8688-1d9d835add3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "13257082-bcc4-47c9-bd98-22de90079a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37818027-476e-401d-afef-3af5cda0c42f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65bbb6b-6dca-4f69-9887-cb45e55e2f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5277b914-0f0e-4518-9834-882c6d2f5cac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ba06a7-855b-453a-bcee-83491cb2fe75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2cabe4d8-9ff3-4d95-b8d8-a6d69293608a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ba6e1c-ae58-4767-8a4f-e7974e4229c4",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74baeeab-14d4-47fe-be96-bb55e2b9e100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9da0c92-d0a0-40cd-a7d8-c9abdccbc52c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3961c3c0-7f73-4350-a64f-693eeb35c4cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "42c19b7c-26a2-4305-8a79-ff34e31aa7d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb30817-6870-42d4-94ba-e3140e0d7ec7",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c58621-b008-46c4-8cec-3395469839c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b17abeb9-d253-4702-aabc-9ac0cea459c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a9d40a-116d-409a-9498-c83fbdedefd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "149dbbf9-1f00-4dab-8d98-94faea0d438e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02dbb3fc-4d4e-4d43-8d72-6f18f1c49871",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42da621-8b85-48e6-b29c-6ec7bd23dc4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d846ce2-40db-4c88-bb35-0980df3e297e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2021e723-7d9a-4d27-9175-d8d5e34fab2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c19be229-0bb9-4e8e-a2ae-36cb3a8e53c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a22383f-72bc-4517-b782-4009b0563ea1",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f28a541d-8a1e-4056-b0bc-f5aaea98339d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c15d05dd-9705-431f-8015-453a2f937fbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "426374c3-4145-421c-9c97-ad9c120c0be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9aa080a3-def2-46ca-9288-f76236ee5d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f56b369f-174b-4d7b-b623-e2d301880d84",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a154d542-e914-401f-a9fa-42e361892718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4788869-5963-49ec-81aa-87c955775444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3778f52c-5a92-46be-b77a-d76c18215bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8d15347-1ad5-441c-9ed0-6877d82f2288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e3220f7-f5ee-4534-90b3-7138bdf5f0dd",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03bf4674-dcb4-4cb2-b062-9e7d379b5667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a09a134a-c3c6-4ac9-a7b1-8ec8c39a12e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b1380a-af17-4e2f-ab93-ab161baf178e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "fbc1b5c6-f859-4e06-8762-654ba858d18d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f3bc23-8c52-45a5-a5f5-3c0f367f4c4b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d06c982d-002a-4b54-89ed-f1bfc4769fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e7df697-e962-4b16-ab64-96628ae7e4b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25246b3-6768-4f61-90fd-0fa1803e2b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7c3f388-0622-4e8e-b676-976013eae1ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f4e6dc2-7af4-475c-a442-23c5dde62cad",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d68c63-6952-4b44-9b6a-3869f2710885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19220cb9-1dcb-4848-bd63-94cedc65dac1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b7a6d8-8d57-4ba7-8bda-8c67ba04a3bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "434a7c96-101c-4869-990f-a3990959a41b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd33c75-d967-425a-a2ed-6f6b25ba416a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98876381-b736-46d3-9107-13ad81770ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c985ddc-4001-436c-9c85-b0dbeb2407e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f03b308-b7b6-40a7-a935-5d93412f44c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "afc00496-4eb9-4598-af34-302d9c8a1744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5255642-d1a0-42fc-bf8a-99b2814e7bbf",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e03699-943b-4905-9475-28c763b3598f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a2c7b5c-3e1e-4f97-a02e-ec774196f09b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f91e41b-908f-4277-97be-7e666bb89e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9ddd2f7-5749-4a76-856a-4c6e59a63f23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac793051-4f2b-41d9-8778-634ddcaaf6d7",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c634171-d933-4b4d-96f1-f256df106a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc055cff-b18e-48b0-8c3a-95cf72068aa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a0042bd-da04-4c5f-a05b-160b58108254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "23c6f1d6-49f6-4b9f-a008-5ea9a098129b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd17818-085f-4db0-b816-14ebe12289b3",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a451fe-db2b-4309-b4e9-f331993e7566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b057c08-7610-4fe2-8c9c-0b391ccf6b52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd44d77-40a0-4e76-a7b4-9e1a3113a2ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bffc8b51-f5d1-4f4f-9dce-16a6a788f770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "310bdca0-d33f-4741-8a92-3176c523c929",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23362b21-daac-4291-9523-19ddbf12d3e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2bf0c6e-715b-483f-a2ea-f8640bba8fc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33bb6430-80e8-434f-b980-b888a320d916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "872f2c67-2dc4-486a-8f37-a4013d8d4c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc6d588-0a2c-43ba-933d-59c31ec82d3c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1ca6eb-258f-4ac2-bdc8-631c438c7beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6842c7e5-9de0-4c06-ab78-6dcdd3250f94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0fb0ab5-4f52-4d8b-b765-ba3663352772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a6dfca1a-6672-4642-aed6-692f89110a3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2b4dfa-5273-411f-ab53-cb1ceeceb9eb",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1432731-2e9c-400d-8ff3-b00b2954079a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e573fd2d-173a-4774-a915-ed45e02790a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed717da-85d8-484c-abdf-f6ae4ce32a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9c7480e-f701-420b-a5ea-749b2c27a0ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6c82547-0c56-432b-9c50-31d12e0fa2a7",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f8bdd4d-082e-44d4-a1bd-c1e8380e9a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a71dd70d-6570-422a-9cc4-95786b214fa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "437e3844-6925-40ae-81bb-a7f302ba74c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbda69cd-416f-469e-9d90-4a2f2f37ec17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e9808c6-0a70-4204-b991-ba07518a9916",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0661adf-c673-4233-8616-feb6155f6fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33573c00-e984-4d39-8f4f-82761df5f48e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86088aba-a9f4-4b99-b375-35beaccd45a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "431ecb18-352e-4699-83e0-3d832e5189cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be070b8b-214b-40f9-bfc4-59406d37f021",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fcf78cd-f96e-4102-93ad-8d48dbd03329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a219d44-d7bb-430c-ba95-c1e2178e950f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39374059-bb50-4d6b-a0a8-13eb54a5edca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0be6df10-03a9-4595-b2ac-026b352db3e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39bccae6-6620-423a-861a-24f2687b275c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf4ed8a-29e0-403a-9973-b631adc4d218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eeeca5f-1edc-4f7e-89e8-14bc62181e6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4fbf6f-bfcb-4963-a4ba-5e30522ceab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab8e7b74-05d6-49ef-9f42-e635396c2463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f71fe0-cc72-401c-8b53-62284dcd73b0",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bce7e49-c405-45fd-bbde-64fbde3d2d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad7389f5-070e-4a81-9200-7ec9a7bec0c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2827e27-cc86-4f6e-b954-8f7987730cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "fec32eba-69e0-4aee-8475-f9396075b541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4468d792-c0b5-41d4-8337-b75b46b055a4",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96ffc77-86a6-48f8-adf7-98a72a41fcdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b791a940-0eaf-4784-b5a0-e7a5e57a028e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61558b9c-f3a7-4f78-973f-776cffcae7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9251e668-d34f-4442-a9e9-c97418ea090c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "081a555e-a3f6-4d05-b36b-b9effb76eb19",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d2837d7-a844-4549-8357-aecd794081ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c239943-bbd2-4420-960d-6e451e3eaafb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "521363ab-b278-4d59-ba9a-6f2febbae00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "16b03359-5218-4a51-bee8-605ba8d5a204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ece5db4-0ca5-43f9-9f1f-89d533a4a509",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83afcaaa-962f-4e02-9c5e-e9c0813f87b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "207f6ae9-8878-42e2-bc1e-5224d9ae93c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f9fd51-4ea1-4225-af9c-da278448fed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "57f34a7a-88b0-4dd9-89da-08b3f17b9c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd9f9d12-5d24-4141-9492-f8690a63dfcd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3bad025-4b3e-4c8e-99a3-dc70220f86aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea561b6-aad8-4004-9021-c1f1df383114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f196006-a809-44df-9691-59ef46e48532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6be604e9-3fce-48ff-b1a0-a8bdd9cc0d60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675cd06a-4b5d-4812-a1d0-3033770896f6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d078286e-4a7d-475d-b401-212846a38dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b86f4617-803e-4eed-b851-9fed1521c9a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ffc2e5d-42e6-4bcd-9aa0-114c70aec788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6baf543-4b17-4578-89f6-b0ffe7be7a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d16a19b-9593-4093-a418-94fdec3b1e52",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b7eccc8-570b-46ed-918b-073d1a45765b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a14643b2-4bf2-4c37-a34b-8f4809796b7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1281205e-54cd-4ff5-a49d-0b5016ba6054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "edd955ef-b4dc-4aa1-a35a-d09e2a1b002e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a6f514-f93b-43dd-a355-ce5c95c93f53",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b35c0f40-0f14-4b34-a63d-d402ccf6999e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3739e2d0-55dd-48dd-a6db-6ac9f8bde765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0799bf3e-885c-47ce-98fa-38a2d4a43d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c317d60-62a8-4418-b151-cca6fece96d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41d1e8d4-4c67-4d87-807a-83f6a290a937",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d6fead8-81bd-43e6-8779-faefe2e45a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a3e68d6-f8a8-4d32-af6a-913701f29125"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb85aa4-7a73-4a80-9a4b-7e6811e34536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4d5c220-6ffd-431e-a653-0947a6c0d815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c98d229-de01-4bd7-b354-3ac8b555a33e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afde0bfc-2438-4ac5-99e6-465deb241f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42a1b428-1547-48e3-ab4b-befb52022135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b304c2cd-88ed-481c-8ddc-c4f1824fce74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "83c0643f-1d87-4736-ac42-8b7feefa44fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c8c530-196b-4c9b-836d-7b54c9526974",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80acfba1-836c-4cbf-8fd6-2e308a98e8a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a426cb1a-cbce-4c5a-bdef-ec7ba723a5c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5030584-9104-499e-8efd-902b940d5943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "54303080-4768-43d4-828c-8e6ac940bd07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "320e5f4d-6e0c-483a-9b24-8a8542edd412",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35030eb-a738-4367-bb0e-655a89d5add4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea642d3e-fc6e-4c9c-8ff9-a49c41c1c90f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9010f50a-b4ef-4282-b8fd-628079532c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5e933f1b-cfea-4748-9dc9-2fc56c57e6ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff977f21-aefe-48c2-b684-bafae62b90fb",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5853513-d391-4733-a7ac-99c736ce45bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bbebe8a-1dfa-48f2-9b80-d18cbdab0d18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64dea77f-b411-4f16-8b4b-95531e7d8981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "caf164bc-b957-499d-8acb-19b7468dc959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6403ee4c-bc0b-46f3-b8e8-c322310c4635",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad3190e-3b8f-4c3d-b835-5c83ed079373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2547e212-60f7-4b79-9447-01eda4887bf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6ca035-0330-4d33-b0a4-30bbcdb41046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f26c1ec3-0eae-45f0-8390-cbc75842b34b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "507b1b3c-1567-49bb-ade1-2e52f75bd159",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7d8049-be57-4ff6-903c-6c6f8f471455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac333b39-763d-4102-85c7-2eb678caebf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56658fd7-fdc4-410c-a428-927622d9f8a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "929ad6a2-f8e8-4576-9f6f-6140be017ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc2a261d-df67-4b35-9a60-427073199899",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "310855fb-3b0d-4aca-8d4d-bb4ab59c9b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55536831-a08a-4d74-bc81-a305af9451a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e99f8370-9bea-4b40-baa8-eca3d9c81e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e5f15ae-d971-4809-ab5e-019d22d825a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa169b1-7762-4b00-80ca-e638d05e2f05",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec15ceb-472b-486d-a3d7-da9d92dc5fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cd4ba07-4e4a-457a-8823-e2e7d1295161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b124a0d9-5cf8-4d99-a800-6b6fa067f2e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0db8ab84-764a-489a-acb3-ddae42e3543a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ce51fb-8dba-46a5-8c8e-b6ed7ab52b3f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "367743b4-992b-4c43-8ce0-dc807dc82bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af48f18b-9c12-4033-a0ed-385b411d6c7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4153ea3c-23d0-4e47-b7cf-babdcffd4946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bdd12f83-bd84-4a83-a252-9174942edc15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a6a04f-3e44-49f8-9f3f-73500fa15cea",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd697f4-bb27-47f7-a4b0-efeb05a22c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37e0b881-d2ab-461b-baf6-1c6fce05de66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c36d9c4-570f-42e4-ae53-c2985bcbbc63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c1547847-b056-4a10-8219-3475a538fb8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df88b821-6cb2-473c-a5ed-1f334703b44e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7234617b-6349-45b6-a83b-c6a37bce8b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fc9fc55-776f-4529-a6b9-b19a57319920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a003daac-9301-4300-98cd-1e61563914f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbef3c0d-8117-428f-a32e-f4d13970c0df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d922a4e-2558-4e93-9cc0-dc84c5ee560e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc84adf5-1b5b-407b-a11d-004cd81cde3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24f27708-a400-47e3-838a-496bb1ff39bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a184d32-a937-40db-b810-cf050d303c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c257f7c0-7e08-4e52-b16f-6abfb53b5f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03480a33-424a-484c-b621-f6dabbe707d7",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de56249-021f-4591-acb9-fb8735256d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5be12548-fbdd-42fc-8bda-d4074dba0a8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b69b6c2-418a-445c-b227-c24a2dfd0e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "146fcb5b-fbd0-474b-8532-9c292ed3a04c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c230c7-ab5c-4f68-a278-c0751c8c9c5a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b8c620e-741b-4641-a3a4-46d9e306bc78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "545df841-8e00-4ac3-83cf-f9ebee53803f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b07ca38f-e5ba-429e-9b68-3d5cdda4786b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3cb6316-f949-46fc-9d70-6d3e0d6c672a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c3c8e7-df3e-490e-a781-aa31cb070010",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "740d6adc-c356-43f7-b293-83b5c629953e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "742aef27-f846-4369-b4ad-f2fb377bc6c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c87b72-6ab2-42eb-8c8f-edfa0c59550e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "61e7f308-59d4-49a0-98ac-d33c70d731af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40973737-70c7-4afc-8236-ab2e496390da",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb59e641-780f-4a4c-b22b-1f0211da0ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "099c0f9a-33e5-4c0b-8dcb-2944a52b2060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06f1e803-462b-4c15-8c33-02ffe0a10783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d879fbea-1e2a-4b7b-be48-86e1f4819fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fba47e3-9300-4bcf-954a-4306a22e8e7d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db98e126-48d3-4210-b4c0-b9a65bcef008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51139eff-4959-42f4-935b-3ce3a20d4fbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "267354fe-671b-4b11-acf8-28673d8e5730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb4c59f6-ddfc-4dc1-8058-39ed843bd6eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c9f6fa-bf41-4854-a811-017a5f5c029e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "136e119b-9326-472a-aa56-829eaeed2cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5406eb9f-5f5d-429f-964b-dcb580161820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b7a285-1e53-4559-afc3-759d5fc084c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e960b4f9-4cf7-4568-a415-94f0921dfc1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d192f9b6-91c4-45fd-a847-63f3160b8b82",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "934d8642-e3f2-43f7-9b5f-564ece2d8288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6de20d03-9cdd-44d2-8e73-8f27c33089f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9536a972-0935-4e49-bec5-2a3df27aee72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8231421-f15a-424a-967c-fc2b772aad58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d3f4182-40a2-4381-94a2-060c0584118f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "318babeb-65af-4dfe-90a6-2e1a94d03912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53923a0e-7d0c-4562-8e5a-686e56b93436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9deb3ac-0680-446f-a3be-24cc48857390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf4df1f8-e7d2-4b78-889d-b4b7240099c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ec0ae6-e213-434c-8a54-96053403bef0",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3809723-3ecb-4046-896d-5f2adb959d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2da78593-c85e-4163-b63c-c493dfcf0739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc52a974-5440-4374-af0c-02cdac45c66a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6afff4b2-fcf1-4749-8271-c3fa84cdc340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "800d5aee-e64d-464a-8bd2-3e5d9bc79afe",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf0f006b-f329-483f-b1d8-c25f72541e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9da73fda-e48e-4ff5-a7d4-3213e4e3bbc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "505c2f60-9b81-449a-9ca1-547b8c09703a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6ef3cf6-6114-4caf-80a9-5cb0e64a490d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bdd6aee-0c17-46b8-a2bd-3f6df3596938",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b9628f-0df1-490b-8698-bbea21ef49e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cb51056-05a3-4be8-83cc-dee859a4d5f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f68266e7-d3c9-45c7-9be4-a88c38edf0a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d3a6dec-17bb-44bb-9193-1a6a34805c52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6522d4d1-b97f-4d06-9a9c-b0bcfd64d5f9",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afab4d97-0757-4ef0-a49e-3b9670c037f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aae68982-9949-4b59-b918-6bfdb837cb44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed8aaed-33f8-471a-aa75-0035d3667d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "54814a47-6dff-409b-bb82-7c48593fede2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27eee0d1-e773-4961-95ec-5c4ae51f540d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ada1ec-08a3-4c23-92c8-983d836af139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4eec9a8-f787-4c3d-9912-914a4e84227b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0ae98d-7a48-43e7-beec-2b65241f9957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "71df0a97-5ef8-4af2-92d5-4545b41ff131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f5be8c4-4474-49cb-86e0-fe820c00776e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b285f50c-c905-4354-ab58-c743c58aad02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d95db7f8-f814-449f-a63a-530c1188e0da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6c6a6fb-1a7c-4441-993e-abd1a1442492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "38b6d8c8-d99f-4895-ad10-c7d17bf07756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc25b60-7aa6-4699-92c2-e4d588e717e2",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "405d9d70-8edd-4135-a611-8273d9a2fa96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab5f7f20-1742-4304-906c-607b84c11df5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f712e90-0650-4edf-a98c-54b00ad6afcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "458b10ef-5c74-41cb-be64-1b634b320e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc92720a-1c16-4b94-83c3-95eccc6144d7",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5473d9d-6ac6-4fc4-9de9-25904d2a4e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "512716fd-d951-440d-a6c8-dd753675fe1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2b0e24-f6a7-4519-a83d-f1956435934a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5db295d7-c9fb-413c-8700-b4863dcdeecf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a798db0f-7d55-4b54-ae79-661c13e617bb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "08db7571-b33d-4ddd-88c3-e5644fab7929",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c142bc4-7694-4020-bd15-db4bd1eb62ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2990101b-5d74-469d-bb1e-0535387406aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "939542ce-cefc-4d40-bc65-1eee10245734",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bdaa51f1-8d63-4326-b6df-9bba922eca1b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c979736c-a50b-4812-9afd-65120e6e84e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ed12a00-599f-4062-a4b4-4c58b1c54124"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eae58320-ec49-488a-afae-5ac445be8cc1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c66432a4-34c1-4337-84b7-9d5d3481dbb1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cedae8d7-ec0f-46f6-85cb-edf1f9aa4824",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dad59986-94ec-43f3-b17e-9a149584e0bd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "136ab507-6c0c-4f3b-9529-c893a83172e5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "28ca17ad-36d4-4ee7-a400-291bb42c41b5"
                }
              }
            ]
          },
          {
            "id": "35dadd35-7a81-41c7-8d1e-0d3a6a1fb70b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "52d2b99e-2ee3-4cfc-8275-792c290cafe6",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "cf66f184-259e-410c-acf9-cf5e4d619c44",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d50454-56db-4188-92bb-e52f89d71aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "26faa423-4d30-4edb-9336-23718df049bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9454560-7460-4034-b9a7-0d44bde25152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "166333c9-d681-432c-9d86-d512c35bbe88"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "555e2ad6-7164-4352-a910-3f5eb4145845",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e19286d6-db16-4ca8-80f1-60591ec47043",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cb32bbdf-f556-4fca-af2f-417c5aea5c2b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "911c2a72-190a-4b4a-becc-035099a83131",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "789c5517-4a88-4a40-9f39-1045f14dfc73"
                    }
                  }
                ]
              },
              {
                "id": "868748af-f161-492b-83af-d242548e5336",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a281ac8-85fd-4d10-b98e-938314d23a17",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "71950916-96a1-432a-a144-31e063b98a16"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c51e476a-f73f-408a-a53f-8c873bf4a3e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bace5072-efc5-44a0-8c2e-7c68daf3437c"
                    }
                  }
                ]
              },
              {
                "id": "0d29a13a-de6d-4593-8b9a-c79f1ca63c27",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "851ef161-cc81-4016-9213-1d07103849fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d4e6e066-04f9-459c-b39d-765eb93617c4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b4166ee-e8b1-4c4a-9ab3-a9b766402c2d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9cacad6d-8ee0-4b04-aa84-a6e902a156a3"
                    }
                  }
                ]
              },
              {
                "id": "15516ba9-137a-46a2-8c8c-2c462398c893",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "96a09d82-e752-4a53-9a19-928cd1df7c56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "97977704-44f3-4d4e-a9a1-3be7f120b7a9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a463f875-7bfc-40ca-8897-a8e67f5b4a07",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "648ac92a-bf24-4e3e-8143-ccefa6fa8a72"
                    }
                  }
                ]
              },
              {
                "id": "c8448fa2-592e-4453-870a-2833dc4634a6",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea2ff07d-808d-45b9-9e14-409e75fd0a85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a72755c9-3c77-492b-ae4b-01d6cd25899b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d1f50cd-cedf-4008-a218-71d3f40d1b88",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7777619b-db4a-43f2-b047-501f4f557be2"
                    }
                  }
                ]
              },
              {
                "id": "1a280964-441a-4664-a2ea-fb98b53a7d2a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad97c570-7e46-4897-a0fd-f2e83b45f84f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "56618e23-2a8b-4936-abea-314e09edd33d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d9472db-916d-490d-8d82-1dfc44cf3ef3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "43073c7f-17de-4cf7-aeff-044bec5552d1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4d5d5446-7b78-4275-a5fa-a2bcc5a57937",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "62d69fae-6716-4077-a929-974917d6b932"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "670c538a-f7ad-4617-a791-c01c28f82252",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "856e9c22-adf7-4a59-a72f-3ef5ebd18ddb"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aead17d5-7a39-4c90-a6b3-da0d5773059b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "969b5efc-6b95-45e2-a926-ea0b9444c908"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bc38ca3b-0598-4df7-b70d-736e9ed401a7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a9890132-ac83-4baa-b1c3-b7202c0453f1"
            }
          }
        ]
      },
      {
        "id": "f6e2c4d6-39ce-41d3-91f7-f8fbe2348f52",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "db682c8c-c6c1-47f2-ba94-257eca1a91bb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c3be3e0e-4aa3-46df-a17d-91c43e978c7d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ec5bea91-d757-4f5e-a036-6c6635afb4b9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e99874-7298-4921-8b7a-2a403dd0bcce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e86a5fd3-cfc7-4a98-9ed9-8eb1e249bd3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "add1095f-e6d0-471f-9240-4c905ba51f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6228a8da-33ca-4148-a6dc-7aa4c54d670e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f75257-618d-4db1-accb-a3852499dc7f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a3a45c-1acb-4ff8-a3ff-891e629ea8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa86fdcb-5e60-4c4c-a191-11919370e11e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e82ff5-b9ac-47a2-9f0c-1ffcf35b9b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dfaede5-07cb-47f4-9037-796fead9ec84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0d8e66-3561-41d3-9611-d5100399f344",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f7c5940-a265-4c26-a040-2c3f0c2b60b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54c57a08-36ce-4480-9f3a-eaa5d8402c06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd04d937-8ef3-4024-a504-79dd897f7b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60bc05f6-f1dc-431d-9055-8648ac2bdc75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27ae1870-8c16-4518-b449-ef0b7d3bdbf3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef949db-8ee4-4ecb-a504-cfbdecaa2dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4008ed3-3966-496a-bf1b-e26684781b30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23659028-0036-4cd9-b49a-e6ce9924ec35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "da0b7a4a-5e41-4c14-99da-302ddd607b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a30916a-d338-4525-8bff-2135aa8181e8",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34939c31-38ec-4475-9353-74b34af19274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52a39a62-41d2-43f2-b652-5eeb6dc5ffbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02460209-46ca-488d-9070-d9f11359f580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8e04d97-f505-48d9-b97d-42a26cc9e76b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d79561-cd97-4518-942b-2246658e2b3a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a29b4a91-08a7-43ac-8d10-93663fb72b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "291c881b-60b9-4767-8ed1-d84be38c5a95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbeb46dd-08ac-4fec-bf24-d8102d2545e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c554988-a516-4bb0-b251-8b49a71aee71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd2c496-f0ea-417c-a13a-75f03b98c087",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ffedca-2c9f-4b9a-9179-805c80e611af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76f7f169-4537-41b1-bb1a-efbc43bcf0fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f4da0e-0109-42a0-a7d4-9eed8f9b17ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f222353-1633-45cc-ac3a-47bcaf84a36e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a0329a-cf0f-4088-a39b-579068feadc9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e86fac71-f545-4053-a9b6-3deb1087fa44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc851a1f-6bf9-4027-912d-350d629d234d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a0668b-f737-4868-9def-b783883d2008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "94c5fd6f-f906-4a50-b743-e2e1f5b9250d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa26eb44-818d-48c3-a61b-34b1dc7e64e8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d66c1c-53a1-471c-9847-8ad7cb1f503d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ba3c0b5-4028-4132-978c-693e4b1a4ef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea397293-9cbe-45c0-9745-924311891089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a58bd0ce-a034-4f46-af8b-1938eaa8cc03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a360d889-f855-41bc-a095-4ae2b5e4b75b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98165de3-9bb3-4334-aa7a-cf8a1cecccef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "967fca65-dcd8-4467-8a2c-a88ee8a1961b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c227a77c-7b74-4bda-ab58-56337384c67e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "618d7974-fbc2-4944-aa54-3ee9689dec8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9360dad-9f4c-40fe-be77-c3729f72a913",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "540e9f0b-3653-461b-b4cc-cacfe7f88e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33bbb38a-e960-4329-ad7a-d3a0f71cf2fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b17b270-cce5-4f15-a827-24e7ad926e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e4276958-c5e2-4b73-b5b4-2ea19d1a2fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "560bba3b-866a-4792-8121-48be08918b38",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9274fa11-8140-4be3-a90e-84d31582986c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78865b08-5c53-4dcb-a399-77f452b737dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc456d3b-4c36-4709-9e22-1bbab51a0b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ee68b681-c64f-4bae-a953-11f416e8447d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8639af3-656a-47e8-86ec-a1152ebdf522",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "254c8226-6ff0-44bb-bdcb-cb2a258b3510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c18dfc5-99fb-472c-9826-04ecddc8ad4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c2f6e98-8cf8-4965-b446-3107110aa6d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c985180-1dee-49d3-bf5e-e531765d9ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d985667d-8a0d-4734-88fa-42943863ef88",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c0c1819-d9ce-49d1-9f3c-d2d2e8487e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c40f412e-bcb1-40a4-ad1d-2b8b12c9bb57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3866a99-edad-42af-a34c-b81d5caa0957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9f3c887-fde7-43c5-8d35-7b60d82f0b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8cec718-a676-4803-947d-23d5bf85788c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a4d0c2-f3a1-4182-85cd-950ede809117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8bf8ef2-7af6-4f85-8e52-835d9d0665f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a1cd43-b440-40ba-a16c-51d9aec28d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "706b8fe6-caf1-4468-94f5-93e10720661c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9045f0-0088-4de7-9fb6-0f80b418c81a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c627d24e-c273-45c1-9436-ee30df66ff59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33dec3e9-ff21-4d77-bb2d-5edeee9ca9a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e43401ea-140d-4798-b8fb-86bc25ee86fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f69c487-41b7-4585-926e-d150dcf01c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66fa80a1-616b-49b8-b9d7-d79d481dca94",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b38e94d-cd0e-43bd-8069-deb3741c0c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2e58de0-1273-48b7-aca3-3f543e1b1877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3098ff26-c441-4ebf-ae9a-61c575e00f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa574114-e18d-48b8-ab2c-e049657cd94f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a3ac11-a344-4afa-9f4a-eb33e36261c4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f375b29a-ba6c-40fe-b835-bf755aedb5f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3f3528f-e7bb-4d92-a5a9-cef3903f5750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e80f02-5f21-47ab-9235-b1417e47ae91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4114e43c-7685-403c-a94f-29566615a911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65edd2b3-74ff-409a-9c40-a09931ff190b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a048e85d-b17b-4e9e-952c-20a0027e0a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d5112e2-c437-4dee-a9fd-38cfb6664d98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59eb6289-689f-433a-ac85-ac9bbfda3549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ffc2e85-56c6-45d0-96e1-094a7179ba73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d77071f3-86bd-49ad-a448-0eb0a72c4864",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "075e8809-0014-4ba5-bce8-ecb81aa5fbcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ab2ce97-b1b1-4f80-977c-5876bd698574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1575f0d3-2461-4845-98f1-bea1fd531b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "317cf9d6-31c7-4060-8482-6732c8a02cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd5b7f8-4fc5-47f0-8464-f3d4097879f8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d109a9-9d2a-4768-a7d7-1fe29cd886ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d9ae3ff-07e5-4227-b039-980d6bf8f765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ebb5f60-48b1-44df-a3b0-8a766c2f0034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf285af1-5fdf-43bb-8dcd-c0d26d60387d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b91d35-12ae-4b68-8bfb-fc828b15240f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ddec4f-4119-449d-b542-00bd33972fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5d87b0c-d115-40db-a2f5-6289da104f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b3432c-6488-4b10-8308-004900d2b1d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0993e03a-3349-4dbb-8bca-96a24d324900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dae0e698-05e0-43c0-834a-86bdd94bad86",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f9b666-c4f1-46ce-bb31-ea9255586a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08df7573-9b3c-4a35-a301-e3d63a39cb2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc2ac1f-9103-4d7e-abdf-f1ad7e8596a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f98ed6aa-b8fc-4bcf-a82b-921a7c0332b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5313872-e398-469b-abd0-8a1f4de682af",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7996089-bec5-415b-b37e-524069e02d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb9d3d26-03e8-4560-a484-1931e2f0e665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb5d98c1-3ea7-4b62-b872-d0155536d357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d8e8ee3-993c-4bfb-a86f-d5f0b66cfc4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "702e03be-8e89-43a7-82e0-adf48cac0961",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77449896-ad20-48b4-93c6-827dd8cf1b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0d0d479-9c9d-425e-b74d-ab29fbc1bb90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4e725d-93e3-4f6e-a038-f4690bafc7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "074f9b4a-3cba-4c9b-8a39-b2f87874ecc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61de616f-22b4-4609-8fb5-3c0ac3a355c5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c991e9b3-b95f-4b08-8fcb-1973643c4458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d49b2ff-ed9a-4083-924f-7e2fbcd16b03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3534c9f7-359b-4dfd-81cf-89231729cfd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3c0b3b2-21ce-41ca-a867-3d6530f99b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cfbd768-c843-4d86-a1f8-e1f51a20d247",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56727f19-25ad-428d-8f54-afc234612806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d91d5eb-17e7-48b3-a095-2f89de443e51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd95dae7-7459-43fd-b9f9-3713baaa8fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcc4d7d4-cacf-4d6c-a768-806c3b53aa94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb26b527-b942-4aa7-83c0-2807e3a9b97c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "200fe6de-0f06-4d36-aa73-b80e080055b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d45b8723-5e14-4cf1-ad47-e190f788e194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "350401f4-cf14-43f6-aed0-30670adfdd6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0e29470-32b9-4485-aa83-47a0ad5f8442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "868e1ed4-4ef7-43df-bd4d-3d0d0d8c3561",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5c508e-ef71-4e0e-b108-8fa20a5fe18e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fac5df25-5a6b-4373-8d17-73c7bc41fc0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de0dbfc-f5f8-4bda-957d-1e2ab3ae5bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07b6f6c7-09ad-43b3-a7d5-0e0bf0b2ee8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909181f9-e947-429b-8afa-95bdd9604aa2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49708e5f-a930-484d-b894-f0fcfb837cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4976479f-6975-44f7-96bf-04c1401cf20e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95719c6-8ce6-4d0d-ae29-4da46323a5bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd192d03-ab44-40d0-bcde-455d9b2bb6b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d05734-6fff-49fc-a155-f37d5078bc84",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97615251-3dbf-4870-9105-a152e82bcd43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee053560-f720-4d47-a0a7-8bdc9777d806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "440a4bfe-0044-4f53-bcde-fc1a049c14ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd1e25a6-94d6-4351-83a6-e3edf91073cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2527322c-84be-42a3-8323-c7ba935be530",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "619fdd59-c57e-457b-bb81-2a7581580907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "645729fc-eecf-4437-98d3-cf94e37c93e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34459ae7-9667-4b85-b0ef-38373d7b8764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9894fb24-501a-43db-8d64-0f27d8ddf40f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "75d5e1b5-f542-4f72-8f5f-f6a773b25a46",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "20449cda-5e8a-4ec3-9af3-1307346327f6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd0de69-0d06-4a54-8b02-482cb10ba71f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a0d907db-c632-431d-9c7a-88e45ce53e0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2041bfd9-fce7-447d-831d-e811167ee770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c207020-ccb7-4bac-872e-7455cd7ee257"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6dff27c0-63fb-45cd-8a37-8cf891f9ce73",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ac62c17-a280-4d66-83a6-cdcff9319816"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a70940c-2759-469e-9381-fc049ae259ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7579bcc1-59f5-444c-856a-552238afbd9d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "90341624-36de-4efa-a633-78e431486581",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "98eaeac6-4c4a-460e-89a7-09c7587d0346"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "74865bfe-c1e7-4696-85da-047ce5e219ed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ee1961a4-0a4c-427c-bae0-a97d66f5db65"
            }
          }
        ]
      },
      {
        "id": "1de4d508-fb6c-44c4-8253-fb07849033f3",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "d0b7b62c-666b-4115-8d00-3facfb643742",
            "name": "Negative Testing",
            "item": [
              {
                "id": "560129d9-9865-4d8f-8c73-de34f73e51c9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "09be211d-7736-4521-9b19-84f716b00470",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a78cbf-1a31-4e8f-b111-63ecc860b4fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2574539-d2c8-4caa-9403-1c0e86d74b26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "039820bc-850b-4bf2-9339-c4de28baff4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "42003d91-cfa8-49e9-96c4-fb45dcac54ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a00ca317-8233-475a-b4e5-7d3baca5018a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00bd3fd4-4048-4802-9404-fd829fc89bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02b447aa-c781-40f8-8d5a-18be8eeda0d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16451af5-3e9a-4508-b523-e2c218259382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea7abe1f-0283-49e3-a4f2-c38e6cea3e28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1586770c-a0c6-4f96-838f-22ce863a375a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae3a024c-d8ea-44b6-bbd5-be80e2bfe261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3f7c58d-7f4b-449e-9826-95f4b880b22f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df22ad9f-5ba4-4472-bab9-2a0e8bbaf178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f215c27-1ee5-458f-984a-0c8b964a5b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d990328-4048-44e9-8c01-63ccc93eed2e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1926af46-275d-4cdf-be62-f81b9f75f2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f363d49-5c06-44a4-ac86-dc924f984056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7204db80-f272-4365-ae6e-c23bac6aa569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "36ec9cf7-8d29-4250-9017-9692b8a642fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf522c36-f021-4592-9552-1184273c503d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e91e203-ecd5-47da-ac35-fd715a056555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bd0a323-6f42-4f0a-8cc3-2ffed99357d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b8a6049-66e3-47da-a8bd-40072f3c5919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c04a662f-d930-4d53-bec1-325e3e7de0de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05687ecb-457d-4fa1-813e-483097d5dc14",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e5ed1ed-b3c6-4e24-b748-2946fdea3dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3d72486-5498-4567-9267-ab1c36621672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be75523d-ff91-4527-b886-d8099b83c65a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "73a1f2f4-c683-4bfd-a814-93455ff2b98b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec99b3f-0dc7-45ec-a083-dbae4bd6534a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d66710a1-58cb-47c0-a13c-0916d2129e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ae0b248-8f86-484a-847c-04745f92b936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b10db305-84c7-4efe-9a66-dd85daddcce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5370511e-f014-4d0c-abcc-ada96112eee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d055376-5de0-4b2b-a596-bd5bc05b2c2f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea70c71-e8fc-489b-b80c-61d346fed8cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58cb03c9-99b2-47a8-84eb-49c56ea5d7e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d4da9b7-656e-4f3b-a699-49cd665f12dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2201d450-df98-49e3-98bd-966d1e289d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "901f318b-2ed8-4fe3-b9a0-2da86fcce9d9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa12799-5f3c-4bf5-8c80-737138f3c6a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f953ed2c-2125-4b04-a001-2484aca2e0a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76a4a36e-3c64-4951-8083-3612812370c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ad9e6d7-8146-49eb-aa1a-9852544f31a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a9f57b-da15-4e00-92a6-aa520a286587",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31981631-05ee-4b13-9671-dd330bd6ec7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bddeb399-7c2c-45b2-a0b5-47820dfc0be6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8f19a6-094b-4b18-8310-c39c7b8ab630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "799b409d-516b-4f77-9a4a-29b10840dd91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e27b27d-0ba3-443e-bf87-cd3980f8d6e2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "787c9618-6757-40c5-a71e-8f8fb9bc697a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d125cba1-1111-4321-b05f-48e44c6666e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd11f90-d6dd-4aa4-8831-e2314afb21c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "76256d50-554b-4ace-b0ac-21325e2576a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21104e9a-45c0-4e28-a9d6-4a391689a7bb",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26828d0d-e640-4446-a292-01ce7354a13f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "770c9a6f-f0f7-4f24-b0ef-33da8a50e840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46275d85-f6f8-4a3a-b045-36371485490c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "23d83feb-4eff-47ea-ab3a-f885d36f2227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef5dd25-72e0-4334-93a2-865dbf32f203",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e01a788e-da35-4b1a-a7c0-3ef3c72152fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b0d20cc-1ced-4796-aee0-cdb6caa4b713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "710a0a27-d36a-4644-a7f2-e8e941ad3953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ec86b80-6c7d-4417-86b4-179473c213b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5421a12f-178c-43bd-8651-355a62934c3e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "526180d8-9030-44e9-a152-0f1bab86f014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25066035-cc03-440e-8da0-4411b4966c51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c4706d-ee79-4974-9169-a3e2e730095a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "190ab338-6217-4be8-82e4-8dce3f1f0c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "945d0229-20cb-48b8-9d98-b56eacdcd0f5",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "776fbafa-b1f9-432e-8957-9272964f0182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1923e7e4-ab3a-4f29-80ea-fec7486667b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d85cc76-c226-442e-8c00-f79969816540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f873f01-8187-4714-985c-831e72f2e24a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "922d2531-bdce-4487-9769-09d73c7d4e3a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f08a9d90-cdd8-4852-b91c-c336c2659331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ff9c6dd-6362-4875-aaa2-5c1c0342ac17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f028eb5-26c8-4623-9a3c-4369a37c4f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "be44597c-2efa-4a24-a70a-95ed2c197a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "100ea515-3b18-4cb0-a1a0-ecd19b367a65",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "598f750b-2fe5-437f-8652-95f1ae13423d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0277a7a1-2e87-4a8e-a07f-159123e43715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba55c0a-a90b-4356-b47e-f6f73fb8446a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e64aab9-9b8f-4d28-8892-7d3f48fff669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e4f84b1-dd79-414f-82f5-57897a1e51a0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7873cd43-031c-4c6d-a7a0-de6096acaf7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "173fca1d-b231-4b36-b7be-b4d0780a428f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e2cfcd2-5f93-48e3-85ff-5969158f93c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dbfbd83-7d70-4bb1-8210-3dccfd4fd9ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddb63f77-f7ee-4cbf-a08d-8572df0cdf7f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb51930-5cd0-493d-b64c-418273fddbe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "068d36d8-b046-4ed8-8869-bfb2a1ce35b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bbe5453-37d4-4ca3-9b6e-dd0a707af890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f21f848-2074-4af3-a339-82fd095da62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48fcdaca-4368-461b-85b9-807827cc01e0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c9c62b-0e23-471a-8e71-e81c4196552f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4b2631b-8d71-4b83-9b0d-18ab7fa38681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e90130-8af8-432c-9304-d8bb81986e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa6cf2c1-db92-4168-9b73-8d915bf80602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7f49aa2-158b-4b13-9a69-31127f1d8f6c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac73ff8-8ea9-4c0b-b7f6-d30a69ad839d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2caa03ae-63b1-406e-a64a-e6050fe39890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03927e7a-3f89-426d-9273-0fb4039d18a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cbb5746-e928-457e-a4b7-b61accbb8b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a5c8a4-5a7e-4f57-abbb-5d661e1815dd",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d9182b-3750-4c09-9538-20a09b8565b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b96418c5-eb6b-4a4e-8361-0e6979ec0ed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ec9362-acc8-48f6-bb06-2aea41e05533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "254d2288-deb2-4c1d-9166-444f5413e1bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f40a03-58f2-409f-8fd0-9b8e4975e33b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ba4460-f1c6-4dce-a0aa-a435d0981834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d48605f-f7db-4de6-9717-aed80aa21fa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a3fb0b-91c0-4257-9f94-1e0a4f9e0702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2301e11b-8ee5-40e0-9c90-db7fa5b3f771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce95248-8601-4374-9b37-fb6830595324",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda6ea99-2db1-4310-9219-7c091377993e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c431246-5129-440a-92e5-45f8aa6ff06e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f8d10d-5e20-47d8-be4f-6e5594505212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50b462d5-853f-47f2-a6bf-af31d2c16820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b924dea1-ae92-4075-8a32-01317117a16a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd09b609-366d-4170-9f50-224a943244f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "986826f2-818e-4849-8bcf-9e91bc70a38f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "131bdfad-3ea5-4922-8417-ea2a02b52404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "531615f9-a3bb-4b07-a46b-1f77bf90d110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3965ede2-73dc-405b-87ad-6ffa3552d44c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f66d57fb-7962-4bdf-953d-29ed543bcd64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64d3baf5-66a7-440a-9b98-8ad79cbe6826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56bf0caf-7085-448a-a446-ea4b69435409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ffc3906-1963-4a00-aba5-62db84745b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59546ea7-4312-4b52-8759-725ae1189ca7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7813dc5c-a0af-4c65-a5ca-d7b793fb992d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f9bd2e2-5372-410a-817f-1203cfd5129f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa09d3a-448f-4163-bb56-e62c7dd3123d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1683034d-c6a0-41e1-b69e-935c5ddc3223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ccd5b62-abbc-401d-a8db-fbfc8ec69e96",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1029ba91-c781-4092-8523-b64cc3c53c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01f87335-fa56-4843-abad-b762b68e8869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c039973-f6b5-41c0-8c54-d824408a9e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68f77494-2ac4-43f6-856b-e4ae0f121523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff89f04-e2ad-41e2-803a-6b3774079c1e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62712c11-4930-407b-89a9-f20ca49f28df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a1c2cf3-5040-462c-9a73-9206f16aa910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62806273-823d-4b02-830e-cfad95b46246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69645072-564c-4389-8a54-f49bdc04a5b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2843989e-883a-4705-97e0-cecfb8269e99",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "096712f9-9ab8-41c6-ac7e-d4bb79f8a08c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "260ee146-85a9-40c6-a210-a80af61fe3c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d59bb3f9-90eb-4f69-957f-8c2a01465566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f07d70b7-e65e-487e-a716-d49f68fd4971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125262ed-1653-48f8-a42d-06307c492b50",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b9bc34-6ae1-40c3-8964-59aa0295463d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a718021e-d079-4beb-be2d-78fe4dac944e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5daee05b-17ba-4579-99df-c78cb5508b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4802d02-440d-4379-a97a-5d638879641f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8816ee34-451e-4adf-b5c3-096195988dd4",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b26c45-6edb-434f-8fc6-830310cca077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1912858-e1d5-40fc-888d-34e8483dfd91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8855c380-f41c-474b-86ee-592d52c9f3bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94c129c8-1286-466f-b7a8-5d9ef851d9a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a99d3a0-0fab-4368-aa59-b1b7e2812b65",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44903162-5535-4796-afc0-946000100a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c7393d8-77d8-40ec-8623-9fa20d9ae9d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a8de15-b9dd-41e2-b877-cae4e9070559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0b38b0a-2dfb-4c3e-bf0b-d56b203b4e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a134e432-ff90-42a0-8723-d86db2a1834b",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8c0e18-36a0-4d4b-9d27-37ee757931ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35747f2c-0a2b-4ba2-83dd-8115f4a37b8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb6ca7c-8314-46e2-a2ed-62d83c34d95b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8433bce9-c82d-42d2-9819-7c7f8bbb08ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0834de38-8b71-41b0-862d-a08f9e9e3275",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "214bd6ca-7324-4818-8a31-9480839b06ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10053e4b-bc4f-4d41-a5f5-fbdea25b6b3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "564d51e7-f063-416e-b0cc-444806e60311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2995f90f-438d-4a31-ad0d-41b6a37e9530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d97a9270-584b-4529-a52a-d784bd6d824e",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b91bb84-4f72-4915-bc83-cec0d10bae2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ca1b1a1-0c51-4159-a069-c2650a388584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76890f0f-9892-47a2-b6ac-1c79996ce2cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b1dc379-a863-48a2-8d43-6ebb88be402f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a1ec01e-7e0f-452e-bbdc-bf6ba81226ee",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "932186a2-b6ca-4a12-9a4f-09496f511723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76efa4a1-4683-4d3e-969e-dc68ca517bfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce609e59-83e4-40b6-96f7-c171f9d8fce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d48ff34-c0c4-43ac-bceb-e12ba4461d2b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ff614d8f-a384-4b46-a9fa-ae7698499896",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d61f64ad-9b76-4e8a-8796-459383767167",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b01438f-3a9f-414e-b804-cef9aa0dfc69",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b6f11bbb-1f8f-4bbf-8e69-599ef0a79c3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b21f47-5ffa-409b-ae4f-e9a026d1a324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7af1ef16-ad96-428a-8a9c-3c14f90ff3ea"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f83de7d2-4016-43d7-9548-e029682e5ad4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f096235f-fb94-4cbd-9954-f0a9cfb0375c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "adbaf7c3-4148-4f4d-b11b-2de5284b9dbe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2eda4798-c293-444b-8db1-bd9fe989d106"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "517ed3b6-ad1a-4eb5-8cd6-087a234f9ac5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "87f63670-77fb-4fc7-8a61-e79d25820bdd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bdfc4830-e6a3-4d5c-b849-0b6140ddb497",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8c313235-7e7f-4fb4-80e5-77cb1cd86ed1"
            }
          }
        ]
      },
      {
        "id": "1ed4b7a8-8554-4578-b6a2-10a7c12f28cf",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8608d00e-7b1d-423a-a233-edb4b68d2188",
            "name": "Negative Testing",
            "item": [
              {
                "id": "88e89513-9663-44ea-856f-d534632ace5a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "aff5ce18-ac75-442f-8bb6-6915cf0bc783",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08bc9578-7a65-4135-a937-3edfb310922d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19400a98-eb13-4101-9c8d-76f0eef41af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0045ed09-7884-4848-8416-a006ed29239d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad85abbe-a9ec-49b7-a93c-480adc588853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "717728b0-7cc3-4e24-9ad4-eac0085a8e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ad9149-612e-48f3-aee7-99be0cd576ae",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa84fd9-a85a-4f7b-9b2d-9662af8c3ab1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3db02df9-1bb3-4059-92e6-cc12c9c11146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01045730-2438-4235-80bd-fd0f6173e878",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b5a79aa-83a6-49dd-abd2-8c49f62e3792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d8504b3-2657-4f75-8b2e-9f0cb68ad0e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f46444-05b9-436a-9ac5-c9d3d9bacd94",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fbedbde-9f8b-4940-a501-c46af29c8b80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "208a9a29-33ff-426b-a7a4-b389038da1cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a45db3d-a980-4d7f-9fed-0df5258654b7",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "092760e0-422c-45c5-8f8b-ac75b9b29889",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "057363e8-8cf1-4863-b47c-3fd99923f22b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69f8c6b-f8fb-4dc6-9153-c333041b8a71",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a693bd-3334-483b-98bd-62897ae0fb7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "476c281b-d35f-49b5-90f0-01e5008f39d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2f8402-de64-4203-8a28-75c0f9cdbf49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0afa8dd-77c7-4493-97b3-097a770bb1c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae46ba7-8e0a-4fd2-b86d-64d1f102814b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6211bfed-27df-4a74-aeb6-5f583d7afc18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bed9f25c-3551-44e4-9471-6d3c8674d350"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd5b5a8-9940-4ed2-8fe7-0d2db0b3132d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "408fcdbf-90e6-4762-8425-be5a47285ab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5484825d-a7b9-4854-b0ef-af8a0769df92",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "544eb754-b01b-419c-8e1e-3296e72484ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fca40cc-8b8d-4c47-a9ce-a3c18518a421"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdff9ce3-9052-4385-b9cb-fc8422c9f0d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccccbed1-6756-4886-886e-79da14fca3c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05484bf5-a554-486a-a77d-5d4368a2c585",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a29ab45-06e1-469b-ad47-cbefc381b3e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b541fffd-fd61-4f88-afb5-01c92d211cb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45180a8-3b78-4b6e-9892-e3bb757b7af7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a20ad64-5c0f-48a0-8ee0-b598acabf07a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "110e19d3-653f-4513-a36b-19e73e9de35e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8242c55-8df4-4919-9256-ffc775c368ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89d89296-8817-4f6c-b589-6e9cdd45c716"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31bcf95e-6a1c-4f2a-886d-4e175f30f882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d26265aa-16ba-4358-9c45-d9c16c36f81e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e71788ee-b4c8-44ab-95b6-5b8d51e3e43f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd82b62-c59b-402f-9779-0f359e92d71a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d028385-1dbc-4c97-b6ab-f19e20a78963"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0465811c-7512-4d02-bc63-b8da6221d9ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e4b2d72-37e0-4681-824e-b19b19dce6db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ecc525-afb8-4cf9-acb9-51019cf6c79e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09458e0c-f767-401d-90b0-7a8f31fa0139",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92b0e3f2-fcd9-4c61-8c90-68bc99f9df13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cef67d3-1e1d-4a95-bc0d-248003d8171b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fadf935a-0f72-4cfe-b824-3c334ad7727c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bcd2541-1e4a-465a-ad83-44d314fdc81f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6743c895-d2b3-4b27-832e-dd3e99b91f63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffc58b5a-5617-43e9-8556-1c4f8f129448"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5632e91-4a08-418b-8460-da3615d8f20c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acde1a23-adc9-4dc5-8b3d-547333e7c62d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6464f22d-680f-421f-9999-b5177c0ce633",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d310136b-6219-4ee1-b295-df0e16b22baf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "535a80d0-75be-4077-97c0-433d8ec38c90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d64649f-706d-4fd6-affa-efa89d32a4ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09a4dff9-f483-4cce-9aeb-cb5fffb3e2b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "669964f9-ceb2-4cec-baf4-e993ddf5d6be",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c77e4ecf-984a-4c72-9fd7-c01497c9816d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74a416ef-112d-4fe6-9e5b-9c8400a81d2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a601aa-faf3-487a-93ea-c4b8194196b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffc27ef7-7a97-41f9-b65b-2764009191c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be0c52b-495b-4f6e-9527-c99fdd7dd64c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "babe466c-f20f-42de-a421-558d8c28229d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de64a719-d3d8-4068-9b56-367d3b828c01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c022d4fe-5a89-4ec9-a133-145d5690ba8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55de1271-7adb-491a-936c-d33eae5d053b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c07d7b1-dc3b-414e-af1a-1eeb6d4023ac",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f210f4a3-a60d-4c40-ad2f-05dce95b8acf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3afd4d5-6fcf-432a-8d76-3bd237aa50d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c0f423-1427-47ee-9cac-2c75c6c57978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af415c3f-fd97-477e-9218-ae17774a8443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd08b43-0531-42ef-9fcc-7acfd5679255",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c9df74-c21a-40ff-be26-c65d4428b5d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf5c6a46-d83d-4146-9b8e-855a22903373"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5fba957-d421-408d-b33c-fc49938545ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30ad07f0-ee04-43b1-8413-9363a499d644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6867f703-dbbd-4361-a419-358e11ff7f91",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "405a4bee-b8f3-400c-a796-954971a23304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c9dcf66-47bd-447e-b8e4-a5115209216d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddbc5dca-5732-4200-b743-7d3820c9f105",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "664ddfa8-66c3-406a-ba6c-0036211a40c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cc65613-c5de-46fb-8c13-d201f1911bc1",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d52f7cff-67a1-495b-a01f-e67d86d0020c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68573844-612c-4457-8d99-ee5b56d23dc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b63554-8e72-4ecf-aba2-db23f0bb6062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d67b781c-470f-4db7-9013-b1d31e4e8928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff3d4f4d-f915-417a-bdca-da1a0fecb439",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76264591-e693-4b0a-9371-6eaf43a4486d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "952d2230-9751-4376-a6bd-2e8aa96e348b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d43570-1289-4555-adc3-c235a4a7e4db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e845ed40-6d06-4b4c-bf7f-43a545917340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa42ae7e-167e-4f0c-9c33-3591c1010d4a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9523db1-7982-448b-b613-f2095bcebbc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3211158f-2960-4c7b-946b-25ea49ba1b8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09dbe382-3e9d-4ed2-a4d3-350d1b1b89c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16a0d957-2343-4356-8779-3d0675c0eadd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30ba0b5-99b0-4b67-adc2-9182632ade37",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d364233f-9b3f-471c-99ef-7423846f83d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fca7c10b-2378-48c7-b125-5955f677277f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5668d75c-ecab-4432-ad79-5bcd4d72c37c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c69901fe-050d-49a8-8538-ba0f83f40bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53423c9f-5889-412a-b4a9-20573beb907d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aabe89b2-725a-4bb8-b56c-b9a8416d79f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74c209c2-183e-40b2-8944-08e87cf8ae1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f51de93-8cf6-4924-9f9b-6805afde434d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95f0bfb2-7da0-42cb-8bae-3cee32582407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8610bd-669f-4a26-a364-a0dccbc3dcb6",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bef84fe-6746-4f96-bf86-ee5fdc475f94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba579afc-cf8c-40e4-b439-951761f11423"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9732b937-42b0-4326-95f5-1ca63249508f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80864793-204d-4fb9-89ea-dff30389d3d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdbf2da5-3f36-4bb3-a5b0-4fa732ddeb40",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f830ce7b-0be7-4fdc-9321-951537518248",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8904e123-1aed-45c3-b37b-a263dfd99f48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0864c72f-ba3f-4d37-a2d6-11823c1839e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0af6021c-7ecc-4ec3-9c09-595a4331e329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "695597b2-0db3-44ab-9390-83c66539b8dd",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98198409-4ff3-4643-aaf6-d4f408c2941c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91ad16de-0d80-4da4-b4ba-a06fa2d48d8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f447425-b4d0-4d3a-bf0c-20ea0ba4ca08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4227c68-719d-42ec-927a-100a1f0785bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5bd940-18ef-4793-86f0-7438a7cd60c8",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "877b1267-206e-407e-a680-bfd51501de23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7405abf-d430-4450-ab13-466344905faa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c2ccd7-e532-4f98-9b7f-ead746483955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17348976-be20-4e4b-b4fa-d926352a7e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b1cb77e-1811-4e78-96d4-fc550f3ea755",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "865f79e6-66af-4488-aba2-46c1dcd0f065",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7373ad42-2c98-40dd-bd93-2e2380762582"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13353e93-9edd-4764-97d9-0a70559715be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c9e89d5-c2be-4471-b9ad-591e82f6b41b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74587ea0-651d-42cb-baa0-07d06c28cfb7",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90e34c2-b1c9-4e38-a3fc-70a8907d36b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2025489-173e-4126-8ba3-1d78e6a26744"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b51f71c9-3a55-4aa0-a4ed-25389aeb27a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37586933-7c5c-459b-b9dd-9db8965f85a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa0d394-18aa-4d29-a293-7343cee35663",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ff2750-7267-4be9-abdc-1b90453c61be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5592289-3c21-4a3c-92f3-2461c29fb844"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22a8a19e-98c6-4d9c-9122-df3e92d6a770",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0c5f9d1-bc4d-4d13-8596-bd0867b6092f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6864d101-499b-450b-8926-a6fb1d18b41a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb86cec-7418-4680-8016-86a1294d4770",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8402f95-ee84-4bb2-9756-41a1510dde9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3de9a9-e8f6-4de5-9af7-0f9fe6aa067b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afbee000-fc32-4645-a427-aabf02a1a62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b7b10e-6202-4ed8-80f6-0faf8926cf8b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e19308-dd61-4bec-8355-26aad8d1b779",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e902910-50f3-4685-8f00-611a5e05436f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c5f20b-2877-4da1-9b6e-12b26f0adee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90e82d71-4d77-4af4-b02e-32bfc4e1b41e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f84cb5-7bde-416b-9c32-c1b0dbb58300",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d3044b-1da3-4b89-a5fe-935e4a955785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "453d01a9-fa31-43ed-8730-6c4ede8c8398"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9273c630-0db4-4a53-b9d0-e1a60911c923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2389111-2da0-44d1-a895-90d4b3e557f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe7453b-5cca-4d16-aaaa-0144a5ee6df7",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d865e578-a581-4645-99e8-f6af717cda12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ca392e4-71e5-42b5-8e9c-f455d35648fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fda49e9-c27d-4cd2-87fe-ca5ee253a9d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c42a603d-e964-4509-b8c6-1e024f0a4037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef0ebe7d-be3a-45bc-899c-0ce044743af0",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bdf9425-ce5a-4569-956f-44f77901db57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7e2d70b-f30a-495b-b019-7e097fa91ce6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "633a9c13-698b-440d-8747-a003994e756c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22df2206-22da-44ee-852d-c1acaf9fa419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f694858-35f3-4f79-ae50-eee0d614ac2b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef3946c-04f5-498a-9fad-da63a3b5356f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37170b7e-e8ce-4b55-a810-e233f8308532"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c7a33b-fef9-4c92-9ffc-e013812b02f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a053e435-06cf-437e-abf5-2dd18ad7fd3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e88662a0-e92a-4e92-9c89-7851239bce01",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9264d3a-e64a-458d-ba12-7637400fbaf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dbb2505-846e-43ff-8186-aa652948e1a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ffd51f-a2da-4c71-825f-299043d0517b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68a52f08-b0b3-4819-ae23-d26cfbf9eaa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f555f6-df51-4471-a84e-a4673f556b23",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed1a29e-91ed-42ce-b0d2-a8c3db8f10b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eebd308f-8924-46e7-9ecc-4a2999dc2cf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "457eb45a-54d9-486d-bd67-2765be10a73d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b77fe6a-6e74-4e02-8b72-c4bb7e8d9f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48198733-7de6-40a6-a727-01b80d3e17a6",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83186271-1559-49ed-8374-911ee0f8b23b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "478a9e64-118f-428a-9289-5bf4e474e0ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ac0d63-4c35-4a34-aa44-217c48ccf8bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d3e194a-44fc-46df-bf7e-a1f07c6ea64d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b561e3-2d9f-41d7-8a84-11bdd2ab9171",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d46db1f5-6602-44d0-9f9a-f8309f359294",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0fc7009-c1bd-4d5c-9798-ac5cdaad53be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b114b9-dfff-4e9e-b169-6dc011be83b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "268f9a81-54ec-4b9c-90ad-c416e0453388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf41571-c008-4e1c-ac7d-c699f4aed798",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ad1925-0e7e-4d35-bb99-c6f5a48e0a75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8d0a98b-d7fa-4db4-85c4-c851ef00c7d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "610b492c-55ea-4918-887a-434b23fd73fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9f7f678-5cec-4a23-aecc-67d8fb6e0ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd8fff1-3189-4400-9fd0-e36db0ef6122",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d45acb-db61-43ef-a6b9-f2d0a4d35fc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce149fcc-8bc3-4824-8634-a9630b7a931b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d5a275d-a73e-4eb1-a232-ef3292c45217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b6f6da9-f545-466e-850f-8711eec74ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb58b67-57f3-440b-85ad-10d3a13e5b19",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaab5274-f471-4a1e-a911-5c5f170ae106",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6729311b-ffbf-470a-a210-f0777c525ba9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b14be6-d64a-4076-93fe-839d226c929d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2145ab6a-b39d-4edb-ae9a-5d1a6778c56a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86272815-fc34-4203-a642-8eb839910afc",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95bb5881-5f2c-4d30-9c8e-a5f66b892858",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c891b22b-c42d-4451-b9de-2e7bde6aaeeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b30f35b7-d69b-4d45-8069-38216e72b88a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff8c7589-6501-45d3-9b88-08e3306df61f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "690d2084-da76-43a7-9782-d57317433f51",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "308f466b-425c-47b0-b9d6-2916e8366981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "853f0480-826c-4e60-ad9f-bc15106674a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf72fc8e-b4a0-47ed-beb2-081f5b4ae658",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab38b25d-7a52-43d8-b8b7-86a1238ec978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d7d9ada-7dcc-4927-980c-87e946a0ce4d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba2ee271-7077-4faa-ad89-3c949c888937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40801917-e095-4aff-a98f-49d58fbb29ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "825e9f46-8aef-4ed4-b1f0-36d692bf06ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8476aaa-1bdb-460d-ae77-5149edf27ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e12489-d6c4-4e48-8572-48ade84dd4ac",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b97a6045-bf05-4336-9f6a-c9e9b0526af6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43a379ee-9977-48f2-804d-339510b590db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b826dc3-9e6e-4fa1-8543-02bdee24b4cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7a1e7be-0864-445a-8130-0f3469f39f72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16e092a-ee96-4a6e-ac52-a80a7d960e35",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ec59ec-d5b6-4dff-980e-03305508b6ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d07831f1-acf4-4de5-b9a7-9eadbed5f1c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7881746-55ff-412a-84c6-425a2e64bedd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bef76e48-13fb-49e8-a7bc-9820dd8dcab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f805eb-110b-4147-a157-254babd2ce7a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b08ab6c-18cc-4d0a-82f9-94a43f5b858a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cb0d5ef-0f95-46c1-a262-16ed4d2e12d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e24e2cf-a86a-4db6-bbd5-ec6a2c65ab4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "675c9366-c0a1-4aca-af75-877f5be8a68b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a07fed1c-e4a3-4e51-8230-3b76c8320f82",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a2dda14-04bd-4d29-91d1-015578172c20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a8ad25b-0cfe-42c1-9e97-e280bc29b9e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e5a9ad-9d36-403b-a1c5-04aa33091bfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f710ca2-0775-43bf-80d2-67b5d1350a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cbb9178-4d67-41ca-b5a2-de6fd5526c54",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc829df9-3c06-449d-9fbc-a5757023f91e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d110f0a-9678-4fdf-8eab-b56bb4e1c1ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "704f6e2d-6702-4742-9204-05c7f1c732f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12e9658c-f267-448a-9821-427dd7b7767e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef3e5195-a111-445d-be60-7c92eaac9413",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c420df6-5424-4118-ae45-d4c79a968d43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b2060fe-e731-48f7-8934-857c1f4d78f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7e5e50-4635-4fe1-9929-b0517b6e224d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c5389be-c140-45a9-a466-fa1362966a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f156a02c-d9f6-4cfa-8867-fa4cc915608d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b9600f-5ea9-4cec-8cdb-4677e0754626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef34a14a-7c10-4711-b559-e215903e474e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb19ac76-6f3e-4050-8bc8-d5475d142be6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67d5fa63-2c64-448a-8cd3-7e85ba287824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d40179e4-d5f6-45a5-993e-f432c479f86c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4230ebc2-bf7f-45eb-bbf5-29ee7dc2c9f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60d31917-8c8f-4426-a1fc-25ac256ce9ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a491759f-e9d1-4d7b-8a6b-e0ef0e57e78f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31821409-d27a-47fb-962e-8970ebbcb56c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d2a3f46-ccc1-4345-b21c-cc0cca60bcb0",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b5c679f-2dcd-43a6-af42-5219539a314d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51fd042a-4807-4fe1-a5d0-f1d64560e89e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2404d3a5-406b-49d4-b587-826c1d6f6d3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aa7057d-0cbb-487b-bb3f-549babab3b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed77de5-e093-45c6-8f3d-871a5716726f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a63cf5b-5ca5-4d61-9db9-27810f0d8433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a43451fe-0cff-4d75-a96c-c99ab872a524"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25911f71-48b9-4346-9051-546dcb67be60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbf2e285-292b-442a-bb60-444e57af4ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e04ab15-1496-43e5-a5ae-92e605932062",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "439ab86b-65b7-491b-abd1-9e4441f38a33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bb3bf28-ae01-4f4c-8c1e-26531b557cc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c59434f-1ab2-4030-bb30-80d5c479c68e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caeb5573-a036-4d01-919b-904591079973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6107ff4-50be-4d1d-bfe2-e722dceb9ab2",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "189aacd6-fa6c-403d-a05e-e2799e2fb1e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cac0b611-e3d5-4fd7-9c25-fc50b9c104d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e4a95a-2c01-426f-a0f1-d193d50493b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "391e88e0-a5cd-4c38-b768-1963ddfd548e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19f6a3c2-97ad-4445-af26-ca72c0ef9cc1",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58dda459-e407-44e6-af05-7f26a0da942a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22cfd335-5909-4db8-befe-baa493ecbeca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb5fa47-7b6b-44a9-90a6-d135af93e2ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2fe2d58-2b63-488b-8535-d2e3d0dbab5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7346fac-9683-4886-9000-0528745d873b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60713f6-1e5e-4d09-a6ce-9d338653c7af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de6c87e2-caae-49c6-b8a3-5d7a15a2e0e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e56e8f3-f380-4632-a9d1-31d46e81bfc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c11b8ec2-7493-4f8e-9629-0a3d7edb8ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ffc5c3-1fb3-4cd2-a9eb-740a187781a3",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2063f2e3-bb9d-4b9d-abc7-eda871934c3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69920b3d-3a5d-4737-acd1-a3228982736a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c6eda7c-ee8a-4374-ad5e-8a6e2628e361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8faa5ef7-034f-45eb-b94f-0353fcfc3efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c705af3c-90db-48f0-91b9-6e7d5f4d61e0",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0312369-9180-4bdf-a820-7c63a1d9598b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aed2fc56-7dbe-4400-98a0-0ddfbbdcfd8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3aa46b9-1b90-41a0-9ebf-95289f9730cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97a3107e-1fa5-43a1-baf6-ba55c16f8226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "472f52db-a5f5-4e09-b507-d42736a9778b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5579e7-7249-4a7a-bac5-d4af3bd15633",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7ec1125-0f6d-4f1f-986a-918786619ed4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04dec1e9-a638-4658-b104-b7ac17e47b6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc5cc409-be41-4d9b-928e-5d2bb39a8b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "117d250f-3479-427a-8537-7f385fea61a9",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b04343c-a8a6-4e27-8d68-d770512153d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5375cbf-d15e-483a-8afe-a32dc8a384a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fbfc1da-2afa-4916-b1a0-865ebd898c62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b4c1196-8935-45e0-8606-d7e6d175a535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4537b86-a290-488a-aa2e-65357c8c4653",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90523ab-750b-49d5-bb91-bb402f88ed38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "977405f0-5095-4295-907c-59f29f5f8d24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "058509ec-997d-490e-a3cf-96e78e9145f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84f86ade-3c0a-4b75-8e97-4f445e8177e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2861217-7cb7-4f20-96b0-1051cca4058c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe6b032-3021-4941-8dbc-5e66e79f5312",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e762015-d3ed-4e8d-98b3-3ad2f80558c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db55b28-1fff-46d3-bb45-82d8221743a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f41a45b-fa3f-4738-811e-ed2bf626f99b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbcdd711-1b9a-423e-9158-e9440d117083",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "366dd4bd-b6f5-4f5f-a649-cdf957dd33c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4b12dd4-938b-40a9-93cb-b3df7b3ff0a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8adaf8e9-cc6f-4036-8f4e-570965d1abd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e07d0d3a-6e29-462c-934f-04bc5e9e19c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0e598d-dfd2-40a5-832f-e5b6ce0d4b1e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49dcf765-9299-4d7c-926d-634559f72583",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "945a55c4-ed2b-4431-bbb2-6f60d7f70cd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e18ad07-749f-44ef-82c5-55e4b01f82db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "764d3cb5-a0cb-44ef-8128-1abfb4769cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a4c0fe-196a-4c92-925d-b1229fe8e8dc",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad3556db-bceb-49af-84d3-18579e48f938",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e93a5d29-6802-43c4-91d8-f634b954b0bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9101ed54-5fd7-4517-9a50-4cc487d04fcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c593bc77-74b4-44c7-936f-50df65ea002d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2becda8a-bc5f-4d00-b935-cbf7017cc0e8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87965ca0-7564-4eb2-99ef-b4cb8b5f78cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10cd5d1e-aa53-45c2-b3ee-06c4f87b19a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6fda7c-ee31-421a-9c73-2c1f40028eeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fba90e57-653c-4ab0-a6be-7a16b5c11470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68dbb49a-5ee2-43f7-b88e-ab38fd3d9c6c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff6a26fe-f5ae-40cb-bf55-21ac522b1abb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "564b40cf-b4d3-469f-8acc-3ee260cbc0f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe5cbbd-d38e-4543-a5a6-96b658e7c6a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45d6eaba-f565-45e1-9994-74bcefecb268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed04dac4-76d8-41cd-9581-4084790a75c0",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a270785c-0fc3-4fb1-9e9a-fb0e70ffbe76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d12bcbf0-2d6e-4b25-b6d1-b87152f4ce3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b08c56-fd41-4908-8b01-b10b2c679f19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fac414b5-0154-4ce9-8107-5270bbe447e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "781186fa-9d4a-480e-963c-58ac9dbb2326",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff726400-bac7-4307-9b07-95112b609b34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95e7b75e-d9e8-4020-bf8c-61b2ca914d40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c4df418-c963-412d-b381-44677203cbc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec698cef-ab00-4831-b3e9-13a9c68518f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cff816a-2e4b-4127-91ed-991e2fdaa1cd",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "971d8906-9c84-487b-a038-d1887c0e7ffa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3728f2a0-58f0-4095-9f79-7f61845aeb94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42b319b-e253-410b-83d1-899ed3242176",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "618dd565-aa52-4398-9ba4-347514d2f4ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb5475b-2de6-4e35-b21e-9a27566b0bb4",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ec092e-df1c-421e-8381-90f13269d0d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1594c2a4-0daa-4658-ba26-05ec5749d960"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd98358-59d4-46e8-a5cb-10e29c198c65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a549635b-1bfc-4e23-86a4-2f6a26bd5259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31652954-8cd2-4a70-bbb6-95df283a932d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e67460cc-8ddf-44eb-9ca6-e77e39b11cdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca6b13a8-23d2-4b89-ba5f-1fcf9dd6c6f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c8badbe-b036-4e41-8e4c-c4f8ae7feda5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e373a743-01f2-4e67-a7ff-f967361841bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "950ecb54-ee0b-49ee-9fa5-e97d346a1fe4",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c676bd0b-1976-47f4-94a1-9c5f263a2942",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7aa517c6-d7b1-4858-91fc-b9cdfbfca8b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f46d3b98-faca-4a11-87d6-e9a723ede3b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76ad9dd1-6503-4d00-8446-f83bda735c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2cc4925-e51e-44ed-8d7e-454aea1e10c3",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e156aa-c10c-443d-a331-17bb06ddc5b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a856a503-e5b1-4c67-a013-1561801bf9a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c838adb3-4ab5-4fff-a8c7-5327ae542313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "756c7e56-f63f-4bd3-ba96-30732928f7c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3027cc6a-bf02-4c36-8d39-26b0edd2db2f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa1ffb41-9467-4374-8bac-8d8e372263fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adc4886f-3bfa-42c6-b978-aa7782b04179"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1aa362-84eb-434c-ba30-c8e0d797cb27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2ae8745-4cfe-4e88-ada7-6cabb967f55b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c136925b-badf-45c8-8718-2c5e09045197",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e75f149-84f5-4252-a877-480d34420597",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c64f8c6-2ed1-436f-8a03-9a7f51128436"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac9a747-b514-425c-a3c2-f5cee9a52a0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78d6e204-def2-4706-928c-91074aa3c2fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4052e2a9-8d32-43ea-a774-31cd14d31df7",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c8f33f-be51-43ba-8d2b-4140ffb4a55f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5da0ac6e-d642-4e2f-9124-97955bb80c21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c51fa19c-80df-4b3e-a83a-73192444bee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1633d9ec-4aab-4cdc-8dd3-f70d5e51bf60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21240077-f5a3-485c-9106-44e14d68a3c1",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8672bf7d-6090-4d79-b961-50ad1938237c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94a52cf8-67e9-4216-8f55-c81d64f74856"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db0bb0b-176c-4053-9633-8b7179cf8faf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df95f914-b245-4864-83bd-5a1173968ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2618501-feb1-4dad-8ec3-f9a06711b7d2",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1492c8a-d791-4f1c-94a0-a547549ef39d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00fd744d-a4ad-46ab-8093-9f52b60355c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb6bf45c-d52f-404c-85e2-aeaa6d43f12a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f69b1bd3-3e79-44b4-ad68-1307f4ecc09c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e9c88f4-a935-44cc-bf0d-bb307cc53b6f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b86872ad-f270-4a9e-8439-75e9b528b71c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca2937e7-9a97-4056-94e8-c64b1ae1cc75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f13af06-bd0b-4c6d-83f7-72914db196bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "345c8baa-0888-4bb5-b1f3-8977db2fb02f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0eddbd1-6c23-4f06-a56f-00e88b6c4f17",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a43773-136f-4888-903c-4763de6c2ab0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5eed909f-a35e-4798-80ed-22e981c0a6f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df427a19-81d1-4059-812a-0036192ec174",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68896773-ddfc-4c0f-b309-782efd69f4a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e78693a1-e599-43e8-baa5-fd1c8e76c7e8",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2835ad69-d5da-461b-8257-55776583bf71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "161cd0b4-59c9-4133-919f-26590ea241fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb211c9d-00ac-41db-a650-5f1b02ff9dd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09aa12aa-7267-4354-9247-904010cb4ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f870e54c-3f45-45ff-a3d8-d7bc039271dc",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9249f744-76f6-4257-b1c5-0c40fd8c8bcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bce91db-fc9d-4303-80c3-ff8281a277b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d95fcf9-e67c-4f57-a1ac-6318951f78e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2838ba0-a000-435c-897a-680cbeb2bce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20bdb06e-dcef-4734-967f-9ef953e4937e",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763d9145-c433-4bd4-9640-c9c498a44364",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c884290-bcfd-443c-8498-3eadb0430f87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c209a7e-40ff-419e-82df-c5030861c4ec",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ce59501-314b-464a-bb80-017f17b3cd51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae0cd61-b64f-4ad6-b27c-9909db606099",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd3facd-6771-4174-9b7b-c5fe44db8444",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02e82034-8db9-41d7-a250-adfbcb68b944"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "166d192d-579f-4fae-a7b7-54be34f1c255",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca2d1017-6814-4ecd-87ba-d543a361509e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d7c7708-a3e9-4383-a4f1-7c6ceda276e4",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884b22f9-a641-47dc-9228-08cf788d8044",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2afc8735-49dc-42fe-9806-6811d8ad9d15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab1a786-72a7-45b9-8785-dea663e7af7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c4d6e75-a73d-4483-ac06-a0b2cf995ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc75c3d-3696-49ac-901b-2431b783692b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f5841c-1126-4e8c-9ce2-847e6bd8576f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffe9953f-7ce2-4e35-bd1f-a89860582c81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7d1d35-9794-45b0-80b2-724c1ef59796",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4216154d-c1e3-42fe-a598-1851348afa0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b81b007-0ee3-4581-9cdd-18d2284072b4",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "382efe56-d3cc-4b16-bf1a-322b096c2c9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25fcdd94-056a-4052-a31f-c981c4bb8faf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46251f4d-3db9-4198-bc44-c311cb3022ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3bcb983-bafc-43b7-b9b3-38b057b40e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07e02810-55a5-4d0e-b82f-a741fcb65dee",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb0f858-0c2b-466b-b8ec-f59c381ad5e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f561fc52-0541-4435-8d8f-05108f2b51eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a3b871-b5af-4fb6-9411-378e62beb7ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "952cc664-ac2d-4fc3-b399-1bd9a690dcb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2595c2ac-27d4-467d-9e6d-e5af81cc649c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd2acac-679b-4725-9bfe-b31cb83b865c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f318f29a-c615-4763-9787-92d3a2689e16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25590ec4-5265-4cd1-9ae4-7a2dbc4109dc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f30845bd-c5f4-4161-bc8f-6cf298726630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1540c9d9-e821-44d1-9ff7-e609fd967a62",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd61914-8af4-4581-816b-f93d8c1488d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eafa6af0-6c0e-4fb9-b570-d4cecb8f7e38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6430ec6d-1443-4281-bce4-242e60a3a91e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8079a855-da7f-4dc4-bef4-7f2b163fb581"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a92ef8cc-33b3-49f5-9aca-ac730b3d4979",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b68b134-c01b-40f2-b466-d41cba1073c9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d049692-10c2-402d-b5fb-a3015de549f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6349b9a2-8be6-40ba-b645-1a764e89d796"
                    }
                  }
                ]
              },
              {
                "id": "41a6a0a3-db99-4dc5-9173-5813ea5ef891",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "93830d8a-ae13-4a8d-992b-40d8d7f6c5c3",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db2cd7fe-94a1-4ffc-bb30-310ded8ba947",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "70c923ef-3e52-44a6-9923-50a2591bf3f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c249c4a7-e272-496c-81fd-4938fe6ec0fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c63b062-1435-407c-aaec-2addc38665a5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "faa1df20-faad-41e6-bc56-188a06ccaa01",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ffbb1cd-087f-4096-bdf7-2bf02c564c4a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d862961a-cb23-4394-9318-ac9e2787ae93",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f4c9b2c0-b8cd-4add-9c8f-611ae29480ee"
                    }
                  }
                ]
              },
              {
                "id": "ed361149-15e8-4399-af31-fbfc4bde9148",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4661c4bf-6b85-4ee8-9637-62f480854d8d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5f647c-b2a7-4363-847a-2ceb6b59c2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d920ecc8-6976-413b-a547-a5ef396c193a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e94d5eda-7940-441e-b731-c4af596aa8e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0a3e692-c171-4d2c-88c5-dd4e754756f5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "db77bbde-b0e4-4613-a408-7998ab96a889",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5d389306-35d6-476b-a3bf-5e015701d5f8",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9396436-449b-4de5-8f5c-9462b8b02976",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2aae044d-32dd-421f-8bda-4ea61294b58b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f7b81fa-bcb9-4b3d-a64d-626f025cae90",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4fb2d640-a147-46d7-8da8-3ed410d905fa"
                    }
                  }
                ]
              },
              {
                "id": "b969bc02-62f0-4f1f-8a69-f8d6625fcdc1",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e8b6710-9f57-4bea-9f64-263468cf7151",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "13583381-09f6-4602-88e8-17e70c1dd808"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d0804dd-54da-4d12-8458-face7952ba90",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3c6e4844-657d-4030-b807-61633984a73c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4da4a241-ee2f-4fac-b68c-6cb73dffee5d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "87046e9c-3fd7-4c7b-b5a7-94ea5d4d36ed"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "95f776a7-afdc-4b57-94b0-8f412c74ff14",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e6bb2ad3-6449-4464-b23f-3c8e2cfffc2f"
            }
          }
        ]
      },
      {
        "id": "435e7a45-239c-4f72-bad5-58202ab647ff",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d29ccbbd-9250-40cc-b8cd-0a80a859b69c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4d7cba35-36e1-4ce0-817c-95bd7f549ea1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7f083ff7-f331-4c50-bbaa-c25af3e5fd45",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "997b2aa6-0e91-4854-9134-14c5ebb07eff",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "17f1cf90-1ecf-45ac-81b1-c47b81abb1c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "089813a0-b64b-4435-ac29-8ac223f7d991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "abd75a1c-a863-43d0-8d75-dc48458b1c58"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "95e07f23-de9c-4673-a396-f020dd38d6a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d56a89da-afe6-4e9b-8adf-e7a6723839e2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "71dff5ff-63fc-450b-9f36-f69c02d0b0e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "713337e7-bc75-4376-a24a-86f815d6855e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c786b4fa-28d0-46e1-81e4-34615cc2b421",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7a26a1d1-54c5-446a-a8b4-f924c2fe6cdd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "102460c5-8080-48e4-bfa1-5c8cfb4f50b0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f2b633dd-edee-4ff9-8a51-8a8cf9272779"
            }
          }
        ]
      },
      {
        "id": "aa58f332-1cce-4e67-a5b2-b9774ff4411a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "68d7f6e7-44b7-4092-a05e-a2bc91bbec66",
            "name": "Negative Testing",
            "item": [
              {
                "id": "37653f4b-b68a-4547-82e3-7804c997ea78",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a6dc7c95-b8c5-4b39-a838-12bd0aa800e7",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9385b7f-d8c3-4f53-aab3-b168ea3d46cf",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "980f6dd6-2728-43ea-b292-dd5260bc6f99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e4fe2b7-f4cb-4d52-8ae3-87cc8b0889f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ead64330-7b9e-4b6b-8f76-2637619ab338"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d291fff-79e8-47e9-91d4-68a4539cb21d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24ba0ef0-5168-47f4-a726-2ea268172cca"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "638ad3b2-792f-4aac-89f0-e2f6dfc33498",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e6b965e-1c7a-4255-8b15-ee8eb61bb1df"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9110e5e0-cbe4-4e01-a7af-68590ae66463",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0e756baf-0124-40cf-b1c4-e7507da956e8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f507245f-722c-41eb-a093-b88c4aa8aea0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d4abf8ed-585b-4686-9f7f-fa785b31919c"
            }
          }
        ]
      },
      {
        "id": "c8c7bc48-48c1-42e0-9b31-a7304fc6bfb3",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "98cdfbf5-a1a9-421f-ae6a-8d5f43827d6d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5f8f5bbf-468d-4b19-b41c-8096cc371fd6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bbef2ece-31af-4d87-98ec-bdeff9f01b92",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e3f710f-9e39-4315-9896-49e5b64d86b1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a8a8967-f072-493e-b323-0376120eb3a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d391a8b9-0743-435d-aa58-75b3d933b805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0fae62c2-f958-46e5-a71a-ff9c8d663f3a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26151620-7134-4ede-aaaa-fa8bad2095f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "41883526-288d-4279-9115-a65af4fc99e1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "45ec8110-bc34-46f1-888a-0ce58b9c6cec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95e6fc45-6805-4421-b1ca-fde720ebfd16"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b985a5a-6277-4cae-ba5c-fbf017ebd274",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ae5a2806-d152-47cc-ab28-42abb1a0c978"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "63d41eea-02a8-4736-82cb-dc73929e89b5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "de2d120f-f266-4492-9155-3c780c7fd66f"
            }
          }
        ]
      },
      {
        "id": "d8e3fcd1-8ef3-4d43-a3a7-c3ea7c15abbc",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "63bffedd-d335-4431-ab9d-4074d03844e7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c3cc195c-3817-4748-bac3-39c9b8bf086e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a6746adb-f645-48c1-afe9-65ca1268028a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ded5b546-251e-417a-833d-3de9d4d85651",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5c32d205-8c61-4498-890b-b4571002c22d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 143.4350877192983,
      "responseMin": 22,
      "responseMax": 9470,
      "responseSd": 628.5880475364569,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1706143026728,
      "completed": 1706143076834
    },
    "executions": [
      {
        "id": "fb5fbb7c-1eaf-4ac6-8f39-9057aa5dab07",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a28fa859-eb4c-44ed-b58f-7980f05a4e62",
          "httpRequestId": "cd8f8357-5b43-4d14-8683-9d60ef7e940c"
        },
        "item": {
          "id": "fb5fbb7c-1eaf-4ac6-8f39-9057aa5dab07",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "deec52e8-bf81-4189-99b2-344f6d96609c",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 0
        }
      },
      {
        "id": "15891d00-04fe-46cf-8f2b-d4c3b17e6d8e",
        "cursor": {
          "ref": "673b77d6-3b7a-42b7-841e-291bd9ebda51",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6d81aefd-6645-4ee3-8460-ad3d1a4a7501"
        },
        "item": {
          "id": "15891d00-04fe-46cf-8f2b-d4c3b17e6d8e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "1721986b-e8e7-4503-bccf-0a4979adcd2d",
          "status": "OK",
          "code": 200,
          "responseTime": 22,
          "responseSize": 0
        }
      },
      {
        "id": "63096497-c0ef-470a-823a-d02deb618e76",
        "cursor": {
          "ref": "4bab3a12-3264-4c39-bed1-ffb13fd8a7c2",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ccff2ed9-f8ee-41ba-929c-e820110880ae"
        },
        "item": {
          "id": "63096497-c0ef-470a-823a-d02deb618e76",
          "name": "did_json"
        },
        "response": {
          "id": "f948e154-07e3-4abe-9799-bb4741866e61",
          "status": "OK",
          "code": 200,
          "responseTime": 416,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "435a9ae9-33a3-449b-99af-2993d3723854",
        "cursor": {
          "ref": "146a0c79-17f8-4540-a7d8-5c6a97982b48",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1aa1dae6-1d1a-4b20-bef2-e26a568cd727"
        },
        "item": {
          "id": "435a9ae9-33a3-449b-99af-2993d3723854",
          "name": "did:invalid"
        },
        "response": {
          "id": "dccabc9d-e148-4244-b31c-ee2a575b12ef",
          "status": "Not Found",
          "code": 404,
          "responseTime": 695,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "435a9ae9-33a3-449b-99af-2993d3723854",
        "cursor": {
          "ref": "146a0c79-17f8-4540-a7d8-5c6a97982b48",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1aa1dae6-1d1a-4b20-bef2-e26a568cd727"
        },
        "item": {
          "id": "435a9ae9-33a3-449b-99af-2993d3723854",
          "name": "did:invalid"
        },
        "response": {
          "id": "dccabc9d-e148-4244-b31c-ee2a575b12ef",
          "status": "Not Found",
          "code": 404,
          "responseTime": 695,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8007172c-ca9a-4b6f-a288-3158b6813516",
        "cursor": {
          "ref": "4ee1127d-956c-4eca-8bfe-75524063f994",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5f3f089c-c090-4416-aeab-2a8cacfb77ad"
        },
        "item": {
          "id": "8007172c-ca9a-4b6f-a288-3158b6813516",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "07ad696e-8815-4acb-baf2-71ed25597bb7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 63,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6158ddd1-ae1b-48fd-a49c-693b99019064",
        "cursor": {
          "ref": "3fddc42b-6cc5-41c0-8ea5-89193634e08e",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "38c0ba0c-10e0-43fd-9508-bedc3aff2ae3"
        },
        "item": {
          "id": "6158ddd1-ae1b-48fd-a49c-693b99019064",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7d813846-aa13-43f8-ba42-68ce250cd5ab",
          "status": "Not Found",
          "code": 404,
          "responseTime": 71,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c07e363-e491-4555-bea2-174cd2761f34",
        "cursor": {
          "ref": "c7dd7c7c-ed45-488c-a6e0-9ac740ded6d8",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "56b7130e-7a8c-4cd1-926c-cbce5446cd25"
        },
        "item": {
          "id": "6c07e363-e491-4555-bea2-174cd2761f34",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2d34af11-df5a-43b1-8164-c1f5264ee004",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26bf40ca-f1b8-4979-b15e-17e634386703",
        "cursor": {
          "ref": "eec8e3fd-f9eb-4fda-b339-99b34ed68d9a",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "dfabde2a-65a5-4009-acef-b8f23b62c176"
        },
        "item": {
          "id": "26bf40ca-f1b8-4979-b15e-17e634386703",
          "name": "identifiers"
        },
        "response": {
          "id": "6f0ccb1f-d6e1-4c45-b8e2-33d159ef8f46",
          "status": "OK",
          "code": 200,
          "responseTime": 92,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d81b4a9d-9bd3-4599-89b9-b575fa1bb4aa",
        "cursor": {
          "ref": "0b20ac9a-0f14-404f-83f7-51fe416e7030",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "672cb2e3-b400-49cc-993f-d65a92781fdc"
        },
        "item": {
          "id": "d81b4a9d-9bd3-4599-89b9-b575fa1bb4aa",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b22906b8-6b6f-486e-b7b8-94dcbfbf8a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb75b3a7-784f-4f03-a14e-2581cbc93bf1",
        "cursor": {
          "ref": "20378f62-5182-4769-b3fc-3b1e01495d8c",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "406f35b4-0858-42a0-a89d-77cc9048449b"
        },
        "item": {
          "id": "cb75b3a7-784f-4f03-a14e-2581cbc93bf1",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "87f4d542-160d-4969-9b33-801fc26bf8d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "012454cf-0961-46bb-9b23-3b1483c4ac15",
        "cursor": {
          "ref": "1bad44da-1459-4652-b1bd-2a74f259f30d",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a4577208-24ae-462a-b2bc-16d07d0799f4"
        },
        "item": {
          "id": "012454cf-0961-46bb-9b23-3b1483c4ac15",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "2042ddb5-b394-4061-b910-73e18d552648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4213cb83-b79c-4f6c-95da-626cd31bc7b4",
        "cursor": {
          "ref": "5a5f0edd-0d49-46c5-89d6-1cbf51db0be2",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "39eecc2f-004f-4adb-9ac8-5420b4ee231e"
        },
        "item": {
          "id": "4213cb83-b79c-4f6c-95da-626cd31bc7b4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b2a6a889-22a8-4a79-8815-e9b72a8b9bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4cad21f-31dc-498c-998e-2caa819463fe",
        "cursor": {
          "ref": "a6794a15-1f73-4fa2-82e4-d380450fe1b4",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d3232f1c-1fc7-4f07-8bde-638b97ac3b67"
        },
        "item": {
          "id": "f4cad21f-31dc-498c-998e-2caa819463fe",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "2bb3f736-e188-4787-8234-70b3ac094d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 134,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30d78c1-05a8-4557-8ec0-2952c60c6285",
        "cursor": {
          "ref": "80a62691-6933-4d8b-bd9e-a0c8c57b6bd8",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e080f5ac-21c3-4312-b856-270988c07a4c"
        },
        "item": {
          "id": "d30d78c1-05a8-4557-8ec0-2952c60c6285",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "27c5c14e-64f6-49ae-9632-16ff58278a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e95c62-3014-47f4-b7e0-f804e906667f",
        "cursor": {
          "ref": "3d6b5069-c37f-4a9d-9c70-cd60aab304a9",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "061b381b-a96d-45fb-98a9-bb783c6673a0"
        },
        "item": {
          "id": "49e95c62-3014-47f4-b7e0-f804e906667f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "76f0a999-4f0b-4c8b-8015-e674278289a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c22644-424a-4ab6-8cb4-1c85003917ca",
        "cursor": {
          "ref": "8336aba5-26ac-483f-9442-07c45c0161ed",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "632488e4-e86e-4625-b8b1-aec60ae52e05"
        },
        "item": {
          "id": "55c22644-424a-4ab6-8cb4-1c85003917ca",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "09e2bccf-5bc2-4071-b97f-cd9cdaa58b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9b0709-2c8c-4e28-bfc6-5f79bf103478",
        "cursor": {
          "ref": "a2abc0d8-5807-4f79-b3be-3c1f86fec9b8",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a0bac097-5562-41bd-90ff-54b4dcb34204"
        },
        "item": {
          "id": "5f9b0709-2c8c-4e28-bfc6-5f79bf103478",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "679913da-be07-420a-abf6-bf6514ca130b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f53419-10d0-4ee1-9994-29dfa54478e7",
        "cursor": {
          "ref": "3e9f5839-1f3b-4481-895a-6721d37bb6d7",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "aaed83e7-1c1b-4a94-96da-364bfe8cce12"
        },
        "item": {
          "id": "d4f53419-10d0-4ee1-9994-29dfa54478e7",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f0b0cd15-89b3-4482-b61a-da6167a3210d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb20723-461b-4373-9514-9679628d21c7",
        "cursor": {
          "ref": "b500bdbf-3185-4017-9a36-9a256e7e0c8c",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "dca08e03-3873-4ee3-81bd-3221f1f7661c"
        },
        "item": {
          "id": "1bb20723-461b-4373-9514-9679628d21c7",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b836f305-a18f-4554-8b84-fa32bdc3f34e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 138,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7030f0ef-1b76-463a-b3c9-eb01b6b43654",
        "cursor": {
          "ref": "52912388-9e26-4a66-89dc-0ee0433d905f",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "cf05e1ec-fb0b-4eae-9019-835dacbfd878"
        },
        "item": {
          "id": "7030f0ef-1b76-463a-b3c9-eb01b6b43654",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "9a36dc61-ab10-4d3b-9d1e-488ee7a9982b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec84f78a-b707-4803-abe0-df1b4e4b0fd6",
        "cursor": {
          "ref": "d1ad9069-7ef5-49d8-a2de-a30e9c48f0a0",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3511e547-0fa7-4323-be0b-199970dbe66b"
        },
        "item": {
          "id": "ec84f78a-b707-4803-abe0-df1b4e4b0fd6",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0033346e-0aeb-478b-99fe-0b4d0b69cd90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4030f392-b0a0-4536-931d-7127a631f979",
        "cursor": {
          "ref": "12a4f81a-66e6-48c6-bcca-e11f4ff28792",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a1f5cb63-ddb1-46ed-b11f-72faf1e79a2a"
        },
        "item": {
          "id": "4030f392-b0a0-4536-931d-7127a631f979",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1e99970c-91ba-4ff5-bdf3-f25005165181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d8ec45-511e-458a-b18d-c0861bfbab5d",
        "cursor": {
          "ref": "6717ff7d-fbec-44ca-ab06-bb8712f7463e",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "18c35f12-9c9e-4afe-9e28-6b49ae97be74"
        },
        "item": {
          "id": "78d8ec45-511e-458a-b18d-c0861bfbab5d",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b83ed5dc-71eb-441c-a9c1-e91a1eb259e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f72e2713-c475-4843-865a-f5c694b12e11",
        "cursor": {
          "ref": "7b57ad21-5b11-445c-9958-d96ae816eb62",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e5d31782-f25e-4d37-a70c-c99cdcd9b892"
        },
        "item": {
          "id": "f72e2713-c475-4843-865a-f5c694b12e11",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "3a9e2056-ea07-4294-80af-141f308c2285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a06a4044-a256-4aed-b0d4-73dd63db70c2",
        "cursor": {
          "ref": "c59a8fe8-f44b-4fb3-9211-09b895515a7a",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c360e467-740a-4fc2-94ca-4dda30a447db"
        },
        "item": {
          "id": "a06a4044-a256-4aed-b0d4-73dd63db70c2",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a00b646c-c911-4559-8532-460189d25a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a90b906-ea10-4c38-ae33-709c6fb979a7",
        "cursor": {
          "ref": "db5021bb-222d-4cc4-99c0-0f461fef86cb",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "8a53f3cf-17ce-4c89-ae19-93c8d4e083e3"
        },
        "item": {
          "id": "4a90b906-ea10-4c38-ae33-709c6fb979a7",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "bb1aeb0a-8f50-467e-9101-a756bf5b1e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c758262-326f-4003-8adf-125c555d5a25",
        "cursor": {
          "ref": "d1ac7430-cffc-47be-b1a8-78b18931d95f",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ff653455-52e9-43c6-a572-da3ae48835d3"
        },
        "item": {
          "id": "4c758262-326f-4003-8adf-125c555d5a25",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "0bcf9f22-42bc-4c27-ba1f-92db9826f617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c86e1572-4a5e-4d1a-97a3-2b21ffeb236b",
        "cursor": {
          "ref": "3f3e7e02-f98e-48c5-ab70-12bc650e4d00",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c775bd63-3020-4f86-b77f-41f5d92fc7a3"
        },
        "item": {
          "id": "c86e1572-4a5e-4d1a-97a3-2b21ffeb236b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f06f8ee3-54eb-4a31-be0c-09273fb30a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5405fe4-b8c3-44d8-b863-8f124a266a60",
        "cursor": {
          "ref": "71a65eea-b550-426b-8789-3883f01d3437",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "604481d1-4f46-4341-93d9-06efa769f717"
        },
        "item": {
          "id": "e5405fe4-b8c3-44d8-b863-8f124a266a60",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "090d2174-1ff2-47a2-81a1-947f98f75048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ae43e1-dab7-4bfb-b457-dcbd58403f16",
        "cursor": {
          "ref": "4448d9b8-d77d-48a0-92d7-8dd6987976a9",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a1daa33f-6f08-42de-bbde-d9aa04a74d3d"
        },
        "item": {
          "id": "56ae43e1-dab7-4bfb-b457-dcbd58403f16",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "9541cf95-4ca7-4441-a309-22afceef2a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5905cdc-7398-46a3-82df-47f627474160",
        "cursor": {
          "ref": "335bcf44-bbcf-477e-b38c-b0a24f8ec54f",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "5cb2ded5-156c-4e13-bc4e-985971752559"
        },
        "item": {
          "id": "c5905cdc-7398-46a3-82df-47f627474160",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "dd859ee8-5f0b-4d3e-98d5-9cd0f6dca468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51cc338b-8cf6-487e-8faf-efbde38caf69",
        "cursor": {
          "ref": "a7d63e42-cdd8-41e2-82d2-b405c9db555b",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d45759ef-6122-402c-8561-cb3bb4597a42"
        },
        "item": {
          "id": "51cc338b-8cf6-487e-8faf-efbde38caf69",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "aa0b1e07-f8f5-4e80-a28a-d548631ed85a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66851700-ba67-4d04-9742-96d2ed054793",
        "cursor": {
          "ref": "69698ed5-56fe-4ad2-9ab3-5fc28dfced47",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "dc2c792e-8180-491b-9737-5602c9a760b5"
        },
        "item": {
          "id": "66851700-ba67-4d04-9742-96d2ed054793",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5e01e7cc-6b55-4730-9703-557c7ebf5162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e078f91-431f-4dc3-98c7-9b932a8d25fb",
        "cursor": {
          "ref": "436626cc-3100-47a8-89f1-839b2d2ba426",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4f5d7a4b-be4b-4618-99e1-9c764a373b15"
        },
        "item": {
          "id": "8e078f91-431f-4dc3-98c7-9b932a8d25fb",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f4adac0f-7ebf-46bb-aef8-660fd42e44b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "604e40f5-0b3f-44bb-b9b3-b340fabe4c6c",
        "cursor": {
          "ref": "7ec2edf7-b944-451c-a8cd-04f9fc2e77ce",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a22a5d61-fcf2-4076-b9d5-f9301d25a0ab"
        },
        "item": {
          "id": "604e40f5-0b3f-44bb-b9b3-b340fabe4c6c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "fc7ed3b9-f7af-47f0-81df-f75cb39a2250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2cca212-5dc6-4d3d-bb6f-92ea9fdd498e",
        "cursor": {
          "ref": "8127861d-7732-4e23-8e47-f4a9cd96cc16",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "651c0abc-8982-41f8-8722-0258625dbf6b"
        },
        "item": {
          "id": "e2cca212-5dc6-4d3d-bb6f-92ea9fdd498e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c6ce96ad-cdf0-41dd-8c93-a895ca529ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3deb7b7-d8a8-4003-84ab-15562a23621b",
        "cursor": {
          "ref": "3460fd83-5dab-4642-8903-6c89da11d6ef",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "21d35401-b20d-42b7-a7d2-baf6ef67f805"
        },
        "item": {
          "id": "b3deb7b7-d8a8-4003-84ab-15562a23621b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "52b65352-7524-4167-8195-eb487e265abc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b35ac3-8d5b-4e84-a168-2b03d49a7764",
        "cursor": {
          "ref": "d985edc5-df4d-4c10-bd3c-323d26016bda",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "89c3b3f0-c1c0-4b35-9c57-21f775848236"
        },
        "item": {
          "id": "21b35ac3-8d5b-4e84-a168-2b03d49a7764",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9b6c60fc-cecb-470a-999f-7b1ecbf7688f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "218b941d-2361-4258-ac60-54c3e567ac1a",
        "cursor": {
          "ref": "2c48a2bc-6aaf-4b2b-a480-89d5d5bb8190",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1d45a99d-ac9d-4375-9ff7-4d00d2284675"
        },
        "item": {
          "id": "218b941d-2361-4258-ac60-54c3e567ac1a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "4622cec8-d0bb-4d15-b3db-56d73b7c1010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74cb2aba-0c76-49a1-9dd0-193a69873639",
        "cursor": {
          "ref": "2b48200d-0a74-4d57-a34e-678602cbcdb3",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f6f6b10c-6ded-4108-bcda-9482a1b96d34"
        },
        "item": {
          "id": "74cb2aba-0c76-49a1-9dd0-193a69873639",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "fb0733fc-b0a7-4193-a6f4-b70ea78e08df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 140,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af96c7a-1101-47ff-b4e1-601bafbf7caf",
        "cursor": {
          "ref": "b19b7581-2fe1-41aa-8f8c-5c90b0127de0",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b30ecf63-df34-49f9-a32e-59a9cebdea56"
        },
        "item": {
          "id": "2af96c7a-1101-47ff-b4e1-601bafbf7caf",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ce7276b1-4ef2-4815-bd00-a2ee64f5c8bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc401d6d-a353-4da7-8bb0-aedba0138445",
        "cursor": {
          "ref": "4db0ef11-fcf6-48ba-aad9-d861d2d0ee89",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f2442fdb-c932-4f2b-a481-f04f61e68c7f"
        },
        "item": {
          "id": "fc401d6d-a353-4da7-8bb0-aedba0138445",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3499fa88-0156-40a3-91e3-f2dd8e4f6da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "695f28ea-46f6-4a50-a075-1113d18237bb",
        "cursor": {
          "ref": "d755b2db-c822-4b53-8e49-dd68b3c2f747",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "68405c96-c0ed-4481-a716-c894a2ea92d3"
        },
        "item": {
          "id": "695f28ea-46f6-4a50-a075-1113d18237bb",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "fa4f6569-baac-4e34-a1f3-c93b407efa2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37818027-476e-401d-afef-3af5cda0c42f",
        "cursor": {
          "ref": "d25f38d0-85da-41f8-8f75-33b1aea56eed",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4f51e4f9-c0e8-45b5-a58b-163446fe37c0"
        },
        "item": {
          "id": "37818027-476e-401d-afef-3af5cda0c42f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9a4ed9b2-d971-4d4d-ad47-2516e413e1bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ba6e1c-ae58-4767-8a4f-e7974e4229c4",
        "cursor": {
          "ref": "76df9991-8cf8-4bec-83f9-214a95d68c20",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ab175b81-5b03-4f26-9089-270cde819a55"
        },
        "item": {
          "id": "e0ba6e1c-ae58-4767-8a4f-e7974e4229c4",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "013dafc8-26ab-4c1c-9f26-c3d9f814f874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb30817-6870-42d4-94ba-e3140e0d7ec7",
        "cursor": {
          "ref": "469c7012-2cdf-4792-99e4-2d45077fd017",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a8dda8b2-02d4-40ee-b0d8-c956853952bb"
        },
        "item": {
          "id": "0eb30817-6870-42d4-94ba-e3140e0d7ec7",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2fcecb88-3f42-490b-8b04-e7d1006f4c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02dbb3fc-4d4e-4d43-8d72-6f18f1c49871",
        "cursor": {
          "ref": "bcebf3a3-9312-412a-b777-3cbbe1f10978",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "f072fa7d-75af-46a8-bddd-974e05ae9b61"
        },
        "item": {
          "id": "02dbb3fc-4d4e-4d43-8d72-6f18f1c49871",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4644ef7d-6657-4be8-8a30-455891279061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a22383f-72bc-4517-b782-4009b0563ea1",
        "cursor": {
          "ref": "3fc44d69-bfbc-4319-bb11-10d1a66fee13",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "626c8840-7c82-4432-812e-2338e53d7ca7"
        },
        "item": {
          "id": "6a22383f-72bc-4517-b782-4009b0563ea1",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b829a2a3-e862-4887-a6df-e1b295a6f4b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56b369f-174b-4d7b-b623-e2d301880d84",
        "cursor": {
          "ref": "365fdcdf-ec23-41f6-96b3-ca3cfe59fef1",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ca59cbde-a4c9-4526-816b-350001ffeec3"
        },
        "item": {
          "id": "f56b369f-174b-4d7b-b623-e2d301880d84",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "8a88981f-8428-46d3-a04f-21aca7fc5490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e3220f7-f5ee-4534-90b3-7138bdf5f0dd",
        "cursor": {
          "ref": "5c4e6b7e-1636-4d0d-bcab-fce95f4fd84e",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7c7398d5-dcdc-4499-9996-59b56387814e"
        },
        "item": {
          "id": "9e3220f7-f5ee-4534-90b3-7138bdf5f0dd",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "5b332bf0-50c5-4699-bdce-3bf20363f61b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f3bc23-8c52-45a5-a5f5-3c0f367f4c4b",
        "cursor": {
          "ref": "d9c442fa-a9d2-4099-86a2-b5eb409e7424",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ac844ae2-0438-456c-b972-d14c040d9839"
        },
        "item": {
          "id": "79f3bc23-8c52-45a5-a5f5-3c0f367f4c4b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d98c8f6b-f1e9-49f6-8343-1f1db33022b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f4e6dc2-7af4-475c-a442-23c5dde62cad",
        "cursor": {
          "ref": "88d563f4-4d7f-49d5-88b2-4716c7dd508e",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1ba58f45-fe5d-4c0e-a6e8-1b59f10c4d49"
        },
        "item": {
          "id": "3f4e6dc2-7af4-475c-a442-23c5dde62cad",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b95d77a4-a9d2-4b04-a2f0-8500a074b68b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd33c75-d967-425a-a2ed-6f6b25ba416a",
        "cursor": {
          "ref": "6ce4c105-10b6-454a-a562-bb12fe897e21",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ab6653ec-61c4-47aa-bc93-b06ba8e05d61"
        },
        "item": {
          "id": "9fd33c75-d967-425a-a2ed-6f6b25ba416a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ccff9974-cee1-4d34-8c64-30d13c97d1f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5255642-d1a0-42fc-bf8a-99b2814e7bbf",
        "cursor": {
          "ref": "5ea70f74-6417-4fb3-a2a0-8eebdca7c2a0",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d3d90771-ba65-4a09-87e8-1804fe8cf90c"
        },
        "item": {
          "id": "f5255642-d1a0-42fc-bf8a-99b2814e7bbf",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e5bd8db3-ad0c-44bd-b8e0-652d557a670a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac793051-4f2b-41d9-8778-634ddcaaf6d7",
        "cursor": {
          "ref": "965b2b59-e1a5-40a2-9238-0af83bc6503a",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7a213ea7-ef4a-4ebf-be5c-57618ffc667d"
        },
        "item": {
          "id": "ac793051-4f2b-41d9-8778-634ddcaaf6d7",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "86aa43c1-bd88-47ef-b386-640b0c4ebd9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd17818-085f-4db0-b816-14ebe12289b3",
        "cursor": {
          "ref": "a40c84d8-df9e-4099-8dae-0a88712e3322",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b951fbb6-026e-46eb-bde5-ab9632539df1"
        },
        "item": {
          "id": "cdd17818-085f-4db0-b816-14ebe12289b3",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ab86342f-2e79-4b42-b92a-24f6964afdaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "310bdca0-d33f-4741-8a92-3176c523c929",
        "cursor": {
          "ref": "7442d369-e71d-4db6-a5f5-75936500aba4",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "65560332-9e3a-4c15-a46a-a52f68f10b86"
        },
        "item": {
          "id": "310bdca0-d33f-4741-8a92-3176c523c929",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "030fbdf1-b7ee-4b69-9d43-c8edb88e5ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc6d588-0a2c-43ba-933d-59c31ec82d3c",
        "cursor": {
          "ref": "ed9db4a3-6eb3-4519-8d63-020e797e33c1",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "daf66bb8-2bcf-41f0-8050-f9cbba96ba47"
        },
        "item": {
          "id": "9fc6d588-0a2c-43ba-933d-59c31ec82d3c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "301bd08d-49ed-4a32-9e09-22c30e65e1be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2b4dfa-5273-411f-ab53-cb1ceeceb9eb",
        "cursor": {
          "ref": "94890f13-9881-48e4-9cfc-7e71f286fa3a",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "312f2e2e-3217-414f-993d-5c8d19e14d9d"
        },
        "item": {
          "id": "3d2b4dfa-5273-411f-ab53-cb1ceeceb9eb",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8dde6efb-698c-4155-ab6b-ba00696b5362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6c82547-0c56-432b-9c50-31d12e0fa2a7",
        "cursor": {
          "ref": "d3d6ad78-82b6-4a69-bf0a-56db4297c2d0",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "119548ca-8f8b-497d-ac7c-05d54b7270e6"
        },
        "item": {
          "id": "b6c82547-0c56-432b-9c50-31d12e0fa2a7",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c95a0860-8b5a-460b-8ad6-bfff348751f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e9808c6-0a70-4204-b991-ba07518a9916",
        "cursor": {
          "ref": "503cee0d-1de1-4030-bf7f-fa2f977a88d7",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "98dcd797-bf9b-4e9b-bb55-b01a7232c135"
        },
        "item": {
          "id": "8e9808c6-0a70-4204-b991-ba07518a9916",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "972e41d5-d6dc-4a27-bc88-15293aedad8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be070b8b-214b-40f9-bfc4-59406d37f021",
        "cursor": {
          "ref": "0e03f0e8-c71a-46fa-a200-168b94db78b1",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6e1a83aa-8ee1-4fa6-a330-bbffec52d730"
        },
        "item": {
          "id": "be070b8b-214b-40f9-bfc4-59406d37f021",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "c256130a-4e2c-4180-bcad-9f9db4da832b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39bccae6-6620-423a-861a-24f2687b275c",
        "cursor": {
          "ref": "153a852f-3f30-41a0-a434-209a9ee4eba8",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a6423e52-c17d-4a7b-a977-e54e8ba5e7b5"
        },
        "item": {
          "id": "39bccae6-6620-423a-861a-24f2687b275c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9630f467-2d70-4319-aa21-fa96afd93a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f71fe0-cc72-401c-8b53-62284dcd73b0",
        "cursor": {
          "ref": "59e25306-761a-40b1-9451-bf7323e40502",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "54d5c476-3238-427c-9d4d-42d1de42050e"
        },
        "item": {
          "id": "c7f71fe0-cc72-401c-8b53-62284dcd73b0",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "426a9424-aae4-45bc-9a1f-1ddd8bb0b4b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4468d792-c0b5-41d4-8337-b75b46b055a4",
        "cursor": {
          "ref": "ed19ef3e-0060-4748-ba78-2739ad4a7dbe",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "52c02ff6-d582-4a90-b6bd-6ca7bf2d3f07"
        },
        "item": {
          "id": "4468d792-c0b5-41d4-8337-b75b46b055a4",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2bd63d5c-fc8f-4e87-afca-4c8628a6d266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081a555e-a3f6-4d05-b36b-b9effb76eb19",
        "cursor": {
          "ref": "83aa668c-8a65-4138-808f-c582372d9887",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b930cee1-1e8a-49c7-bb1d-b89275baabbd"
        },
        "item": {
          "id": "081a555e-a3f6-4d05-b36b-b9effb76eb19",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "a604f672-5eb5-45c7-be84-4cc450e935a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ece5db4-0ca5-43f9-9f1f-89d533a4a509",
        "cursor": {
          "ref": "0a3ffa98-81ae-4d37-a70a-7c7cb04005b9",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "afb7b06c-875a-461e-ac92-9da1858af239"
        },
        "item": {
          "id": "0ece5db4-0ca5-43f9-9f1f-89d533a4a509",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d9aa24d6-d125-41bb-9587-4a7e20b1365c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd9f9d12-5d24-4141-9492-f8690a63dfcd",
        "cursor": {
          "ref": "37e68d0d-e642-4b72-a42b-8a0810cb170d",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "404ff4fc-32b9-4741-a29b-10221b0fb7f7"
        },
        "item": {
          "id": "bd9f9d12-5d24-4141-9492-f8690a63dfcd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c84bce0c-f932-4985-bf01-bd9583b512bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675cd06a-4b5d-4812-a1d0-3033770896f6",
        "cursor": {
          "ref": "3380f2fc-fc60-405f-a6d9-afffeaf2405b",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "9477ca35-6e31-4e71-a8ee-c92ee3ff4239"
        },
        "item": {
          "id": "675cd06a-4b5d-4812-a1d0-3033770896f6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c7e2644e-dcb6-420e-ac5b-7a4e7e81cd6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d16a19b-9593-4093-a418-94fdec3b1e52",
        "cursor": {
          "ref": "bb825f65-c4ad-438c-ba7f-8ee42390fe9b",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f04d07c5-21de-44f5-938a-0a6140a60262"
        },
        "item": {
          "id": "6d16a19b-9593-4093-a418-94fdec3b1e52",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6844b82f-8428-45cd-89bc-2e64f29b90e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a6f514-f93b-43dd-a355-ce5c95c93f53",
        "cursor": {
          "ref": "7dd9b644-cc86-44e7-b893-0551806a28d5",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9951abfb-1f39-46d4-aa1d-ed079e66579d"
        },
        "item": {
          "id": "36a6f514-f93b-43dd-a355-ce5c95c93f53",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "32852f9b-66b8-4457-b176-e57480a06aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d1e8d4-4c67-4d87-807a-83f6a290a937",
        "cursor": {
          "ref": "14546c4c-ae36-401d-b0ea-a5814b1cd49e",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "5443032a-1100-467e-8fc6-7f9a97607dc4"
        },
        "item": {
          "id": "41d1e8d4-4c67-4d87-807a-83f6a290a937",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "03bbcca8-c111-4fdf-a63f-95f217c334bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c98d229-de01-4bd7-b354-3ac8b555a33e",
        "cursor": {
          "ref": "1af4c364-35e6-4582-a069-8367a05fda05",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "63fb32ea-a4b2-4889-827c-5a5d1a914cf9"
        },
        "item": {
          "id": "8c98d229-de01-4bd7-b354-3ac8b555a33e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "7fec9500-9ceb-4128-bea7-b060454c2aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c8c530-196b-4c9b-836d-7b54c9526974",
        "cursor": {
          "ref": "5d74cabf-68c6-4def-a1a7-16b21098317d",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a5dbbd16-215e-49fd-9fe6-a4781d8f636e"
        },
        "item": {
          "id": "48c8c530-196b-4c9b-836d-7b54c9526974",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7cbb7c99-040f-420c-a2d9-64d738454924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "320e5f4d-6e0c-483a-9b24-8a8542edd412",
        "cursor": {
          "ref": "dbe289a4-305d-4bff-a957-4ea194d32c3d",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "42b5ea06-fd4d-465d-a217-84583022c8cd"
        },
        "item": {
          "id": "320e5f4d-6e0c-483a-9b24-8a8542edd412",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "fc1ed722-aa05-4b88-881f-e9d1fe738b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff977f21-aefe-48c2-b684-bafae62b90fb",
        "cursor": {
          "ref": "5afaff7b-1e89-407f-9225-d4267659ea32",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "58359502-aed9-4174-af82-d559104121ff"
        },
        "item": {
          "id": "ff977f21-aefe-48c2-b684-bafae62b90fb",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "14675be3-ac16-4cf6-b078-65c61215de3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6403ee4c-bc0b-46f3-b8e8-c322310c4635",
        "cursor": {
          "ref": "f1125885-2864-484b-9f2d-11c3245a4028",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ee9e3182-78c9-432a-a4e0-0526f5745d1f"
        },
        "item": {
          "id": "6403ee4c-bc0b-46f3-b8e8-c322310c4635",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5f877358-bd4a-481b-b591-db6e77bc311e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "507b1b3c-1567-49bb-ade1-2e52f75bd159",
        "cursor": {
          "ref": "09a712fa-fd1b-465a-9cc2-3803789ed09d",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a24f10b8-b11f-4ea3-8916-63b394fc7a86"
        },
        "item": {
          "id": "507b1b3c-1567-49bb-ade1-2e52f75bd159",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "28b85bbf-1760-4f4f-b8eb-e1af749bc0e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc2a261d-df67-4b35-9a60-427073199899",
        "cursor": {
          "ref": "c778270a-dfdd-43cb-b740-020c16a8ab58",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "70d8ea8e-558c-4b8d-913b-dea14bd49add"
        },
        "item": {
          "id": "cc2a261d-df67-4b35-9a60-427073199899",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e27f7ba5-203d-42cf-92b5-2db5c4c7655d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa169b1-7762-4b00-80ca-e638d05e2f05",
        "cursor": {
          "ref": "74b40ff5-56ab-4ec0-b4cf-6324d8cbe219",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d105362a-959b-4be5-83d1-0197b63da3a1"
        },
        "item": {
          "id": "4aa169b1-7762-4b00-80ca-e638d05e2f05",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f626a27a-c872-4dd6-8b30-9f805e03a6b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ce51fb-8dba-46a5-8c8e-b6ed7ab52b3f",
        "cursor": {
          "ref": "75447eda-2ace-4862-b6be-dde9bdea6f28",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "918db9f9-efdb-407a-a3dc-cf882bcc4b69"
        },
        "item": {
          "id": "58ce51fb-8dba-46a5-8c8e-b6ed7ab52b3f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e6dd56a5-0529-4eb1-8e82-5b54aebe82e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a6a04f-3e44-49f8-9f3f-73500fa15cea",
        "cursor": {
          "ref": "06161af4-95d7-4b7c-a812-68c50810957a",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c45c4eea-f815-4daa-b60d-6d6af10675ad"
        },
        "item": {
          "id": "79a6a04f-3e44-49f8-9f3f-73500fa15cea",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4f3820c9-8297-42d7-8f86-83ef4a4eacad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df88b821-6cb2-473c-a5ed-1f334703b44e",
        "cursor": {
          "ref": "a236b7c4-e1a5-44e7-b7e5-6cf97b40780f",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "860ab134-1ea6-40c1-8294-5302eff13ac9"
        },
        "item": {
          "id": "df88b821-6cb2-473c-a5ed-1f334703b44e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c1f96628-49be-4adf-ae65-97607f75eb93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d922a4e-2558-4e93-9cc0-dc84c5ee560e",
        "cursor": {
          "ref": "f9dd8e68-b67c-4cbc-b53b-6a2d624bdd1f",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "570c1845-0017-4727-9e8d-c3e186030e43"
        },
        "item": {
          "id": "0d922a4e-2558-4e93-9cc0-dc84c5ee560e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2fe7e57b-0263-43a9-8ae9-a845a54413c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03480a33-424a-484c-b621-f6dabbe707d7",
        "cursor": {
          "ref": "5465104a-d449-4428-80f3-50a37f01255c",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "04451b47-b22c-45d0-99f0-0156ce39fff3"
        },
        "item": {
          "id": "03480a33-424a-484c-b621-f6dabbe707d7",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4b3c3841-4367-4a6d-8fa5-2e8c3956fb64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c230c7-ab5c-4f68-a278-c0751c8c9c5a",
        "cursor": {
          "ref": "b73839a7-a8bd-43cd-8b5e-41610350af4a",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "06e298a0-ca4b-4171-b555-4559ddb10a04"
        },
        "item": {
          "id": "b3c230c7-ab5c-4f68-a278-c0751c8c9c5a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "382ac828-1950-4e0d-be8b-7e01650088c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c3c8e7-df3e-490e-a781-aa31cb070010",
        "cursor": {
          "ref": "531ff28d-dbba-4b3b-84ae-a979b886e0b6",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "563320d1-f216-4a67-b79a-1ab7183b7e03"
        },
        "item": {
          "id": "a2c3c8e7-df3e-490e-a781-aa31cb070010",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "87d82d55-f4f8-410b-b584-39be8ea690fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40973737-70c7-4afc-8236-ab2e496390da",
        "cursor": {
          "ref": "291de52d-1eb4-421f-9e06-5b9b9e9a203b",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "542712ac-91a2-4dde-8011-29da58e96ea6"
        },
        "item": {
          "id": "40973737-70c7-4afc-8236-ab2e496390da",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c3b4a997-f09a-402e-bbc3-63199ba6d2c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fba47e3-9300-4bcf-954a-4306a22e8e7d",
        "cursor": {
          "ref": "41ad942b-55e8-48e5-86e6-7d02350baeec",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f4766165-247d-46e9-abab-8490a2353e6d"
        },
        "item": {
          "id": "3fba47e3-9300-4bcf-954a-4306a22e8e7d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e2dee80f-b7f1-4508-adeb-a183ad69ae3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c9f6fa-bf41-4854-a811-017a5f5c029e",
        "cursor": {
          "ref": "a5ea8b51-e108-47cd-ae59-076de8948e5d",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "7eac9fe1-c604-4052-8b09-2c8870cea309"
        },
        "item": {
          "id": "c8c9f6fa-bf41-4854-a811-017a5f5c029e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3b807941-fcdc-4b87-b1cb-a810dc96a92f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d192f9b6-91c4-45fd-a847-63f3160b8b82",
        "cursor": {
          "ref": "d2573b83-c7be-4492-b419-c2f4a136a90e",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e0c7d1b3-541e-41dc-b102-ad79f3be1078"
        },
        "item": {
          "id": "d192f9b6-91c4-45fd-a847-63f3160b8b82",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "de5fb914-e173-47e3-a597-dcefc2b868b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d3f4182-40a2-4381-94a2-060c0584118f",
        "cursor": {
          "ref": "e7100148-a5ff-4b20-912c-51bf3df6f734",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5ac756d9-e02b-49f8-bf05-788fed56e796"
        },
        "item": {
          "id": "8d3f4182-40a2-4381-94a2-060c0584118f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "94647cb4-f443-4624-a810-c1c5dd177e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ec0ae6-e213-434c-8a54-96053403bef0",
        "cursor": {
          "ref": "54525652-c3c4-4f56-9bb1-37ec760923a3",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "50986ca3-d1fb-4e8e-9e4a-1b65aeac67d5"
        },
        "item": {
          "id": "10ec0ae6-e213-434c-8a54-96053403bef0",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ba7fcc54-7214-442c-813e-e79097b19d64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "800d5aee-e64d-464a-8bd2-3e5d9bc79afe",
        "cursor": {
          "ref": "44f2fee2-e284-49f5-ad17-0a5419fd05bb",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a1ea2e9f-2699-4ca3-a057-828a34785d58"
        },
        "item": {
          "id": "800d5aee-e64d-464a-8bd2-3e5d9bc79afe",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "15889858-10fd-4875-a5df-0e17d7b00dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bdd6aee-0c17-46b8-a2bd-3f6df3596938",
        "cursor": {
          "ref": "53092dd8-a5a7-4cb9-8289-c1fcea48cef5",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "3a057584-58aa-4b23-b47c-3305000f68e9"
        },
        "item": {
          "id": "7bdd6aee-0c17-46b8-a2bd-3f6df3596938",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2257c8b7-8c0c-428b-af4c-5cbf3a60ba94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6522d4d1-b97f-4d06-9a9c-b0bcfd64d5f9",
        "cursor": {
          "ref": "9d724cda-5a08-46ef-97b0-dfd11495c851",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ab64a411-cb1f-4cfe-943b-cafb7bebe6e2"
        },
        "item": {
          "id": "6522d4d1-b97f-4d06-9a9c-b0bcfd64d5f9",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "2d802ddc-f92d-4449-8040-9a1662d6583e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27eee0d1-e773-4961-95ec-5c4ae51f540d",
        "cursor": {
          "ref": "832fa5f2-7636-4416-8afd-7e4161e87135",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "273c18bc-647c-4144-aabd-fb7ac5447d71"
        },
        "item": {
          "id": "27eee0d1-e773-4961-95ec-5c4ae51f540d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4729abba-b272-4b16-8765-f0f0789abcf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f5be8c4-4474-49cb-86e0-fe820c00776e",
        "cursor": {
          "ref": "7e90d077-66b6-439d-9a33-35e8bea083cc",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "12f0e14d-28b5-4571-a019-090d4d82b515"
        },
        "item": {
          "id": "5f5be8c4-4474-49cb-86e0-fe820c00776e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "23097ac4-84ff-41a2-93d9-ad1d028b276f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc25b60-7aa6-4699-92c2-e4d588e717e2",
        "cursor": {
          "ref": "a20e47bb-1f9a-478a-ad80-c7e3a0055f0e",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "38dea20c-8e25-4ed9-a80f-1e910b67cbed"
        },
        "item": {
          "id": "7dc25b60-7aa6-4699-92c2-e4d588e717e2",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "429863c1-f3cf-436a-bbfd-3b69fd5f6a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc92720a-1c16-4b94-83c3-95eccc6144d7",
        "cursor": {
          "ref": "173c6b21-8b2e-4ae4-911d-a270766e6400",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b1cc786e-b695-4b4b-93aa-87bf08d0b73c"
        },
        "item": {
          "id": "bc92720a-1c16-4b94-83c3-95eccc6144d7",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5118dab8-88a9-4f35-9354-c3d43558f28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08db7571-b33d-4ddd-88c3-e5644fab7929",
        "cursor": {
          "ref": "603b92f5-5ae0-4a0d-b126-35a7d70d8512",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6195697a-7080-4d3d-83dd-50c1022a5612"
        },
        "item": {
          "id": "08db7571-b33d-4ddd-88c3-e5644fab7929",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "62bd208a-51ee-4b64-a792-621d97fcae9d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf66f184-259e-410c-acf9-cf5e4d619c44",
        "cursor": {
          "ref": "d6743b28-a9fa-4173-8308-76441e831048",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "cdc6be2a-4897-49f3-98e4-e24ce0fa72e4"
        },
        "item": {
          "id": "cf66f184-259e-410c-acf9-cf5e4d619c44",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "564cea22-42c8-4929-887e-9d9ed82f6ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "555e2ad6-7164-4352-a910-3f5eb4145845",
        "cursor": {
          "ref": "5a219e25-102a-49a0-ab13-c9ac8aa990e0",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "16c49a33-419c-4d56-9371-6cb3b6f8fb95"
        },
        "item": {
          "id": "555e2ad6-7164-4352-a910-3f5eb4145845",
          "name": "credentials_issue"
        },
        "response": {
          "id": "db5a9559-083a-4aad-a5b8-8c32205970bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "868748af-f161-492b-83af-d242548e5336",
        "cursor": {
          "ref": "e2a15a9f-e415-4245-8b89-6f14e46d5da7",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9400136b-ce59-4784-a6a2-07fe9ec7a397"
        },
        "item": {
          "id": "868748af-f161-492b-83af-d242548e5336",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f0040974-66b8-4db2-8087-c651c9eb300b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "0d29a13a-de6d-4593-8b9a-c79f1ca63c27",
        "cursor": {
          "ref": "797e5a60-99c2-4f35-9de3-9a9f5faea8ce",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "cd582acb-b0fb-40b6-bd62-65d20e30f41c"
        },
        "item": {
          "id": "0d29a13a-de6d-4593-8b9a-c79f1ca63c27",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "206c2306-cb37-4c44-b1da-2ac04c0b3685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "15516ba9-137a-46a2-8c8c-2c462398c893",
        "cursor": {
          "ref": "52c9d78c-833c-465f-a9f9-837a23827e39",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "bcaea9a1-0ef5-400d-9617-8b2ba7c050b1"
        },
        "item": {
          "id": "15516ba9-137a-46a2-8c8c-2c462398c893",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8b2c1fd5-9130-496c-a314-d2da4d2aeee2",
          "status": "Created",
          "code": 201,
          "responseTime": 9470,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8448fa2-592e-4453-870a-2833dc4634a6",
        "cursor": {
          "ref": "83b76fa3-abf0-4c34-85eb-39e2512144c9",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "74aff369-8440-4d71-a108-65fca6fa9bae"
        },
        "item": {
          "id": "c8448fa2-592e-4453-870a-2833dc4634a6",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e2603899-de9a-4d2d-94fb-5012fd153e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "1a280964-441a-4664-a2ea-fb98b53a7d2a",
        "cursor": {
          "ref": "bb7ead09-a54b-48c3-94c8-731db0841aba",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f9369d59-24c9-4efd-9205-2a0740f23fc0"
        },
        "item": {
          "id": "1a280964-441a-4664-a2ea-fb98b53a7d2a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "62cda444-b827-4e99-976f-178a636f4162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "ec5bea91-d757-4f5e-a036-6c6635afb4b9",
        "cursor": {
          "ref": "a78e4214-fe8b-44e1-9886-c520593bf221",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a580e5b6-2e8a-4421-88ee-c897efab92a0"
        },
        "item": {
          "id": "ec5bea91-d757-4f5e-a036-6c6635afb4b9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "87d19148-1d7f-4514-aa06-3c5129781f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f75257-618d-4db1-accb-a3852499dc7f",
        "cursor": {
          "ref": "2ffb7350-ec42-49b1-a3ff-fc7eed5a6729",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "12bdea18-a4d4-4586-91b5-0fcf96b8b10c"
        },
        "item": {
          "id": "67f75257-618d-4db1-accb-a3852499dc7f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d04c132c-1a95-4b2a-aead-d9538dc1a604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0d8e66-3561-41d3-9611-d5100399f344",
        "cursor": {
          "ref": "b9175baa-5472-4471-9152-2992a9af31c7",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ea9fdea9-cf97-4d35-ae55-98732a6a27e5"
        },
        "item": {
          "id": "7f0d8e66-3561-41d3-9611-d5100399f344",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8fb70da5-cfc1-4eb0-a113-67b1c7c2bb4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ae1870-8c16-4518-b449-ef0b7d3bdbf3",
        "cursor": {
          "ref": "56c4b4c9-08e0-4ac3-9803-516bad18e91c",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7d495f4b-3378-403e-8c37-bb0a964d450b"
        },
        "item": {
          "id": "27ae1870-8c16-4518-b449-ef0b7d3bdbf3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d5218626-31eb-4fe6-ba5e-645e9c409b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a30916a-d338-4525-8bff-2135aa8181e8",
        "cursor": {
          "ref": "c7496990-20b9-4883-8180-0114834bb84c",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "aa7eb5be-6c55-4867-986a-32624bb5b0d7"
        },
        "item": {
          "id": "6a30916a-d338-4525-8bff-2135aa8181e8",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d4f14cd2-f797-45ad-9b63-2dc42622836d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d79561-cd97-4518-942b-2246658e2b3a",
        "cursor": {
          "ref": "f07260d0-cf56-4150-a9dc-6041a0aaff15",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "7712e279-dd60-4714-86cc-07bfcde0acf1"
        },
        "item": {
          "id": "71d79561-cd97-4518-942b-2246658e2b3a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4541ecb4-352a-47f8-a911-20eaeefc1d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd2c496-f0ea-417c-a13a-75f03b98c087",
        "cursor": {
          "ref": "1ea469cd-4a00-4d27-8464-7b880bb7bc8e",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "609f96e6-fc46-4c28-8111-fc58c461fdb5"
        },
        "item": {
          "id": "dcd2c496-f0ea-417c-a13a-75f03b98c087",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "840f15b6-3cc7-499c-944a-3f786c41bd83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a0329a-cf0f-4088-a39b-579068feadc9",
        "cursor": {
          "ref": "8c30900a-907d-4890-8410-d4f03eee45b6",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "0aee8768-27b3-47ff-a86b-6ddaa963dcc2"
        },
        "item": {
          "id": "34a0329a-cf0f-4088-a39b-579068feadc9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4b33fff2-adcd-4c11-8482-45ecd7937f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa26eb44-818d-48c3-a61b-34b1dc7e64e8",
        "cursor": {
          "ref": "94d47aef-ddeb-4e8b-a9ff-cd798aa58d4b",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "578c6afe-c276-40ac-97ef-4f60f58af510"
        },
        "item": {
          "id": "aa26eb44-818d-48c3-a61b-34b1dc7e64e8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "cf663cfe-6ee6-457b-9e33-c97195669095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a360d889-f855-41bc-a095-4ae2b5e4b75b",
        "cursor": {
          "ref": "efa97f74-9237-4dfc-ac88-d13b6868ba3a",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c8ce0f82-fb5e-46f2-9993-a7eaf33f0934"
        },
        "item": {
          "id": "a360d889-f855-41bc-a095-4ae2b5e4b75b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ec619c03-b90a-4778-b109-5e4b52e7cada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9360dad-9f4c-40fe-be77-c3729f72a913",
        "cursor": {
          "ref": "d4f9a21c-218f-4098-8fad-c7440ce09240",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f71a92d7-b2ce-409b-bea3-9f24a37745e5"
        },
        "item": {
          "id": "a9360dad-9f4c-40fe-be77-c3729f72a913",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "af19ef23-c725-4588-8b3f-41eaea0e63ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "560bba3b-866a-4792-8121-48be08918b38",
        "cursor": {
          "ref": "8892a3a1-6d75-48e4-9370-00335562a090",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "55c0d389-fbf2-4c75-9c10-5515d3fbc710"
        },
        "item": {
          "id": "560bba3b-866a-4792-8121-48be08918b38",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "98111bdd-af91-4327-96fb-3803750c5c54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8639af3-656a-47e8-86ec-a1152ebdf522",
        "cursor": {
          "ref": "471e0153-6416-443c-bf7b-3ea0aa7b72f6",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "53d051b1-d2f1-45b0-9318-ea4b4b9cdff3"
        },
        "item": {
          "id": "e8639af3-656a-47e8-86ec-a1152ebdf522",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "944c632e-d76d-406f-9a5d-652f41654af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d985667d-8a0d-4734-88fa-42943863ef88",
        "cursor": {
          "ref": "d20a6ca4-3377-43ed-9782-22c907af7f6c",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "afd151b6-4155-4dc5-8b27-c6ab129991e7"
        },
        "item": {
          "id": "d985667d-8a0d-4734-88fa-42943863ef88",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ce26c778-a2e9-42e2-a291-703d10774da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8cec718-a676-4803-947d-23d5bf85788c",
        "cursor": {
          "ref": "6725d009-3cee-4bca-ba9f-11438a90a2f7",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "399ab829-2231-45c9-8739-ca53f86078fc"
        },
        "item": {
          "id": "a8cec718-a676-4803-947d-23d5bf85788c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "54ff3749-3d69-48cd-a1bd-191e5d7661b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9045f0-0088-4de7-9fb6-0f80b418c81a",
        "cursor": {
          "ref": "d50c132b-e048-4eac-be9b-17947eb86171",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "aae7f740-680a-4cc1-a668-0b977f36bbc8"
        },
        "item": {
          "id": "6a9045f0-0088-4de7-9fb6-0f80b418c81a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e1b10f27-c6c6-4501-8c81-58d996e367a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66fa80a1-616b-49b8-b9d7-d79d481dca94",
        "cursor": {
          "ref": "98576c63-0d2e-4637-a7ee-cddbae618a87",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d4e712e2-fbf2-4108-a905-cf89e3c933d1"
        },
        "item": {
          "id": "66fa80a1-616b-49b8-b9d7-d79d481dca94",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f384a5a9-69f1-4738-8f8a-e2a9f38c8658",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 69,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "d7a3ac11-a344-4afa-9f4a-eb33e36261c4",
        "cursor": {
          "ref": "78787027-e321-4a19-a927-815d1af6398e",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "1c1a3029-72d1-48a5-9b76-61071f823fd6"
        },
        "item": {
          "id": "d7a3ac11-a344-4afa-9f4a-eb33e36261c4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1ca3d6bb-ad35-4fe0-8ea4-339a6f9452f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65edd2b3-74ff-409a-9c40-a09931ff190b",
        "cursor": {
          "ref": "3bbcd3fb-50c9-4b89-b9e8-0f1e80180f0b",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0f915c9b-115d-47d4-a93e-f1d90847c2df"
        },
        "item": {
          "id": "65edd2b3-74ff-409a-9c40-a09931ff190b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8dda6a07-2597-4609-b8a8-19b2f3629c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d77071f3-86bd-49ad-a448-0eb0a72c4864",
        "cursor": {
          "ref": "c5c28d04-5d65-4828-909e-37ef4d7f174e",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "6c4b1d2b-9d84-4231-a79d-9bf700645833"
        },
        "item": {
          "id": "d77071f3-86bd-49ad-a448-0eb0a72c4864",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fd260c28-c87d-4bd4-b787-ee44207b27b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd5b7f8-4fc5-47f0-8464-f3d4097879f8",
        "cursor": {
          "ref": "1175ee88-950b-4e23-8ce1-e9b4e9a5a985",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c8a4fe07-f370-4663-975e-f32d279ca149"
        },
        "item": {
          "id": "1fd5b7f8-4fc5-47f0-8464-f3d4097879f8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "33c55228-6862-4e9a-9c02-c30aa72bf91e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b91d35-12ae-4b68-8bfb-fc828b15240f",
        "cursor": {
          "ref": "98f4020d-1254-4019-b118-77c79b004e64",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c87544b1-5932-42e5-bbcf-23021707ad0c"
        },
        "item": {
          "id": "e1b91d35-12ae-4b68-8bfb-fc828b15240f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "55d2a9c8-94e8-4d1d-b087-efa69bc127d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae0e698-05e0-43c0-834a-86bdd94bad86",
        "cursor": {
          "ref": "4da50122-424f-41ab-a871-76ee512fb505",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "3af0079d-cead-433e-9dde-ed3462cfd795"
        },
        "item": {
          "id": "dae0e698-05e0-43c0-834a-86bdd94bad86",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "22f61f75-b781-4e80-ad67-e36b10863357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5313872-e398-469b-abd0-8a1f4de682af",
        "cursor": {
          "ref": "48e1705b-5a92-44fa-bc90-9121bacedd35",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "116dc2da-b397-4938-8979-bbb7f4b17933"
        },
        "item": {
          "id": "f5313872-e398-469b-abd0-8a1f4de682af",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "272e1276-35af-4454-af4e-358372e8ab5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "702e03be-8e89-43a7-82e0-adf48cac0961",
        "cursor": {
          "ref": "fce6f233-2473-42ef-9417-e6053ca79ba1",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f5f6bbcb-d088-4d20-9d03-684b63aa89e5"
        },
        "item": {
          "id": "702e03be-8e89-43a7-82e0-adf48cac0961",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ca20027b-b687-4f62-bd15-0fb3dc9a04f5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "61de616f-22b4-4609-8fb5-3c0ac3a355c5",
        "cursor": {
          "ref": "42b0b5ee-3bd8-4729-ab32-13b67e87776c",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "2baf8d15-580c-4073-b478-97854737269f"
        },
        "item": {
          "id": "61de616f-22b4-4609-8fb5-3c0ac3a355c5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "799e84a6-5e7d-477d-87e5-48e292fb34aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cfbd768-c843-4d86-a1f8-e1f51a20d247",
        "cursor": {
          "ref": "57ac0ecd-f096-4ad1-8f98-5c037b082128",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ce5187a0-cadd-480e-8068-5afb6d066aea"
        },
        "item": {
          "id": "8cfbd768-c843-4d86-a1f8-e1f51a20d247",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7064fd30-5548-4479-bbf0-4c145a8f92a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb26b527-b942-4aa7-83c0-2807e3a9b97c",
        "cursor": {
          "ref": "8c76cd99-5042-4ec2-8ec3-6d39d1b04155",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "69c4e0d3-dd98-4806-ad3e-702c36b1f6fd"
        },
        "item": {
          "id": "bb26b527-b942-4aa7-83c0-2807e3a9b97c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a390bc7a-c5be-45b9-be6e-4ef93e5e4740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "868e1ed4-4ef7-43df-bd4d-3d0d0d8c3561",
        "cursor": {
          "ref": "cae3e38e-146a-4425-95e9-3d6420e98d05",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "50d10f3d-0525-45bf-a4e1-a67d4136d866"
        },
        "item": {
          "id": "868e1ed4-4ef7-43df-bd4d-3d0d0d8c3561",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d2900cff-9d02-40c1-8744-46906f37ffd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909181f9-e947-429b-8afa-95bdd9604aa2",
        "cursor": {
          "ref": "c7176a91-4c58-44c5-9024-c3e254671b61",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b531c3ac-1c79-42cc-9f2a-cfccfbe5528a"
        },
        "item": {
          "id": "909181f9-e947-429b-8afa-95bdd9604aa2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "08f6c1ac-64d5-454f-8c0e-7a03aa53d288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d05734-6fff-49fc-a155-f37d5078bc84",
        "cursor": {
          "ref": "30f56593-c13a-4f11-abe7-5b7b71771c4f",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "971162b1-0988-432a-93ca-032f4123aa31"
        },
        "item": {
          "id": "22d05734-6fff-49fc-a155-f37d5078bc84",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "220b61ab-b9f7-4cce-9bdb-19537be404f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2527322c-84be-42a3-8323-c7ba935be530",
        "cursor": {
          "ref": "975cb81e-6b4f-4570-92c0-8bd08e2fa389",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "40ec61a7-a8e7-4818-b569-0a48d6160e2e"
        },
        "item": {
          "id": "2527322c-84be-42a3-8323-c7ba935be530",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "9c6cac06-107e-476d-a518-149ed3439540",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 110,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "20449cda-5e8a-4ec3-9af3-1307346327f6",
        "cursor": {
          "ref": "87848a3e-519e-4c99-a016-c8447370f415",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ef05393e-a0ac-4c9e-97cd-130f9226a6f2"
        },
        "item": {
          "id": "20449cda-5e8a-4ec3-9af3-1307346327f6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2b7738f8-a068-45ba-a9f4-f7923d7c923f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09be211d-7736-4521-9b19-84f716b00470",
        "cursor": {
          "ref": "9939ba6d-6e27-45dd-bf94-d624f205ad55",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a2fdd285-dc02-4478-b86c-00ef47befe71"
        },
        "item": {
          "id": "09be211d-7736-4521-9b19-84f716b00470",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3f7dd61f-5fa3-49a0-98f0-d6b6b1f456aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a00ca317-8233-475a-b4e5-7d3baca5018a",
        "cursor": {
          "ref": "a33d0339-2058-47ae-82d2-ddf300ebe7d0",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "4df8ca1b-13fe-4224-8395-64d1c1a777c7"
        },
        "item": {
          "id": "a00ca317-8233-475a-b4e5-7d3baca5018a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8e97e3ca-6625-4b9d-bb71-78839ff81322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1586770c-a0c6-4f96-838f-22ce863a375a",
        "cursor": {
          "ref": "3c71a8e6-ac96-43d8-ac13-2f93ff13c6e6",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "165f87d6-a83d-4177-b1e9-d881261ba616"
        },
        "item": {
          "id": "1586770c-a0c6-4f96-838f-22ce863a375a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "676acda5-0ee5-46da-b748-4a381193371f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d990328-4048-44e9-8c01-63ccc93eed2e",
        "cursor": {
          "ref": "fc604cbd-26a2-4e30-be6d-ed6a18d013b0",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f6a2110a-7b45-4984-b6a6-b41a4c1df39c"
        },
        "item": {
          "id": "4d990328-4048-44e9-8c01-63ccc93eed2e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9aa37af1-737d-42c7-9aa8-185e363b5af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf522c36-f021-4592-9552-1184273c503d",
        "cursor": {
          "ref": "2458eda9-3152-4094-86bb-9207a7b48b23",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0b9723b2-5647-478f-86f8-e3f065dac4c6"
        },
        "item": {
          "id": "cf522c36-f021-4592-9552-1184273c503d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "76b014a9-7a0a-4866-981c-5b878785a699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05687ecb-457d-4fa1-813e-483097d5dc14",
        "cursor": {
          "ref": "2cb51537-536f-4a75-8ea8-33a1596a5229",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f378d30e-ce24-49b8-bf75-344351f5df5f"
        },
        "item": {
          "id": "05687ecb-457d-4fa1-813e-483097d5dc14",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5f46d836-5d01-4eb6-95e7-4a37de359594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec99b3f-0dc7-45ec-a083-dbae4bd6534a",
        "cursor": {
          "ref": "d30f9521-baf3-46fb-bd72-9cd31a46861f",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2df166b7-1faa-4897-9757-316f2f0a6cfc"
        },
        "item": {
          "id": "3ec99b3f-0dc7-45ec-a083-dbae4bd6534a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "78ca73a6-cc93-4d4e-87ae-849bf248e9d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d055376-5de0-4b2b-a596-bd5bc05b2c2f",
        "cursor": {
          "ref": "b780f6a2-befa-4656-9060-0271eb576354",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a05da436-99ef-414f-b634-5a44b07f378e"
        },
        "item": {
          "id": "4d055376-5de0-4b2b-a596-bd5bc05b2c2f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "079e2f3a-c9db-4406-ad21-d10d12240369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "901f318b-2ed8-4fe3-b9a0-2da86fcce9d9",
        "cursor": {
          "ref": "b30e4a93-4c3a-424e-8895-10bf6bdb9085",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "89ed61c2-64f2-403a-9cce-51c02e20f465"
        },
        "item": {
          "id": "901f318b-2ed8-4fe3-b9a0-2da86fcce9d9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fbfba18d-a509-4855-95bb-6192b59c3de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a9f57b-da15-4e00-92a6-aa520a286587",
        "cursor": {
          "ref": "8176b159-fcc9-4f4a-86b2-e10574c7ab43",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ae3f4444-0acd-45af-9eb0-c07ab694bb63"
        },
        "item": {
          "id": "66a9f57b-da15-4e00-92a6-aa520a286587",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "332dcd33-c981-4ed2-bab3-a973cf1f757f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e27b27d-0ba3-443e-bf87-cd3980f8d6e2",
        "cursor": {
          "ref": "04b7eef7-83e1-49e2-a9f7-aa5ed71df132",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7c9b5161-ad4b-40e0-9d7e-d4c7700597e2"
        },
        "item": {
          "id": "3e27b27d-0ba3-443e-bf87-cd3980f8d6e2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "932fb0e3-26ee-42d6-8213-95e41c894fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21104e9a-45c0-4e28-a9d6-4a391689a7bb",
        "cursor": {
          "ref": "e4fe3a77-b8fa-4a31-9c7e-13b8afcfc1dd",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e9e8c9dd-75d9-4964-9c4f-74d15dac5f96"
        },
        "item": {
          "id": "21104e9a-45c0-4e28-a9d6-4a391689a7bb",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e1426405-a0bc-4884-8922-cbc9f16e4025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef5dd25-72e0-4334-93a2-865dbf32f203",
        "cursor": {
          "ref": "4bbc22d5-77ab-406a-afdb-4e7f00b91cd7",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "39fd2eb3-22a0-40af-8774-ccc26dc307a2"
        },
        "item": {
          "id": "fef5dd25-72e0-4334-93a2-865dbf32f203",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5fffb4eb-ffe5-498c-b56b-e02617c274fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5421a12f-178c-43bd-8651-355a62934c3e",
        "cursor": {
          "ref": "a7c2a760-6e2f-460c-9ddc-d545ef7994c3",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3386c3a3-d712-4185-b08f-08036d6dffb2"
        },
        "item": {
          "id": "5421a12f-178c-43bd-8651-355a62934c3e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "50878586-2d04-47a7-8722-958c1c4829a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "945d0229-20cb-48b8-9d98-b56eacdcd0f5",
        "cursor": {
          "ref": "1432a754-deca-4f9d-8b31-dac84a091d21",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "7ad499d4-c225-4e5b-8a93-33c82adf93cf"
        },
        "item": {
          "id": "945d0229-20cb-48b8-9d98-b56eacdcd0f5",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "66412853-763e-4d6c-920f-c51c49b1b608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "922d2531-bdce-4487-9769-09d73c7d4e3a",
        "cursor": {
          "ref": "05acbdbd-f2f1-4cd9-8954-522997ccfaf7",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ee2903e9-6630-49d2-b7d9-73a7251eaa57"
        },
        "item": {
          "id": "922d2531-bdce-4487-9769-09d73c7d4e3a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ba1b1f3a-cff3-41f6-b90f-2b748487935f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "100ea515-3b18-4cb0-a1a0-ecd19b367a65",
        "cursor": {
          "ref": "6eac4788-bd07-4655-bbf6-7306b368e7bc",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a163a50a-90a7-499c-af78-630f5550cf86"
        },
        "item": {
          "id": "100ea515-3b18-4cb0-a1a0-ecd19b367a65",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "95dcaf2c-309d-4c5f-b45d-cd1d144e4285",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 90,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "4e4f84b1-dd79-414f-82f5-57897a1e51a0",
        "cursor": {
          "ref": "f3a599e9-949d-4fb1-9e22-1a578f6f1110",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "1ae85e25-4982-4c7c-8a71-eec4d3f53494"
        },
        "item": {
          "id": "4e4f84b1-dd79-414f-82f5-57897a1e51a0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5c977c85-450b-4385-b56c-b4f326685b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddb63f77-f7ee-4cbf-a08d-8572df0cdf7f",
        "cursor": {
          "ref": "cae018f8-7f1e-492f-91f7-595ef60d888f",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b9789a75-7ca7-4cab-996e-177aed5c3674"
        },
        "item": {
          "id": "ddb63f77-f7ee-4cbf-a08d-8572df0cdf7f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ac97a83a-d982-4dc0-8c77-8badcf7379dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48fcdaca-4368-461b-85b9-807827cc01e0",
        "cursor": {
          "ref": "8fda1d04-7b6b-4eee-baae-1d482786e6f6",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "267cbe1f-abb4-48b9-8883-f5e003043a33"
        },
        "item": {
          "id": "48fcdaca-4368-461b-85b9-807827cc01e0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "334b8ed2-7cad-480d-a21c-e7bbc19462a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f49aa2-158b-4b13-9a69-31127f1d8f6c",
        "cursor": {
          "ref": "3a78756d-b84b-4796-bc4b-c715c16740f7",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "70826678-c105-44d8-a14b-af04e3d4733d"
        },
        "item": {
          "id": "e7f49aa2-158b-4b13-9a69-31127f1d8f6c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cc27ade1-14c9-46d6-9f82-a7d1e6679520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a5c8a4-5a7e-4f57-abbb-5d661e1815dd",
        "cursor": {
          "ref": "e8499bb3-a53f-41ab-88f7-1f0c5ad14f32",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "736ee7cf-ba7d-406a-8476-6cb10ef60667"
        },
        "item": {
          "id": "b4a5c8a4-5a7e-4f57-abbb-5d661e1815dd",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "11659108-0d0e-4e4e-9a13-1e9d6a156b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f40a03-58f2-409f-8fd0-9b8e4975e33b",
        "cursor": {
          "ref": "a1c06220-9746-4f88-9392-e47b15057eb3",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "0576f08f-8c17-496a-803e-9a9127207cd1"
        },
        "item": {
          "id": "64f40a03-58f2-409f-8fd0-9b8e4975e33b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "212c5e49-0424-4193-9e71-a26e01e655dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce95248-8601-4374-9b37-fb6830595324",
        "cursor": {
          "ref": "ea23bbe6-8e93-4b4a-ae11-5159470bfba7",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "572f9c99-70ac-4701-9efb-cf7e8465238d"
        },
        "item": {
          "id": "8ce95248-8601-4374-9b37-fb6830595324",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9c0b6157-6da8-4483-b89a-033f7e957fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b924dea1-ae92-4075-8a32-01317117a16a",
        "cursor": {
          "ref": "b6fe4421-cada-49f9-b0a0-1530e36cc6c4",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "75837b40-9c2d-47da-a156-a39d2763eb7d"
        },
        "item": {
          "id": "b924dea1-ae92-4075-8a32-01317117a16a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "bc5e9581-8ff6-4031-8bae-4b641a73b420",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 73,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "3965ede2-73dc-405b-87ad-6ffa3552d44c",
        "cursor": {
          "ref": "e46d9649-b7bc-4c87-bcb7-b641c70edf87",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a122b6f2-edc2-49c8-88ed-fc433d49e79a"
        },
        "item": {
          "id": "3965ede2-73dc-405b-87ad-6ffa3552d44c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1976f2b7-da2c-4c61-a0ac-a2fa2d040f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59546ea7-4312-4b52-8759-725ae1189ca7",
        "cursor": {
          "ref": "92c3746d-db82-46c5-b0cf-daad554c634d",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "54c976da-cf95-4544-8a20-f510352338da"
        },
        "item": {
          "id": "59546ea7-4312-4b52-8759-725ae1189ca7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "85c151ea-28a8-4227-be43-e22ffba1d48b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ccd5b62-abbc-401d-a8db-fbfc8ec69e96",
        "cursor": {
          "ref": "a3630bbb-8259-48ec-aa15-7bb9c522cb9e",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "66c9682d-a580-439a-9fcc-a36a2c7c20c9"
        },
        "item": {
          "id": "9ccd5b62-abbc-401d-a8db-fbfc8ec69e96",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "bfb0bd8f-d0fa-4784-8aa6-a744618f7133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff89f04-e2ad-41e2-803a-6b3774079c1e",
        "cursor": {
          "ref": "69706576-dad4-4846-8ea4-d665efba5a99",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "bf1a08f1-74be-4e94-8b6d-a27214407304"
        },
        "item": {
          "id": "0ff89f04-e2ad-41e2-803a-6b3774079c1e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3c8097ba-5242-4157-a4ec-79f79145375b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 169,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2843989e-883a-4705-97e0-cecfb8269e99",
        "cursor": {
          "ref": "2361a2df-3b54-4a86-830e-4c0713e7b092",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "7c55ee87-cd98-4cb8-b5d0-5e7a6bb575c7"
        },
        "item": {
          "id": "2843989e-883a-4705-97e0-cecfb8269e99",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4ca0d954-9983-4b57-9303-ef6bb3827c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125262ed-1653-48f8-a42d-06307c492b50",
        "cursor": {
          "ref": "1c256841-342e-4102-9c8c-8e225c262183",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "2ca98529-8368-4c3f-b1da-9a5c9e4a315f"
        },
        "item": {
          "id": "125262ed-1653-48f8-a42d-06307c492b50",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9faba04b-2fe6-4d67-bb42-8a5b0dd6ee81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8816ee34-451e-4adf-b5c3-096195988dd4",
        "cursor": {
          "ref": "2e729968-c26b-4f5d-97d4-edab4b1d8ffe",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "70609a9e-6095-4e76-a9e6-30889326b86c"
        },
        "item": {
          "id": "8816ee34-451e-4adf-b5c3-096195988dd4",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "9a7f54ed-fee5-4fea-b4d3-bb991ade4a77",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 72,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "8a99d3a0-0fab-4368-aa59-b1b7e2812b65",
        "cursor": {
          "ref": "3d8fa72d-c290-4ff5-bfea-33d73cd66164",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a2161c58-7fe8-4dc1-a7de-d45d775b7997"
        },
        "item": {
          "id": "8a99d3a0-0fab-4368-aa59-b1b7e2812b65",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "11a11fb8-508a-4562-99fa-1f47ee067818",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 86,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "a134e432-ff90-42a0-8723-d86db2a1834b",
        "cursor": {
          "ref": "e768c2b7-a410-473a-8348-7c2232a7834b",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "53cbad2f-d892-496d-8b6e-542fc2dd71e8"
        },
        "item": {
          "id": "a134e432-ff90-42a0-8723-d86db2a1834b",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "4c950a23-320c-4d1c-82ff-8ca10df0946a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 80,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "0834de38-8b71-41b0-862d-a08f9e9e3275",
        "cursor": {
          "ref": "4a07e510-37c8-400f-b3e1-8e1880f10f93",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "daff3b70-ed19-450b-a558-ac7c90033eb3"
        },
        "item": {
          "id": "0834de38-8b71-41b0-862d-a08f9e9e3275",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c68807be-e161-4b66-8dcc-51c1082c26d3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "d97a9270-584b-4529-a52a-d784bd6d824e",
        "cursor": {
          "ref": "8e580022-9016-4f3b-8229-d4f071e4e9ac",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "136ab11f-0072-4d35-9fd5-5c363899f74b"
        },
        "item": {
          "id": "d97a9270-584b-4529-a52a-d784bd6d824e",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "994a51dc-625e-4cab-a825-685185a4e535",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 69,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "4a1ec01e-7e0f-452e-bbdc-bf6ba81226ee",
        "cursor": {
          "ref": "6ebca544-9750-4459-8ac1-e4952fcbd930",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "73ac476d-bfe2-4f04-9f28-3b6ba371c95e"
        },
        "item": {
          "id": "4a1ec01e-7e0f-452e-bbdc-bf6ba81226ee",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "2a52d7e1-5874-4425-b8b6-30f48ec9c260",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 70,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "d61f64ad-9b76-4e8a-8796-459383767167",
        "cursor": {
          "ref": "70c14e16-57f9-40e5-866e-206fcc5a9451",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "366f4394-9d86-41dd-8bde-6eb313d671cc"
        },
        "item": {
          "id": "d61f64ad-9b76-4e8a-8796-459383767167",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "668999c0-b3d7-4fc0-99a5-08c5da26a47b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff5ce18-ac75-442f-8bb6-6915cf0bc783",
        "cursor": {
          "ref": "a0e59328-4549-4ffe-b531-3c42dde07f72",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "24fb7e3b-57d8-4d9c-93b1-543888b1b389"
        },
        "item": {
          "id": "aff5ce18-ac75-442f-8bb6-6915cf0bc783",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f0766cc7-f295-41ea-9044-71e90b4727a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0045ed09-7884-4848-8416-a006ed29239d",
        "cursor": {
          "ref": "6549e220-dc0c-4332-ae21-ac75a61322df",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3038f398-9ca9-4302-aa59-382e5daf807f"
        },
        "item": {
          "id": "0045ed09-7884-4848-8416-a006ed29239d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "0b20a890-42fb-482a-b29c-5cb7534cd678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ad9149-612e-48f3-aee7-99be0cd576ae",
        "cursor": {
          "ref": "b5fe50af-7b14-4f1b-a396-d9d4986050a8",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "858c28c9-ffa3-42fc-ae8e-8ee6bb8f0edf"
        },
        "item": {
          "id": "29ad9149-612e-48f3-aee7-99be0cd576ae",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "aa0ffc2c-5b3b-45f6-9b4e-8e75a79ec270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01045730-2438-4235-80bd-fd0f6173e878",
        "cursor": {
          "ref": "dd11780e-d2eb-4612-9a91-35ad3b3314b9",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "58ab5018-72ce-44a0-a50c-3305fb01ca13"
        },
        "item": {
          "id": "01045730-2438-4235-80bd-fd0f6173e878",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "eed91203-2271-4a40-a3d8-ee62bd527998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f46444-05b9-436a-9ac5-c9d3d9bacd94",
        "cursor": {
          "ref": "20603d89-b133-4c46-8530-b398211de301",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "318a5994-1da4-4267-b1e2-9daa9d6cf987"
        },
        "item": {
          "id": "96f46444-05b9-436a-9ac5-c9d3d9bacd94",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "17bec2a3-b084-45a0-848a-d0bc5873a5e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a45db3d-a980-4d7f-9fed-0df5258654b7",
        "cursor": {
          "ref": "1d38081b-6958-42f6-bf25-d6bb5197ceb2",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "0742ff6c-8591-4d3b-9db0-3e65dea30ceb"
        },
        "item": {
          "id": "1a45db3d-a980-4d7f-9fed-0df5258654b7",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "2b93e624-194e-4472-b31b-45e113125ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69f8c6b-f8fb-4dc6-9153-c333041b8a71",
        "cursor": {
          "ref": "04cc10bd-43e9-4458-adbc-8ec9f1800d87",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0f503681-ac5b-4470-8041-fd052fac4f45"
        },
        "item": {
          "id": "f69f8c6b-f8fb-4dc6-9153-c333041b8a71",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "16618c52-bd2f-4e76-b684-7131ac00643d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae46ba7-8e0a-4fd2-b86d-64d1f102814b",
        "cursor": {
          "ref": "b689c137-8f02-4d57-a683-c058f9fe4145",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "eb0ca4ac-be1b-4c8d-97b5-3075f109ee72"
        },
        "item": {
          "id": "9ae46ba7-8e0a-4fd2-b86d-64d1f102814b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ba0619d0-9a0a-4e1e-96d6-7a3ffd468254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5484825d-a7b9-4854-b0ef-af8a0769df92",
        "cursor": {
          "ref": "5b1c2c99-811b-4d05-8529-322b37e2d8e1",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c62572de-ba78-41f3-84c9-f1fdc8840e0e"
        },
        "item": {
          "id": "5484825d-a7b9-4854-b0ef-af8a0769df92",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8cd69689-77c2-447f-9b60-48fbce5f01c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05484bf5-a554-486a-a77d-5d4368a2c585",
        "cursor": {
          "ref": "4fa2e3ed-cf73-4953-b73e-05c885398488",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4b4f75dd-ed9b-4133-8060-477033a7d1c6"
        },
        "item": {
          "id": "05484bf5-a554-486a-a77d-5d4368a2c585",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "0aef5f6f-505c-4c7a-961b-e1b70cc50aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "110e19d3-653f-4513-a36b-19e73e9de35e",
        "cursor": {
          "ref": "362113a7-da44-4e41-a074-946e0b51597c",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "413d91eb-359a-4e6d-b788-bc7693183b9b"
        },
        "item": {
          "id": "110e19d3-653f-4513-a36b-19e73e9de35e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8a12330b-11c0-4274-ade0-9c3db811690f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e71788ee-b4c8-44ab-95b6-5b8d51e3e43f",
        "cursor": {
          "ref": "44e79c4d-1c47-4916-9588-f128806b87d9",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "eb52a4ac-1efb-4498-a366-2ddd65467cf2"
        },
        "item": {
          "id": "e71788ee-b4c8-44ab-95b6-5b8d51e3e43f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "9d4b5d6c-0969-462b-aed9-afa45d3bbdce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ecc525-afb8-4cf9-acb9-51019cf6c79e",
        "cursor": {
          "ref": "94cc2216-3533-49b1-9de5-8f32194e041e",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "33e23bb0-4b79-4da1-8937-5936ed688006"
        },
        "item": {
          "id": "34ecc525-afb8-4cf9-acb9-51019cf6c79e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "8f3c3654-de41-4d26-9fc8-9c622f6fe620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bcd2541-1e4a-465a-ad83-44d314fdc81f",
        "cursor": {
          "ref": "cdde7399-34ba-4a12-b1ef-c7451f23c6e3",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "29e0f28e-ee5c-4d62-9dcd-96ef61386564"
        },
        "item": {
          "id": "7bcd2541-1e4a-465a-ad83-44d314fdc81f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "2f9f0882-7888-4b91-8137-a8b46e0089b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6464f22d-680f-421f-9999-b5177c0ce633",
        "cursor": {
          "ref": "e6103ce5-b382-408e-8fd9-55bd77bfeed1",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "6cf80304-b9a4-444c-99e6-1fffe859c5e1"
        },
        "item": {
          "id": "6464f22d-680f-421f-9999-b5177c0ce633",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "5e38064f-4d2a-498a-8a21-f9cb76ac5998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "669964f9-ceb2-4cec-baf4-e993ddf5d6be",
        "cursor": {
          "ref": "95872d41-b9b4-4ec5-8ed8-115afca577f3",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "bed1d2b5-325a-4219-b9cd-55de5bc734a4"
        },
        "item": {
          "id": "669964f9-ceb2-4cec-baf4-e993ddf5d6be",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "262ef79d-5a17-442a-b09a-9d1c7429e4d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be0c52b-495b-4f6e-9527-c99fdd7dd64c",
        "cursor": {
          "ref": "1cdcd63f-d7a4-4fc2-83a8-58d1214d2bae",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "bc28e6b8-a863-479c-bfa9-de03ab5868d3"
        },
        "item": {
          "id": "7be0c52b-495b-4f6e-9527-c99fdd7dd64c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "4d5cf15d-6072-476b-96c8-987c5950c19e",
          "status": "OK",
          "code": 200,
          "responseTime": 96,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "2c07d7b1-dc3b-414e-af1a-1eeb6d4023ac",
        "cursor": {
          "ref": "225f11b3-12b6-434d-bcae-daa8e3331796",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "99aa884f-7d81-430a-8198-4575612b0f30"
        },
        "item": {
          "id": "2c07d7b1-dc3b-414e-af1a-1eeb6d4023ac",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "7fbeb2a9-bd73-4110-82a4-e47822fa9f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd08b43-0531-42ef-9fcc-7acfd5679255",
        "cursor": {
          "ref": "4cd18612-abd9-46bf-927b-1dc5df440abd",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "2784480c-4374-4d08-b94b-18ac2d83d4b0"
        },
        "item": {
          "id": "7dd08b43-0531-42ef-9fcc-7acfd5679255",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "709de261-9388-47b0-b4c7-0a6150e332f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6867f703-dbbd-4361-a419-358e11ff7f91",
        "cursor": {
          "ref": "d3a7c8bf-27df-4db4-a311-176f821f8bcf",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "cd34a85d-7dcf-4aab-9da1-c5ad80b0ea5f"
        },
        "item": {
          "id": "6867f703-dbbd-4361-a419-358e11ff7f91",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ead50fb9-4e5e-4ba8-b657-b7d525b05e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cc65613-c5de-46fb-8c13-d201f1911bc1",
        "cursor": {
          "ref": "9ff76342-a6b7-44ee-8df6-3cfa1249a844",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "516cd5c9-08ef-463f-995d-a32e52b74cb1"
        },
        "item": {
          "id": "3cc65613-c5de-46fb-8c13-d201f1911bc1",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d8090a1b-29bf-47b0-8762-82a18367d61b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff3d4f4d-f915-417a-bdca-da1a0fecb439",
        "cursor": {
          "ref": "641db566-368f-45a5-ac07-6212f29bd7f6",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5c5831ae-a623-47ca-9132-6b25b3207926"
        },
        "item": {
          "id": "ff3d4f4d-f915-417a-bdca-da1a0fecb439",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "44bc805a-9766-43ba-a3b8-d2a444340f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa42ae7e-167e-4f0c-9c33-3591c1010d4a",
        "cursor": {
          "ref": "ded170ff-521a-459b-8c80-39dd97754482",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c698baa8-c69f-4e85-bd68-acdebd2f1a7b"
        },
        "item": {
          "id": "fa42ae7e-167e-4f0c-9c33-3591c1010d4a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e9b6c71b-7696-435d-9b60-853cf758eadb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30ba0b5-99b0-4b67-adc2-9182632ade37",
        "cursor": {
          "ref": "52c6a26a-2bb4-41ef-abee-b950a39289e0",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "56c98806-e891-4b70-a54b-3b0c10c839aa"
        },
        "item": {
          "id": "b30ba0b5-99b0-4b67-adc2-9182632ade37",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c33503d3-fbe2-4f79-a25c-d63a049811c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53423c9f-5889-412a-b4a9-20573beb907d",
        "cursor": {
          "ref": "1f156b95-69a8-4558-a1e3-80e6cadb0c8b",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ee949d78-abe4-4d82-81b3-d6e595bc19b9"
        },
        "item": {
          "id": "53423c9f-5889-412a-b4a9-20573beb907d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "93b09f69-6dc6-48fd-b26d-4b9dbed66d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8610bd-669f-4a26-a364-a0dccbc3dcb6",
        "cursor": {
          "ref": "606d8903-309f-4a8c-8efd-a27b26857b5d",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "92b1da1a-2c98-41fe-a4d5-56a38446b10f"
        },
        "item": {
          "id": "7d8610bd-669f-4a26-a364-a0dccbc3dcb6",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8f5dfb53-a27b-41bb-8107-77c836609d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdbf2da5-3f36-4bb3-a5b0-4fa732ddeb40",
        "cursor": {
          "ref": "662d9585-fe71-47c9-a5aa-9e2178bbb7a9",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "66d00f0f-70e7-4d4c-9791-06bcee40a61c"
        },
        "item": {
          "id": "fdbf2da5-3f36-4bb3-a5b0-4fa732ddeb40",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "05c4703a-1b83-44d8-aa85-55cf575739a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "695597b2-0db3-44ab-9390-83c66539b8dd",
        "cursor": {
          "ref": "54666789-44ef-4c0d-b913-d376ebd216e5",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8eb4fd0b-364c-4463-9df5-d3bc440cad4b"
        },
        "item": {
          "id": "695597b2-0db3-44ab-9390-83c66539b8dd",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b0827a59-87a2-4307-9982-e1b76c436279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5bd940-18ef-4793-86f0-7438a7cd60c8",
        "cursor": {
          "ref": "e2089469-8223-48e8-9ac9-8b5ef90565f9",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "87db4c33-03ed-41e8-b1ac-0a1d5f0d59fa"
        },
        "item": {
          "id": "ea5bd940-18ef-4793-86f0-7438a7cd60c8",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "17885810-8273-4ca3-8737-e47d07fc322e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1cb77e-1811-4e78-96d4-fc550f3ea755",
        "cursor": {
          "ref": "a4057767-0f2c-48f3-a9fb-2dae988fdc2a",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a8e506a3-c105-4a81-9887-9028f8d5eee8"
        },
        "item": {
          "id": "1b1cb77e-1811-4e78-96d4-fc550f3ea755",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "db3e7fc6-5d6c-4da2-879a-11eb259a9936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74587ea0-651d-42cb-baa0-07d06c28cfb7",
        "cursor": {
          "ref": "c2ef19f2-d798-4a99-918d-edaf0ffaf48c",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "da54fd98-c367-4aa7-96bf-30b319822427"
        },
        "item": {
          "id": "74587ea0-651d-42cb-baa0-07d06c28cfb7",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "aec55526-71f2-443d-a444-eaad9730af4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa0d394-18aa-4d29-a293-7343cee35663",
        "cursor": {
          "ref": "9093b985-7b73-418c-89a0-a538bad939c4",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "4ef9b73d-f435-44eb-9b6e-00030dba2af4"
        },
        "item": {
          "id": "eaa0d394-18aa-4d29-a293-7343cee35663",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ad0d130e-b69d-443a-8c8b-fc1f5294fc8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6864d101-499b-450b-8926-a6fb1d18b41a",
        "cursor": {
          "ref": "3fb877e0-e8ef-43fc-a23d-4dcec4afb8e2",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e0708965-53c8-45fd-be80-e7f43b73eccc"
        },
        "item": {
          "id": "6864d101-499b-450b-8926-a6fb1d18b41a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e38d0539-b915-4b96-a411-14c2614d9779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b7b10e-6202-4ed8-80f6-0faf8926cf8b",
        "cursor": {
          "ref": "4322ec65-8f73-4712-afee-2e83883539c6",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d0b164cc-4ef5-494f-b863-b740064fc063"
        },
        "item": {
          "id": "b4b7b10e-6202-4ed8-80f6-0faf8926cf8b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ce79c63b-4c2b-4b95-9b5c-47c2e4c47ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f84cb5-7bde-416b-9c32-c1b0dbb58300",
        "cursor": {
          "ref": "e49b5be6-a0e0-49d8-987e-8597fd9d8dea",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c1981276-58f2-44b5-bda6-25f7add58949"
        },
        "item": {
          "id": "f7f84cb5-7bde-416b-9c32-c1b0dbb58300",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "86b89b37-c9fd-43e2-b594-d848c77f30f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe7453b-5cca-4d16-aaaa-0144a5ee6df7",
        "cursor": {
          "ref": "cffa9b3c-1f24-4c47-b067-629062c090a7",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a614a9c4-4ced-46b3-b10b-7664f5ae1960"
        },
        "item": {
          "id": "4fe7453b-5cca-4d16-aaaa-0144a5ee6df7",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d4202c7f-812b-4d08-a56e-41bad027c383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef0ebe7d-be3a-45bc-899c-0ce044743af0",
        "cursor": {
          "ref": "a64426db-1dd6-45d9-aba5-95e2529f6e9c",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6bf601a9-7aff-41d6-a53f-2bee746335c1"
        },
        "item": {
          "id": "ef0ebe7d-be3a-45bc-899c-0ce044743af0",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "cf301c42-b356-49a8-94a4-2aa11aefad93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f694858-35f3-4f79-ae50-eee0d614ac2b",
        "cursor": {
          "ref": "e2d815e2-59bb-48c1-b9c0-5b760548ffd4",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "650c6cfd-8734-480c-be96-5f8d18d02639"
        },
        "item": {
          "id": "1f694858-35f3-4f79-ae50-eee0d614ac2b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0e332cd1-2a21-48e8-af85-e47492585db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e88662a0-e92a-4e92-9c89-7851239bce01",
        "cursor": {
          "ref": "615ccf15-2297-489d-8696-11e750e13507",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "abbf605e-1460-4af5-b9f6-6f406500172d"
        },
        "item": {
          "id": "e88662a0-e92a-4e92-9c89-7851239bce01",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1c42af4f-4581-4458-9b19-e897131b1ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f555f6-df51-4471-a84e-a4673f556b23",
        "cursor": {
          "ref": "7f800006-47ef-4c1e-8521-218f78370f10",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "9185957c-c850-4c27-a517-8301cd31196b"
        },
        "item": {
          "id": "83f555f6-df51-4471-a84e-a4673f556b23",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "31cd9cf7-52c6-4caa-8b67-5fe277190a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48198733-7de6-40a6-a727-01b80d3e17a6",
        "cursor": {
          "ref": "725ec60f-a7f3-469e-806b-1f93f99a7148",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "89caae45-cb33-4527-b79f-fd9b566a9969"
        },
        "item": {
          "id": "48198733-7de6-40a6-a727-01b80d3e17a6",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "50b42409-ade5-44a4-a24b-7fdd05312beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b561e3-2d9f-41d7-8a84-11bdd2ab9171",
        "cursor": {
          "ref": "1258172e-5ba1-4292-8697-06a7c70788a2",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3efe700c-45c0-4142-a268-34a8407480a3"
        },
        "item": {
          "id": "d9b561e3-2d9f-41d7-8a84-11bdd2ab9171",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c4cb5fe0-5051-4360-9b7a-6301eb0cfbc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf41571-c008-4e1c-ac7d-c699f4aed798",
        "cursor": {
          "ref": "2e56a88a-e014-4d26-8bfe-da886fe787d2",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "96e5fcb8-04ad-494f-b4f7-00b118d19b41"
        },
        "item": {
          "id": "3cf41571-c008-4e1c-ac7d-c699f4aed798",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e5418e7a-d53c-449d-9b27-3d6be23f2c0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd8fff1-3189-4400-9fd0-e36db0ef6122",
        "cursor": {
          "ref": "cebdbdc1-0110-4a97-acd5-3605d546949d",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "df4c44c1-2184-4a2f-a185-6efb39ec117c"
        },
        "item": {
          "id": "4dd8fff1-3189-4400-9fd0-e36db0ef6122",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e718cbeb-6aea-4089-9e35-be2cb298ab79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb58b67-57f3-440b-85ad-10d3a13e5b19",
        "cursor": {
          "ref": "37bde100-d9fd-4423-a169-a71b3e4544c5",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c6174821-9a1a-4be3-ac38-755d324452ca"
        },
        "item": {
          "id": "2eb58b67-57f3-440b-85ad-10d3a13e5b19",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "4001972a-0ad6-49d8-9c06-7cd5995a5c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86272815-fc34-4203-a642-8eb839910afc",
        "cursor": {
          "ref": "8024ffff-e2f3-480e-803e-89be0a671315",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "620b61ea-80a0-421c-a2a6-ca21e648c182"
        },
        "item": {
          "id": "86272815-fc34-4203-a642-8eb839910afc",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "89b70c6a-f845-4f9a-b0ef-06dbadf777b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690d2084-da76-43a7-9782-d57317433f51",
        "cursor": {
          "ref": "a58e7f60-2a82-4c00-8d61-3bfa60f4fc44",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "88eef35a-38bc-46ea-a76b-0833f7c3f62a"
        },
        "item": {
          "id": "690d2084-da76-43a7-9782-d57317433f51",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b69c808c-f5b8-41f3-82b5-85a0c1b42208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d7d9ada-7dcc-4927-980c-87e946a0ce4d",
        "cursor": {
          "ref": "9a359827-f4bc-418c-a7fd-7228978c64bb",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "957a6542-dd86-4b21-a4b6-4e0614553b6b"
        },
        "item": {
          "id": "3d7d9ada-7dcc-4927-980c-87e946a0ce4d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2a926384-97e0-43a0-90cd-9a0f5cae5de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e12489-d6c4-4e48-8572-48ade84dd4ac",
        "cursor": {
          "ref": "510648da-60e0-4d23-bf2b-c67fbc0d1af6",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "063300f8-714a-4bc1-b0ee-2bbbb1ca51fb"
        },
        "item": {
          "id": "09e12489-d6c4-4e48-8572-48ade84dd4ac",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b33244f5-04fb-4e46-9150-373308b8255f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16e092a-ee96-4a6e-ac52-a80a7d960e35",
        "cursor": {
          "ref": "faa285a3-3346-446a-a569-e0c48a5bbab7",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "50a9518a-ddbe-4645-a49e-7487bb8cd680"
        },
        "item": {
          "id": "d16e092a-ee96-4a6e-ac52-a80a7d960e35",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c76afd18-c549-46ad-b2f4-18659af5a102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f805eb-110b-4147-a157-254babd2ce7a",
        "cursor": {
          "ref": "069a1e71-8ab1-455a-9d65-5a15a9ed2a4e",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "41656d07-7a10-4888-97bc-5dcd31dbd344"
        },
        "item": {
          "id": "74f805eb-110b-4147-a157-254babd2ce7a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3db3f722-ae8e-4f8b-b410-b0a7d546dcec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a07fed1c-e4a3-4e51-8230-3b76c8320f82",
        "cursor": {
          "ref": "0163efbf-5e50-4fd3-b4c2-a6436ba3aa3c",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "0a098c98-0670-47fc-afe5-99f08583b3f0"
        },
        "item": {
          "id": "a07fed1c-e4a3-4e51-8230-3b76c8320f82",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f4b0a5f9-f27d-45c8-9669-21da01693abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cbb9178-4d67-41ca-b5a2-de6fd5526c54",
        "cursor": {
          "ref": "3fb3528c-a04c-4d8f-94c5-3c43f7c73945",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "5e49e617-3541-47fe-b22e-6264abeb7fde"
        },
        "item": {
          "id": "1cbb9178-4d67-41ca-b5a2-de6fd5526c54",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c8e098a9-0fe9-4dfc-b592-01f0ce22b22e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef3e5195-a111-445d-be60-7c92eaac9413",
        "cursor": {
          "ref": "46a7f977-a708-4d16-a778-0420bd1642e9",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2b0c34c6-0d1f-402b-b8b4-811280781c9e"
        },
        "item": {
          "id": "ef3e5195-a111-445d-be60-7c92eaac9413",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a78d3ee9-fb53-43a5-afac-4fd26c0ca7e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f156a02c-d9f6-4cfa-8867-fa4cc915608d",
        "cursor": {
          "ref": "d9a5ace3-c81d-49dd-8bfb-bf9994624682",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "686f649d-0a6e-4ac6-a219-a2e554211007"
        },
        "item": {
          "id": "f156a02c-d9f6-4cfa-8867-fa4cc915608d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "34684a4e-ffe5-4fda-8e27-a99080338a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d40179e4-d5f6-45a5-993e-f432c479f86c",
        "cursor": {
          "ref": "69765af8-770e-45a6-ae2c-571cc6492525",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d1c6c02b-bd59-49d0-96b5-75eda9be55ca"
        },
        "item": {
          "id": "d40179e4-d5f6-45a5-993e-f432c479f86c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "9ea225aa-3a12-4879-9fce-79adcc7a21f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d2a3f46-ccc1-4345-b21c-cc0cca60bcb0",
        "cursor": {
          "ref": "6dbff913-a666-4678-9063-1851ce9dd42a",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "8b83821e-abf6-4c15-a082-394b92ec40e5"
        },
        "item": {
          "id": "0d2a3f46-ccc1-4345-b21c-cc0cca60bcb0",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5dac0179-7517-4419-8700-b2cb195366b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed77de5-e093-45c6-8f3d-871a5716726f",
        "cursor": {
          "ref": "6252d941-1026-4cfe-8ff5-0fd69db8d855",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "3561fbeb-37b2-446a-aa40-6e248a15b249"
        },
        "item": {
          "id": "3ed77de5-e093-45c6-8f3d-871a5716726f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "cbd22c2e-e0ad-4468-8ca4-6bb0a251907c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e04ab15-1496-43e5-a5ae-92e605932062",
        "cursor": {
          "ref": "4c0ed963-8c9f-418e-aba2-e4000e626ee9",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "21f98a59-0524-4f86-96d9-a14d704fcc29"
        },
        "item": {
          "id": "3e04ab15-1496-43e5-a5ae-92e605932062",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "245f2899-0f1f-4cb3-abb8-734247454e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6107ff4-50be-4d1d-bfe2-e722dceb9ab2",
        "cursor": {
          "ref": "d2a3ef5a-89f1-40c6-b885-336201da9b0d",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "028f4831-c561-49eb-a716-97c6528c35c4"
        },
        "item": {
          "id": "c6107ff4-50be-4d1d-bfe2-e722dceb9ab2",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c9970690-2c05-4221-aeb1-f4f4fff18e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f6a3c2-97ad-4445-af26-ca72c0ef9cc1",
        "cursor": {
          "ref": "a437b14e-260e-423d-9ce4-a0438ae3f2e4",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "13a3acca-c492-4e5a-81fb-65a5292e7f73"
        },
        "item": {
          "id": "19f6a3c2-97ad-4445-af26-ca72c0ef9cc1",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d4345533-994c-46b2-9d81-6f1b4c35f743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7346fac-9683-4886-9000-0528745d873b",
        "cursor": {
          "ref": "5ba94468-ad6c-40e0-997c-609e9d2b764f",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "8c7ec85b-f7ea-4e76-8914-b6fe4ea1d9b9"
        },
        "item": {
          "id": "d7346fac-9683-4886-9000-0528745d873b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "cef16551-f664-454b-82b8-5f00c735725c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 141,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ffc5c3-1fb3-4cd2-a9eb-740a187781a3",
        "cursor": {
          "ref": "575d1ab2-3994-451a-b4c9-bc56586c9c06",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a0b6251b-c52a-4ba5-b78e-7d5ce18de771"
        },
        "item": {
          "id": "a4ffc5c3-1fb3-4cd2-a9eb-740a187781a3",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "cdf0aefd-5dc6-4984-b6a0-365aa9d59083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c705af3c-90db-48f0-91b9-6e7d5f4d61e0",
        "cursor": {
          "ref": "9f8a20bd-1243-4a5c-90d5-8bf103bf6fc9",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "18d41052-d1e9-4d6f-b412-3bcb8e176bd7"
        },
        "item": {
          "id": "c705af3c-90db-48f0-91b9-6e7d5f4d61e0",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "82df674f-7a1b-4ac3-9266-9bd78ebfaaba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "472f52db-a5f5-4e09-b507-d42736a9778b",
        "cursor": {
          "ref": "1dd23881-e36f-4aae-b4b8-56073570cb2f",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "3833f5ce-d8b9-4b14-a19d-bdd9929a4d4b"
        },
        "item": {
          "id": "472f52db-a5f5-4e09-b507-d42736a9778b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "bed107c9-5ecc-48e4-8973-7d7179e3a4dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "117d250f-3479-427a-8537-7f385fea61a9",
        "cursor": {
          "ref": "de5d05ba-8302-4175-983b-02bde884e407",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e455b161-7fab-4355-9e17-f86d4ecccaac"
        },
        "item": {
          "id": "117d250f-3479-427a-8537-7f385fea61a9",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e6c5e520-aab2-4092-841f-d1ac5a885993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4537b86-a290-488a-aa2e-65357c8c4653",
        "cursor": {
          "ref": "5efc2585-dfa1-4d46-8445-e32110d3c6cd",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "023a42ec-ff13-4993-aa20-0e60f64e2e76"
        },
        "item": {
          "id": "e4537b86-a290-488a-aa2e-65357c8c4653",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "bf36ab42-52b9-4b43-b436-2bdf0d4f896d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2861217-7cb7-4f20-96b0-1051cca4058c",
        "cursor": {
          "ref": "f79b5e60-c5d0-4294-b530-b4ad0629d3f0",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e15f18f3-df0e-4f48-952f-a4d49e05b7d6"
        },
        "item": {
          "id": "d2861217-7cb7-4f20-96b0-1051cca4058c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "12557805-ead6-4d97-9998-08e4fc7c94d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbcdd711-1b9a-423e-9158-e9440d117083",
        "cursor": {
          "ref": "437f153d-c567-48e5-b8b6-c2a248c3e180",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "32a7aaf0-fd02-4b6a-9339-bd258045b954"
        },
        "item": {
          "id": "bbcdd711-1b9a-423e-9158-e9440d117083",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "022366f0-2cad-46a0-9cee-2abea2b2b753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0e598d-dfd2-40a5-832f-e5b6ce0d4b1e",
        "cursor": {
          "ref": "a325dc49-685a-491f-a277-454efaa58f1c",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "43ac06ca-a56c-47e7-ad36-12319cf4ea96"
        },
        "item": {
          "id": "ac0e598d-dfd2-40a5-832f-e5b6ce0d4b1e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e39bbcbb-51b8-4580-b88f-f4f06b16f548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a4c0fe-196a-4c92-925d-b1229fe8e8dc",
        "cursor": {
          "ref": "66762c4d-7233-4f4d-a42e-a74f05e17747",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "72124e4f-fae5-4934-944e-4180cddfdc17"
        },
        "item": {
          "id": "74a4c0fe-196a-4c92-925d-b1229fe8e8dc",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "cd13b0a0-c5a5-48e5-b584-778144176097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2becda8a-bc5f-4d00-b935-cbf7017cc0e8",
        "cursor": {
          "ref": "9cf4ab02-dde8-4df0-bd6b-57e0841128e2",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "c0a17d02-2923-45e5-8e4e-e28fd98ce3ed"
        },
        "item": {
          "id": "2becda8a-bc5f-4d00-b935-cbf7017cc0e8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8c898287-6a0d-4639-b844-ca03bb935458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68dbb49a-5ee2-43f7-b88e-ab38fd3d9c6c",
        "cursor": {
          "ref": "21300bef-b935-4f06-bfd5-402c5589ab18",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "49c76ec3-dae1-4c5c-bae8-3ab6fd874e7d"
        },
        "item": {
          "id": "68dbb49a-5ee2-43f7-b88e-ab38fd3d9c6c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "79edb050-2d2d-47b5-aafe-033c32d06133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed04dac4-76d8-41cd-9581-4084790a75c0",
        "cursor": {
          "ref": "306325df-896a-41f5-ab4f-0ae21e555fd7",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "111fd4f3-220b-43bd-a844-4676d1f9c59c"
        },
        "item": {
          "id": "ed04dac4-76d8-41cd-9581-4084790a75c0",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "72b7e175-5b83-41af-b9a1-bdb59a2cf13f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "781186fa-9d4a-480e-963c-58ac9dbb2326",
        "cursor": {
          "ref": "d5ba334c-9a77-4e85-b1c1-9e915c299aec",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "908dfd1f-e630-4e05-b8ea-8dc38c8bb5d2"
        },
        "item": {
          "id": "781186fa-9d4a-480e-963c-58ac9dbb2326",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b1577231-3e8a-4d5d-ab29-a52a9dcfbf50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cff816a-2e4b-4127-91ed-991e2fdaa1cd",
        "cursor": {
          "ref": "4d3187e5-1c76-43e2-ab19-fdf286cbe899",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "0632cfa4-892d-4dfa-b057-aee29eec2c36"
        },
        "item": {
          "id": "1cff816a-2e4b-4127-91ed-991e2fdaa1cd",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "9015f794-a58b-4b4b-8803-9bb5d76ce203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1034,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb5475b-2de6-4e35-b21e-9a27566b0bb4",
        "cursor": {
          "ref": "a4216a8a-e77c-4511-bfa2-2a9b9ad3af7a",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "72144d3d-caf7-4a5b-83d9-bdfffe4554d3"
        },
        "item": {
          "id": "dbb5475b-2de6-4e35-b21e-9a27566b0bb4",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3bc7b3ff-0f5d-48b4-b751-803962297668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31652954-8cd2-4a70-bbb6-95df283a932d",
        "cursor": {
          "ref": "02350256-443a-49b1-8c59-62678fb884bd",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "4a67a7bf-aeb3-4e30-a187-b7ba482b5486"
        },
        "item": {
          "id": "31652954-8cd2-4a70-bbb6-95df283a932d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "92d5418e-44bb-4508-8061-07ff074d6929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "950ecb54-ee0b-49ee-9fa5-e97d346a1fe4",
        "cursor": {
          "ref": "26281630-69ed-4a2b-b155-e8c1e9a4f858",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "23735052-5afe-48fa-ac54-d78abc2941c9"
        },
        "item": {
          "id": "950ecb54-ee0b-49ee-9fa5-e97d346a1fe4",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6961b180-f828-4974-ac5a-c7713790198e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2cc4925-e51e-44ed-8d7e-454aea1e10c3",
        "cursor": {
          "ref": "a862a77c-3e6d-4bee-9af8-f62766428571",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "fef8d9f8-c82d-4b9c-a9c4-956551cf89f0"
        },
        "item": {
          "id": "b2cc4925-e51e-44ed-8d7e-454aea1e10c3",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "5f63a975-6bd2-4150-946c-fb9cbdf5c473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3027cc6a-bf02-4c36-8d39-26b0edd2db2f",
        "cursor": {
          "ref": "9d471ab9-6e21-4f68-9fda-abbc813c6661",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "faa21376-7cb1-44de-82e9-55aada722ff5"
        },
        "item": {
          "id": "3027cc6a-bf02-4c36-8d39-26b0edd2db2f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "8408d1bb-aac8-466c-b229-02474762380e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c136925b-badf-45c8-8718-2c5e09045197",
        "cursor": {
          "ref": "8914a742-8817-4d0b-8673-058a5607e678",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "ab840ec5-694b-44a2-a88c-65796241894c"
        },
        "item": {
          "id": "c136925b-badf-45c8-8718-2c5e09045197",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "05dd0b63-eb92-49f2-97a1-17c6e67f034c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4052e2a9-8d32-43ea-a774-31cd14d31df7",
        "cursor": {
          "ref": "fd317bbe-7224-46fd-9371-51947f78a6b5",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "338d1b6c-bc74-4297-a2a3-44dff176e91f"
        },
        "item": {
          "id": "4052e2a9-8d32-43ea-a774-31cd14d31df7",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "edbd03fa-8334-4f09-a8cf-e4b5f0a9c8a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21240077-f5a3-485c-9106-44e14d68a3c1",
        "cursor": {
          "ref": "76cd60e7-dcdc-48f6-a9d4-f37c1a6da9c2",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "fe62ff47-a11a-4d6d-b5dc-90f3fd1cd17d"
        },
        "item": {
          "id": "21240077-f5a3-485c-9106-44e14d68a3c1",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a15a2ba4-0297-40d8-9ee8-6f90db14a86b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2618501-feb1-4dad-8ec3-f9a06711b7d2",
        "cursor": {
          "ref": "1fe0dd89-e7bd-4974-a0a1-38b083facc74",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "b7d10e05-d3f5-4448-8985-eacb84da7d82"
        },
        "item": {
          "id": "a2618501-feb1-4dad-8ec3-f9a06711b7d2",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ad9aadde-e456-4804-95b7-aa53afe33966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e9c88f4-a935-44cc-bf0d-bb307cc53b6f",
        "cursor": {
          "ref": "baba6115-bdd6-4f26-b8df-62801a2ae154",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "77b6e9f0-eed8-43f7-afc1-33765279f37a"
        },
        "item": {
          "id": "9e9c88f4-a935-44cc-bf0d-bb307cc53b6f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "98089efe-341f-4cf9-8035-c8f0e16710dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0eddbd1-6c23-4f06-a56f-00e88b6c4f17",
        "cursor": {
          "ref": "24f30b48-fb43-420d-ab04-a40c810662b2",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "f6b5fbd7-c211-4fdd-842c-e8d4c0fe7b4f"
        },
        "item": {
          "id": "b0eddbd1-6c23-4f06-a56f-00e88b6c4f17",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "50b2dd82-4989-418e-ae70-88101044f9c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e78693a1-e599-43e8-baa5-fd1c8e76c7e8",
        "cursor": {
          "ref": "7a34643a-4696-4ce4-9985-4c36942aba09",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "a51314dc-e06b-49eb-bf8b-42f5a9f6583c"
        },
        "item": {
          "id": "e78693a1-e599-43e8-baa5-fd1c8e76c7e8",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d51233dd-ac2f-467c-947f-2fcd9c83a9cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f870e54c-3f45-45ff-a3d8-d7bc039271dc",
        "cursor": {
          "ref": "490f6736-0033-44fa-8f6a-bd7ba11f0920",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "60dd5cd8-97f6-49d1-9acd-fe51f1d8d132"
        },
        "item": {
          "id": "f870e54c-3f45-45ff-a3d8-d7bc039271dc",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "3aa9d68f-8938-4892-9dad-5bf1218002e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20bdb06e-dcef-4734-967f-9ef953e4937e",
        "cursor": {
          "ref": "9c5c9218-8b81-42c2-8cc6-b819ceb5e6b5",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "48d44575-fc30-48d8-983f-2411f9cca5d9"
        },
        "item": {
          "id": "20bdb06e-dcef-4734-967f-9ef953e4937e",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b290b59d-abca-4ae5-93ad-c322b39a9431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae0cd61-b64f-4ad6-b27c-9909db606099",
        "cursor": {
          "ref": "3c8ecf9c-298d-4b57-98b9-2a4af8f608ce",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "72272625-9a46-45af-ae72-3b520c84443a"
        },
        "item": {
          "id": "9ae0cd61-b64f-4ad6-b27c-9909db606099",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d83061e2-4ea8-4a99-92a5-b5a2aa454b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7c7708-a3e9-4383-a4f1-7c6ceda276e4",
        "cursor": {
          "ref": "e37ae487-33dc-4650-86af-1ead3cdd3259",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "ff2d7cd0-b888-496d-bf1b-6807621b8d51"
        },
        "item": {
          "id": "0d7c7708-a3e9-4383-a4f1-7c6ceda276e4",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "97ffe838-8e79-466d-98ea-37bfcf2a1410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc75c3d-3696-49ac-901b-2431b783692b",
        "cursor": {
          "ref": "8b87544f-7b26-4b27-846a-a2b533fab681",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "c042d81f-aa90-4089-97f2-65fcf7c2d6cb"
        },
        "item": {
          "id": "bdc75c3d-3696-49ac-901b-2431b783692b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c48c5157-8679-4cdc-8106-7d8ade9efd40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b81b007-0ee3-4581-9cdd-18d2284072b4",
        "cursor": {
          "ref": "2c41af4a-587c-4097-9500-1f6e9931a5f0",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "3e183674-02dd-439a-a2c8-a8dc0b5c4517"
        },
        "item": {
          "id": "1b81b007-0ee3-4581-9cdd-18d2284072b4",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "35fde914-23dd-47e7-b7c9-c70214a8947b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e02810-55a5-4d0e-b82f-a741fcb65dee",
        "cursor": {
          "ref": "96d5d433-04df-4047-8aea-f59d1898ac64",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "6e671bbe-3545-44ed-bb01-69703c7aca6a"
        },
        "item": {
          "id": "07e02810-55a5-4d0e-b82f-a741fcb65dee",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "09e42f1d-5cd9-44c3-8614-deb5249645bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2595c2ac-27d4-467d-9e6d-e5af81cc649c",
        "cursor": {
          "ref": "a3f2e649-967d-4aab-ac0a-7376711c6292",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "1c5d2d76-3ed2-4060-b0b2-c9e5e087c884"
        },
        "item": {
          "id": "2595c2ac-27d4-467d-9e6d-e5af81cc649c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "8377f504-8cba-4984-9710-b869072433d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1540c9d9-e821-44d1-9ff7-e609fd967a62",
        "cursor": {
          "ref": "adf20460-0610-4e05-b4c1-697fcfc02950",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "5e99996a-bada-41f5-badf-d427ab0c0219"
        },
        "item": {
          "id": "1540c9d9-e821-44d1-9ff7-e609fd967a62",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "96044cee-cba0-4277-a362-6599803ad535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93830d8a-ae13-4a8d-992b-40d8d7f6c5c3",
        "cursor": {
          "ref": "d4961bee-f62f-4060-9ca5-e248da320fe1",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "1ad77509-f371-41cb-8d03-99fde311baec"
        },
        "item": {
          "id": "93830d8a-ae13-4a8d-992b-40d8d7f6c5c3",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "85eaae04-558e-4726-b29b-a6232c374b38",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4661c4bf-6b85-4ee8-9637-62f480854d8d",
        "cursor": {
          "ref": "518d644b-855e-45df-a19f-86d4317c92a3",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "c1ec8dbc-036f-4054-a3d1-284540503b67"
        },
        "item": {
          "id": "4661c4bf-6b85-4ee8-9637-62f480854d8d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "0e35a93a-3bf3-4b72-ad33-824cdaf4837e",
          "status": "OK",
          "code": 200,
          "responseTime": 81,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d389306-35d6-476b-a3bf-5e015701d5f8",
        "cursor": {
          "ref": "129374cf-5162-4194-a33f-3b6076318639",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "9cfec57a-8aaa-45da-ab0f-92106a0172f0"
        },
        "item": {
          "id": "5d389306-35d6-476b-a3bf-5e015701d5f8",
          "name": "credentials_verify"
        },
        "response": {
          "id": "1ad7f183-3780-4ea2-8029-8f8cb748fa2f",
          "status": "OK",
          "code": 200,
          "responseTime": 2653,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b969bc02-62f0-4f1f-8a69-f8d6625fcdc1",
        "cursor": {
          "ref": "e580acae-865d-42d4-837b-e328ff3f10bd",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "479ece20-e2ab-463c-b909-92d56465500e"
        },
        "item": {
          "id": "b969bc02-62f0-4f1f-8a69-f8d6625fcdc1",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ecfc76e9-b21d-4fe7-82e0-37721880b3fe",
          "status": "OK",
          "code": 200,
          "responseTime": 3784,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f083ff7-f331-4c50-bbaa-c25af3e5fd45",
        "cursor": {
          "ref": "507cbe65-1534-4dca-9ddb-97a7cc9c4981",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b93f663a-ddfa-4ab3-b935-02544ffda666"
        },
        "item": {
          "id": "7f083ff7-f331-4c50-bbaa-c25af3e5fd45",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "aa245856-02fa-4bda-9310-449868226f58",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f083ff7-f331-4c50-bbaa-c25af3e5fd45",
        "cursor": {
          "ref": "507cbe65-1534-4dca-9ddb-97a7cc9c4981",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b93f663a-ddfa-4ab3-b935-02544ffda666"
        },
        "item": {
          "id": "7f083ff7-f331-4c50-bbaa-c25af3e5fd45",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "aa245856-02fa-4bda-9310-449868226f58",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6dc7c95-b8c5-4b39-a838-12bd0aa800e7",
        "cursor": {
          "ref": "9246637e-6845-4de7-ab4e-f4d13b8e9390",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "ce9c0290-313d-4107-b33a-cde70bdfe980"
        },
        "item": {
          "id": "a6dc7c95-b8c5-4b39-a838-12bd0aa800e7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c3d52f21-cbc6-4b76-9d31-ea1a09c09076",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbef2ece-31af-4d87-98ec-bdeff9f01b92",
        "cursor": {
          "ref": "43f68f65-fa57-4121-9b60-7615ff94aed1",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "132446a9-2326-426f-b326-b1e9f796112e"
        },
        "item": {
          "id": "bbef2ece-31af-4d87-98ec-bdeff9f01b92",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9e4d6c75-d21a-4433-b34a-d4ac563a2e8e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}