{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "fa9b1ff1-8a41-4451-acb9-8ef8cd0d6e53",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8cdb4057-da3a-4d36-bae0-45eae453b8a5",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "30a8e2be-4bc0-4bd3-b855-07305a1e574f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "57a751bd-b8bc-49b2-bc98-61e10d17bcd3"
                }
              }
            ]
          },
          {
            "id": "6f4f8c4e-f111-4698-b41f-f8abbda11240",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ad0cb760-e665-4c47-8564-5e2b08846e34",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "40ac2556-0bca-4d6f-a34a-2cfa69c8a162"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c851e35f-ce0d-4f27-bc97-ff9c1a5c32b1",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "2a1b0f2c-7ddb-47e7-ae3a-4f7248c84911",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8a16e0df-81e0-4bdd-bed7-7fccf366f360",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "58889c41-8c41-45c3-b24c-96ae8c7efa12",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dac4814e-f3f8-4a0f-bf68-32c792ca655e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a7271096-bcd4-4249-ac54-f40e7e525400",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ae6dbc36-d2fd-422b-a336-fda3cbdfd631"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6a69a816-6353-45e6-bdbe-bff96cd288da",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "43edec4a-dbc9-4355-ab2e-37aba2daa95d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d4a85bef-3e99-4243-97bf-74fe62be3914",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "0e81d4f6-cf50-492e-bec2-9ac7b0f760d3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8fb3c90c-9aa5-48a5-97dc-a5076fead836",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "20f8cbfd-673b-4331-b859-1fa462e89113"
            }
          }
        ]
      },
      {
        "id": "aef432d4-2800-472b-ae4c-ffc55d228ba0",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "dd11ad06-163e-405d-b992-86c5cb59ddaf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "00299fbe-2763-49bd-9387-1dedd1967899",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dd6894b8-3094-4fc5-a297-b29f04d0aecd",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c9f2cb-6ecc-4241-a2f3-e031e5d0edc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed518918-8a97-4f7c-8c3e-5a53d007bf42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c34eda74-8f53-4b3d-ba24-b6cddb6f88bf",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7332c9b0-3313-4cbb-b2ef-e04ead2a71b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6c0d8384-615d-4f9a-86a3-054847003d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c82bac-e7c9-4243-9c07-6a4ceb893434",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b98376-188a-4b79-8eeb-7f51461ed01f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c0a61409-7cee-4da0-ade7-65691c5c8bde"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b0776270-583c-40cf-851b-93e2ed7a2b41",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3747a5d1-9e88-47b4-9e4b-ada472c3b6c1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c5d229d-a948-4226-b140-9cfc7d3c4146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70b49afe-c5eb-4efb-b588-3fd59514c4de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35de3fa0-3c5a-41fd-8d65-39a02988c206",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19a04271-4b2a-4fa4-8f6a-7b1d07c280eb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0de8e2c2-098d-4911-8da1-db76e99cc618",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b4b52d55-1647-4d68-a709-7da0ea202dbb",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6815490c-b472-4b97-b106-7e3294156585",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e0599206-d9ac-4c11-a096-b3654a8e00c8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1c1c57fd-aa7d-432a-822e-e6aa667314d7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f8939606-bfec-463f-84f5-e21c81b4ee52"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "99e92a18-d721-4178-817f-dfa33b58bf16",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "93edf805-5f2c-4a7b-9c6f-b469a98f3eb9"
            }
          }
        ]
      },
      {
        "id": "e3efc4b6-5d13-459a-beb1-a111705ece00",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d13933ca-5243-4f40-98c2-307376afd879",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2efb6d1d-b2b1-4486-bcc0-b8c493735a8d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "643b4f4c-cf27-41b5-a850-aea13132a6c3",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b85c7a-f5e5-44f1-a4f1-3ca55debe89d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "382d1721-9e70-4ba2-9f69-afe15e9fd054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "722110e1-c268-48b8-a299-f1b0c1504174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b29faadd-25d6-45b5-87f3-bf8493a53bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27f92c9-a071-483f-9dec-be6efac7408a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe38abb-b340-4608-b90c-ae2e0a07a933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af55e5a5-414d-4c56-aa61-fbc9dd7ded81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d91458eb-46ee-4381-aab5-7c9d21579fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d9ac867-7fb2-4fda-9d9c-891f6ced2aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a757a0-fc43-4267-a89d-7ec1ff83cef8",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dfd7abc-2795-4c1f-ad6d-05a7a9067e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73ea6ec6-fce3-4dde-9769-1a95efafb39f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0042fd1-3335-4cfa-ad6d-a6ab99259fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8bd6139-6bea-4da3-909d-1746e98d0be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6843a42a-2049-46ed-a894-5aa0db43edf7",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fbf06ef-e184-4525-807b-eb77256dfb08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70fb6d08-c81e-4995-b82c-3a2f1dbb9a9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e3992b5-d437-45d5-a6f7-079a1ff04527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a1f8aa4-b0be-45e5-bc8f-c3af034a7fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d26278e-f7e6-454d-bde5-832b442f6d1a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6b89aa-7f8d-4732-8f51-c257cdf9f026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88901394-0a76-49f2-b615-78614dde9d45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b75842-a58f-447c-80dc-776bf3a99427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5904927b-bf75-49bd-b8f4-ec135b58a2b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "913f0d11-28e1-49fb-b851-d6c3a4c0127e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b1d31a2-ef5f-47e4-a5d4-3850e3f12ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d06f85f-9192-4880-a234-dc7105a37b5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec2bd7e-fe45-4b7f-9419-5c3e013e11d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07f4ba5f-7dcf-490d-81ac-e1c51f52a909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87283893-ac65-4520-826f-b7eb9d983e97",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd85445c-59c4-4099-89a8-0bbb49ded3c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ac0bd14-961e-4526-926c-9d85d308be15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e132f9e-bb89-405c-a21b-159aace3193f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c6fa76d-3f6f-473a-8827-7c6b3a6b80ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9844f5-1525-4476-99cf-33820db4ae12",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "621335d3-7a4b-47a5-b4ef-010764fbaf53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5068a39a-eb4d-4982-9542-b5cf03c9eedf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4416c530-bcfe-4d45-a122-ea9e41aa292a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32b97627-9494-443b-9bd8-ab11df67a408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a7d5c5a-ccb8-42f9-bed2-fdb27fe3d653",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e08ceca-d7ce-4f3f-bf27-62a7a6dd107a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6d52252-490e-45eb-b821-efdbfa1518d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ab244e-1350-4a8f-9ed9-8b993fedb6bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77d3a0f2-0dea-4d6a-bd37-ac472259e30a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1950493b-18b2-44e6-b843-48ee8cf8abd8",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df4b9650-9add-424d-81ce-7c28008a0c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "820066df-7eb5-4b58-a1ea-b6608b556dd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19cee674-4531-4836-b1c0-97ac932ad5d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3f04242-4cc7-4570-b005-239121bdce4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c8da14-9618-43f9-82d3-4af7a5d36018",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed75c3e-8adf-4514-9521-a89f26ce3df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "984dd639-1645-47bd-a173-8a6dee12f68f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "093eac8f-33e2-4557-bacf-f7a1e82c1844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe3c38bb-ce73-48bf-a36e-b7a42b5951f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c09446b-c805-46d8-91ca-4def310b022f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9911309-6d12-491b-bcf9-393c1055f5fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "655e2726-a4f3-4a5d-881c-d81750f66457"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a22b30b6-0b19-41b7-a34d-1e529f1b4e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "419f6461-d693-4299-ba55-30043c61df64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a4f3d9-93a7-4ea2-a086-a3b696e9b17e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c7560d-e4c8-47a2-a8df-b33268b9e028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b129431-b1a0-4d93-8f16-a4379dda47b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d33589df-d1ae-4784-8b27-fc878fce0441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "648287c1-1771-4fc4-8b69-bc014ad7fea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a33815a-98ae-4d65-be82-7eb7a2c106ba",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fed0971-c64e-474d-a130-9b647c9476fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3639f2d2-cb5b-449a-952e-4ef29aff0027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24339088-e8be-4ee7-89f4-111be056c62a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5c2267a-a2af-4cbc-86bc-8b223177376a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a5d27f5-9bb5-4ba3-a399-4713bb2bf03c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a26ed97-634c-4a92-a39a-b44d6c33c025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6244db76-e9b3-4d34-98b7-af85d3f45fa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73080a38-0385-490f-83a5-39df961d67a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96632d8e-5e24-4fc2-9e32-56ba367a2b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2277cb-117e-4a16-b621-1966ea8a7973",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e135909-1b24-4d89-9925-90b3b1e1664e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c26f279e-9f49-40c7-a0b4-70dfda509816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e67c2964-b4b9-4dba-82bc-07b46f319399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbb66893-4ed1-49dc-a456-c3ac9a1b607b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97519a1e-3532-4654-8549-1628752313a8",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a5bf1b-61ee-4072-86b6-c4797401adf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccef6fd4-a72c-4b31-927a-93259e177bbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac138e5-b632-48bb-b1d7-634aca7c9aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f4c6219-7dae-43e4-81b4-5d0aed20e79c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de4e93dd-cf4c-4360-8df4-55d113dcc909",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab635541-ceca-44ed-ad14-b059f266595b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cf76532-162d-47ff-aca2-56479bd43c05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed506eb-6ec2-43b1-b074-8093134b909b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8de9113-a73a-4be3-a78f-5336d80a0212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe413579-6ebf-47b1-984d-2b730b20818b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d0e27eb-f761-4ef0-a527-4f04e8357750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff121508-d1b5-4966-92ba-17baaf2fa523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf399bb0-4375-4894-b079-142bde94d345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ec82f96-c502-43a2-9507-d99d02e475e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24e67454-25af-40f7-b55a-59ea08459f1d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55eeb8de-7254-4f12-858a-aa902e31a13d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8bb8286-061a-42db-bddf-1745956c4fd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba3b1032-a507-4bad-b1e8-644f36ec1c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "00118502-f857-4791-a8fe-d7ca2e0f8d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6e0c26-b7d0-4c81-ae5c-75648543ab12",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23b408a-2438-4774-8839-78fb4bf5a642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd77acc9-7c8d-43a7-b401-15f15120f6d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "160a2e86-e102-4f33-ad5e-c671dbaf76d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1506075c-894d-4bb9-8572-1c804a8f3e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea848d17-34de-49af-a27d-37c2afc5059b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b51c335e-771f-4467-8fd4-2a72075cde3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15c387ed-555d-424d-8502-b0242503ebed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4512eb-3d3e-4c2b-9705-57dcdc34a7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "575420cb-5ade-4f65-bf77-cf107cbdb79c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae135b6-bc78-488f-a2d9-937845dc0c39",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e080a13c-d57f-4f1d-9a3f-3f6132f06c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc8fa360-40a9-4808-865a-01390516f481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50943328-88d4-48a4-8668-18f916823f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ff57db03-b203-4fab-816e-b3f30ca2e586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08949c1d-2340-4bcf-82e0-6fb6e101dbba",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a34d5df-ceac-4004-99ad-f8baaafe574c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68ebee61-1cd6-46a5-b6d8-06e2de13d3c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd3aeeb-24a1-469e-ba76-ab7fe8487952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f3f8bf5-371d-4351-b271-d095beb97a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d42325c-003c-4a54-a1e5-0ac3d3324d35",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b952917a-5982-4b92-9b54-ec51afaabdbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a7b887a-2b10-4f79-8b7b-617e595b5adb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a21a153-9aef-4adb-b101-03ab4113bf47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f45c09c3-40fc-4a6c-b682-e4b7212a6545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f9ead83-b432-47db-b9f0-60f944807b25",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bab35b7-4b2e-4c4d-94d1-0deb4e1dedbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e878ad0b-9dd7-44a2-b712-33eda0c8c54a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b9845d-d0b1-4ca7-97cc-881a49d94d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "35e2f7b7-fb1f-41cd-ae94-34644e3b7e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a62f6f-d6ac-4cf7-b4d4-91cf3e67cd5a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75b21dc2-e0d3-41b5-afb5-e64edb3f69db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cd3c375-1356-400d-8da6-f27fb39220da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "006521bb-6ffc-4224-b13d-3c9a725c2ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d02c4ff-e035-4350-b339-78fa908923ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceac6fda-7cb9-4bd9-866b-4de04df2cbf1",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e0cdd04-2c2d-423f-91ce-c3dcf2afe257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28af01b4-6fe1-472f-bf41-8edb155c97d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956e9837-283e-4db8-8331-5b49bf5a99e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b469028f-a74b-46ce-94b4-e59ec46325e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eeed7b5-464a-45d1-a34e-93f983603ab3",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e11187d0-564b-4416-8d40-24612d76a1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7a3b48e-93de-45f6-bbd6-913f6442a767"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df0fe2d1-d7d1-461e-8087-4d1882c57fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "97259edc-37dc-465f-bca7-464508029f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18e18ed3-ce06-48e2-bfd5-cbac50d353d7",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "981a4f35-9a1c-4548-a318-642854c34029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5518af40-cb51-465b-855a-12891a492af0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e7ace9-19d8-4b06-b041-9ed8911d67fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3611d34-c01b-402c-8a7a-5e48860e2898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4fade26-aa9b-46ad-92f5-278f8c91207f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "755b19bc-24d9-4410-a1b2-785013ca87b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f2395c5-3b03-49fa-8818-936320f9130c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5212cdcf-117e-49fe-978d-5dd22f5ae4dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "62cf0619-b019-4a5d-917f-86a4ec28ce38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eae5d6dc-9190-4681-8970-0389383c3118",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b945dd9-92dd-4abc-9418-994954e71a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19dd970b-bc99-4703-a256-df708236bb31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b7f9151-2b56-4dc9-a6a2-016f400260fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a3381ff-039d-42fc-8392-349be34fddcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22417334-dfc6-452c-916a-6a0c9cfd378e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86826919-7c03-4b64-b700-07797ea5d36f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b9c8618-7995-4e19-aa87-407f6b433665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "066fbdbf-1f11-40b4-929f-93e447b9cdc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2213e7c-31b0-4697-9498-5d11c2b0df5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4383d5b-741e-42be-be5d-25213eeadd81",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae4e705-e294-48ab-9e62-79f06ed76167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98e4b924-1d57-47c8-a98f-61f3498e87f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0571ccf2-bdd9-4944-a111-a6e1b1ed9d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc7e88df-1e31-4bbd-abfd-0c44c6ba7d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ec4201-4e8e-4fe1-8993-7787a1050c5f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "741bc45a-0368-4643-95b5-44897a0a5992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2b637be-06af-4ff6-803c-82b54b7491ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b2de4b-8374-478c-82d6-6c08c8e34f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "00e2d587-34e4-4922-9796-202d837032a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2ce217-b40a-423b-9b0f-2539ba435580",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9588f43d-977d-41f9-82ab-54ed7447596e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c81001cc-133e-4d63-bab1-17a4397cb01e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90595af9-0683-4f65-8dc9-a603be7f91ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "82e4d69e-2262-4503-aa5f-31d0806d8fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0122acd1-b5a0-4236-acaf-3c0426734cf9",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "625208ff-4ebc-47bf-b9c9-5f4d48bacdef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b57337ba-ba16-4f63-8035-b3ad30795e57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d60a5f-69b3-4d06-8561-adcb07d38aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0cd3fc3-0582-4d0c-a967-c070499975f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b05d3d-a6b9-45b3-98d3-81c95d6e3005",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "319022c0-367b-4802-a0b7-a401ee9847a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bdf5d64-7308-4a81-81d8-bbd867b5d7fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a477b9bb-b5f1-4068-b123-7baa1038429b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4432361a-395c-459f-b64e-5b4f4425633d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d13b8c-3589-4248-aa72-8c273a6c1bfa",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d42b449-91bd-4068-a80b-1f6c983781b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "135d8328-feb7-4223-98ee-835180813072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e914832c-cd93-4b58-84fe-5d31753e2691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd985230-2371-494f-b651-7fb3d5ce0275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11258a3b-7989-4dd5-9310-f2682d875009",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f65186e0-6740-45a8-b8a0-54bcc2da8c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c343115-f9a7-45fd-ba9b-a73511e14ff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72faa5bd-1539-4218-875b-023c2b906533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "98214d8d-2025-40e3-91ed-56125a28bec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af3d858-7458-4254-bab1-34c79c4988f8",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bbb556f-9aa1-4967-8da4-cc51763dbf09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eda340e-633e-4003-beab-fc6dc59f3448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1305fec6-8f57-4c47-aeea-95c9a573faac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d94a54b-704f-46cd-b778-2ba02e59118f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "334d5a56-8dee-4b17-83f5-70701fc3ec67",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c9c8940-da68-4ab0-8db1-8eff257d3c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1334c17a-6f48-493a-a442-2d57a5a47b49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c79e0f5-ed4c-46f6-b4db-d68fa7de88d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c2eac3f3-df7d-44e2-8c07-36fd14d94c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f0b90c-e2d8-4eb3-a492-d1259c757826",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb8db7f2-9442-427e-b24c-f140f4c8c648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acc17948-524c-4d86-8652-ea6b56c1a638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1d707be-92c8-4416-a0f4-8e77fb58f2de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e297e91-fbe6-49d9-b733-133fc3bd81e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b40db166-7ad3-4833-b4db-22bf9c2bfe5c",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "707af523-f2d5-4fb5-b515-6e3eea38275b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c5c10b2-763e-46ef-becb-3e27a2669ce4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7cb51d-3562-49e4-afee-c06ef59e6216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a23bf510-bc9e-40bd-8661-135937e9f439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8745bc99-1d9b-477b-8b84-34124c152635",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "085ae780-7707-4789-b88e-6b3dff1a4a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f579f01-a9dc-4093-9120-7e8f8460d8e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e054c0f0-0a8f-4e5e-bc7a-56082ea417fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ed59134-3621-4f18-ad6e-c9f9549f80d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c301413-018d-4971-8e44-c5198a05f0f9",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24b1e99-bfea-468b-8b6e-ad0f846e1a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e722c66-06a3-4dfd-ba3c-0e33df2caade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a9b13b-d4d7-4159-ad41-25072a629f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad7c4979-59d9-42d5-85b4-948c1b34f5b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec8c23e-4a77-4790-b52c-85ba0d5d52f9",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c71aa97-ee70-41cc-ba19-69080024f7e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5151de26-3ece-43f2-9b98-e1b144c92aa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68284d5-29be-4ca6-84e4-686847e7cdb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1021f66e-c923-4b3d-8402-5c068f8a12f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac34601-8eab-4d67-8d29-020d9d898786",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a45f6c8c-d45b-47e8-8100-a154d71f1468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "786e2e67-9ef7-4f62-8030-3cba331726f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f83a4818-8076-45bb-b4e1-ec123d00861e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "766d99dd-cd33-421a-ae21-5b463d87be42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0601757-10d0-419c-ba62-79832ec20bd0",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a3e5689-e648-4491-8ab1-1a99c9e27af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7772e46-50e5-4009-b3d3-e295706d99ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b419fe-e421-432d-936f-f20d5397c0b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4e21970-481f-4938-a6fd-d8cb95ac0221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9161e211-f79d-45e3-808d-4a1bd67a1902",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a04b832-bfe1-44df-829e-0bd88b4e9966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e42f4ee8-d875-4212-ac79-8236ef54e985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947b3071-ff65-4e19-836e-1aeb605a0f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "04782178-418f-4149-8204-15130291e339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d7b1a4b-e1ac-4bba-9b17-bdc4f48608f6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a49f34-7b42-4f46-9fe0-c2417862cd53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ddaf9b0-7a9b-44b8-b0e7-aab906e00d2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1485cc91-47dc-4286-9df3-9c92815dd4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2892c054-8f5a-40a8-b6ca-8906bc680613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec8053e-1a19-4b52-8e1b-e3fdea2ab039",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea62484-4e96-498c-b951-a4ef3f4421ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cebfab4b-6bca-49c0-a5ed-027c955e90ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0837234b-8817-444e-bd87-710a24dba28b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc73226f-e835-409b-b8a9-a4a89df7610c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd217745-c4a3-46c8-bce9-80c86515026c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a8efd6e-525a-44b4-96ad-3e2e619cf8f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb5f49b9-1c7a-46a6-8749-fd2a3c18b388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3352532e-46e9-4f54-bc4b-9c2458de66dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "581a68c7-d07d-47b6-9fc3-352048ed229e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7314ea7f-20a2-4acb-af65-cb22f2014278",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac6be68-2731-4888-ae38-8e09e62caaf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0398b254-7cb3-4f78-a9bb-d2ad2f770d11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a90ef11-188d-41f4-84a9-2fa6d2c31c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecfe048a-3c1f-4885-b7fe-c0b9a81f04f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1309698d-9ac4-4409-be3f-006f59843f64",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a10d1f17-017b-460f-a596-4a689bbbe9d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5af551b-5baf-4e63-87e9-211d60f51d43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f8cfb83-3c05-4356-8cc8-3f422acfeae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6849b169-a96d-476e-9a80-75e91aa62e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce22227-5083-4ace-9910-4de229d96afd",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ccb1726-9f48-4e64-889d-e46da2ed5102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1a7f283-6cd1-4533-acd2-0552a67a9f42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2ebbb1-1027-4456-8e56-daa11fae2cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c02e9939-0631-428f-adff-db28a4e74893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e4aba8-2f39-43d5-83e0-3407bc9891a9",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28fb9cba-5ae8-4bca-88ac-9e79053a636b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f27021e-3014-433b-8bda-c54476f9fce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d93454a2-f20c-46be-b88b-87db406043ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "29d7b8dc-325b-4b4c-9d33-77be5650f462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1474ba9f-cb89-4961-b421-b0efe984b43c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "112c4e62-a990-4cb4-b342-24872add3c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da1d7042-72c9-4341-bc15-4352c938bf9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980c3f8e-0b27-4c1f-a1a4-8579f5242837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f518d412-f1b8-4a61-a1cf-4f172f396179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe01098-00e3-4101-8894-29d07997264b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df884f7-21c2-41b8-99b8-5fa00f995dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "069161e4-df95-4632-9826-b88bafc3761b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2413b631-20ad-4dab-b679-41e4d9ec0982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "847c609a-b085-4400-a05c-2b778d7d4e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8932169-5203-42dd-80d8-5d4d0e4d24a5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb121d4c-aaeb-4997-8636-78d874ac825e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "050d8654-ef93-4925-a887-efb3f1c7dfbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6511a7d4-1f52-4c2d-b0f0-b723f77cd345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ea3134c-5048-411d-8150-63c9e07cea2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "595a4a00-8bc6-42da-9ae2-0883f4ecbd33",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "172fac5f-e765-412e-a7a8-4f916291d206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4b079fa-5576-4449-9197-d42caf84e1c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64817025-15af-4b2e-93ce-57717728ed02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1113f637-6476-46e6-9487-bec307908c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f9ea338-d0fa-4229-aa1b-94e1f7fdec33",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51af724a-0b33-4d3c-bd00-2a974b310b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e016a755-f512-4e5a-b1bf-34d91b338132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b911ad1-0ebc-4b2e-816f-76800aa75f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e12af5c4-d455-49a7-b1d1-6df78fc91be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "378cee89-d5bf-4ceb-a45d-ec27f9e34759",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c8e25b-5bf7-4b92-9c40-1caba25057fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ca9f3e7-e846-48e4-9605-83e90d2de779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c0d34d4-6bcd-4065-9eaf-01d0e6265f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "db8b9a99-9cca-4e7d-b252-4d67b0da38b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d4dc3a-e607-44b7-85db-f2375356bbae",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f4a00c-9557-40d2-93b0-47fdae553f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72390c7a-2b19-4c64-9570-e24edc411c45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18be1cd7-e55a-4467-b1a0-9bf49fb9cbc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b8f1dd2-fc5c-40e2-b848-be9d71124bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ccaafcd-3036-4faa-ae89-1dd73f7dbe56",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "634189ac-4fd5-4ca3-a1b8-b990fe7104f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51b06049-d2fe-4598-9f78-7495551aed6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34f04a6-a865-4d88-acab-f75550c246a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "25b68eac-8dee-429a-b3ba-9d94f1834b4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5dd9da1-a13f-442e-b487-13725c035b1b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a76681c-3d39-4af7-add0-291d239c93f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b67e8054-d8c7-4557-b3ee-af4044646c9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e8f6f3-b762-44fc-bb64-86f6698d7ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c9ca7e9-17e6-49a7-8e56-54c6acaad1d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5df48e-bc51-437b-b85a-52abe42094f7",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb76a06-8edd-4141-b7f9-d235e9748778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61b625d2-7fac-4a14-8ee9-8eb302c5f07e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128bc356-592e-4a4b-b2ca-5ee439f284ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "812f0862-a8aa-41cc-b098-5805c1eec464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b76012c5-770c-445c-86ba-b9d1362e38d6",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0640e05-a5aa-462b-ae62-b216d77d7ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3035e4d-6b93-41d1-8f24-0547ba175a1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "788a358d-dfb6-43c5-a68d-4710af6f5b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ebf41f0-9a20-4f5a-8cb4-b6ce4946b0d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad0c1f4-52ad-4c8a-a61b-b7a785b9fd57",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "235d27c7-abe5-4449-9cee-b28ec488083e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de9ca000-4f1d-4c83-9205-344f26fed60c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e8e63e9-c589-421c-a06a-f4298ae7bbf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b15cb358-d47e-47b7-98e6-32b62dc29008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3204e734-e353-443b-8cbd-cf54e739c002",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d94ce35-297c-4847-a906-ead5aedb62a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9d8cc48-c79f-4e1c-8833-2f1020c69150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96fcbfbe-0bdf-4723-89c9-8b0d1f7e6614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4c628a7-6d1b-4a1b-b1d1-b898c41b8173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cefd08e-828d-4f5a-89d6-20addaeb0aef",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bd268cb-d5b6-4346-8ad0-ef3f320551f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a49b276d-32d1-463e-8fda-b38bec2e228c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323698f5-febc-4095-98bd-14a0489bcdc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1aa649cc-d2be-444f-bc52-f13fcd07c019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50455ecb-638e-4953-82fe-898f0608fe5d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b3fb0b8-41c8-40b5-ae0e-95d1a2b09646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e1939d8-9619-4e95-9441-7f8c23c7b5ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb81c857-0ba7-45cd-bcc8-b802648f05c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0113985-64af-444f-a055-b3c703fb9b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9f8b2f-6c51-41eb-ad7e-34386bdc8055",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44cbfba2-32a3-42f9-b1ca-4c89c7dd53b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "473e97d9-d72c-47a5-b081-bec4adb21fdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dece8dec-89ed-427e-a820-d54cf8199cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3c2cd4e-15f9-4d4b-afc4-4dae12e85e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b32d73-2c60-4590-9560-49e0df67912d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86bcf9f5-eaa8-46e6-a37b-0bf2db541d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21827793-a90d-4ed2-a78a-eb8f0b8f482c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7b7a6e-062c-4758-ad1e-ca0e471d5e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cc3f19d7-7ca4-4265-a2f3-e64a8e5d94ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b3ce08e-0a44-4c03-be1c-c3059bb1928e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0493eab1-6791-4fb6-b2a0-c705e86be948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a26e026-f820-4d63-bae1-0172c2b4a3c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff4d9408-b341-4bc7-b641-df438b413cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b348ddb2-ed05-491b-b594-2dcd3ec8a4fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "776d090e-1d65-4179-8dfc-148066cc5aa3",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e9c0548-1c86-4fe3-baa0-6516971bc0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4bfeedc-add7-4ef7-af94-c7dcb41f4887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5efcfdad-279b-486c-a31a-708578321d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c357dcd1-d12d-4c49-bfc8-5585a6323888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cac26ae-2af9-4801-b09c-604b73193db9",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21eefe17-c0f8-4575-aa85-7354a6de0c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9f8b5d6-aa90-49ed-a2dc-962d6a884026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b81e6ff-2bd6-4634-bfd0-2a5b80bb42cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c273dbf3-44f1-489e-ae03-333a8ccd9073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d36909d1-5983-4029-87d7-49531cf094b3",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b134cd84-b2a1-4a4d-b9a2-82d235b11f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fca84cbc-67bf-4027-91a0-811fd9e90116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aaf095b-531a-4770-84ea-7fbee35874d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcc02dc7-d354-4200-9271-1b89734d7176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92af854a-a545-44d6-a057-8b62c781af00",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f02603a3-7db8-4df5-903a-46aad42c8306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f323843-d8a6-48c5-97a4-dafba111ab46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d395fd-4e99-4f56-877b-eac6e2a25366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e31f0de-cde8-49d3-8738-6a9423dbf414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719beba3-5dc3-47b5-8dd6-6c5bdbfdb3db",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbc9eedf-fd35-4e25-b6a2-0cea4e94f349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9965142-fe9e-461f-9e90-ea722a917e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5da58f6-c40f-4d10-a91f-96268f37432f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c4bb570e-a200-4da6-bd4c-c7909d2bdb5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5757c51f-2107-4287-9753-9b81a68d55b7",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9858289a-5689-4ba7-a823-3b1461269ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77752c67-1330-4109-97cd-09e16661d126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e6457b2-6e0e-4a34-99ac-a7f5a0c5e8dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "636ea663-315e-4376-822b-4b353cc659bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ed44c6-1ca9-4c57-8405-ad0b022b5a6f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a07066-8a08-4221-bc5e-481413175e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06cf3b34-7575-4a0a-8ee2-83e9c42b9dfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45fad853-fe06-4bf1-b79a-83c079af97c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "af28f5d5-4296-43c1-8cf2-8b741b30bd55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84dcdc9e-8095-447f-b901-bcb7636d5423",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3fe3aef-7aa6-4092-884a-0ff305239b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cc61745-37db-4d97-b77e-c7727b58a1f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bacb5e72-4fc3-44c1-9c14-68299e19afab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d802bdd-6a77-4f99-8780-f9be7741c826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f4bd07-5f81-4ad4-b02f-8639e1f0f1cb",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1cf0b4b-3db4-4810-ab17-ceff1b6218e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1322407-861c-4a9d-8eb2-fe0d0cb22ab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3094819c-73e5-4179-8847-27732bdd6de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "db661499-a20a-4b1f-85e1-4999653b529f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a6fdd1a-d252-415c-a56d-6b0d664b71f3",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff23369c-67ef-4743-a802-e82e98c5ad5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ade12fa1-73da-44e5-8719-4c41c2a317b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "837be53c-c628-4557-858f-87794ce41232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7a9184ae-8cd3-4dce-9d82-2eabb77d52fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfcfd226-fa87-4a9f-a16e-ecff55255a47",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb9473b9-6433-47c0-b93b-60d310fafd4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6182aee-1b62-4313-ab2e-8085428c4924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bcff148-444f-4386-9663-a8d8df3d916b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "baf0a3ab-f6ac-4571-b354-6cdf7c026a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb3238bf-3ff1-4687-95f6-8ab8ad48dfcb",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da4aca71-4128-4d50-9cba-3cf2a16861fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e87f8f6e-9b1a-40ff-a765-8ecf8bca86c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b01960-3deb-4829-8879-4a5576710599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "efa0872a-0293-474a-9b90-a7533e77fcd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbacc6f2-a67c-42cb-a636-bc0ff1313fdf",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d11d3fd6-e313-4ec4-a9b5-5fb7c4acdf56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4367dcc-f61b-4c09-8682-4b0f3edd8e19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d27ee9c-98db-41ef-8c75-f6f83afd3eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e570a3be-609a-4398-b02b-7f0be6543f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3136f22-54c4-4ba1-a02c-da26c16d4f5e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e25f16d3-5216-4a6b-b5ba-c11912949935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6882d979-bd3f-4a3b-8ae8-da6d1eb523de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1342ef-371a-40e6-bc0b-15f848b82ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "282d0283-daaa-4d8b-a67b-c020703afe43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ed9d38-f7f8-4e9c-85f6-49d5486f10c8",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6614e672-3226-472b-8c62-d6cb85c81c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfa0e1d7-0d23-4708-bd1a-832600fc69a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e4a0a84-eb07-4c94-8134-c957a02e2b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "90a5263d-cfeb-40cf-b898-a00617b1d850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3989ed6-e90f-4288-827a-91f3c729a3de",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a617f7-a373-4127-a078-4ebe22ba4020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c9c0b6b-7aef-4a41-a30a-a0ef1332606c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c1354d-b80f-4483-8822-4c562ca7e675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3149272e-2250-4875-b5d2-43590c250fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4972601-e353-437a-a78e-3b1802dea852",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4966727e-73b6-4521-9139-a7e8bf564346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0b222e95-60b1-428f-95bf-69bacfed6b9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f92227-cf66-4d2a-bebf-f5c812bfe2d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "142b1b10-277e-4bd9-a070-85761e16f5e6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4b9b3a9e-01e8-4e24-aed9-db69af24b845",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6950a744-036c-47b2-9f17-2ce887687017",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c27d2cb9-ff03-4baf-a96c-ad9bc6597598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "854029cc-e78f-4f82-8f68-6ff87b16753a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f90252dc-b663-412a-86ca-fa1b7677b2ee",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "916fd0db-f6a0-474b-8d04-b77d5cdf167b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be9a49d4-7d5a-4532-b080-3cc7bbe4756b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a2e9155-408c-4f36-ab28-a82575097f40"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "96111a1b-5205-4982-be5d-48c91f12b794",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89d22176-9709-4d05-be17-77e7aa3d3572"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3591d3ea-a84f-4c01-9daa-2eaf7511f69e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3c631697-451c-4704-91f5-a6dc69a294ec"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9b808a3c-cbf8-4ab3-a60b-706256f8e1b5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "645c3429-d092-4e5e-bc9a-559db32a71ae"
                }
              }
            ]
          },
          {
            "id": "709bb897-6c53-4a71-811d-4bb68a1433f6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e1bc2e51-f087-4962-8047-f4aa61d2daaa",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "a3eb8f3f-2420-408e-8380-c3b77dde51f3",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "437885fd-0648-4334-a99b-2ab90fcb1e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "713c033f-de82-4786-8443-9c002ced1fd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc9a8bdb-9434-49d5-9991-3a054c663dfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80f25498-cfad-4303-b802-4e9ee7fbb31c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c29094e8-539c-4be4-bfcb-4dca7c70da42",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8f5d092-bad2-42d1-a8b0-113722358cf6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "25ebefdf-12a5-464a-911f-9824a3b1dfff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bed0857f-69e0-49d8-98cc-63e2841b82a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a37b1f46-fcbf-4578-8e2d-63b884c03fe9"
                    }
                  }
                ]
              },
              {
                "id": "4e457cda-9510-4b26-b554-8b15906710d9",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b9c5418e-de50-4504-bfb9-deec7e6ef996",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c62d8a02-f2b2-419f-ab99-a702cca9a262"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ec85d80-4e8c-472a-8aa6-a42bfa1b4cbf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3eb6c49f-47ef-4bbd-b085-f8bd0ed12251"
                    }
                  }
                ]
              },
              {
                "id": "bb971299-e5e9-4288-9826-85953cbccca3",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8d50db4-efd9-483c-9eab-edbd8ff3ed65",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4cf9774a-3808-406a-bd6a-800a0c9d8ada"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "70b46cdb-6a01-4596-9732-4dbc971aff42",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bd06693d-3d50-47d3-9725-76cd921efa16"
                    }
                  }
                ]
              },
              {
                "id": "84644359-644c-40aa-87cb-d667369a63eb",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0715ad33-4b66-4026-8aba-9173a2024dab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5cd4a85c-a111-478e-a8c1-9de0e0744846"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1147cb1e-cbf4-47e8-b003-e8f699306433",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "cc362d60-ced3-422f-ac89-f3c1db9d0917"
                    }
                  }
                ]
              },
              {
                "id": "06a90257-7651-4bf2-992b-003ad7202607",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4ce813e-8c82-4465-912a-61b2c8369e9a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9e41f6fb-27a1-4315-9f7c-a3c05ca716f3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e929fdc5-14ec-48dd-a4a7-3878d8014a64",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "58a47724-97ed-43d6-9cb7-eb8bf4a3e0a7"
                    }
                  }
                ]
              },
              {
                "id": "53cad8f2-146a-42ca-89a9-e7875e76bcfd",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "83a14eb1-e105-4461-9c36-52f49ce5a430",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4ac422f9-bd73-4cdc-a75f-00ecd08c9ade"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "812ef06c-13d4-430b-b17e-141e5e939a31",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "493edc28-11fb-4194-ad76-84ef37f6cf42"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d7fcdbd8-e6c4-4e7e-873b-c36aed3dce40",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4685c529-2d14-4d95-a44c-b407ecd98fd1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "53013826-b19e-42ce-b06a-0408e36a0100",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7abb1aa3-e30d-4335-ba40-1a4f6f9be668"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "347848c4-fbd3-48d7-a789-f0475236ffb9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a191b3ab-2c16-4818-8d42-07629f2993d3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "74e243f1-8870-437a-9fac-e9cdcb03a04d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "50f2e418-9b6f-4624-82fd-28373e00c4b0"
            }
          }
        ]
      },
      {
        "id": "87813b9c-3e28-486d-b4d1-4a536771f279",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "25e478e1-2008-4379-9e35-55005fff17d4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "43d43f5b-e1c9-48ec-b951-763ed2218427",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f6bd8a44-3348-43a7-9242-94d52f6c604d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb37cae9-33d1-4c73-81e5-81d10aa5d7c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b165e8af-45e5-4a02-8694-1b42cff06cfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb8ff44-a84c-4a25-a308-d6d196282bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c580eb86-abe0-4207-9124-21964fb90f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66d57876-2b17-4cf4-a313-98df6f0300b2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beaf8f68-26f7-4652-be51-8e948795adc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "380af498-390d-49ac-8a3d-57eed561f280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "649e3cbb-b761-4716-914c-01e0b5910a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "25a4b497-c1d3-412b-b3ff-101473a914f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d07a63e-6409-4f04-9aef-ed6f85d5945b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1de22d5-69e1-41be-9d76-537b81aa6f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96501040-57b5-482c-bbb9-aa954db1edbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c6457f-1227-48cb-a4ba-51f57f5168f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "615c4948-7580-40bb-aa82-d6dfaa64e1e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04542e48-9bef-45c7-b42d-54370b554400",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "233cd159-fa55-4f52-943c-59d735128f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8853f5ed-fd27-421e-b2a6-93d29dc975fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83628fef-01e4-49b7-86ae-81d451e4e4ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "56d75be9-fb75-49dc-8432-1a292ad65ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7df7175-cfb3-43ac-9f2e-ee353e7ed597",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf24916-99d6-4576-babe-0646ebd1a8a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3903c5d2-a2bc-4b8d-a2b3-f089eebae5b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e771ab-d853-4487-a97f-f38c06f33a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9155596a-efaf-49c1-8a09-48a3aa663db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c852d06-c1c6-49c0-8e67-d01da3a19305",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b36e77-1685-4569-8a21-1b9442fc5c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bac0f004-f63c-45c1-a8d2-f4ff48034747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdbf6fd2-9980-443b-8393-b288644158a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "232b052f-bdc2-4507-94ee-73578c7762d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ce61e4-adce-4a3f-9b53-953a6828ff5d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fafbfc25-9fdd-4e05-b0bf-4ef6f5ea41c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46e94406-d561-4979-ae6b-9f833eab7b28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85706b2-848e-4121-b51b-0812dd52a3d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "26841c2e-3da9-4354-80ca-c60b3bb162d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9edec8a-952c-4240-b5b5-73a1db27d1c2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c9295e7-b069-48c5-b9eb-c3b2721f7f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aaef4cf-fe95-4937-806b-f46f6b2b1884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f7ab544-64c6-4620-b53a-866759390b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b793eaea-d4fd-40c6-87ba-e8cb6b22bae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2835e4d-50c5-49cc-9b90-9946a827ba70",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5153a096-3393-49eb-b78a-61cd55d6f8ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f21dbf5-6395-4659-9315-1806d967190e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b262c7e-50d5-4b61-a156-9f6577f9afef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c73fe16-a37d-4b3b-a914-3f7fd4a3f7e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27e2fae3-1162-47a5-8552-c0ed6806545e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2128379-9480-4d9b-89b0-d4582a429f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e50e426-c198-46da-bd8a-659071478aa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "317e07c6-ca54-42b6-9b86-bf6f04dc195c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "769a23b1-976f-4910-8d67-4129b3ef9819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8062d2d0-5efd-4b6a-b56e-0ddb8493dfc4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eeda440-2665-4ddb-9a63-65c0bbb4c1f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4b6dfcc-0c79-42d6-b697-2bbb7b7fc57d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb87658-2395-44ad-92c9-9a6acd2c460a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4e2df269-8e2f-4bd3-85f4-8b9d88804a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c7a67e-0b0c-4ebb-849e-dde23d11b066",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3be15f6-b6f3-4c19-ad7d-4b67ecda9474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "476e83ef-2ff4-4d2e-b951-6e28e8c4b4c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f1ee080-040b-404d-989e-3d38c38f661c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0a912a66-0ff4-4b9f-9455-497f9cdd1b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9b3cf7e-526c-4df9-b81e-539914865c25",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0dd7bd-8225-4c6e-bfec-6059e72891e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22dfe5db-c1de-4b9d-a8af-8d66ba28406e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e911bb84-8e48-4671-8aae-0bbfbd399408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f98c0297-56f0-405d-8169-d37dacb07144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c1c0f5e-2ebf-4079-93f9-5c3dd43517ec",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7abfe046-67aa-467f-894f-e3ec41dfc15f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ceff062-c9f3-4c7e-904c-2a37e3f51bf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b3cbbe7-e9fc-4130-a43a-a426afec51d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f51bc2fd-03c5-448f-a292-9ae81ccada69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a142bbe0-161b-42ac-9fe1-43d3953791e2",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c5023b6-aa22-4ea6-a0f5-03481c5d4380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61b30de1-e7e2-412d-aee0-24def00041a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f4b4dad-9cdc-4bad-8b0b-31a104039634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a7e7c2e-42bd-4338-a1df-f5e4e8c7f959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d4cedd-4118-4404-a3d8-9770fce35aab",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79fc78b8-c20c-4d0f-9fa0-407adfb0a265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e6817d8-f981-428a-acad-d2c53687ec92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0933d6ec-e8ff-47e8-9a0d-0e2b867b7774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2efd551e-b40e-430b-a056-5e8d6e22e7e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2200c874-6bcd-48ac-b2b8-fdad9b6871bd",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e7c410c-7d9e-4986-923c-65eda0f82ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e26b0af9-b60f-4056-bee3-08fc909f2762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a12429f-262d-421e-a4e8-19a938478e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "59663ea7-5eb3-477a-ae3c-034756b5d2ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e89512-5ac0-4a5c-aae7-c698332c6ea7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e4a0c4-0a5c-439c-aee9-962d8f274d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27e2d8bf-9803-4011-a578-7641d876f255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b736d7-2899-43d8-abd5-ff81a15d0b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd3a497a-1730-44fd-8364-c73465a7c08a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea231158-980e-470f-a118-d98f78b3a107",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd13fb9-3448-4376-b9c5-9c46fd04e281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26d4d5ff-07a5-4489-b013-790bfaee79fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1151bbb9-a50b-4b2c-8d80-2df46f59927f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa2a702d-8dc5-4b94-b5c1-5d78cded402e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5531534-1129-4109-85f5-46a09d89a5a8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c110259-6084-4baf-b7d9-b7b3641b5213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13de5fa8-0e82-4a61-9f70-31f55072dd06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b4a540-62e5-4adf-b10a-935bc120ba1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bc339d1-5b1e-4300-b5b5-be763bc6cf25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f481e7f1-a262-47a8-aae8-fd72835f3634",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6c28e7-5e81-4f00-8b9e-de20b2245687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8349f46d-9974-48dd-aeb0-9179b0bb2950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d37cc86-a05b-40d0-9fe1-f3597ab760d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4372d86-8742-4ed6-9c2d-3dbac5f197d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82a2696-3689-4739-a2cf-4d6e2ca54f02",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d6cde5-ccd0-4baa-82a6-af452405f8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "437b4e4a-db5b-4c02-9fa0-4fe784cb4df8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35fa6c96-0165-4661-b50b-e2d1265f0571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94fbddcb-57f1-42f6-a0e8-dbf205bb9216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f299654-ade3-4808-9a75-360a11144432",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0cf7406-d960-4181-8afe-fb3b4b248148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa9a2469-1d0e-4b59-a5c5-927debb9f1c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1891f70-371b-48cc-ab2a-224633dfbad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6af0e6d-939a-48ad-a937-191a2618629b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f54170-d952-4b43-a8dd-f9edd6766492",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b411a47a-c07e-48e1-a074-c28963263eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bccbbba8-ea46-4926-9cb1-6056e1298ddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a328e915-6d86-44a5-a4c1-bb166e592c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3715b95-b6f9-4324-805b-2a5a5fa3ce62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d688dc6-8cf5-4b02-a24f-0e49265fc541",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8403677-af4e-455e-aab5-c98fcdefeaa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18d804eb-2354-4eb0-b099-dad6a9a62505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14cfc4a5-135e-4feb-a262-124edcbdcbad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cdf9f8d-7219-4e92-a7e7-28ce892d023d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b800aa32-2936-4062-a964-74e51ff8d6c8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d3c07b-c31f-4377-b064-05b0495c917f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "115477e8-fbaf-4958-9991-c40ff9e1f3ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b25167-0967-4bdc-9717-9ddf8a9f3866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28ad8acd-add5-4547-9e3d-4e473028f053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64428197-90de-4173-a395-498dd2729f43",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d6c454-b345-4951-8090-af3724c9bab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0de0e21b-6def-43b0-a303-413b680a4667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11702b58-361e-4ec1-9fca-ae94e7e3f8d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56e5190f-b6b9-420b-93c9-9d4fb4dfc1a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86975eb-4d12-42fd-9b9f-40c44a375b09",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35149d4-dc2e-46c7-a449-88ff49778345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70943a92-bf86-4b6a-9e3e-fe51054d4d97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cac7190-08af-46e9-b9cf-967051425b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd76942c-217e-4ebf-a84c-fa4225305e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b44881-7903-4740-a2a6-d3b52774003c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c41ebd70-e174-4cb8-9adb-425ea65d6437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "363e554f-f45f-456b-99eb-76d5a43e51ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56879dbc-8f82-46ea-9c68-9e5b47ef2bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "853ce3db-b51b-4d31-a5a1-33a1000b1512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff7c249-c1da-4534-b57a-12e5bd94f5ba",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "044e7fff-d97d-4e3c-b8d0-35526cf5bcb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0135df5d-9081-46a7-aaf9-439ce400948c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42560d68-5815-405e-92d8-7be95a5bb65e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c731c4d-def0-459f-b76e-4e5cf0301e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c2eb2f-943e-4560-8fa4-18d4ef0aa46f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c68ee93f-c42b-4186-b901-8ed51751bc4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35a681d6-d3e3-4c4f-a10b-717c27def4c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e91a8e7-e4b5-46e8-8f8c-43b1d77b0722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc3fcc37-c5bf-477f-844d-fc485a9a26ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5726e1bc-65a6-4762-9b3a-d49af2604c04",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a76ada6-a388-4af6-a21f-463d1355fa12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33085210-b12a-470a-9e52-8e2f39dca01f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98dcf761-5fd6-4254-892e-a83806f0469f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6c6c328-dd59-462f-86e9-86d526f91111"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3f361254-68da-42fb-8aa4-8b79a8b75c9a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bb8d6bf0-4653-4b90-bee9-25488cb5c5cd",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f7b8fe-d062-4247-8cb6-47161626cfe7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "99f8a68f-c48d-42d2-9f04-9fbc686d2d49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3842e3a-4073-4644-ae71-f2719fef82b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b2bced52-dac0-42c2-80ba-505526dcc9ad"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21e47fc6-7bb6-4965-8a5c-ebd98779d95c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fac804ef-389d-4502-8ee1-291ccbdcd1ba"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f5e2d37-c2a3-4c9b-baed-27d856dfed50",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "641b0332-b935-4574-a14d-8d4da5ebb817"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "efb25b6e-25b5-4dd0-bb39-8fafdee8ba36",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9137c704-f76e-456a-87cb-a2a0b31b8fb7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7dbf59b0-268f-4792-9e7a-593cc6471ef9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ddbe65e3-ce90-4a00-a88f-5e38509b6ad8"
            }
          }
        ]
      },
      {
        "id": "6aedd4c6-298c-49fe-b8f4-bd069e9a8260",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "320910a3-77e5-41f5-8452-4e6e1871f4f9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "15c5ec6b-dff7-44f0-b35e-226512763b9f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "be7e1945-7dd3-4dc1-bf3a-2fae545a10e2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44293c48-e431-4caf-8cde-077e86184c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2343a0c5-5844-43dc-82d1-c0e8d57a1b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "046e79da-b160-461d-a8c6-ba57ed12390b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdbfa06e-52c8-4f3a-b640-a0d20904a7d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb03f3e1-d71f-463a-a09d-a322fd9b8b35",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eabc7db-8060-4052-baa7-1cc3125f6cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c91e8a1b-ee01-4a96-bded-2e731477f428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b17a6a2b-6f92-4c9c-9c43-14af2016efcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "24285cf9-18cc-4b85-bbe7-ccf4f069093e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e5807f-77a4-4773-9a2b-49478350a78a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a7f92f-816a-4b2f-b34b-d01c8783f1eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceb9dac2-7a70-42d9-8db9-0cce3f49e832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51bc7320-6922-43c1-817e-3a1e18724008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2e5ff76-5ddf-4b5b-953e-931a6b045436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c77eb3bb-5c86-4bd3-afa7-ee35c03c08cf",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c72f2d3e-7a9c-4ece-886b-c0fa02f5312f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc7967df-3c35-4f6f-9e0d-29dfcd48dbed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8207fd7-e244-4baf-9568-be21893d614f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9ec98cc-3963-4de3-9823-f2eeaa696e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda95245-b45d-486e-8f98-367b4510c3a9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d54ab481-3f43-456a-bead-b7b4d72773fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb95cace-91aa-4a6c-af92-3bc9aaa969b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048fd8c0-b6d5-4f3d-b2d5-c4320d55e90c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bb7ea06-b368-4222-bf5f-e0c381adb7d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d76c8137-f6b2-44cc-89b1-3bfa0021506f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25227f7b-ca07-458b-97c0-8618f8a32441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a26c4cc9-81fb-42df-9642-ffb48b938deb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e4870e-585e-4a9c-abe2-10d9ab8884a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a95d4b2-46a3-4772-a4e6-991d68637616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d67e04-2cc4-44b9-bd57-9267be71a8d2",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0bb3fce-27dc-405d-ba98-fb21f5d196ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d81c354-3628-469f-b1f8-7fc495e2dfbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d0b97e-293d-4111-b8a9-699dd1c7edf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "45a9cae0-60fc-47fb-bfc7-713233d20c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ac6a848-4f8f-4845-aa6e-0c56be5a0bd9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e54f0c91-5989-4bc4-a869-d99848ed0487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8200c7f-2064-4fd8-bfac-aa95449de907"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e418de-c7b3-45ba-b6eb-3a4e9694c699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d6440d7-825f-49b5-82c4-16ea23c3b73e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f78292a6-d43a-4be7-9799-aed0602aa7a9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "375dd24e-92c4-4c93-b5c9-9a6563643fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8f241f7-0143-4938-af86-b420d8101421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98149f4c-f258-4ac4-949a-00acaa08c3bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6857651-e9fa-4a5a-978d-3abe1dacdc47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744d2e9d-e636-4f3c-b6eb-27ddb9138974",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e6a476-cfc1-4935-b116-70b2ee1d0470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3317e7fa-2340-4f6d-b535-e9af67d7be38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba1c3f8-82a4-4bed-beb7-65eb8718e8c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0965bcd9-caae-4c7b-9bc7-0ebc7c5101b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a67cc6bd-cc5c-43eb-aaa7-1676d8753c3f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9839cec-8190-4160-aca5-da246a156bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a039ebaf-628e-480d-9aca-9fa9370f6c1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16edbbe3-7784-4fc6-b87e-44f0733d4caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "03d259ed-bd1c-4a8b-8091-1b5056c4ba58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf796ed7-64f2-44b6-b48c-e28fe94a78d4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e5cda6-50a5-4e92-b984-0b1c5c1fed18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11414acf-6701-4930-aa2d-828cc8648ae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1656532d-3136-4d76-92b1-a64f6bfb6bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f561a8b2-f01d-4d7f-99f9-c62508ad4a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6268b1f8-0c04-48b2-957a-360a355ca33f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d7ba337-8e05-41df-a43d-67c21c87a53e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bb61056-27b2-4029-8ddd-4c956c99060c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e145fe9f-067f-47f3-ae29-91812a08b6b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "873d1065-7877-4b5b-a94e-a8ccc300ac4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ceb704f-dfd3-440d-896d-e455d217ec57",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c187a294-d6b9-4557-9f3c-d6e26005ccc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0e385c7-6827-4465-82b9-2ff616da8fd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c65ef08-f3f6-475a-8eba-0f0a17f424b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "17e183d3-e1b4-4fb4-98e9-d3cdcfc9c9b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670d5216-fa14-48e7-bcef-f13bef0a243b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b687ff9-1f0c-41e8-9bb8-3a7108e5a36c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79488206-3a74-48eb-b54b-00b4424dc7d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5327943-4dcd-4bde-8468-94e408453ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee6e8804-1f30-47ea-9c38-acf7973d04de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd323f61-978d-487b-8ef5-043faa9dc44e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae9d6481-3f6b-4289-8c88-7e74ebeabd83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7b2229f-928a-46a9-8409-8c44ccccb6be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f4b62c-30f4-4ada-a8ab-ffe78a4070c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "764e9d77-e082-42b1-b704-39cd56dcfd5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04092d40-35ba-4d8b-a625-09ae34a80476",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df991a5-2442-4457-a857-f9eaa902668c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8334fb42-55ab-44da-b5b7-5780c6f94d43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d25433-38fb-4c08-afdd-2540393e8d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "479267c2-5773-493b-aeb9-d09fe4cb940b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a904d4-6ef6-4a77-bf3c-b2bc73e87a57",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af10dfdf-c0ef-4730-9381-2ddaaa56d853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fb43578-6998-40da-bd16-63edf0f6b93c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a1a8a9-b17e-4ffd-a02b-ac031657023b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4b24c27-b856-47c2-94e2-e08a6b9ca1ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa3490c-0ed3-4ea9-bee0-b981be2f217e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a3fe47-c95e-4299-b0f0-27b576e6ebd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec386999-0be4-47bb-9fb3-3ab0d070f861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e81f342e-8681-4713-9ffd-50ad3e692654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4040ee8-526b-4647-b9be-57f55ae22cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1987c49-62e1-4f57-ac74-0d59c411eb5e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3134ffb-7bb8-44b7-9763-78f6ae791479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bb943ba-dbae-4b7f-93fd-ccfb1fb37d98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0e0cda-512a-44c3-a109-8bbdf4c79be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "515330a8-dcc1-4aec-b05a-2eb53466508d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab9a84bd-3b91-472e-abda-324040986a22",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d47e9982-4e4e-4f26-bf64-b642e3e8f9d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c5bd87e-a637-46a9-aa41-b6a42ac3d56b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e67ecf-dd51-4d93-9df5-33901089bc49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "631b6917-b21d-4f55-a369-b42aeebd1388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f9df954-912b-4bad-97fd-b1045fb2ce02",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75294296-781f-4c0a-a143-dd880fd430b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab737c1f-e8cd-4acf-9bd7-41777a9fecc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "856cbcae-7602-4bfe-8e1b-b6c7a47c84da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29f3d395-fadf-4101-a02b-87dc9b3d0c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db4b9a6-ff42-4439-b29c-26e8e5901e6b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1484d2f-18d0-4466-bcc9-1c4eb931865e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2085ed7b-c9ab-4248-b56f-c69e0f474c17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b63ccab-8a77-48af-b4dd-f45f04d8ce39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfefe7d3-2394-4254-b3e5-d37f0a95b1fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6c0373c-54ad-43cd-97e7-b38d40660d01",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d70e08be-e4e5-4361-9aae-2736ad51ab01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c6f10e4-f4aa-4d3f-9ccc-9623ec5e1ea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4333702-a923-4cc3-b3bc-1b9a24aef502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0e1930e-9f56-4134-8c8b-7f37ec64634b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7685ded-cc2a-46a0-bdf6-191c43c4a43d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6ca659-46fc-4213-b2fe-540a4f9cf849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c995b95f-ca71-484f-94fc-c90c607b6862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ba8ee5-65af-4d57-93cd-68009e5cedf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e4d94a1-4cca-439c-ad24-7f2375c951e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ccaac35-2948-45ca-8964-dab3e85a8943",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9781cf4f-b88f-40dd-a41f-fb5d3c418eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02910151-c1de-4262-b81e-3ca72bee8b96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e38e3304-717e-4867-8917-c224f1630ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4be37e38-91c7-4eb6-a2a2-f66a5baee0a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ca3227-37cd-4493-a654-4ede1f03f096",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04318822-f6f7-40b7-8c82-6513e6256ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11b65300-0596-413d-a82d-562a06a6f81e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a99e779-1738-4985-b939-661d0ad1263a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bef12338-ebf6-4e03-88ef-56477053c212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2619b05b-b20b-4e70-a911-f8e736dcdd93",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a15e9347-8ade-49bd-a1d4-c2d20f1ab697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c6a62bf-4420-4de1-92f1-c4a842981063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a87d6a2c-f08d-4180-9c36-985028bf1753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7d4590b-c4b7-44c6-9f76-ad28b27eb7de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2d2521-9116-4963-a072-c74e4b66127c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "505f0228-b958-4ff3-a41d-e173ffb6c87b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeca6246-beee-4ed6-b628-7ba7db9e0e56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0693cd3-32c1-4828-a647-5d464109a3dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e41d6658-061a-467e-acc6-e3e2f68a6d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f78a0fc-0f36-499c-aad8-5dfd61761a05",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db7d8760-4431-4651-a21b-935c49c6771a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bf6242d-ad94-417d-ad91-0af6a756d390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ebfdaa-61a8-435b-8d00-f2c38551b6dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e70a4d56-d9ae-4c3e-aedb-3c8dec5b917b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db6bfac-1787-4010-a6e8-1ab386039a26",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b7e5b9f-fe50-432b-9c7d-c036d924d3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b834e91d-ff46-4bb8-83f2-a112d17f43cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a03e7b9-6da0-46a3-85f7-6c9d4f08288f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09d41c60-4962-4480-b36b-21c2ab5c0c85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9d6c97-5d98-4287-a2b6-d9762cff6432",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "508dd8e0-9c88-4c6b-8dc6-212c4a65aeea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29e0a812-2f36-4e29-ac9c-ab301538bb0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e1ec8c-ca27-453c-90f7-0fee4dcfe069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de10d1ba-eaf6-40d5-9040-2569649e532c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7627492-1e14-4407-a88c-d2977c11e4df",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c33201-d1af-41d9-b4a2-5928a0505d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ef381ca-7cde-457b-ab84-692cf2526d51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb5f12ae-e121-484b-9914-911593de0de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb65c5d0-57b2-44a7-a6bb-e3e454f91691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "726258d8-4a1c-434f-8130-4de0af4cfe66",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74fe4113-0eac-4abc-9fab-28aade1522e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27ea751d-3e14-45be-8ab7-1f3d9b0f85be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "281e55da-a2e3-4e96-8918-4835734591b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f3f2d3a-03f3-4be5-8690-550910fa8641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5966e2-6237-42a8-9022-0eeae84252cc",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a494560-0195-4ca4-bee0-ec3dc651496f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58eb43b4-8c68-4aa3-b968-4f42b94d2dbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d21a4f7-0022-47d1-aeda-395f709f6908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f455d45a-7164-47de-ac6c-55b61bfeb831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee804860-4f43-4524-a2cd-b85807b70d24",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e1ed1b-460e-4615-adcf-1b76c8867bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7ba192a-5d1a-4547-b686-d6cfb75b8f0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4370594a-821b-4a98-9187-d7c378758870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9055b5f5-f24f-4ffb-9592-820eabe54f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "314bd1c7-81d5-462c-91e7-7efeedb83a69",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b3e0d3a-9621-4c07-bcf8-b737835fcd1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "486c0be6-8622-47e6-8245-c9d90639a12a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21966a6f-e3a0-4d4f-983e-9e6b8b131e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23746b83-ea45-4abf-9e66-afcfa366d0e0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "746fed55-8239-4b39-8cc8-20aae9681e60",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "59e8d7e4-3443-4f75-a75c-09e33be39c5c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff92bf4b-d83f-4332-9c34-71cf6da306ef",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "28e88aab-6814-4ef7-9108-a78339268838"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "030dd281-8afd-418e-9aa4-a0855f9527cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2533315f-8fd8-4763-97a4-e2c2000172ca"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "70a2d37c-e0af-4214-92fb-2ec6f7d00642",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da02307e-b295-4ab5-93c5-dae97acf56ad"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8620592-0ae0-48d4-a743-ce0abd8ef9ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "433073eb-d808-4274-b7f6-ae233855cd8c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5f53f59b-b880-4a79-9798-9a20b127e40a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cf74151e-f493-414c-a902-c5b8c9a5014e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1ed55d23-ea36-460e-9284-06503c6df926",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ead41c2a-a2f2-4c6a-8371-a7921763a60c"
            }
          }
        ]
      },
      {
        "id": "a71c667f-e49b-490c-92aa-eea397e1f18d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ae8d4b19-fc0d-49a7-8bb1-616ba857aa88",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0b639fd0-deb4-4055-9b18-7f9b5660cfcf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "aab2e3db-8309-40ac-98af-f4740905d9e9",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af7b68f9-2c08-44e7-98d3-917f0df7401e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de317d10-0b97-4fa5-8287-5b25c6128062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4534dd8d-0f9b-44c6-95bd-d8087c1da60c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8baa25a6-2dfb-4544-bab2-af6de1e5fa0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91b9fc22-ec4a-4365-bf1a-3c8efc3c13db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c60754-457d-43e5-aff2-1cff3454026e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e6bd4a-cdb4-407d-a9b0-ce7ca081a4f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "686b5a79-931b-4d16-9ec2-636441c358d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b73b350-ad66-4955-a14d-2506c4fb0b1e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d44fd6ac-0417-4d37-ab60-119d5d57b04c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "328b63cd-9bee-47c4-af07-14ea7bd732e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6704249-218b-495c-9a3b-147d5c5814ce",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7bfcff3-6731-4b10-bab8-169840b14b49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37ce56a4-8215-49e3-806a-15b88407436a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b41f5a00-5fa5-4e11-b7ea-d6eb837d822c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5b9e7e-766f-4b43-8a65-d9565a39c9ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae7d88e2-bf9d-4821-9aa6-489059213cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a71f8674-f612-4f0a-b2ee-41479727f8db",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8573d647-b5a1-424a-a197-db59ec209641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee6ad647-f13d-4dbd-a367-3bf65ce2884f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c43fc19d-af79-4cfa-a4e8-0d57613d4c6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f1ee5a6-fcf0-4086-8e65-a9eed41f9f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac7d88b-36a5-4f06-afc2-23f16e2b7d11",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5354293-cd75-406a-87c2-7874bd413143",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "896528d3-656f-4126-bac8-6cc2357c612b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4796dcb-7bb5-477e-bb7b-2aa91a3ca01b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b4ad9c5-464a-4e67-9959-2c197585411f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce3644f-a16e-498f-83e5-f2f137a86696",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "896682fc-d927-4851-8ffe-9e5e2c8de4be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae563717-c54f-4aa5-bc11-9129f62406f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfdf5d96-5bac-4e69-94c6-d3ac23f98be5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "729f1739-22e4-45ce-ad9e-6cb953dcfa11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9052743-fdf5-4ea1-9e27-b4f8fe0b59fa",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596eb867-69b8-4f45-8d31-adc1c0da82e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff7d1c30-06ad-407d-9f71-1c30884b7c66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd44ad1-d93e-46d0-a835-e77f0f955de1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcf14de2-9803-4c15-a5ff-d32b244620e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ce19e8-9aa7-485f-aab6-7403e7567043",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e266500-57a4-45ba-bb42-4529c67a2fdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3b0d9da-ebd1-4518-a269-316e0554f5ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ef1429-60d2-4ece-b09a-a2c0324a445c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ee0563e-2e26-4673-b373-23002fdca5ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f48270-b4f4-4ad2-ad4e-100ea40da1e0",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "806ecd2f-eeb2-4b12-861f-4b873c588934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78418996-5765-4372-9532-6f0a4435efda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d979522-5b64-41e3-90b6-a62a414c43de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ccfb834-b3df-4804-8301-783b04611e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a96b562c-b2de-491f-a740-54e32b7b8165",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "499951e2-b1b1-4a96-a519-dd1e1d34c56e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ac34b4f-599d-4a0e-b3e7-6775aa9e8ba6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80698c7a-8f50-4431-8510-bc2ba1f1c4a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80f1217d-b6d2-446a-adb3-487f4571a29f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5dc2661-44c4-45f1-a0a0-a2b32e4e006e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd858fb1-9705-40d0-8e74-2d8e6d651436",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05353f2d-ae74-48d4-8ba4-a2b6b7a9d405"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e7c385-2171-4cd9-ba63-649ea2b594b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc0cf628-8435-4933-98da-93c1a898d553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5361b3fc-3885-4050-af30-49c5bb7da16a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1756d16a-6d13-4394-8bfc-98b17b45eda2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ed7baa3-d15e-44e6-9dca-cef5e8e79808"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b48d6a7-5fad-4e27-a46e-6b6e0b0be34e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae70d996-c420-4f0f-92c8-081473a85784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "878541b6-762f-409b-a42b-3a4fb9761687",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14db7631-6bca-44d7-be8e-5f2d2f501421",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fcaa897-b25d-41b6-b053-1a2145e77917"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73348e4a-fce7-471a-84fc-f3b036e89739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94f445f2-76af-4d10-b8d8-e9ac9ee8b159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b429cf-dd0a-4502-a855-0dc0ee529a1b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67cfb938-4539-46c0-aac5-d633264c4c6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ab70ba8-6188-4bbc-b25d-6bc13b758b20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1bbbdbe-4a66-4c68-b8ff-54c4dbbe5c27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4716481f-5024-403b-bca9-965ea28d536c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92537c9d-0338-42e3-8cd8-332144efc58d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad3629cd-08d4-4ed4-9adb-cf9a3927c929",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75958485-ba9c-4243-afdc-6fc06205361d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d72eb09-762a-4fb9-9f8f-0ae907eb9ff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e8bb222-7a61-404b-b463-2f0be76655e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7604406b-78fb-4088-b1ca-373730371966",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b02a71b-33b0-4d32-9b59-4df4af9513b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19292b2c-7c68-490d-841c-b3a3dfcd835c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b75a9d94-c894-4bba-8d07-3b6a7c258aa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6a87fc8-3130-4836-8827-561ba1cc8d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca5881f5-dac9-4ab6-a62c-219b33e1ee1b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e7fd9f-4794-4332-9606-87593e0a8d4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67f2c563-93f8-4b60-a815-b94bdf3a0fec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71a77a4-843c-4421-a264-edfd84a41591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e1c6c6b-a476-4b3d-a22b-c19c5b089110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa8d15de-ec73-4157-86ce-d6997839e9eb",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ae966b-0dd9-466d-adfc-169505a0d321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "798d6da9-a282-4080-ba47-da10917a0333"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c395869-13a6-43f6-b2f1-171fb70b0d8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40c4af0c-a9b6-45cc-b5e3-dda1b3a598e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1211a17d-fd90-42e2-90d2-f6b71ac58fe8",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f08f2b-97ca-4ef1-ae19-a43908d6cf50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d111dbd2-8c26-4fe2-b162-da2b0f6753a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8454422a-13cb-4e1b-849f-79fa5193f0d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f3f1a28-e0b2-431f-878c-3bc32032a10f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f32e02-6e74-4139-b0c5-6c95fa0fcb42",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a90fc4e-93d5-42f0-9b5c-7a6a30c0b449",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f372bce-c1c9-4e46-8661-8eb42e353e99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a00695-fc5c-491f-bc54-d239fd5a804c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3120954-b443-4af9-9e0c-044e6c50e61e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a4ecc3-0d86-4ac8-ac0e-485329ce9bb2",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c452fe-e407-419f-8564-5200e03b35dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb8c1e08-256d-41fc-943d-528544317ddf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5dc4b90-ffff-4767-b2c7-4a2b3b0ca18a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad0edddf-2fc5-44e8-b1c6-177ccd5311ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c20956ef-3eb3-4a39-a4e3-354ad3224d54",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7301549-ce09-46ac-ad56-fd3089951f33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b772cc8-2da1-4f81-87eb-232e8c0fc528"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "657bf7cb-84f1-48a1-bedf-2f39d0ea4478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa51f271-de51-492f-a56c-e03d2c08b780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5581a93-af12-434e-997b-86369511eedf",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "386d1825-6498-493e-98ad-3cb3bc12c3f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5173583a-e612-4372-b2c3-4c4d0049f67c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e72475d-36e5-4bf1-a277-4955d7ebd085",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "409fddf5-7873-4108-91b2-b6c7e85d3d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f53172-8ef4-4f6c-a4f4-d24a4ccc0ed9",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cec197e-5749-4c4d-9b94-756b1793e60f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9938cb7-78d1-449a-98fb-fdb201898df8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb6913e-2da4-4e69-a342-86f0486c4823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99621e3f-69aa-4a26-afa9-572507fc6320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c621ef8f-203a-4ebb-9223-39f18c49ead9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7349ec7d-a7bf-412b-97ad-6aa45b1bf157",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30980fd4-93c4-4c1e-b440-e70e9cacbc20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e924b2-8fb1-4c28-bdff-210b643d318f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e916da0-3a6d-4bcb-bd97-297ce3bb896a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f55028-8c50-4c0f-a1a3-0d9f7b4f2f02",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1488ea4-b8e1-42ff-847b-327d29f59b22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b121a323-9fc5-470c-bce6-3dd46fb0a1a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c617b0-2bc7-46b0-969b-399d7f30f100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3f1081a-37c1-49d1-ac73-ad82ce018133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ce9557-43b4-49b3-86fe-6778ecac3a72",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639847bd-ba2e-4e90-98a4-cb816bc8d6bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c7c71f9-faf2-4eae-b494-ad40ad0d2900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd5a0e7-b883-4eb3-a322-08e7717f915b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24e7fa91-ce39-4085-86cc-d2ec1e7405b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b7c4d7-a2d1-408c-a417-22dbd14a73bc",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab686f8-1e82-4665-b2ba-e1a3a49f38b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7b0b780-fcca-4f54-8bd4-32ecb3ec0105"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a54a2f7c-a8d0-4dde-8daa-d325e6e7c6f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c13dc14e-4ebd-44d6-923e-94f6b47b4d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2a5c13-4063-47a8-a338-e45e9e2d2706",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83001b76-7d5f-4de8-b31b-b79562855bb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3feaf97b-47dd-4011-a79b-23075c09d53e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7417bd31-e74b-4a0f-8733-205a0661cf58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1db4d60-b6ce-43d7-bd46-1f19c89fc1ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83a31fee-8a9c-44d8-89c2-bd3231e925a7",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e394b6-1411-46a4-9069-78e40eca16b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7f5f951-ee6d-4c7c-bb40-8f2c12749ebb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57580f7a-06a1-47a5-883d-f52a2ad2d950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2be60e3a-fc2e-4b92-aadd-217486ce9ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c7f5d9-00f8-4373-bfab-eb2d8ced35f6",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "090bdd70-56b5-4c8b-af42-8c2480580acd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a64ef2c0-7d1c-4895-8de1-92c0bad4ea40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c45ec21-72f8-405a-9228-70f31a4adc69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abc2550a-7add-43ea-829e-f49f4a5e504d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c949a8-8ab8-4165-869b-2afc28f64d00",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1512583b-0d8a-411e-afe8-e17b20f1f568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "001f973c-c697-4a64-9b3b-aef6f3932156"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4c5126-ba6e-4225-862d-010f513dd0db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a19bb19-d970-49f6-9c80-359974046c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ad8c70-89bb-4d4d-9171-4e93ff018332",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85aec387-b155-4cf6-9e86-9d13227cbd1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddb1a31a-795f-47fc-9edb-729a9f9eeec2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7cf9276-35de-4b3b-8bc4-b87c1e444dcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4210ab57-6ffa-45ec-8064-c142ee7144a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ab71b3-5ded-42bd-819d-75cd68ba2e14",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2059a37-6257-4a9a-940f-94040ec2312e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c194f765-e7de-4ab7-a515-ec2a0ffa6acc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "159a950a-0f05-4fdd-adff-38cec73faf7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04b3b15f-dc6b-4846-97e9-cf84e10f950d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a5c13a3-b5dd-4641-a8bb-f86375f80820",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e0960f4-ecfe-4e86-a31f-8561b7382207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ee0bde6-1915-489b-99e7-e46f1b438eb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e517d25-72a2-428a-87c7-d3dcfaadb6f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eb8cbbb-b5ad-4a06-be17-52d7147eb58d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ccc5c4-6bee-4534-b4da-9ca6a95ea4a9",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baee19a6-02ab-4762-9b13-cef8b1d530cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8debca7-67d7-4c71-9bde-174f2f593b54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "441fd440-5558-485b-b8d2-79089beacbb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52d80a6f-4ab9-4111-b1b4-c134933d00f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d035f8c-cc1e-4f40-b04d-dc19bdaf118a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d08ab0-76ce-4e71-9808-a4cc01418495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e37bd9ea-db03-4357-9538-6588ef329fb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb748c18-5caa-49aa-b701-8b2f70cf5263",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e105c40f-fbfd-4232-9e1a-6d54e934c515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfeec3cb-36ff-4df0-92bc-96a9b0d90bf5",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83447e3-cc34-4c44-9b09-b04869aa7170",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa0f8883-ab94-472c-a4f1-289780c0fbdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf14519-2997-4595-87a7-9e77411f10b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e43e5b9-511a-4083-b2b1-c9f08f93aa9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06deac97-4110-4d84-a26f-584a1aae72ad",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8f23fe-6aa6-47b5-b195-83672c23b25c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d6bb4d1-d4ad-4ee8-b5fd-80d85ff904f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2340b35-02d5-4e1e-a679-84cf9225c92b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6b70284-2229-4cd0-b2da-195258e58412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd5bcf8-a4a1-494b-9079-7bef68bc97a3",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a838db57-50f0-4a97-af73-45d9a767cc3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6065dfad-2061-4300-93b5-1113bb0498de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb6f7301-2c2a-4339-9378-923f6f57fc3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4e85c72-4f7b-4e81-aabe-4624d2f65d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16cb6154-7890-485b-abc4-a3009abfc94f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb79a438-149d-482c-ad24-d877730fb38e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1543b5f-c2a9-4d8e-9df8-1b38b072ea78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da75d0cc-481e-468c-8cf1-9a1cc69b0386",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c33baebc-322b-46b2-a4eb-7f188513052b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef2b1221-216f-435a-b0e2-6dee4d16ce63",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc846a1d-29e7-4b52-9731-6c786c3f4ce8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "146c1230-759d-4d33-92e1-e1e897f788f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4538df00-34a9-42ef-bb4c-2c96b0dcd08e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f09f770-4fba-4fd1-b5e6-b73794ba17a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0770143d-5eac-4eac-84db-478899e8539b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d71bffb-4a2a-41cd-88e4-00662a48864d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bac19fb1-14d4-4e26-be27-6d7fd8796d87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd56c96-0710-464d-9ec5-c1b1c258def4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40f8fb86-8cb4-49dc-ba8b-daf8d897a200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20223583-d3e6-46fd-b1da-27cd3b4583f3",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1789aad-faaf-4d71-ac19-3883374d13c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beeed016-0881-4715-8757-161c290afa1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3008a57a-d231-43ab-94d7-e3ac2bd0c7bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9486e8f7-2745-4a03-bd74-b38ea34f07a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2863a794-ac5d-4bba-b656-d5d6728c1ef2",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a5e1a6-2079-4bd7-9c55-8e0f7060fcdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "045c2eb2-7e3d-4c5e-879d-e5068e859889"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db00d1d1-4373-4688-94ce-0d94b75a08a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "063cd824-68f8-4d69-872f-b41814b2f304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09caf060-687b-45de-86a1-731ed87d4e02",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6713d98d-76b6-45a7-824e-82413de161d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71aef926-db72-47f0-968a-fd71fddeda79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b25a741c-6eba-4475-bdcd-7a08de854bd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51999ab2-df31-4b5b-9427-46961f91fa59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ac5e43-eb6e-410b-b767-51cb5b0d1e2b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9aa27ce-a015-4c29-a461-db38f73191a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a87d0dc6-774b-4d83-80cc-be2aec906a73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0daa57a0-ab08-4066-9409-a87da3d14a9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f209519-b76f-46ea-9c15-f92b64187cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd1bc27-0b3f-42bf-b858-148b3af2d7f5",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05a2348-d01e-4329-8e45-48e3395569cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e956ff86-dbcc-40bb-8748-0f7ca7a263d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b62f4722-af63-4b41-b8c3-427d26760a7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a403936c-f9c8-43b0-a0c1-0680f254947c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e45961-f444-485a-aaff-b088a0cbafbe",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51950cd2-fdde-415b-bc35-02bdbe35a4a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "743afad6-95fc-420c-b569-507ca9b3c29b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0814234-5579-452b-9b0b-a22eb4c2d8f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d7bfdd5-42e8-4c98-9734-48e415a8d3c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca32c3a8-e2a9-420a-83bf-98d88ec8c434",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea91b0a8-e7ae-417b-baf7-566f0a63d1d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "159882bf-729c-4ad2-abb8-d79da53b822c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "830b0507-674a-43c8-8508-0f3110308dae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "402cedb3-58f0-488a-9f38-2b1ae4eae7ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13d09f6e-7323-4e59-93db-bad4235c16c2",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d21928-83c8-4442-9cc0-8c99dc4f51f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a59c0b54-ae32-47d8-b9c2-eb1ebdfcefea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c71575-c08a-467c-9138-9ceed1a47e2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45683a71-e199-441c-ac26-28d392c7d6a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c0a37d1-48b7-4c56-b7b7-d2d4b7ce3216",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8909b96e-7f79-49dd-93d6-818d54936c47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5918d88e-37bb-4d82-9816-da7d11b072d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac0506f-63a6-4698-b711-9585e2dd2f4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fa2dc36-911d-4005-bd1b-381fc030c89d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cec0006-c9e6-460a-b938-38c9b78f3cd2",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad1a551-2bac-4c20-af25-9c4c03b2d042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a88b869-0806-42fc-9cdd-9bb0657d6154"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd091fb-c8a6-43a5-a382-68b9085ba116",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e53d6788-eba0-4b00-953f-775734595bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa32d686-d96d-462b-9b56-9950183a5870",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47980082-3aa8-4896-b685-10a33e045e86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7afc3a9a-19a6-47bc-b172-c0960f9d947c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a948e7f9-c0f4-4c57-90d4-57250746578b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c1694a8-ca8f-4338-8528-5c35350e98ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc96298-fd4b-4c67-bcb2-2c0c448884ea",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "227ff7c3-63e7-431d-ac59-73878a5f2ec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40a6e16d-6677-4e08-90d9-d373e53b3cdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a74bd455-aa44-4e8c-9ef1-bc530dc706b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15b40d54-83ea-402f-86b3-3343889fe6ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076f1359-a3c4-474a-930c-ae020de6220c",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af2de47-9660-4e1c-943c-3826dada52d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9569f734-9664-41a2-b086-f35f024607b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc88da5-ad79-4716-95ab-4c11155317fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13ead601-845d-433c-ae20-9023448cb57c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c058fe73-eeae-41b0-9989-6a11e1fff41b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d4d564-172f-47b5-b01d-889a752a048d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b1a54cb-c455-4b2c-b2b3-7ea5be012ae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "253ad066-0d2d-4c07-a384-727293715fac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef491c94-bc93-4e80-9bc6-3ef66bd3d90d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cab019e-2a95-44fc-939e-6a67bd65663d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba4ea36c-c243-4c13-aa1b-a5818faf9700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05f65d8e-9a8e-4bbc-8d39-5088f6006678"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23867341-332c-48a2-a039-fc5d4e47fd77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7be917cb-2327-4b16-bbbc-a24bf0bbf8a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eaa53c8-1645-4845-8f79-b0daf5c8c1ae",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f99a74e5-734f-4946-8918-1066efa1dc43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1a2469a-0e8f-4104-9805-d7ed75a1d670"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c50283e-fded-4a38-9b90-4de5f2411a98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3da8f3a2-a4d7-433b-832a-d9b33f2249df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be7924c-6f63-4df9-9a14-ca8cffbacbbc",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b109edf-dd10-4541-a534-229f883ff58d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4a7bd56-d13d-448a-a022-f0a5d44e3d33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c24e758-d877-4f85-8630-bb317f2e146b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c12d9e1e-eff1-4025-a542-3a46375ff8a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37fcd35-706c-40bc-8f32-011f7ec67762",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb04663f-7976-4b81-aa90-d9b42c29729e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2480ae19-ee3e-46a8-a4c1-f18623a9868c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f764e9-0fa8-4bd1-924c-f5fa5d1ac01d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bd9b5d6-9a60-42fe-8f0d-4129e69fa958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a25676eb-f056-43d8-98d2-170f129a1af1",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9625a911-b3f7-4225-bb22-4b11dcc18631",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd72394f-b45f-4ff5-9eb1-cc02393b93eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8af9a0f-6558-4816-90eb-8aa7c9bacf46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad7b7f76-bfa1-46eb-8878-b2f034f51e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3552bb5a-a8e5-4069-9f13-a2c338cdcf75",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adda91f2-f492-4db0-8148-0b30a9bf6f66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "127e1325-a41a-4579-8fee-15ed25211fbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26fb0fc1-fc99-4fd2-8cde-323897c17649",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dfc9de7-7872-497f-a29f-8f3d7e43e26d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ccc4012-e9c4-450b-a717-15cd178e32ae",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "890f8bcd-f638-4f9f-a83e-6effe0e784b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9eecf4a-8651-4e3d-bd3a-9d1446a9a383"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99730998-81a7-40d7-91d4-4fb979d47a92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0828841-d54b-4a19-8d53-5896d28de5ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee7e1ad-020c-41ee-add8-1e39beedec9f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3bc0f3-4f7e-4a91-ae37-c3913f5e2616",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "497e9388-a5ed-430e-ad46-984a4bd15c7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "233821c6-b22e-4ff6-be1d-b285d6fb994d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01f69b65-b393-45d2-a6cc-8da7c3d4f335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0afbd0d7-870b-4a80-8814-f2c47d1a9d60",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639c961c-3e84-498e-9c7f-feced547f8c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9159947-cb25-4e69-a9c6-1cebfaa3219e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a142edfa-9242-4653-91e1-9d33bcc33baf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2f8130a-ba69-4f3a-b001-d87a8b6af84e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55232c4-65e9-4355-a371-6203f32f2c25",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3588a2ec-30b4-495c-8cad-bdb8e57b71d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46b19c05-605e-44b5-945d-e45620808fb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a5da947-8132-4db6-bca2-701ffb0dbb78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bebec403-14dc-424c-a240-31a87733e653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75332137-b119-48a9-98ba-bcf9ff861f11",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b69ba6b-8430-4f8b-9ddf-f251fcecfeda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ead4fd5d-6dd0-4bd4-8e2c-1e6b21036fb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d39a22f2-6b82-4668-9f79-43f8aff70b60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a7e32a3-70aa-4ed2-9d86-291ee4ed2332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd082dd9-da9f-469c-a2b2-9484e4f9f0bf",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d78f1bb4-67c3-42a5-848c-93b48c57918b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b35975e-4319-4afc-b214-7fe0c6df6dbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "711c45d6-fd77-4019-beee-ed89ff390b70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a0a6386-f38c-4dce-9410-5369dc7a335b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba888775-20bb-4dc9-ac58-0c1571ae0a22",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43fafc18-2b2c-47bf-8994-ae3ebf148751",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1559bfbc-70b1-4dd2-972b-042ce2492a65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68cd548a-5591-4977-a16d-f9bd128f2a09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23690b07-3967-4c62-afa3-a050fb5485f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f92a9683-1efa-4fb4-b408-a066db314e3a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b9fbef7-992a-4b9d-a155-72bff273d0e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0645786-791c-40a6-a03b-8c5eb57ccc11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77fbc157-6bec-459a-bc8a-28186d34dd92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b675cdb3-3b2b-4973-acbb-27e45d233211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "322a7c91-5421-4216-9d6d-73c5a5ba8cba",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d7e048-452f-4af1-adc6-6177483d1543",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fca0d25d-9e13-4cc3-96d7-0406ff5cec9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4040f7f-156d-414d-9c61-8aec42cab7e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48180cd2-4966-45b6-b245-95d5f1ffa0d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf611da-b62c-4b93-afff-292f04902d95",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9e89dec-f23b-4097-983e-6d27e7f89c9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "701851ce-6c5d-4095-8437-d8d6eb3ff5db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad33216-14b2-4d78-8aed-1ea09096a0d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9b5f1b2-cc5d-490f-a0f0-5e9931701298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f780eb-e145-46ba-a58d-ead38a329eb5",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d513be-51cd-4fb5-8402-9950276c66b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a00e1f34-b064-4e26-93d0-89f1bde90f92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43fbc5ef-10a9-4307-863d-f1d6232cd49d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bac8bfb-e519-4984-9b0c-fba23b85ba60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d287a1b-7395-46cc-b30c-834a1b44a0cf",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "285e8d7f-07ea-45b8-ba1b-8b698ba8dade",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a519d347-3c5b-4fed-b124-bd65e87f8d42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f728bc77-9df9-45a2-b6da-27aa1dc51ee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a7f7b2a-e01a-4da1-adb5-29e723f5bb34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d733f9e-e0ac-4fef-ae9d-3648eeda0c71",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edef0b9b-8042-49c6-a4b7-bda55b9191c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab534527-a705-4844-846c-c5ae7620b169"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a6b9c6-6b63-4d1c-a0ce-3b27089bc04c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb0da38c-590c-4ebc-86fb-47c5d36343f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "873d3f61-440e-4834-8fe6-062f7458c863",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca85ccf-0adc-47a7-9acc-113784b05461",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "233e6c90-1883-434a-9c34-4ed3babb204d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff8073a-8dbb-4081-9f86-e794baad3c7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66fa5a8a-a832-42c9-8307-4aaafc80ad98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b29d149-a2bc-4629-92c3-f7d73f1432e6",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41fe224a-1af5-4519-997a-29ea585c22d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87cfdebb-7dec-4c48-8817-c7af1f971bf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ae4ee9-367b-4cea-a3fb-9e7f69fee15a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f33814e-d419-41cd-93e0-4b68a3652faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea22cd3-36c9-4d71-87a4-a3e43ee0b783",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33cc5cdb-b539-4611-bba3-5a2a724c8645",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dc8f7e6-04ae-4ef6-87b9-c525b172145b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5477e8a-8047-417f-ae3b-fc2e0153fa27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "208cb86b-6fd0-4d78-8b0b-19edcaf8d9a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec0f7626-1445-4b1c-af5e-564e123b63f0",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c8bbe1-2bba-4390-869e-d9937bb2bff9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44f1de6a-9728-46c7-a9a7-5f17d9719110"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c672bbd-d658-4577-916f-257e35e3e668",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56716fdf-b31f-4674-a5ad-77263a3ecefe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d53b22ce-e3f0-4061-a09c-716a25168adb",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38668295-bccb-468a-b6ff-6e1efc3c2657",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efe4913b-f7ef-4f83-bdf7-e314e521049e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5845b29-6557-45c3-82eb-9e19afe7120a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3694d661-b848-41b0-bd3d-0c9eb60cac2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd7a42ca-84eb-4da8-9e3d-853f28327c85",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9675a387-edd3-4d4e-bb1e-5f88e0273a9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff1a7364-356d-4592-abde-be834f2998c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb6d92b7-a172-4bce-8686-4965cfee2080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52923b33-f314-41ef-a1c6-421d998bdaca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a5619c-46c4-42e7-9f62-c7240f2c409a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b134fc24-d8a0-49d0-85c3-345ce501c105",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bf922fb-ab70-4490-ad41-8f94f545f1a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2cbeca1-8eda-487a-afc7-f78251653b76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95be18d8-e93e-4f2b-bec1-afde6e88f2a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39147dd0-79e9-40c2-8cc0-3a21b52def09",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad6958d-e3ed-4ddf-bc97-39b91ec920cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ce13f2b-2f37-4119-8ee3-97c9a7c4b7a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c6a13d-c126-4d47-9347-56da83de5ced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ca4fd4b-c73a-46be-9eae-02579c09a006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa69d7e-08c9-4204-9581-62e933e8e455",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4e993d3-d594-4dbd-9636-9d16f044b4c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f0c55ce-39a6-4beb-9991-8030b68bc03a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e48d65-0bec-46bf-bede-d690bbab80f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ca8659d-fede-4cd0-80de-4722e8de1276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8024ee1-7fe0-48bd-8c88-6fffe4584d37",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e841c6-5f4c-42ce-a806-969a5d85cb04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b56d6cb-475d-47bf-81f1-2994ece1b322"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7376dbee-78a8-435d-ba99-4ce4dbd8ba11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef6cea60-e336-4e69-bfea-ed5471031e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53fca73-60ea-4011-8f8a-d4aadd8a8c31",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "749cd57b-2299-40a8-b30e-0f69f50e9516",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5834b351-7563-40ff-8854-652f6fa16915"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f1f1ef-6a6d-4a9c-be55-26e0e8251629",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "482f4a91-97f3-49b3-91e6-dd45915e7885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d0347ae-7b34-482f-ae2e-f3f943ca7de6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae829a63-4ccb-46ab-a95c-4f9dea63e1cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae022c21-3e72-4c79-998e-58a309180c16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fe3f626-f6c0-4cc2-85a3-82b8180665a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a514d95e-8969-4958-9818-972e0208ed49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0deb8c26-5bb4-4dc0-adb3-536b429c71c6",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9aa5f27-4828-4dcc-b91e-82be0e32324e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ae790ed-6907-4b4e-8b9c-05ffda9e9a36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a339bd0-c465-46e1-a048-9fa5a8502393",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3be6056-1a3f-47b3-8dba-5195c08fa43c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13cadccf-01fd-4b94-9105-71f365dc72fc",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73bd358a-46dd-4492-9492-3b349273cb64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddb37a3c-5fa2-49bb-9f7c-513221659cd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d2f879-c75e-4490-affd-98df20448ed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1ab0b27-8fd9-4cb7-8370-ccdb8267768e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "017e88da-a938-4284-af9c-c48d9d1a23b7",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b2da9b-8a4c-4c49-8d0d-a9045ba1d572",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b53319e3-dee4-4e9f-91f6-ea8663a90f27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01efc7f7-4d01-4c97-a730-376b8b78b79e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dffc3853-82eb-4eee-8bfb-496a00f46ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d69b2c2c-43a9-4bd0-9135-c60a61c0f7c5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c16f01-96b6-4f3a-95ab-52c082aed337",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed8bc806-18f3-4669-bdbd-4783423bf0a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2aeb13d-6737-4f0c-a57d-bef40ff8d1ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "020be9b9-6f04-4868-992b-347212a97a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0015cf-6a2d-484b-994e-ccc7633acab5",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c264d355-a281-4942-ad2e-3e5eed679c7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d24e7f00-fc6e-4c42-90ae-e7eb408087d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "209f0aae-901a-45f0-9433-aa1bc33f4c3f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c8f67b4-39b7-4d1d-bbd3-7fa3ce50acdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff6dd85-d227-458d-af2f-9aa97a826f43",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ffad15-de1c-4aed-bdc9-5a53440a79e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5d7764c-3d25-473a-bed0-6c3f521a4377"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf995ea-fb37-4718-aa22-756980a64eda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdee2e19-6e9e-4ad1-98fc-1f0c2a5b5289"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a8eba1d-a65b-4524-90ac-e421a7f8d113",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60acec62-0655-48d2-91b3-939f456fbd46"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e721b9e-0ab1-433f-8c6d-0959a5e5e720",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1c0a9884-264b-40fc-b1eb-6e10167f265f"
                    }
                  }
                ]
              },
              {
                "id": "39fd7505-6283-4a9f-877a-ce2f3ac00ce3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "efe92e59-0872-4633-adef-fbeeb5fe22a0",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae92072-6a0d-469b-af0c-1065c72a5cb5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "6eca72c2-bfd1-4bc2-9694-285b9a64a54a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b2e1d86-835f-48d0-b579-e4ec18701c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8fb293ef-5c11-4bb7-add0-7c307c00d6a4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a0e796c-ed2f-4ebc-8198-90459078105a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ddc69a17-6796-4379-9733-ebe3d5b7d2e0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3500dcea-76f4-47f0-8edc-33560e5a2588",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29fe6d97-f252-488e-9ad5-f30bee9c68e1"
                    }
                  }
                ]
              },
              {
                "id": "af4f261d-e956-4ee3-8d63-84466106f744",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "ca12e80f-333e-49c3-bb8e-b9fd5c04040d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f15a2bd2-1183-42af-a7a1-9ac19b9c99ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "92f93e13-5abe-48de-bce9-10407ce0f779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a56720-a82e-4a72-8bef-2e25079c97bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8eefacc-ddd9-474c-88f3-19554d4427ba"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "de247e22-ef91-4435-8dfe-5451b1ce9eb9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "668f1b35-ed70-408a-abb7-60dd55cb3c15",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "baa0ed83-f37a-453a-9f7b-f640e0248bdd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3269c0a3-d5d3-4c42-a134-eebb3c06de8e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb470e7f-1612-4241-8b92-45e25b34e1bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea7ea1cc-ffb0-4db0-9a19-753eab61fc53"
                    }
                  }
                ]
              },
              {
                "id": "8d764009-a345-4f85-af8f-ef0ead44c056",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9bc0a77c-3cb6-4f75-818b-ef4d5ef287cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9c656202-fcf3-4315-916f-cea7b4e1ad2a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78324615-f264-48b5-a6f3-c6b65bfad7ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b251f2b-4e0e-413f-9ebe-9378fa201af9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "72d79fac-5802-45f6-87b5-af761517c232",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "0ea52ead-7e6f-4a48-b9d6-2767e2cf13e9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ffe97387-7c07-4a1d-9852-9286052e1ff4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "871abef1-97cd-4d91-ab51-f37745fd8fce"
            }
          }
        ]
      },
      {
        "id": "6c946cb0-f8ea-4a70-a926-add8fe9adf82",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "2b51d2f0-7e10-49f9-a5ec-b110e3e9a21b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f3554fce-72f4-46d6-9473-39ecf19e3c6b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cf208e08-179c-4d4c-b1f1-e5f66969224c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd64cae-e3a9-4471-8fd4-abd4e7bc560d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "09ace37e-7f98-4cf3-bb48-8d6601e21e2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb431c3-7b8a-417b-8536-c2a6b0cd99de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a6300837-e093-4e1e-83d5-8e5dc8e73266"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7435cca-957f-4472-8c1f-22912dca77df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de8324f1-1d38-4469-af00-6a077e3c1a11"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "771cac79-ede6-4c54-bebd-eb049602e1f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da4e683e-57ca-4537-8655-4dd29a06c76f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "138d2979-c7c5-4a48-9fc6-c311e986a92d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1733d824-9c54-4235-b1df-db7aa2213c7b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6a5cb780-6f2f-4c63-ab31-e5430f4a96ed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8c1fdcef-d21d-41a6-9397-227907e72948"
            }
          }
        ]
      },
      {
        "id": "28eba313-db3a-4dd1-a8fd-b96603961b99",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "96d486c3-56b0-4028-bd67-375fd02670bf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "290d1d84-d150-451d-8f67-3081b761a0ee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "af2f8580-0376-4435-a6fc-6a9d7b8d74c3",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "531b423c-667c-408c-a2b1-8bb610f92073",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eef23fda-959f-4ad0-aa62-67f12f70353b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7c63ed-bfa3-491c-85bc-04625a6f8e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be6624cf-5e72-4664-a4ee-176e31f26a04"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb4e0c0d-9a71-4d12-b130-2f25c4242f79",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd02a8a2-cc9c-4e19-acb0-6ad4b23b7829"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "519a5b6a-bf64-4c2e-8363-b98032cf6c97",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "56418389-609d-4f9d-9c2a-b4b879f9568a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8cb418f5-c1c9-482f-88fb-94aa14b06a63",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a8940220-9ecf-498f-addf-1145de111339"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c808152d-af06-481d-b8ad-c631ac598ca7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2ed194e8-efcb-4723-82c1-5172f0964f94"
            }
          }
        ]
      },
      {
        "id": "c0a513aa-d500-4b8e-a410-70f5389dd90c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f8c0cf61-c36a-4dcb-b649-5ee4084d4874",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9321e2c0-0e89-43a1-9b82-54eb5eb10f6a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "286f91ea-4874-4202-ad7e-28070fa959a1",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c4472e-510b-4e7a-9b66-02830a0b32b9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "23a68289-41f8-4ed6-88f7-dff2347cdfcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be6bab8f-2a07-4ca6-aa23-e8bef3ae236f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dadaa1de-5477-484c-9449-4f75a80444fc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef34deeb-efd7-4a7d-9bcb-d1f37f876681",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32f71818-80aa-4e04-be02-6af594de959b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d7766baa-3ced-4fca-8c18-33ef1d68d0b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "566016e5-868d-42da-b1a1-0c4b347d560d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "57690ab0-0bac-4a3d-b7ef-f9f33742f3a8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ef200358-28d8-4b46-ac4a-465b3dd94c0b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3cc8a4dd-f5d6-4359-ac41-69b14925b2d7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ece0fca2-796f-4764-928f-614aef3c4d75"
            }
          }
        ]
      },
      {
        "id": "ea7b9451-d253-4ec3-af40-2f647f62d806",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "680d15e8-660d-4b4a-bcbf-56c4b4ce5f77",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bb820337-c973-4b5c-ba35-a2bae51dd91a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4c28b724-9437-4cca-afac-81cb1acc6960",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "da3e0974-4eda-4919-bb41-bd5e48213021",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d856059d-9ac3-4fe1-b8a3-24a8e3d3c46d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 10
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 117.2070175438597,
      "responseMin": 10,
      "responseMax": 3057,
      "responseSd": 344.06276857963525,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1706143024447,
      "completed": 1706143067390
    },
    "executions": [
      {
        "id": "8cdb4057-da3a-4d36-bae0-45eae453b8a5",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "232f0085-2230-4e23-9b93-c7f9c0aefb7f",
          "httpRequestId": "06f67f93-84fc-47a4-aa79-f11bbac51c1e"
        },
        "item": {
          "id": "8cdb4057-da3a-4d36-bae0-45eae453b8a5",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "61452e38-d673-4c59-ad89-e49ed4565331",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 0
        }
      },
      {
        "id": "6f4f8c4e-f111-4698-b41f-f8abbda11240",
        "cursor": {
          "ref": "bbac7b58-24c8-46c2-ae5f-144be47ee83d",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ea76f3ec-cffb-49e5-9eb9-cddb73ffbccc"
        },
        "item": {
          "id": "6f4f8c4e-f111-4698-b41f-f8abbda11240",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "91e33c80-7734-4214-8da0-9b835fd3e5a5",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "8a16e0df-81e0-4bdd-bed7-7fccf366f360",
        "cursor": {
          "ref": "6fa9d022-842f-4cf4-a768-9c3c00d724dc",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "3065fa83-ca6c-4be7-ab59-bbd922947c9d"
        },
        "item": {
          "id": "8a16e0df-81e0-4bdd-bed7-7fccf366f360",
          "name": "did_json"
        },
        "response": {
          "id": "2f262a2d-f680-4920-ac8b-9aead58c88cb",
          "status": "OK",
          "code": 200,
          "responseTime": 796,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6894b8-3094-4fc5-a297-b29f04d0aecd",
        "cursor": {
          "ref": "b4c27362-ec34-4ae8-a3ce-db49e858a00b",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "db35867e-1b95-4d03-aa9b-1b3eda7d794d"
        },
        "item": {
          "id": "dd6894b8-3094-4fc5-a297-b29f04d0aecd",
          "name": "did:invalid"
        },
        "response": {
          "id": "936ae7ac-cb27-4612-ac6f-57f086438a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6894b8-3094-4fc5-a297-b29f04d0aecd",
        "cursor": {
          "ref": "b4c27362-ec34-4ae8-a3ce-db49e858a00b",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "db35867e-1b95-4d03-aa9b-1b3eda7d794d"
        },
        "item": {
          "id": "dd6894b8-3094-4fc5-a297-b29f04d0aecd",
          "name": "did:invalid"
        },
        "response": {
          "id": "936ae7ac-cb27-4612-ac6f-57f086438a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c34eda74-8f53-4b3d-ba24-b6cddb6f88bf",
        "cursor": {
          "ref": "a217f864-c7c9-4fba-be9a-d8745e389c72",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7b1182a8-4e0e-46e7-8086-db8880cfab6c"
        },
        "item": {
          "id": "c34eda74-8f53-4b3d-ba24-b6cddb6f88bf",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1f821d45-7b73-4e6b-9ac2-064e2653aa83",
          "status": "Not Found",
          "code": 404,
          "responseTime": 279,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c82bac-e7c9-4243-9c07-6a4ceb893434",
        "cursor": {
          "ref": "d2d17767-6e88-41f5-83d1-24d1c8c2bb95",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "6006b80c-100d-4eef-9a52-2a44018bc76a"
        },
        "item": {
          "id": "d3c82bac-e7c9-4243-9c07-6a4ceb893434",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "95f929ad-e69f-41db-a4bc-68a0f8d9bafe",
          "status": "Not Found",
          "code": 404,
          "responseTime": 60,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3747a5d1-9e88-47b4-9e4b-ada472c3b6c1",
        "cursor": {
          "ref": "3eaa2938-1630-4d26-90e1-3b05b7fae893",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6499e1e9-a8c9-446b-aab5-ef556e51b9ab"
        },
        "item": {
          "id": "3747a5d1-9e88-47b4-9e4b-ada472c3b6c1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ced3eac5-6f69-4d0c-91f0-b72b3f73a47c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b52d55-1647-4d68-a709-7da0ea202dbb",
        "cursor": {
          "ref": "4dfa8620-2ce1-4f03-9d07-46eacac404e2",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b1013de6-d1e7-4dc7-86cb-c4cc14826320"
        },
        "item": {
          "id": "b4b52d55-1647-4d68-a709-7da0ea202dbb",
          "name": "identifiers"
        },
        "response": {
          "id": "7dad2b78-8039-42df-bdbf-8bcf22fa6fa0",
          "status": "OK",
          "code": 200,
          "responseTime": 296,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "643b4f4c-cf27-41b5-a850-aea13132a6c3",
        "cursor": {
          "ref": "fbd21551-2489-4661-86d7-7c32f0292830",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "31c90eb7-251a-4595-853c-1005d1a7f79e"
        },
        "item": {
          "id": "643b4f4c-cf27-41b5-a850-aea13132a6c3",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "737c1946-80eb-44aa-bd64-e548a9731c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27f92c9-a071-483f-9dec-be6efac7408a",
        "cursor": {
          "ref": "1592933d-d4e0-43eb-ada8-8654e87f7b6b",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "907f10ff-9fc3-4b84-8467-1708a8cea92b"
        },
        "item": {
          "id": "b27f92c9-a071-483f-9dec-be6efac7408a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "9232bcf4-f968-43e3-8ea8-a5d00908a184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a757a0-fc43-4267-a89d-7ec1ff83cef8",
        "cursor": {
          "ref": "7ba61ea0-a931-4750-887e-470c2d658182",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "39066607-f8d1-4684-ac9a-9544f512046e"
        },
        "item": {
          "id": "41a757a0-fc43-4267-a89d-7ec1ff83cef8",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "7f492412-98d7-4a87-8451-0cfae313ab87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6843a42a-2049-46ed-a894-5aa0db43edf7",
        "cursor": {
          "ref": "94a60bb8-727a-442a-87f3-e5e09c549986",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d1c6033e-548d-48a3-a9c6-834609c51c85"
        },
        "item": {
          "id": "6843a42a-2049-46ed-a894-5aa0db43edf7",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "8e71b668-4e80-4819-b89d-6fe1bb3f957c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d26278e-f7e6-454d-bde5-832b442f6d1a",
        "cursor": {
          "ref": "d872edd4-6685-4636-a9f3-df262012b49a",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "49c3befa-3e31-471e-a948-4383c87ab4a9"
        },
        "item": {
          "id": "2d26278e-f7e6-454d-bde5-832b442f6d1a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "444279c8-2a87-44a0-b020-21d8dc1dc572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "913f0d11-28e1-49fb-b851-d6c3a4c0127e",
        "cursor": {
          "ref": "043efd6a-32d7-4a06-a6a8-0c183fa349cc",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6f09339b-660c-453c-b9c7-f865b2ae8d55"
        },
        "item": {
          "id": "913f0d11-28e1-49fb-b851-d6c3a4c0127e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7fe64cb5-b045-4902-8ae7-3f9f7a12abdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87283893-ac65-4520-826f-b7eb9d983e97",
        "cursor": {
          "ref": "4c99830b-3002-4910-a068-bd052546013e",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "143e012e-c293-4264-be16-82ee97f3a57a"
        },
        "item": {
          "id": "87283893-ac65-4520-826f-b7eb9d983e97",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "683daadc-2d02-4d71-bd5d-20e8925bc112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9844f5-1525-4476-99cf-33820db4ae12",
        "cursor": {
          "ref": "c879665b-e601-4557-a310-9a16d59817ad",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4c59c59f-ea6f-4b9a-941a-d453cb2ec1e9"
        },
        "item": {
          "id": "8a9844f5-1525-4476-99cf-33820db4ae12",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "e599ffd9-8aec-47a2-8912-278f45b753c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7d5c5a-ccb8-42f9-bed2-fdb27fe3d653",
        "cursor": {
          "ref": "fcf7681e-9b88-49ce-b726-eecafe442328",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "839d6dd4-7b1e-4a4d-80a2-c9f2ccd7b604"
        },
        "item": {
          "id": "4a7d5c5a-ccb8-42f9-bed2-fdb27fe3d653",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "8cfa0b87-d3e8-4859-b172-4a9d08277282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1950493b-18b2-44e6-b843-48ee8cf8abd8",
        "cursor": {
          "ref": "5fc61fd4-0c75-4d37-baa7-cd4e97b50a25",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "029aca58-20da-446f-9a29-92c2c87048c6"
        },
        "item": {
          "id": "1950493b-18b2-44e6-b843-48ee8cf8abd8",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c08a049b-c669-4a7a-b2d4-c56d3cb144f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c8da14-9618-43f9-82d3-4af7a5d36018",
        "cursor": {
          "ref": "e85414fb-f106-4066-b245-286983140903",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d6eb20fb-26dd-450b-9236-08d24a7783fa"
        },
        "item": {
          "id": "f4c8da14-9618-43f9-82d3-4af7a5d36018",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "fa313c0e-84b8-4b04-afea-ead099bef31f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c09446b-c805-46d8-91ca-4def310b022f",
        "cursor": {
          "ref": "f9120c73-5ab9-44ba-80c9-f8f7c79757b2",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "62135bf5-371a-4cf0-a9ea-012bb6409653"
        },
        "item": {
          "id": "3c09446b-c805-46d8-91ca-4def310b022f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "4b636b86-5e57-4147-a16b-9770b598b475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a4f3d9-93a7-4ea2-a086-a3b696e9b17e",
        "cursor": {
          "ref": "c3a82b4e-a330-4844-85be-b91cfd25110a",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "985c41af-79e9-4750-8c68-6205ee8e5b1a"
        },
        "item": {
          "id": "46a4f3d9-93a7-4ea2-a086-a3b696e9b17e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a618fe1b-fd7e-4a60-b528-b0d0c4443cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a33815a-98ae-4d65-be82-7eb7a2c106ba",
        "cursor": {
          "ref": "75e10833-277c-4dac-bae6-936ffbe305c6",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4a507a87-3c34-44fd-80c0-08bf50cdc46a"
        },
        "item": {
          "id": "5a33815a-98ae-4d65-be82-7eb7a2c106ba",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "cd8e0986-dd4e-45d9-a087-0d2ae12029bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5d27f5-9bb5-4ba3-a399-4713bb2bf03c",
        "cursor": {
          "ref": "5335b82b-3aa0-4516-a945-5f3d31963ca1",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d99a5fe1-4591-4d33-b6ef-ee294c318658"
        },
        "item": {
          "id": "0a5d27f5-9bb5-4ba3-a399-4713bb2bf03c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "65678336-bce7-4951-b2cb-2c3444150c89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2277cb-117e-4a16-b621-1966ea8a7973",
        "cursor": {
          "ref": "883e831e-87f8-418d-bf30-f448f62ebcb8",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "63743860-becd-4480-9cd3-7cde9e4311d5"
        },
        "item": {
          "id": "1f2277cb-117e-4a16-b621-1966ea8a7973",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2083cbe8-5227-497c-a4be-fd08b3c4dd56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97519a1e-3532-4654-8549-1628752313a8",
        "cursor": {
          "ref": "95888939-e9f0-4c4b-87ac-fccc8d1c882b",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "2873f484-5471-4dec-befe-2ca4dd678c05"
        },
        "item": {
          "id": "97519a1e-3532-4654-8549-1628752313a8",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4d319170-36b7-474f-8797-692958d3008d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de4e93dd-cf4c-4360-8df4-55d113dcc909",
        "cursor": {
          "ref": "cab95c45-c683-4472-9093-8d0c98dd660e",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f2a51804-0166-41ba-beca-027007f237ca"
        },
        "item": {
          "id": "de4e93dd-cf4c-4360-8df4-55d113dcc909",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2f849b8a-e7dd-4e6d-8773-eb1b3e4d9421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe413579-6ebf-47b1-984d-2b730b20818b",
        "cursor": {
          "ref": "851c4d5d-ba52-448f-84b6-e94fbe64bb17",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "818e8f61-a7db-44a2-ada0-8b5c175a9408"
        },
        "item": {
          "id": "fe413579-6ebf-47b1-984d-2b730b20818b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6f701540-a319-4009-aaa9-ace220243353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24e67454-25af-40f7-b55a-59ea08459f1d",
        "cursor": {
          "ref": "ea8388c9-5168-4c56-b020-b5d96af3353e",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "284277d8-e630-463f-8e73-60d255b33ccb"
        },
        "item": {
          "id": "24e67454-25af-40f7-b55a-59ea08459f1d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "eb3260e1-826e-449a-ae15-054bb5e395f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6e0c26-b7d0-4c81-ae5c-75648543ab12",
        "cursor": {
          "ref": "5160211b-8c73-4cd2-b7dd-108a3d3d8e35",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "19da0463-b8d9-423c-9423-fe66590b5bf2"
        },
        "item": {
          "id": "0d6e0c26-b7d0-4c81-ae5c-75648543ab12",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "c11f084c-6d2c-456f-9b8d-c62da0a0f272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea848d17-34de-49af-a27d-37c2afc5059b",
        "cursor": {
          "ref": "0e8e5a5b-f2d1-43df-a994-0b30cfdedc21",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "6196634a-808f-4e83-a8f7-83908ba42caa"
        },
        "item": {
          "id": "ea848d17-34de-49af-a27d-37c2afc5059b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b94f3295-d811-4903-b934-0836d40dee99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae135b6-bc78-488f-a2d9-937845dc0c39",
        "cursor": {
          "ref": "6d076373-1621-4931-94ff-af50e47bde40",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "4aba87df-e84e-4e85-9734-f44b9a953e95"
        },
        "item": {
          "id": "aae135b6-bc78-488f-a2d9-937845dc0c39",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "8c4d3301-ec93-4ec3-8286-efa31a2245e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08949c1d-2340-4bcf-82e0-6fb6e101dbba",
        "cursor": {
          "ref": "16714cb4-6b66-4845-ba6c-4df902f96683",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "83daa173-37ce-46a1-8a2e-0113de925c30"
        },
        "item": {
          "id": "08949c1d-2340-4bcf-82e0-6fb6e101dbba",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "10fd43c8-f1df-4035-a15a-5af0501f26c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d42325c-003c-4a54-a1e5-0ac3d3324d35",
        "cursor": {
          "ref": "08d17cd8-5069-4782-a927-6d721ce91e9f",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a8fc94a7-ca44-4abf-9bf2-83c0f75c40eb"
        },
        "item": {
          "id": "9d42325c-003c-4a54-a1e5-0ac3d3324d35",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "756a6581-88f1-4ce4-8ce4-0fa662bba656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9ead83-b432-47db-b9f0-60f944807b25",
        "cursor": {
          "ref": "e0947979-81da-4c42-8dbb-9e9188a0a31f",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "9b86d7a2-4373-468c-9f98-5812cc2b9455"
        },
        "item": {
          "id": "5f9ead83-b432-47db-b9f0-60f944807b25",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "394bb35a-55ee-47c7-8085-ca3e9ae27022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a62f6f-d6ac-4cf7-b4d4-91cf3e67cd5a",
        "cursor": {
          "ref": "bba87868-3ee2-4b5b-b53b-f365df2955c5",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "0a2b8c9a-2525-4c2a-9014-eb4ead672a7f"
        },
        "item": {
          "id": "84a62f6f-d6ac-4cf7-b4d4-91cf3e67cd5a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "505ac211-7c3f-45ed-ada0-8440eb431f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceac6fda-7cb9-4bd9-866b-4de04df2cbf1",
        "cursor": {
          "ref": "4ece5567-d50d-460a-a4b1-4238a5b5ab3e",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e80b26d4-a342-48c1-9144-6dd5696e4483"
        },
        "item": {
          "id": "ceac6fda-7cb9-4bd9-866b-4de04df2cbf1",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "57f41c5d-a1df-43c8-b2cb-499802e944de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eeed7b5-464a-45d1-a34e-93f983603ab3",
        "cursor": {
          "ref": "f07d2218-8fc2-42ea-b6b3-ff902b8ffb8a",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "cb547e3e-e2b2-4f01-a653-cf4c19ff005f"
        },
        "item": {
          "id": "5eeed7b5-464a-45d1-a34e-93f983603ab3",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "944d3e95-0159-4ed4-96e8-c8abec7f750d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18e18ed3-ce06-48e2-bfd5-cbac50d353d7",
        "cursor": {
          "ref": "d714873c-7cbb-4b21-aece-efa55ddda023",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d95cd1db-0c93-4ae3-8446-9f7e9a38f2a8"
        },
        "item": {
          "id": "18e18ed3-ce06-48e2-bfd5-cbac50d353d7",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "87817e6d-34ae-4c97-a2e5-ea454139d1a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4fade26-aa9b-46ad-92f5-278f8c91207f",
        "cursor": {
          "ref": "3dc5efa0-0cbe-42e9-b0c7-1f4e0cc6d111",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "dc362d43-21b2-45f2-b9c6-ee1c33fca0ae"
        },
        "item": {
          "id": "a4fade26-aa9b-46ad-92f5-278f8c91207f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "55352617-96a2-45bd-ba2f-022b9fb60acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae5d6dc-9190-4681-8970-0389383c3118",
        "cursor": {
          "ref": "40b27c9d-64e6-473d-afc4-38358b8ea5bb",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "cf8ea527-af8e-4734-b2ed-aca538133636"
        },
        "item": {
          "id": "eae5d6dc-9190-4681-8970-0389383c3118",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "52aabc1c-9d5f-4cf0-b629-c6a0f34481c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22417334-dfc6-452c-916a-6a0c9cfd378e",
        "cursor": {
          "ref": "f1c6e2f9-1bd3-4fe0-a2a7-4943f1479042",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "afc669ec-7329-4da0-b62e-2d32ea202390"
        },
        "item": {
          "id": "22417334-dfc6-452c-916a-6a0c9cfd378e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1b168503-8ad7-4182-b38a-75df454e912c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4383d5b-741e-42be-be5d-25213eeadd81",
        "cursor": {
          "ref": "c9b45bda-9670-48f7-8b35-e3e5837ac734",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "68c6fb82-9c95-46c1-9eba-67e842162a84"
        },
        "item": {
          "id": "b4383d5b-741e-42be-be5d-25213eeadd81",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "4d101168-f65f-4a53-9e74-d54f91822a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ec4201-4e8e-4fe1-8993-7787a1050c5f",
        "cursor": {
          "ref": "c8559fd5-6711-40be-ab49-dbc6a62a5231",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "85ed634f-a368-45b9-9719-c7f75ab4e18d"
        },
        "item": {
          "id": "03ec4201-4e8e-4fe1-8993-7787a1050c5f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "1b990603-a5e6-47b6-9d89-77e64054e233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2ce217-b40a-423b-9b0f-2539ba435580",
        "cursor": {
          "ref": "b110bc93-f048-4c5b-84e9-d8e785408233",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "cebffd49-b639-4060-a1e1-b7e0696beb27"
        },
        "item": {
          "id": "8a2ce217-b40a-423b-9b0f-2539ba435580",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "aca3f30b-4606-4ea0-a981-3566be2b71a7",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 327,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0122acd1-b5a0-4236-acaf-3c0426734cf9",
        "cursor": {
          "ref": "095d1177-3348-4b81-b0ad-2a8548a89633",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d35aea15-51a7-435f-8b7b-03694fdb8a17"
        },
        "item": {
          "id": "0122acd1-b5a0-4236-acaf-3c0426734cf9",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9df7a4d1-fb56-427f-b3b9-ca59d569d72c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b05d3d-a6b9-45b3-98d3-81c95d6e3005",
        "cursor": {
          "ref": "350e1666-fdd9-4637-930a-0687d0e3e953",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "203a1adb-c24e-4290-8805-aa3d8e48028a"
        },
        "item": {
          "id": "62b05d3d-a6b9-45b3-98d3-81c95d6e3005",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "11fed303-1fbc-475b-870e-bdd989978267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d13b8c-3589-4248-aa72-8c273a6c1bfa",
        "cursor": {
          "ref": "0ba50653-fc3a-40d9-802f-b49f573b168c",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a4575dfa-8497-4f13-b185-6887a7926c06"
        },
        "item": {
          "id": "e6d13b8c-3589-4248-aa72-8c273a6c1bfa",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "2e2a33fa-fa62-4f7a-8faa-f76cfe1fa312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11258a3b-7989-4dd5-9310-f2682d875009",
        "cursor": {
          "ref": "7108057d-ba00-4435-ba73-a210bba539c0",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1d03fdeb-8cce-4b6e-874f-f63da2b9ce1a"
        },
        "item": {
          "id": "11258a3b-7989-4dd5-9310-f2682d875009",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "205351a6-4626-4b31-821e-7fec19fba612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af3d858-7458-4254-bab1-34c79c4988f8",
        "cursor": {
          "ref": "5b93e7d9-2bbf-4a34-8863-bcf16e4f8ead",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "b35f7d9e-55b3-445d-9f41-6e15f52be66a"
        },
        "item": {
          "id": "3af3d858-7458-4254-bab1-34c79c4988f8",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "aeb43848-108d-4225-97d4-a371c636ab55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "334d5a56-8dee-4b17-83f5-70701fc3ec67",
        "cursor": {
          "ref": "aa6f5574-acce-4afe-97d3-0a18ae6e8f89",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ef57a624-8594-4b43-90e7-9a150510c2f2"
        },
        "item": {
          "id": "334d5a56-8dee-4b17-83f5-70701fc3ec67",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "41300024-4fa1-400d-b01e-416fb5af96a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f0b90c-e2d8-4eb3-a492-d1259c757826",
        "cursor": {
          "ref": "1cae40f9-90d1-43b0-9be7-da5ca038f8d9",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "4185afb9-cfbc-48d9-82e7-f27310399bee"
        },
        "item": {
          "id": "93f0b90c-e2d8-4eb3-a492-d1259c757826",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f6fc9d33-570c-4edf-89d2-b45e24295302",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 331,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b40db166-7ad3-4833-b4db-22bf9c2bfe5c",
        "cursor": {
          "ref": "bccf70cb-7531-41c3-b107-bcc15a476878",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7767499a-5b5e-4fb0-84f1-c58c5049b616"
        },
        "item": {
          "id": "b40db166-7ad3-4833-b4db-22bf9c2bfe5c",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "bcbd008a-26c2-41f2-ae63-dfc97135d90a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8745bc99-1d9b-477b-8b84-34124c152635",
        "cursor": {
          "ref": "b3d66297-0d97-4e8c-85bb-1fba878e39f8",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e546d572-2264-4bf3-bc68-fed662fd446d"
        },
        "item": {
          "id": "8745bc99-1d9b-477b-8b84-34124c152635",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e0633745-f075-40da-bc6d-00d5ede51bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c301413-018d-4971-8e44-c5198a05f0f9",
        "cursor": {
          "ref": "b7913ac3-806a-4d3a-8e5d-77577e0cc838",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "1248df65-d221-44b7-a118-557879cc8c99"
        },
        "item": {
          "id": "2c301413-018d-4971-8e44-c5198a05f0f9",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "55b4b032-8a75-467c-b27e-62ac2c3cce17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec8c23e-4a77-4790-b52c-85ba0d5d52f9",
        "cursor": {
          "ref": "2529af3a-1885-46d5-b2fb-634fce61b158",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "bb531d7d-5b62-49d3-871e-270bf4995de2"
        },
        "item": {
          "id": "fec8c23e-4a77-4790-b52c-85ba0d5d52f9",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "619023cc-47ab-49b2-92d7-f1355eb48122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac34601-8eab-4d67-8d29-020d9d898786",
        "cursor": {
          "ref": "62b421e1-78fc-4124-8f18-e41df4c733ad",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "9194b43b-610b-4940-9bf2-d601fbbafb2a"
        },
        "item": {
          "id": "9ac34601-8eab-4d67-8d29-020d9d898786",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7b23be90-5a7c-4566-bd9e-92ce4b16025e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0601757-10d0-419c-ba62-79832ec20bd0",
        "cursor": {
          "ref": "6b6b0ca7-924e-416d-b8a1-90d17c1ffee0",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "25ab99a7-50d1-460e-a65c-2338bd2b5e2e"
        },
        "item": {
          "id": "d0601757-10d0-419c-ba62-79832ec20bd0",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a807e483-e4f7-415f-ad0f-906897a09f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9161e211-f79d-45e3-808d-4a1bd67a1902",
        "cursor": {
          "ref": "8bf4161c-7e36-41e6-87ef-130368566e3f",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b7190c4e-72da-48be-97e6-c1026ebebb31"
        },
        "item": {
          "id": "9161e211-f79d-45e3-808d-4a1bd67a1902",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "598246f5-30f3-4630-baf0-27c1c2f5ecd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d7b1a4b-e1ac-4bba-9b17-bdc4f48608f6",
        "cursor": {
          "ref": "b2272a44-244b-4bae-a166-fd6ffa56388f",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ca9d121e-5e30-4059-8966-ee81dfae4c06"
        },
        "item": {
          "id": "2d7b1a4b-e1ac-4bba-9b17-bdc4f48608f6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d92e91ea-e94f-4e2a-a45b-64d18fb4c7cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec8053e-1a19-4b52-8e1b-e3fdea2ab039",
        "cursor": {
          "ref": "ab62c588-f5ec-49b1-94d9-cd73265e72e3",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c26f4ac7-f407-4711-9219-ff1bc7d0f2af"
        },
        "item": {
          "id": "3ec8053e-1a19-4b52-8e1b-e3fdea2ab039",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "7c7fd205-eff3-4339-b7b3-e3ac926f934c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd217745-c4a3-46c8-bce9-80c86515026c",
        "cursor": {
          "ref": "d79a2632-dceb-47ab-8069-14bc2edd6a6f",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d4723c3b-d347-46c2-8166-fa4180531c23"
        },
        "item": {
          "id": "cd217745-c4a3-46c8-bce9-80c86515026c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "09a5f772-6d04-4f48-9be9-3f5df2a984cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7314ea7f-20a2-4acb-af65-cb22f2014278",
        "cursor": {
          "ref": "e9010659-e160-41b5-a05d-31909a5ddd89",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f2e07d55-a181-4027-bab0-914517414470"
        },
        "item": {
          "id": "7314ea7f-20a2-4acb-af65-cb22f2014278",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "888689c7-2c4e-434b-8005-0f3dc7bc751a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1309698d-9ac4-4409-be3f-006f59843f64",
        "cursor": {
          "ref": "194f75c8-af9a-457a-b7d1-44bca2a1548e",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6bed2a33-bc44-40b3-8a83-de2a27317707"
        },
        "item": {
          "id": "1309698d-9ac4-4409-be3f-006f59843f64",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "48f76a72-a004-4926-b27d-6639d64be347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce22227-5083-4ace-9910-4de229d96afd",
        "cursor": {
          "ref": "569bafe1-9d7f-4978-b84a-0413dda4dfcd",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9f6b2444-4f3b-478d-b52d-a97c2a2342b9"
        },
        "item": {
          "id": "1ce22227-5083-4ace-9910-4de229d96afd",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "79d40312-a7de-4986-bf14-eb7bdd2f3943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e4aba8-2f39-43d5-83e0-3407bc9891a9",
        "cursor": {
          "ref": "268e07f4-402b-4dfe-a3ef-e998cc4f0f1d",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "4217f31e-fdba-429f-854e-bbd618f68597"
        },
        "item": {
          "id": "67e4aba8-2f39-43d5-83e0-3407bc9891a9",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "efa5a3c3-4cfe-4097-8b0c-830e0b4c8ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1474ba9f-cb89-4961-b421-b0efe984b43c",
        "cursor": {
          "ref": "6962bee9-6855-4a87-b16f-126ff8b8014f",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9bc8b1c5-f886-489c-ac9b-16cb3d5941c6"
        },
        "item": {
          "id": "1474ba9f-cb89-4961-b421-b0efe984b43c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0ad93b83-2129-4548-bf86-3a4a9cfeca53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe01098-00e3-4101-8894-29d07997264b",
        "cursor": {
          "ref": "c6730875-ebb0-4d64-8114-b7f225567865",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6a45ab55-195c-433d-884c-1c0b6b4bc96e"
        },
        "item": {
          "id": "bfe01098-00e3-4101-8894-29d07997264b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "bf2f5c71-c0d9-462e-9585-c2f9c64a0f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8932169-5203-42dd-80d8-5d4d0e4d24a5",
        "cursor": {
          "ref": "523af475-dc70-486a-97e9-2062475b208e",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "82fe4fc6-fb8b-4503-9def-195537ea2323"
        },
        "item": {
          "id": "b8932169-5203-42dd-80d8-5d4d0e4d24a5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "9d48b69b-9905-4e3c-b231-7782fc3f23cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "595a4a00-8bc6-42da-9ae2-0883f4ecbd33",
        "cursor": {
          "ref": "0ba7bc53-8a87-47e4-85ab-3f2d1fe8aa92",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "bcd05a6b-b10b-47c0-a345-faee99f511ef"
        },
        "item": {
          "id": "595a4a00-8bc6-42da-9ae2-0883f4ecbd33",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "513c4dcc-0661-4823-b231-ee320433a59b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9ea338-d0fa-4229-aa1b-94e1f7fdec33",
        "cursor": {
          "ref": "5174ffe3-f5dd-4359-a479-3a6bb9ee6939",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "9abf9924-15ca-44f8-b305-492a39317d3d"
        },
        "item": {
          "id": "5f9ea338-d0fa-4229-aa1b-94e1f7fdec33",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d43c0012-1d01-431b-9d7b-15b3890a47f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "378cee89-d5bf-4ceb-a45d-ec27f9e34759",
        "cursor": {
          "ref": "13e11f4d-7009-4daf-bc85-610c0bd8c675",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f07caeb2-c7a5-4fa0-865f-55435ced4ef6"
        },
        "item": {
          "id": "378cee89-d5bf-4ceb-a45d-ec27f9e34759",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "408ac331-6319-4943-a67f-cb19d57bcf7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d4dc3a-e607-44b7-85db-f2375356bbae",
        "cursor": {
          "ref": "e26801a1-1e1e-4789-af67-3e1ba2193656",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e7eb5cfb-577a-41d6-998c-f08036f4d977"
        },
        "item": {
          "id": "54d4dc3a-e607-44b7-85db-f2375356bbae",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "0845d607-55dc-4db7-bccb-a867970ef707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ccaafcd-3036-4faa-ae89-1dd73f7dbe56",
        "cursor": {
          "ref": "393e17c6-8d42-449e-8bef-1f4c163fe314",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "173fc6d7-600e-484a-aebc-cc0f1152761a"
        },
        "item": {
          "id": "2ccaafcd-3036-4faa-ae89-1dd73f7dbe56",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "624b090e-1bb9-4ad5-8fdb-14d2304964bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5dd9da1-a13f-442e-b487-13725c035b1b",
        "cursor": {
          "ref": "8a8594bc-b7ff-4f6b-8f63-7a61de22ca55",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "bce5d416-518d-41f7-83dc-c3b26f8220d8"
        },
        "item": {
          "id": "d5dd9da1-a13f-442e-b487-13725c035b1b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a9af5aea-50b1-4e25-b7e1-97ad33e0438b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5df48e-bc51-437b-b85a-52abe42094f7",
        "cursor": {
          "ref": "e5de8061-5e89-46bc-99e1-bcc4d4b37010",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "4a2e3d2d-c70d-4b90-a516-1350891d1ed9"
        },
        "item": {
          "id": "7c5df48e-bc51-437b-b85a-52abe42094f7",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c652e8aa-8e11-46b9-a2d0-5af0feb6521d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b76012c5-770c-445c-86ba-b9d1362e38d6",
        "cursor": {
          "ref": "20ffbc16-2eb1-4e4d-9e25-2fe6032c0c17",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "fdb630e6-f1ac-42b3-b9a2-06a0a7cc73f4"
        },
        "item": {
          "id": "b76012c5-770c-445c-86ba-b9d1362e38d6",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "40107f4a-94ef-473c-9fa2-08978baaa770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad0c1f4-52ad-4c8a-a61b-b7a785b9fd57",
        "cursor": {
          "ref": "b32ac9ba-a0e3-41dc-8e68-f9a1e20a4fcc",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "4a38aa45-2731-4d14-b2be-9008667026ad"
        },
        "item": {
          "id": "bad0c1f4-52ad-4c8a-a61b-b7a785b9fd57",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "9d9ea9a2-c28d-48d1-b2a7-03effab0718a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3204e734-e353-443b-8cbd-cf54e739c002",
        "cursor": {
          "ref": "65ae872c-d972-451a-9341-c16657d9c34f",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "799c3cf5-053a-4b3c-9353-0e7fec756679"
        },
        "item": {
          "id": "3204e734-e353-443b-8cbd-cf54e739c002",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "57724121-efd5-48cb-9522-ba375d8cfb0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cefd08e-828d-4f5a-89d6-20addaeb0aef",
        "cursor": {
          "ref": "b1ea93ef-942c-4c8b-8c7f-0b177fecc79e",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "fbc465fb-3747-4963-aa23-210c44f1b3b5"
        },
        "item": {
          "id": "4cefd08e-828d-4f5a-89d6-20addaeb0aef",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b9712b2b-3e78-4f0e-aae3-ba287406e7ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50455ecb-638e-4953-82fe-898f0608fe5d",
        "cursor": {
          "ref": "db2b119b-4d5c-41a2-96b5-7deaff07e37b",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "7211a258-ee6e-4b31-9af7-68833eeb5bad"
        },
        "item": {
          "id": "50455ecb-638e-4953-82fe-898f0608fe5d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "0de91d75-655e-40c3-b704-75bebe12be0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9f8b2f-6c51-41eb-ad7e-34386bdc8055",
        "cursor": {
          "ref": "7ce51d91-d8ce-408d-b23b-05238c1c61ae",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "acf079f6-4d2e-4b36-bbab-8b754a49f3e8"
        },
        "item": {
          "id": "3a9f8b2f-6c51-41eb-ad7e-34386bdc8055",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "92224f1a-5e12-42f3-bbd2-9af7fb9b432a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b32d73-2c60-4590-9560-49e0df67912d",
        "cursor": {
          "ref": "94d3e1f5-c7c1-434d-9680-17cf7e01acc6",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "80754418-7f93-4538-ac23-27a8ac1f455c"
        },
        "item": {
          "id": "23b32d73-2c60-4590-9560-49e0df67912d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6cfffa79-fd1d-430a-b48b-6c5cec41a238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b3ce08e-0a44-4c03-be1c-c3059bb1928e",
        "cursor": {
          "ref": "579c7817-938b-4ef1-a3c6-6261254dde66",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0aea31ce-be60-4fdf-8868-61fec221c23e"
        },
        "item": {
          "id": "9b3ce08e-0a44-4c03-be1c-c3059bb1928e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "62625378-905d-493b-8be1-e8bcc8ebb4c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "776d090e-1d65-4179-8dfc-148066cc5aa3",
        "cursor": {
          "ref": "b4a56bcc-e2d3-41ca-a78d-652cd4b946a7",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6f50887c-aac4-4615-bfd2-7a3e36d26cb5"
        },
        "item": {
          "id": "776d090e-1d65-4179-8dfc-148066cc5aa3",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "32467ce5-5c97-40ab-bac9-c6b94fcb1897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cac26ae-2af9-4801-b09c-604b73193db9",
        "cursor": {
          "ref": "bc88aad4-6816-4c7a-9eed-4451b7ab72e2",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c315d7db-3496-41d3-a0cc-9ad5a6fe1483"
        },
        "item": {
          "id": "3cac26ae-2af9-4801-b09c-604b73193db9",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "45af7de6-b519-4436-9293-d2abe0f13aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36909d1-5983-4029-87d7-49531cf094b3",
        "cursor": {
          "ref": "e590dea6-1d38-4404-a1b5-8028e8e70753",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c510537f-aa63-478c-818f-3d7da770e38d"
        },
        "item": {
          "id": "d36909d1-5983-4029-87d7-49531cf094b3",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "7f129e8e-3003-4107-9e1b-cb1f7e0205db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92af854a-a545-44d6-a057-8b62c781af00",
        "cursor": {
          "ref": "0ccb7f32-de65-401b-9453-68abcab47a32",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d66b9e9a-52eb-432e-acbf-20e394c0b0c1"
        },
        "item": {
          "id": "92af854a-a545-44d6-a057-8b62c781af00",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "85b2073b-a83b-4306-969c-b5bd6eb2dfb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719beba3-5dc3-47b5-8dd6-6c5bdbfdb3db",
        "cursor": {
          "ref": "3a3d0d3f-3bcc-4a38-9015-252df849f52c",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b4bed836-d7a0-4be6-bdb8-7b826a8d1e03"
        },
        "item": {
          "id": "719beba3-5dc3-47b5-8dd6-6c5bdbfdb3db",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d1ec9974-0857-4e80-b128-0be7dd868c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5757c51f-2107-4287-9753-9b81a68d55b7",
        "cursor": {
          "ref": "af2ddfbc-b8c8-457f-84df-b8391f6cbf33",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e9ea9c0d-9eec-4d3a-8f65-a03c9c1eda95"
        },
        "item": {
          "id": "5757c51f-2107-4287-9753-9b81a68d55b7",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "34d30f9a-2fdc-4fd6-8522-bc94e4fd3899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ed44c6-1ca9-4c57-8405-ad0b022b5a6f",
        "cursor": {
          "ref": "3fbf7b5f-7497-48ae-892a-2c1ae856141b",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ee6bd2ce-1a06-4701-accd-0251826b3b33"
        },
        "item": {
          "id": "15ed44c6-1ca9-4c57-8405-ad0b022b5a6f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "8b7bc3a4-8775-4d46-b067-d438e1db3eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84dcdc9e-8095-447f-b901-bcb7636d5423",
        "cursor": {
          "ref": "98fb9a18-0426-4226-b0ab-22fad6f4500f",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "914fa0a5-be22-429b-a13d-7a3a560efdd8"
        },
        "item": {
          "id": "84dcdc9e-8095-447f-b901-bcb7636d5423",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a2c9f99f-7576-4ba3-9d92-64918bcbb52b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f4bd07-5f81-4ad4-b02f-8639e1f0f1cb",
        "cursor": {
          "ref": "4efb5c48-7a58-4a0f-a172-008091065526",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "6af94edd-a6fa-4ea3-87bb-50bfc864a074"
        },
        "item": {
          "id": "d3f4bd07-5f81-4ad4-b02f-8639e1f0f1cb",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "06ff4277-1b0a-4581-b257-4c5678e01d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a6fdd1a-d252-415c-a56d-6b0d664b71f3",
        "cursor": {
          "ref": "3df6911d-d5c8-4c97-8253-87098a6ee088",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "696a1c0b-ccd2-4982-ac28-ffee50346664"
        },
        "item": {
          "id": "7a6fdd1a-d252-415c-a56d-6b0d664b71f3",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "35ce5bae-8639-4e78-b500-ef7b62de0eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfcfd226-fa87-4a9f-a16e-ecff55255a47",
        "cursor": {
          "ref": "ef73990a-6d2d-4fac-9e2a-5484d75ff296",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "36a56f22-08d3-40f5-9d15-be8dd0ad7425"
        },
        "item": {
          "id": "dfcfd226-fa87-4a9f-a16e-ecff55255a47",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "bec05741-338f-4eff-99ca-a0809d3acd75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb3238bf-3ff1-4687-95f6-8ab8ad48dfcb",
        "cursor": {
          "ref": "c6621c4d-89ef-4f1d-833c-c20dbffdf9f9",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5161eba6-d50e-4137-83af-f37e84bbac24"
        },
        "item": {
          "id": "eb3238bf-3ff1-4687-95f6-8ab8ad48dfcb",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a2d6af78-e5aa-426b-8497-60b38ec726dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbacc6f2-a67c-42cb-a636-bc0ff1313fdf",
        "cursor": {
          "ref": "2f4546d3-c35e-4b34-b563-52958e8bf94a",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "bd97c6ad-6744-4b1a-8bc2-4311c60889ef"
        },
        "item": {
          "id": "dbacc6f2-a67c-42cb-a636-bc0ff1313fdf",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "889adc00-630f-4d0d-bccd-6f1bf680c513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3136f22-54c4-4ba1-a02c-da26c16d4f5e",
        "cursor": {
          "ref": "93376e16-81cd-4122-b523-33e42986e74d",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d5a4fa86-29fe-4b74-a863-0d3d64113e42"
        },
        "item": {
          "id": "e3136f22-54c4-4ba1-a02c-da26c16d4f5e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d9a00d5c-df01-44b5-8ee7-bc16ba68e45d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ed9d38-f7f8-4e9c-85f6-49d5486f10c8",
        "cursor": {
          "ref": "c3633004-4861-4294-bf55-be872689463a",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "88d00faf-7215-425d-b2c2-66f060f7125d"
        },
        "item": {
          "id": "83ed9d38-f7f8-4e9c-85f6-49d5486f10c8",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c28e2e28-dfcc-43c1-aa8b-551ccbf89531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3989ed6-e90f-4288-827a-91f3c729a3de",
        "cursor": {
          "ref": "2bd690b4-70f5-46ec-b391-dc43ecea5c18",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d82fe257-4b39-4b09-9196-e7a754255b25"
        },
        "item": {
          "id": "f3989ed6-e90f-4288-827a-91f3c729a3de",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d7101949-b7ad-471b-9199-397f20ba4a49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4972601-e353-437a-a78e-3b1802dea852",
        "cursor": {
          "ref": "aa82bd91-b5fe-4a0f-8c8b-35d21b48c49b",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e7befdda-ecc6-48f6-929e-bdcc49e3e22e"
        },
        "item": {
          "id": "c4972601-e353-437a-a78e-3b1802dea852",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "82da8a33-9541-4095-a147-ab4237f7ca64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6950a744-036c-47b2-9f17-2ce887687017",
        "cursor": {
          "ref": "52ba4f22-58ea-44f8-aa8b-a5378ad1d2cc",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "4f790a3c-7ab7-4f0d-8e13-332f3ed400cb"
        },
        "item": {
          "id": "6950a744-036c-47b2-9f17-2ce887687017",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7a7a04bc-6f5e-47c5-8dfb-0376040269b5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3eb8f3f-2420-408e-8380-c3b77dde51f3",
        "cursor": {
          "ref": "8886cb4b-5ff2-4367-9024-bf2a8d30614c",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e7896c73-dde6-4d04-adb1-cba3d935c7de"
        },
        "item": {
          "id": "a3eb8f3f-2420-408e-8380-c3b77dde51f3",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "0184c1c2-30ae-4e92-a054-39f574d70831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "c29094e8-539c-4be4-bfcb-4dca7c70da42",
        "cursor": {
          "ref": "cec236df-27b5-4470-8c66-4481090144ee",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "bee89e37-585c-4f78-bb27-c7cb55c1bb78"
        },
        "item": {
          "id": "c29094e8-539c-4be4-bfcb-4dca7c70da42",
          "name": "credentials_issue"
        },
        "response": {
          "id": "01434ef1-de47-4ca2-b649-d0ccb84f20dc",
          "status": "Created",
          "code": 201,
          "responseTime": 2882,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e457cda-9510-4b26-b554-8b15906710d9",
        "cursor": {
          "ref": "82502494-b01b-4ec9-aa25-662ea88f5232",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "82dd7f4d-4ef1-4d79-8b61-5ed2b383b825"
        },
        "item": {
          "id": "4e457cda-9510-4b26-b554-8b15906710d9",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "d09c52c7-0685-4906-bf2f-03536ec5210a",
          "status": "Created",
          "code": 201,
          "responseTime": 2142,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb971299-e5e9-4288-9826-85953cbccca3",
        "cursor": {
          "ref": "b397ac6e-b7d1-49cd-aa2b-81fffc5f5fe8",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a2164329-631c-4465-a589-d2f1aa60bc48"
        },
        "item": {
          "id": "bb971299-e5e9-4288-9826-85953cbccca3",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "6042d4f0-87fe-4bb5-9627-acbd50815971",
          "status": "Created",
          "code": 201,
          "responseTime": 3057,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "84644359-644c-40aa-87cb-d667369a63eb",
        "cursor": {
          "ref": "08fb4da2-14bc-42aa-8839-ea13f85903f9",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "af968e06-d069-48fa-ac5a-3024bd9f36a3"
        },
        "item": {
          "id": "84644359-644c-40aa-87cb-d667369a63eb",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f879f0f2-3e0d-40c0-af71-b6b04c1889ce",
          "status": "Created",
          "code": 201,
          "responseTime": 2202,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a90257-7651-4bf2-992b-003ad7202607",
        "cursor": {
          "ref": "4573db13-5357-4066-be93-638350ccde54",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a5c2ba4d-5eed-4a0f-8e31-33f7ea32e2b9"
        },
        "item": {
          "id": "06a90257-7651-4bf2-992b-003ad7202607",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "44295e60-295c-4240-b3ee-8bc0bd3b2889",
          "status": "Created",
          "code": 201,
          "responseTime": 2212,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "53cad8f2-146a-42ca-89a9-e7875e76bcfd",
        "cursor": {
          "ref": "69e8226e-d496-4020-9026-a3c8fd1958ff",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "cd94d85a-92bb-41ab-a6b8-9c048fc7c84f"
        },
        "item": {
          "id": "53cad8f2-146a-42ca-89a9-e7875e76bcfd",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "988954fc-b1a7-4bf2-9ff9-c729732505ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "f6bd8a44-3348-43a7-9242-94d52f6c604d",
        "cursor": {
          "ref": "bc5ec828-1b9d-4cdb-a9ad-fabceced402d",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2e3f4d12-8c7e-43f6-9a3c-1ab7cc0d89ce"
        },
        "item": {
          "id": "f6bd8a44-3348-43a7-9242-94d52f6c604d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "66609f95-bf86-4b09-becc-a9246e3c67ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d57876-2b17-4cf4-a313-98df6f0300b2",
        "cursor": {
          "ref": "c0a6eacb-b9e5-4ded-985b-acf7b5ace2a5",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "92cba10d-9e0b-45eb-a287-ad29094e39ac"
        },
        "item": {
          "id": "66d57876-2b17-4cf4-a313-98df6f0300b2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0abd328e-1eeb-4043-aa5d-dd3da99838bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d07a63e-6409-4f04-9aef-ed6f85d5945b",
        "cursor": {
          "ref": "141ba9be-5e2c-420c-a7c6-77f8b6196d96",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "466e33c4-c860-4c1a-992a-5cc4f1608b2d"
        },
        "item": {
          "id": "8d07a63e-6409-4f04-9aef-ed6f85d5945b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "04fc15b2-45db-4e9a-8910-768d3179e5fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04542e48-9bef-45c7-b42d-54370b554400",
        "cursor": {
          "ref": "feb8f499-0eb8-4d6d-b66b-85117d5d74ee",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b39ddda6-fc69-4eb8-aea2-8ecea95281e3"
        },
        "item": {
          "id": "04542e48-9bef-45c7-b42d-54370b554400",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4635b5d7-e23a-47c2-9b32-91acfd84df1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7df7175-cfb3-43ac-9f2e-ee353e7ed597",
        "cursor": {
          "ref": "88923248-e8a0-484f-9e90-0a48c097f3db",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0119e719-7c56-432a-b960-6ff55d513a77"
        },
        "item": {
          "id": "a7df7175-cfb3-43ac-9f2e-ee353e7ed597",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4a0ba97a-3b9c-42b8-9d72-95fce89cf760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c852d06-c1c6-49c0-8e67-d01da3a19305",
        "cursor": {
          "ref": "e1845dec-5fc9-453f-919a-ba07f56d596e",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b130e3a5-b112-4901-a497-b180dd24cc96"
        },
        "item": {
          "id": "5c852d06-c1c6-49c0-8e67-d01da3a19305",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "db09abf3-c7f6-45a1-9e53-9c4d946a3f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ce61e4-adce-4a3f-9b53-953a6828ff5d",
        "cursor": {
          "ref": "c117ecae-027f-4202-9a23-8ca111334898",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4677f83b-4688-4ddd-a63b-95c7bdf0ecda"
        },
        "item": {
          "id": "84ce61e4-adce-4a3f-9b53-953a6828ff5d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9efa2a13-75c0-450a-bbb5-006280acb7b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9edec8a-952c-4240-b5b5-73a1db27d1c2",
        "cursor": {
          "ref": "b9a6a7bf-37ca-48e0-a14e-2818eb30f81d",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "4511ff72-6b83-4b34-a042-034e5a849242"
        },
        "item": {
          "id": "c9edec8a-952c-4240-b5b5-73a1db27d1c2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9b7c9b94-5524-4f50-8995-dc393ed720a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2835e4d-50c5-49cc-9b90-9946a827ba70",
        "cursor": {
          "ref": "4fc6e1a2-cb4c-462b-a5f5-fb4f755dea79",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "6ad26363-bc4a-4fc0-8604-8069e99163c8"
        },
        "item": {
          "id": "c2835e4d-50c5-49cc-9b90-9946a827ba70",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "73abf4aa-dc7b-4539-a2cf-bad7d586ea73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27e2fae3-1162-47a5-8552-c0ed6806545e",
        "cursor": {
          "ref": "98b910ed-624c-46b4-a74f-ede457f1470a",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "09c1a772-c8bd-4c5b-94ea-f48279a8f1d5"
        },
        "item": {
          "id": "27e2fae3-1162-47a5-8552-c0ed6806545e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "79d3b618-0422-4972-a72e-f5594d05c347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 392
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8062d2d0-5efd-4b6a-b56e-0ddb8493dfc4",
        "cursor": {
          "ref": "9082ead9-3dcd-4438-8c47-a35d22fc55d3",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "bf1b1112-e9ca-4c52-a6f7-22d7f79ba5d6"
        },
        "item": {
          "id": "8062d2d0-5efd-4b6a-b56e-0ddb8493dfc4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3e54eb1a-f80b-4663-8a5b-09da6f3fd66c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c7a67e-0b0c-4ebb-849e-dde23d11b066",
        "cursor": {
          "ref": "e00d6acc-0339-4900-9fe8-80a68c55859a",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "667133aa-d163-41ce-97aa-2daeef7d40a1"
        },
        "item": {
          "id": "e2c7a67e-0b0c-4ebb-849e-dde23d11b066",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6b8a9eb2-41d3-4da0-a4f5-e456df1062c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 414
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b3cf7e-526c-4df9-b81e-539914865c25",
        "cursor": {
          "ref": "a326a6be-52d1-4d48-87d3-9190b7f20f81",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c6d8a585-b13d-4ac7-9110-ec788c18b4d6"
        },
        "item": {
          "id": "f9b3cf7e-526c-4df9-b81e-539914865c25",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ba1a5a82-950d-4237-97db-3c3b0befc1e4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 142,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:121)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c1c0f5e-2ebf-4079-93f9-5c3dd43517ec",
        "cursor": {
          "ref": "68072f97-2d86-43ed-90ef-d0cc4fdc3832",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9671d6ea-901b-40be-b11d-4aa3d1d8a2a3"
        },
        "item": {
          "id": "9c1c0f5e-2ebf-4079-93f9-5c3dd43517ec",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "88482e93-d3b8-49f6-b2d2-0ea14ee399d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a142bbe0-161b-42ac-9fe1-43d3953791e2",
        "cursor": {
          "ref": "bb6eea55-54e8-4aae-ac0e-ef8fb2becb60",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "178a3eae-2f5c-48ac-8ecc-d2e3c403145d"
        },
        "item": {
          "id": "a142bbe0-161b-42ac-9fe1-43d3953791e2",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "418c63c9-b9a1-457a-a8a5-8365477b8ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d4cedd-4118-4404-a3d8-9770fce35aab",
        "cursor": {
          "ref": "d047fbb2-5724-4593-9130-99fda4e4f36f",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c7739715-3a82-49a1-8089-57f9175b23e7"
        },
        "item": {
          "id": "83d4cedd-4118-4404-a3d8-9770fce35aab",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "29e6fad9-21b9-4393-a7f0-7d45240bcfac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2200c874-6bcd-48ac-b2b8-fdad9b6871bd",
        "cursor": {
          "ref": "76c2dcc5-ac1d-46b0-98a9-e56cde53acae",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a90dc2f7-b8aa-45c3-9e8b-d172ce424c7a"
        },
        "item": {
          "id": "2200c874-6bcd-48ac-b2b8-fdad9b6871bd",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "094f3367-2d96-4522-a14d-057355916cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 404
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e89512-5ac0-4a5c-aae7-c698332c6ea7",
        "cursor": {
          "ref": "a4e30b70-c024-4d3a-9ae0-a3fc1be225d9",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "7014b503-92fd-4290-b5be-a263050da522"
        },
        "item": {
          "id": "52e89512-5ac0-4a5c-aae7-c698332c6ea7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5ad21f70-b3b3-484c-a8e5-0cd2f88e9445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 426
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea231158-980e-470f-a118-d98f78b3a107",
        "cursor": {
          "ref": "ed2fb828-4c37-4ef3-9c6f-efb633531bbd",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a4bd2028-a588-47f7-93ee-ebfe06009a03"
        },
        "item": {
          "id": "ea231158-980e-470f-a118-d98f78b3a107",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3ced604c-ae5e-4a1b-883b-ccdbf65303ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5531534-1129-4109-85f5-46a09d89a5a8",
        "cursor": {
          "ref": "7ebfb469-7d6b-4daf-9f30-a3a73705342f",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "58fcedcf-79db-4dc5-8c06-7578dfd3c7c0"
        },
        "item": {
          "id": "c5531534-1129-4109-85f5-46a09d89a5a8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ed2da86d-5313-449d-a447-eadce15c30ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f481e7f1-a262-47a8-aae8-fd72835f3634",
        "cursor": {
          "ref": "4d039197-d00d-41fe-b60d-9e43712c3b94",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4000a9fd-f4c0-4a5d-a710-29036129efc3"
        },
        "item": {
          "id": "f481e7f1-a262-47a8-aae8-fd72835f3634",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "64f91285-970b-48fe-9674-802acb780d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82a2696-3689-4739-a2cf-4d6e2ca54f02",
        "cursor": {
          "ref": "c084b731-72d9-458e-bde4-7b0e84d3fdf5",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "94d7d12e-4d21-4835-9f33-8c5f6c476a87"
        },
        "item": {
          "id": "a82a2696-3689-4739-a2cf-4d6e2ca54f02",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "645c3b78-07a6-46b2-9e82-8366ad745620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f299654-ade3-4808-9a75-360a11144432",
        "cursor": {
          "ref": "53384dff-28f0-421e-990b-9e08510c2c8e",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a32a40d3-dce3-4447-b9cd-3882078c3fdf"
        },
        "item": {
          "id": "3f299654-ade3-4808-9a75-360a11144432",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8c897a5f-7b1a-4346-bb56-a4914560ddb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f54170-d952-4b43-a8dd-f9edd6766492",
        "cursor": {
          "ref": "8853d8e8-069d-4ce4-b5c7-e9b32ac40df2",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9a0d59b2-410a-4b6e-9cb9-520c3d47721c"
        },
        "item": {
          "id": "04f54170-d952-4b43-a8dd-f9edd6766492",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e0c554a1-1c7f-4e13-83db-ac93b5ec48f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d688dc6-8cf5-4b02-a24f-0e49265fc541",
        "cursor": {
          "ref": "22226474-6c2d-461a-ba51-717af73a4c56",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f324db20-ca35-45ab-a307-2c7e9087e09c"
        },
        "item": {
          "id": "8d688dc6-8cf5-4b02-a24f-0e49265fc541",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "cfd52499-3b52-45aa-8493-b35c5a1c821d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b800aa32-2936-4062-a964-74e51ff8d6c8",
        "cursor": {
          "ref": "b70725fe-0eea-4787-9f85-3f481dcba446",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "02434792-dd84-4fb6-971b-5d55682fb029"
        },
        "item": {
          "id": "b800aa32-2936-4062-a964-74e51ff8d6c8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d87814a9-da54-4990-bdb5-36f4aa23b37f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64428197-90de-4173-a395-498dd2729f43",
        "cursor": {
          "ref": "b3fee905-ffc8-4166-ab5b-2f89b2e8415b",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "21a5e7c7-e18a-4603-bf76-5271b919065e"
        },
        "item": {
          "id": "64428197-90de-4173-a395-498dd2729f43",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2ff15338-2288-4783-b3f6-4c110c675c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86975eb-4d12-42fd-9b9f-40c44a375b09",
        "cursor": {
          "ref": "946f9294-57c7-48d4-84fa-f26848f7bc00",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "cf842107-06e3-4bad-9c84-c50819b15042"
        },
        "item": {
          "id": "f86975eb-4d12-42fd-9b9f-40c44a375b09",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "fb85bcd2-bc01-4ee1-87c5-a68622138129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b44881-7903-4740-a2a6-d3b52774003c",
        "cursor": {
          "ref": "fc931e0e-94f0-4543-bc05-cb448f185ac6",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c38b0270-7710-4e38-8f11-36dea5d04a52"
        },
        "item": {
          "id": "30b44881-7903-4740-a2a6-d3b52774003c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "df1d43a5-fb70-4e8a-9822-870b442a2057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 752
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff7c249-c1da-4534-b57a-12e5bd94f5ba",
        "cursor": {
          "ref": "62293476-0bf1-4d2d-90d4-d329d65bd92e",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "936026aa-950f-43fc-9889-09b6f4d88b4f"
        },
        "item": {
          "id": "5ff7c249-c1da-4534-b57a-12e5bd94f5ba",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1d3b4361-895d-4899-b81e-1de027f8bab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 755
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c2eb2f-943e-4560-8fa4-18d4ef0aa46f",
        "cursor": {
          "ref": "4155dd78-67a6-4f7b-9007-b6ac0ce14946",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "eeadae57-4092-4c01-928c-5a80d32ef82a"
        },
        "item": {
          "id": "b1c2eb2f-943e-4560-8fa4-18d4ef0aa46f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c356620a-c59e-4f8d-be72-1acb52effb47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5726e1bc-65a6-4762-9b3a-d49af2604c04",
        "cursor": {
          "ref": "c868808b-eebb-4297-812e-0c71e95dd409",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "13285105-53a3-4cce-a6aa-40b7ccca4f00"
        },
        "item": {
          "id": "5726e1bc-65a6-4762-9b3a-d49af2604c04",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "3ad5ff68-62f3-4333-8680-e3d058add60f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb8d6bf0-4653-4b90-bee9-25488cb5c5cd",
        "cursor": {
          "ref": "e93d5ccd-1b8a-4489-9dc7-2c2bd455e2c6",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c38e81fe-d8e0-4fcc-82c2-536c490edcf8"
        },
        "item": {
          "id": "bb8d6bf0-4653-4b90-bee9-25488cb5c5cd",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a9cbf475-f4c9-46b4-9763-bfc147b6516b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7e1945-7dd3-4dc1-bf3a-2fae545a10e2",
        "cursor": {
          "ref": "f1414e22-3ff6-4ac9-8028-bbecaf1bf6bf",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1b3ee25b-5bd2-4004-a5bb-38b17362d903"
        },
        "item": {
          "id": "be7e1945-7dd3-4dc1-bf3a-2fae545a10e2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7f62e1a0-86bb-454d-8e8e-6d114f33c93b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb03f3e1-d71f-463a-a09d-a322fd9b8b35",
        "cursor": {
          "ref": "31fc18cc-e57b-472f-b720-7bc0564afbfd",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "fb127f5a-ff51-4736-96e5-4e755f0f3e5a"
        },
        "item": {
          "id": "bb03f3e1-d71f-463a-a09d-a322fd9b8b35",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6cef8233-8344-457d-9fc5-090b004a2925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e5807f-77a4-4773-9a2b-49478350a78a",
        "cursor": {
          "ref": "f519e275-10bf-43b6-afd6-b4537c269dc7",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d8e5765f-0b7e-4c97-8c19-b5110de73c5f"
        },
        "item": {
          "id": "66e5807f-77a4-4773-9a2b-49478350a78a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2576f9c8-0941-4289-a012-01ff9522bbd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c77eb3bb-5c86-4bd3-afa7-ee35c03c08cf",
        "cursor": {
          "ref": "afba3aa8-39cd-41b3-94cd-4d4a999a0146",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "1f97180a-ea59-40aa-80b1-3d07279b791b"
        },
        "item": {
          "id": "c77eb3bb-5c86-4bd3-afa7-ee35c03c08cf",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c1c196ce-8ab7-4fa0-bde6-acf025151824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda95245-b45d-486e-8f98-367b4510c3a9",
        "cursor": {
          "ref": "d75892a8-c09d-4f23-8696-7c82b8a741ed",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "8aa428c9-565d-4d7e-a86b-19b62ac650f9"
        },
        "item": {
          "id": "bda95245-b45d-486e-8f98-367b4510c3a9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "febbfda8-67bd-463a-959f-c76690a708e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76c8137-f6b2-44cc-89b1-3bfa0021506f",
        "cursor": {
          "ref": "a20f7bc6-1b9e-4e5b-b622-044383a0eda0",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "cfb5b470-067c-4968-bcc7-b0d8e5d4fa30"
        },
        "item": {
          "id": "d76c8137-f6b2-44cc-89b1-3bfa0021506f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3e69ce6c-e81b-4b1a-b5a3-3c563ec51330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d67e04-2cc4-44b9-bd57-9267be71a8d2",
        "cursor": {
          "ref": "1d842ea0-b162-4684-8b73-593353ed9431",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7fb709ac-d7b0-4cf8-81fe-5b809d32c8f8"
        },
        "item": {
          "id": "e5d67e04-2cc4-44b9-bd57-9267be71a8d2",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e85e2bf6-02e3-4706-b8cc-c8d266eb76a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac6a848-4f8f-4845-aa6e-0c56be5a0bd9",
        "cursor": {
          "ref": "40bc3995-785b-4b7c-95ed-4a1ebd261a3e",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ca77d0bb-2562-48b5-a905-b892de8b4909"
        },
        "item": {
          "id": "8ac6a848-4f8f-4845-aa6e-0c56be5a0bd9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0f58e48c-94ac-4599-97ca-0222946ef2f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f78292a6-d43a-4be7-9799-aed0602aa7a9",
        "cursor": {
          "ref": "08312e6f-130d-41a5-b66c-20b23cc55f32",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7cbb6cdd-e88a-4dbe-ad06-8fc0e9ed7f8a"
        },
        "item": {
          "id": "f78292a6-d43a-4be7-9799-aed0602aa7a9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4a053c59-780f-4f44-8306-39392148fee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744d2e9d-e636-4f3c-b6eb-27ddb9138974",
        "cursor": {
          "ref": "6f252b12-b744-4fae-8555-12dab0b5e86d",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "97eaaa40-441f-4e97-8298-1323a81bb06d"
        },
        "item": {
          "id": "744d2e9d-e636-4f3c-b6eb-27ddb9138974",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "53ab6158-656a-40e6-b3c7-91bcf9991f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 392
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67cc6bd-cc5c-43eb-aaa7-1676d8753c3f",
        "cursor": {
          "ref": "a5113043-a2ae-4576-9344-c65bfc3c566e",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8c8255b9-7f83-4c38-a23f-89453f02a257"
        },
        "item": {
          "id": "a67cc6bd-cc5c-43eb-aaa7-1676d8753c3f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a81fae16-e156-4bd4-97be-e9dca8299d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf796ed7-64f2-44b6-b48c-e28fe94a78d4",
        "cursor": {
          "ref": "10b501e9-5d3b-42c7-81e6-ddeb434c9560",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "707c453c-67a4-45fe-96f2-1d38b60c6593"
        },
        "item": {
          "id": "cf796ed7-64f2-44b6-b48c-e28fe94a78d4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "618cb417-1ba9-4903-8166-2d0d5da6b8e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6268b1f8-0c04-48b2-957a-360a355ca33f",
        "cursor": {
          "ref": "18d3909c-619b-4576-98be-3c2fc46b6406",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6fc76a02-4667-421d-8994-5c6389e14069"
        },
        "item": {
          "id": "6268b1f8-0c04-48b2-957a-360a355ca33f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "182cc829-4d8e-40dd-bfd1-0277d5a3e24d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ceb704f-dfd3-440d-896d-e455d217ec57",
        "cursor": {
          "ref": "6c5c3409-d19d-4669-b40c-8fb6a52be8ac",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7c33b86b-7975-4267-b4f4-235b6aa13314"
        },
        "item": {
          "id": "5ceb704f-dfd3-440d-896d-e455d217ec57",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d28fc118-d531-4556-928b-3a3348ebbfaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670d5216-fa14-48e7-bcef-f13bef0a243b",
        "cursor": {
          "ref": "66aa4e82-47cf-4be4-af06-59b3ca563c2d",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "883b6f2a-98a3-44b1-b22f-165f7c2075dc"
        },
        "item": {
          "id": "670d5216-fa14-48e7-bcef-f13bef0a243b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4a2b8993-0b53-43a5-b39e-342e41ae33af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd323f61-978d-487b-8ef5-043faa9dc44e",
        "cursor": {
          "ref": "cfb58942-c102-4563-a26a-970d18027f31",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "decae141-97a4-4e86-a43a-6681bf463f2f"
        },
        "item": {
          "id": "dd323f61-978d-487b-8ef5-043faa9dc44e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "197151fb-83e8-43db-a5b8-a69f0f30ea18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04092d40-35ba-4d8b-a625-09ae34a80476",
        "cursor": {
          "ref": "b8aca99a-94c9-4a37-9f6a-1726d31d38fb",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3c823e7d-fed1-4aff-9c84-48727b30f4e7"
        },
        "item": {
          "id": "04092d40-35ba-4d8b-a625-09ae34a80476",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "26be8f47-f0d6-41cc-ad6b-424501644fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 404
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a904d4-6ef6-4a77-bf3c-b2bc73e87a57",
        "cursor": {
          "ref": "abd3f49c-460b-43d8-bc5e-9d367532a0be",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "21f1874e-a991-4f82-ae7c-3b3dbeb7ead5"
        },
        "item": {
          "id": "c5a904d4-6ef6-4a77-bf3c-b2bc73e87a57",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "4e41104e-5836-4704-bd01-0869a29f842a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 421
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa3490c-0ed3-4ea9-bee0-b981be2f217e",
        "cursor": {
          "ref": "7053d4a0-5be9-4c17-b68b-fe20952da824",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "42d94ad5-3b7a-412e-8b64-11000cc965bf"
        },
        "item": {
          "id": "6aa3490c-0ed3-4ea9-bee0-b981be2f217e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a488dd0f-f650-4750-915b-c399c87b40ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1987c49-62e1-4f57-ac74-0d59c411eb5e",
        "cursor": {
          "ref": "728df173-c009-48ff-8c79-2239fb464126",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "eee26243-808c-4b5f-bbc3-01e6d012b491"
        },
        "item": {
          "id": "a1987c49-62e1-4f57-ac74-0d59c411eb5e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "60fc8554-d035-4d14-92d4-30caf98e2b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab9a84bd-3b91-472e-abda-324040986a22",
        "cursor": {
          "ref": "6a86c8f7-ac10-4f77-8586-3c55ab1a6b8d",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "57426a41-9074-4e7c-9af3-689271fa3c7e"
        },
        "item": {
          "id": "ab9a84bd-3b91-472e-abda-324040986a22",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "45f9644c-ef98-4e28-861e-ef81fd186a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f9df954-912b-4bad-97fd-b1045fb2ce02",
        "cursor": {
          "ref": "4cfe4bba-331b-4082-abac-a7fd39657ed7",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "51e9060e-323f-40f3-bab8-f784e6b1e409"
        },
        "item": {
          "id": "4f9df954-912b-4bad-97fd-b1045fb2ce02",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "394619ff-42fe-4b83-8a2a-75478a312af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db4b9a6-ff42-4439-b29c-26e8e5901e6b",
        "cursor": {
          "ref": "711ca078-92f3-41ee-b74c-797c35bf7faf",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "74425033-5485-4028-8c90-98ef99f9b051"
        },
        "item": {
          "id": "6db4b9a6-ff42-4439-b29c-26e8e5901e6b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c1dc702c-9bf0-4d7e-b19a-4cbbfa9ef20f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6c0373c-54ad-43cd-97e7-b38d40660d01",
        "cursor": {
          "ref": "4fbefe55-9277-42df-be32-70d047ca5163",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "7079b51e-fe84-4805-a3b6-9cb19db49f46"
        },
        "item": {
          "id": "b6c0373c-54ad-43cd-97e7-b38d40660d01",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "bbc3ef5e-95fb-46f5-9686-ab0d5a03cb12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7685ded-cc2a-46a0-bdf6-191c43c4a43d",
        "cursor": {
          "ref": "3b7e6264-0795-40b1-ade2-4bb7bf6e6e97",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b898af44-cd11-4a5c-ae4c-6fe19670d4c8"
        },
        "item": {
          "id": "c7685ded-cc2a-46a0-bdf6-191c43c4a43d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4fa1a6ea-4ef3-4004-9633-a8e4ad842cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ccaac35-2948-45ca-8964-dab3e85a8943",
        "cursor": {
          "ref": "d3f1841b-f90e-451f-aaab-9b067b2ce960",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "862525c5-f5e0-4730-b167-717845a9d142"
        },
        "item": {
          "id": "8ccaac35-2948-45ca-8964-dab3e85a8943",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e36dafb3-1531-41fb-ba42-9c721fefdaeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 790
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ca3227-37cd-4493-a654-4ede1f03f096",
        "cursor": {
          "ref": "9fd4f93b-b25d-487b-b89f-f9b47473b883",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a0f5cf13-1f53-4d70-b378-9c124fd84997"
        },
        "item": {
          "id": "77ca3227-37cd-4493-a654-4ede1f03f096",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "667f3a83-7e8f-4095-8a42-c82368493112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1070
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2619b05b-b20b-4e70-a911-f8e736dcdd93",
        "cursor": {
          "ref": "7c757d51-5077-45e2-8e62-2b041b9ffcb4",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "13b4851b-1da6-40e1-8c64-de8890dc0a59"
        },
        "item": {
          "id": "2619b05b-b20b-4e70-a911-f8e736dcdd93",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4ec8c89d-e220-4242-b32e-73c9307561ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1070
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2d2521-9116-4963-a072-c74e4b66127c",
        "cursor": {
          "ref": "a962225c-b376-4966-8690-f2d5d8b8e7ee",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "73c2164e-b7c5-4337-be81-515070453903"
        },
        "item": {
          "id": "1f2d2521-9116-4963-a072-c74e4b66127c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "28e118f2-d08d-43bf-9823-06b2b27b3a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1066
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f78a0fc-0f36-499c-aad8-5dfd61761a05",
        "cursor": {
          "ref": "bf256af4-f0c4-47ac-b57d-9a4094ec5296",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "539f9880-66cd-4555-a052-a87d9d0618bc"
        },
        "item": {
          "id": "3f78a0fc-0f36-499c-aad8-5dfd61761a05",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3e607805-c9f3-4c87-8d97-29382663a5ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1069
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db6bfac-1787-4010-a6e8-1ab386039a26",
        "cursor": {
          "ref": "d860d3e4-2e87-4fdc-a681-090d05e2b32a",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "2fb3514a-a3c7-45c8-831c-d22dc39c210f"
        },
        "item": {
          "id": "2db6bfac-1787-4010-a6e8-1ab386039a26",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "983ad3de-70fd-47b5-9c75-e7df69bdfeef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1067
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9d6c97-5d98-4287-a2b6-d9762cff6432",
        "cursor": {
          "ref": "40b143b1-a624-4d25-85d3-740f636df70e",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "70b6296e-62c3-441d-a267-fed07f2e494f"
        },
        "item": {
          "id": "fa9d6c97-5d98-4287-a2b6-d9762cff6432",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "98bd71ba-b5e2-4ea5-8619-c1fe50a9d653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7627492-1e14-4407-a88c-d2977c11e4df",
        "cursor": {
          "ref": "40c6ef54-6c53-474a-932f-385e0af212f0",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "91aeeea5-bad9-4fbc-919e-fd0a5904a6c7"
        },
        "item": {
          "id": "b7627492-1e14-4407-a88c-d2977c11e4df",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "76b0d334-1d27-4b9a-b478-2200db256746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "726258d8-4a1c-434f-8130-4de0af4cfe66",
        "cursor": {
          "ref": "b52a4d45-c6f5-47a3-b759-c0f0dfbd9ffe",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "4f405994-d103-4e68-94f4-3de5fe5504cf"
        },
        "item": {
          "id": "726258d8-4a1c-434f-8130-4de0af4cfe66",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "cdb09b60-0e84-4986-ac8d-3d865a94fcf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5966e2-6237-42a8-9022-0eeae84252cc",
        "cursor": {
          "ref": "c49d7152-b91a-4525-bbd8-614b1f156096",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "59d7e16e-619c-4bfe-b1ee-c158060e591c"
        },
        "item": {
          "id": "8a5966e2-6237-42a8-9022-0eeae84252cc",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "cd67a2a0-00c4-4889-a1dc-c8d5098cc7af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee804860-4f43-4524-a2cd-b85807b70d24",
        "cursor": {
          "ref": "8eebbec6-3f91-4c73-b397-ef5f7e58b6e2",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f34201c6-6e59-4e51-b0f0-047e2fc50a0a"
        },
        "item": {
          "id": "ee804860-4f43-4524-a2cd-b85807b70d24",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "5e80d29c-06a2-42c7-a375-c14e60f2be62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "314bd1c7-81d5-462c-91e7-7efeedb83a69",
        "cursor": {
          "ref": "d490f508-6772-4446-a7df-e160da13a0d2",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ae243954-d4bc-4431-ba79-0a09b1b1bf3a"
        },
        "item": {
          "id": "314bd1c7-81d5-462c-91e7-7efeedb83a69",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "cb2b90a2-ef84-49f6-93b5-070df296932f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e8d7e4-3443-4f75-a75c-09e33be39c5c",
        "cursor": {
          "ref": "39e904be-37ab-4766-9ae7-ec7871f3f31f",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e2b01911-3c37-4a62-a543-de1c5ab31022"
        },
        "item": {
          "id": "59e8d7e4-3443-4f75-a75c-09e33be39c5c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b5b0399e-d6a7-4365-b146-55cedb98edb3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab2e3db-8309-40ac-98af-f4740905d9e9",
        "cursor": {
          "ref": "24174d18-414d-4cb8-9a1f-2883af44e18b",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "6f5a7c75-a8bf-4680-ad30-cc8439692ce5"
        },
        "item": {
          "id": "aab2e3db-8309-40ac-98af-f4740905d9e9",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5ce9fcc3-38b9-4af5-839e-40cd7a0141ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4534dd8d-0f9b-44c6-95bd-d8087c1da60c",
        "cursor": {
          "ref": "7c2d9dbf-a89f-4e6d-ab7a-7bb6c4cf6901",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ac8fc826-4692-451d-8be0-6d8c9310bd56"
        },
        "item": {
          "id": "4534dd8d-0f9b-44c6-95bd-d8087c1da60c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d5180081-a1c2-4dfe-8cb1-16d9e2910551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c60754-457d-43e5-aff2-1cff3454026e",
        "cursor": {
          "ref": "72fa09d7-fa35-4d1a-9cef-8277bc8bf969",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f8385bef-d255-4937-b74a-caac0cf1e7fe"
        },
        "item": {
          "id": "09c60754-457d-43e5-aff2-1cff3454026e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b89ada46-e3f9-49d7-8c93-8c6b361bcfa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b73b350-ad66-4955-a14d-2506c4fb0b1e",
        "cursor": {
          "ref": "ace9c6ac-f784-40ec-9b96-258d5b2d21f9",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f65e7923-52b7-4556-9ffb-81eb1fa56ea2"
        },
        "item": {
          "id": "0b73b350-ad66-4955-a14d-2506c4fb0b1e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f96e8208-cc60-4069-aabe-6ecc5b39240c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6704249-218b-495c-9a3b-147d5c5814ce",
        "cursor": {
          "ref": "a2306ff9-cc1c-44a0-bbf6-6010e64d4fca",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "098964fc-25a6-438e-8db4-c37531fc60e6"
        },
        "item": {
          "id": "f6704249-218b-495c-9a3b-147d5c5814ce",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "1827497c-c385-4546-93fb-459fe407b340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b41f5a00-5fa5-4e11-b7ea-d6eb837d822c",
        "cursor": {
          "ref": "0bb9c30c-ff37-49e7-b481-a9f3b1f964a6",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ac831126-3f42-4039-8af3-29403bc65ccf"
        },
        "item": {
          "id": "b41f5a00-5fa5-4e11-b7ea-d6eb837d822c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "2d2051af-7acb-45be-ba06-bf39d5520efe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71f8674-f612-4f0a-b2ee-41479727f8db",
        "cursor": {
          "ref": "992434f6-d200-41c8-b23d-beda9880b310",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1a1bb622-b99c-4402-bfdc-44d9876c1bfe"
        },
        "item": {
          "id": "a71f8674-f612-4f0a-b2ee-41479727f8db",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "7f405dc0-0c18-413d-83a0-a274e5aa61be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac7d88b-36a5-4f06-afc2-23f16e2b7d11",
        "cursor": {
          "ref": "74f92825-a2db-422f-8ce1-51869b8626f1",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6ac4f716-e434-46be-94fc-e7795143c7b9"
        },
        "item": {
          "id": "0ac7d88b-36a5-4f06-afc2-23f16e2b7d11",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "bd8611f0-fe8f-4c5f-9d1c-f0dc5bef4e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce3644f-a16e-498f-83e5-f2f137a86696",
        "cursor": {
          "ref": "4d96c035-add4-4a22-b1be-f967f47ec781",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d2c2027d-deb0-4b84-aa73-f035b2232d78"
        },
        "item": {
          "id": "dce3644f-a16e-498f-83e5-f2f137a86696",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "34791ab1-3b86-48b5-a4b6-d054b7ecf86b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9052743-fdf5-4ea1-9e27-b4f8fe0b59fa",
        "cursor": {
          "ref": "dd04578e-96f7-48f1-baa0-96ce7037185b",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a170b14d-2ba7-43af-9a69-6a31a91a5403"
        },
        "item": {
          "id": "a9052743-fdf5-4ea1-9e27-b4f8fe0b59fa",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b8b81793-a557-4bb8-ad8b-4479652d83bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ce19e8-9aa7-485f-aab6-7403e7567043",
        "cursor": {
          "ref": "4bb9cd4a-2258-4c76-85fc-63861551c367",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "63d6583d-832e-4a6e-9b35-403b8bce5db1"
        },
        "item": {
          "id": "a6ce19e8-9aa7-485f-aab6-7403e7567043",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d33d4ccf-dddc-485d-b3da-45faab94d21e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f48270-b4f4-4ad2-ad4e-100ea40da1e0",
        "cursor": {
          "ref": "fb1380bb-559f-4fe0-92ad-19c2b0c92628",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c88c417f-25a6-44d2-bfe5-fc07e9cdb0c2"
        },
        "item": {
          "id": "84f48270-b4f4-4ad2-ad4e-100ea40da1e0",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "84aa4786-5e0e-451b-b003-4ec43c718242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a96b562c-b2de-491f-a740-54e32b7b8165",
        "cursor": {
          "ref": "64738daa-db0c-43f7-bc1a-014ecd4612f1",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "978f92ce-1d22-4ebf-9033-dff8bb71ea2c"
        },
        "item": {
          "id": "a96b562c-b2de-491f-a740-54e32b7b8165",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "dd0ce75d-5158-4748-98e6-ead842a0c588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5dc2661-44c4-45f1-a0a0-a2b32e4e006e",
        "cursor": {
          "ref": "651fc856-e61a-4930-b56b-0d35fe24b857",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5ba96879-47d4-4e3d-9573-0f777910b4ac"
        },
        "item": {
          "id": "c5dc2661-44c4-45f1-a0a0-a2b32e4e006e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "adf1ee59-6cff-465a-813d-53da3a9a6d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5361b3fc-3885-4050-af30-49c5bb7da16a",
        "cursor": {
          "ref": "2ac5afb7-be25-4e65-bb0a-ed0d0d637730",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "00b9001c-1ae8-4af4-86ad-f94b628d26f3"
        },
        "item": {
          "id": "5361b3fc-3885-4050-af30-49c5bb7da16a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "75eaaa03-97b6-4a61-9b26-ae5da9d8c1c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "878541b6-762f-409b-a42b-3a4fb9761687",
        "cursor": {
          "ref": "55614795-f8df-4da7-8f66-ed3776b3ec37",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "40e42b50-5f27-4d93-a058-d9d7ab9b5eef"
        },
        "item": {
          "id": "878541b6-762f-409b-a42b-3a4fb9761687",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "15169c1b-65fe-4b94-8eff-541b9534628d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b429cf-dd0a-4502-a855-0dc0ee529a1b",
        "cursor": {
          "ref": "6df2e40d-97af-473e-96e0-87118a586da7",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "97500f16-16a7-4e93-87b7-3734a58865a3"
        },
        "item": {
          "id": "c6b429cf-dd0a-4502-a855-0dc0ee529a1b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "8ca774e5-1beb-4452-9769-1ed6ec4d265c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92537c9d-0338-42e3-8cd8-332144efc58d",
        "cursor": {
          "ref": "ac120ea0-54fd-4ef5-aa6b-f0da9fc016d5",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7c2211c9-6baf-479b-b8d0-5b04fa8184f7"
        },
        "item": {
          "id": "92537c9d-0338-42e3-8cd8-332144efc58d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b2cef16e-0d60-43ff-b53f-768485ed8561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7604406b-78fb-4088-b1ca-373730371966",
        "cursor": {
          "ref": "7ea64f69-60c8-4eca-8427-22e99b8a1a12",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4c298c7b-366c-4304-8c9c-6504958acdf1"
        },
        "item": {
          "id": "7604406b-78fb-4088-b1ca-373730371966",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "7a963d6b-4dc2-41f9-98a1-5efbc069d996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca5881f5-dac9-4ab6-a62c-219b33e1ee1b",
        "cursor": {
          "ref": "9be7dbb0-22fd-4408-8e66-098d5630ffba",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e36dc995-bad0-4601-9348-11793a3b832d"
        },
        "item": {
          "id": "ca5881f5-dac9-4ab6-a62c-219b33e1ee1b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "69b0482f-5de8-427e-a844-53e77c02b571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa8d15de-ec73-4157-86ce-d6997839e9eb",
        "cursor": {
          "ref": "6b9e7dee-b7f7-478f-983e-e0b164c79b02",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a37f2f91-75db-4642-8f74-1c2f8a25dcf4"
        },
        "item": {
          "id": "fa8d15de-ec73-4157-86ce-d6997839e9eb",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "7f0b837b-f31c-4650-bbfb-7de4368a8bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1211a17d-fd90-42e2-90d2-f6b71ac58fe8",
        "cursor": {
          "ref": "c4af89bd-3d91-4143-8c59-2a479b275926",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "9ce4a306-d947-46dd-a3dd-c8f6fa8b50d9"
        },
        "item": {
          "id": "1211a17d-fd90-42e2-90d2-f6b71ac58fe8",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "251c4221-a2d6-4037-96f3-9e286d3abae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f32e02-6e74-4139-b0c5-6c95fa0fcb42",
        "cursor": {
          "ref": "355fcdcd-38ba-4af5-bf52-a100af3d3cad",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "884fc374-9886-4e4a-b333-cc8188be8fde"
        },
        "item": {
          "id": "47f32e02-6e74-4139-b0c5-6c95fa0fcb42",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "1efe085e-cfb2-4668-8ef8-f78501d4035b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a4ecc3-0d86-4ac8-ac0e-485329ce9bb2",
        "cursor": {
          "ref": "5c6eeefc-1d75-43ed-98a1-5b39c679b461",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "750b7990-3617-4459-9e07-c98b537a72c1"
        },
        "item": {
          "id": "78a4ecc3-0d86-4ac8-ac0e-485329ce9bb2",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b1d4c117-00d9-4ef1-8618-3a5670684aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20956ef-3eb3-4a39-a4e3-354ad3224d54",
        "cursor": {
          "ref": "ff0b8095-4300-4a7f-87fb-5a151e5209a3",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5e099c2e-9d82-44c0-8bb2-b26dee2a1d03"
        },
        "item": {
          "id": "c20956ef-3eb3-4a39-a4e3-354ad3224d54",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "91f50164-3215-4b6f-9d55-781590c78b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5581a93-af12-434e-997b-86369511eedf",
        "cursor": {
          "ref": "62317719-880f-4931-9e3e-afe7c0946247",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6869e6d6-1899-40ec-bb6f-4a15ccb3f639"
        },
        "item": {
          "id": "f5581a93-af12-434e-997b-86369511eedf",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "95b96095-2477-4b59-9cd4-d7cda4b13bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f53172-8ef4-4f6c-a4f4-d24a4ccc0ed9",
        "cursor": {
          "ref": "6e569bfa-c967-4c1d-a0e8-a0c57e465c2e",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "cd2033e0-6acd-4b7e-898e-a9ec6f2400cc"
        },
        "item": {
          "id": "05f53172-8ef4-4f6c-a4f4-d24a4ccc0ed9",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "cc12a6a8-6cf5-4311-a550-e43638fba02a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c621ef8f-203a-4ebb-9223-39f18c49ead9",
        "cursor": {
          "ref": "dcb8c3aa-73f7-45e5-94a3-ddd8d315fe72",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5508f26d-de8f-4796-b285-c895c520c071"
        },
        "item": {
          "id": "c621ef8f-203a-4ebb-9223-39f18c49ead9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "80db9a27-4ccc-4f94-b892-17e4bc578b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f55028-8c50-4c0f-a1a3-0d9f7b4f2f02",
        "cursor": {
          "ref": "2a6fda55-24bb-4b79-8cb4-b6110d52ac51",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e7b63f5a-b27b-4f6d-a199-be6dbb6b8d19"
        },
        "item": {
          "id": "e4f55028-8c50-4c0f-a1a3-0d9f7b4f2f02",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "2e1a788b-1f7b-4ff2-98eb-8c58af67b0d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ce9557-43b4-49b3-86fe-6778ecac3a72",
        "cursor": {
          "ref": "47c590d7-e4d3-4e6e-ba39-a1ef2d6f2ed0",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "437ae3bd-c266-46dd-8872-d8ad0452e168"
        },
        "item": {
          "id": "32ce9557-43b4-49b3-86fe-6778ecac3a72",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "298195c2-eb1f-4a82-bc13-fade88eed009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b7c4d7-a2d1-408c-a417-22dbd14a73bc",
        "cursor": {
          "ref": "b536e35e-e2d5-4ecf-a07c-8eef5df8768f",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "04553ce1-7ef8-4eb5-98ea-50e0846bda27"
        },
        "item": {
          "id": "27b7c4d7-a2d1-408c-a417-22dbd14a73bc",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f2ad74bb-754c-4dd3-b21c-e74e91a7cdb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2a5c13-4063-47a8-a338-e45e9e2d2706",
        "cursor": {
          "ref": "14c29757-e455-4de1-949c-42650b2ec664",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3d823bb6-e89d-473b-9902-f74e39dfc817"
        },
        "item": {
          "id": "ed2a5c13-4063-47a8-a338-e45e9e2d2706",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "478f9a7f-ee4c-4ffb-89b7-43df12a6e310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83a31fee-8a9c-44d8-89c2-bd3231e925a7",
        "cursor": {
          "ref": "a61e4a0e-7922-4aac-8b2d-e091e0995451",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a2eb6404-8848-4367-a0a2-b8df95ca7476"
        },
        "item": {
          "id": "83a31fee-8a9c-44d8-89c2-bd3231e925a7",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "1d3fd9a4-3311-44c0-9a9f-3644a97cc39d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c7f5d9-00f8-4373-bfab-eb2d8ced35f6",
        "cursor": {
          "ref": "d3ba1ced-2ab2-4454-8b19-b28b1b7b2b1e",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "20b740aa-e8e5-4fab-ad84-72e799df9af8"
        },
        "item": {
          "id": "12c7f5d9-00f8-4373-bfab-eb2d8ced35f6",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "8d1e487f-25d5-4421-b3f0-f2b1013cb253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c949a8-8ab8-4165-869b-2afc28f64d00",
        "cursor": {
          "ref": "7fa2d8dc-4bd2-491e-819e-213a6ca73e55",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ce17ca40-4245-4753-95ca-3f13a2dcce37"
        },
        "item": {
          "id": "28c949a8-8ab8-4165-869b-2afc28f64d00",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "91f10845-064a-4bce-8839-d1a4c8aef579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ad8c70-89bb-4d4d-9171-4e93ff018332",
        "cursor": {
          "ref": "5cab6d7d-a915-49be-8d25-40846255817b",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "eb2c03e2-ecdb-440e-a821-f691427068b7"
        },
        "item": {
          "id": "88ad8c70-89bb-4d4d-9171-4e93ff018332",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a6492460-5fef-4016-8c6e-fdf94460ebad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ab71b3-5ded-42bd-819d-75cd68ba2e14",
        "cursor": {
          "ref": "88301b65-db71-4bba-add4-e1d8e1bac07e",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "0fed9e65-6cb1-42bc-83a9-5c6a65de4a81"
        },
        "item": {
          "id": "68ab71b3-5ded-42bd-819d-75cd68ba2e14",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "7e693ac6-58bf-405f-b315-46baf92599c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a5c13a3-b5dd-4641-a8bb-f86375f80820",
        "cursor": {
          "ref": "c130b81c-2997-45fe-bc5c-55a112bab379",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "cc42deb1-489c-4211-95c9-4c56016288ac"
        },
        "item": {
          "id": "3a5c13a3-b5dd-4641-a8bb-f86375f80820",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "88d1707b-0ddc-4fda-8052-fbb32a28cd52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ccc5c4-6bee-4534-b4da-9ca6a95ea4a9",
        "cursor": {
          "ref": "1f29f2cd-6747-4ad0-a0b2-e0ff773daaae",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "3884b9e7-54d7-439a-a4c7-3457f1edcff5"
        },
        "item": {
          "id": "50ccc5c4-6bee-4534-b4da-9ca6a95ea4a9",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "4f0bebb1-0cd6-4234-8fad-26a8f6f09a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d035f8c-cc1e-4f40-b04d-dc19bdaf118a",
        "cursor": {
          "ref": "112a0e1c-abea-4374-a914-a96762ad1ad4",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "4d1002b7-14e6-4fa0-87b7-f9480646a4ac"
        },
        "item": {
          "id": "9d035f8c-cc1e-4f40-b04d-dc19bdaf118a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0b134973-5a1c-4fc2-89ef-66d91c8183f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfeec3cb-36ff-4df0-92bc-96a9b0d90bf5",
        "cursor": {
          "ref": "6eb116c3-769c-4615-bacd-02b037489919",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7e7571d0-a1cc-4c14-987e-c4156f1ac0ef"
        },
        "item": {
          "id": "dfeec3cb-36ff-4df0-92bc-96a9b0d90bf5",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "99233fa8-3d86-4132-8867-18b03684a770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06deac97-4110-4d84-a26f-584a1aae72ad",
        "cursor": {
          "ref": "8084c689-7d1b-4552-a944-cb95f9e32e6e",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2bbe6abc-be40-4436-b4cc-69c8cacd8e52"
        },
        "item": {
          "id": "06deac97-4110-4d84-a26f-584a1aae72ad",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e7832733-1319-47ef-bfee-9342d46ff8d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd5bcf8-a4a1-494b-9079-7bef68bc97a3",
        "cursor": {
          "ref": "9fb8b242-dc81-40f9-bc9a-3f4197663184",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "62221743-d618-421a-a673-f590df7613d1"
        },
        "item": {
          "id": "5dd5bcf8-a4a1-494b-9079-7bef68bc97a3",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ecf2ff42-c2d6-4f9f-a6ab-06be94397466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16cb6154-7890-485b-abc4-a3009abfc94f",
        "cursor": {
          "ref": "1a012066-27e9-4368-ad71-f04e341856d5",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "32fff71f-2c72-4b07-a1f1-f9ccd7a67cbe"
        },
        "item": {
          "id": "16cb6154-7890-485b-abc4-a3009abfc94f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "2b4674b5-e642-47a8-bfb2-3600bc3e8884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef2b1221-216f-435a-b0e2-6dee4d16ce63",
        "cursor": {
          "ref": "c5dd2f55-4046-4cf6-abc6-d510e0c56531",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "268e4f21-3681-402a-b1ec-a38a52a02fce"
        },
        "item": {
          "id": "ef2b1221-216f-435a-b0e2-6dee4d16ce63",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "55584786-90d6-4612-80a5-c3eada0f1785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0770143d-5eac-4eac-84db-478899e8539b",
        "cursor": {
          "ref": "6afc59f3-5784-4d86-b5c7-a8fc2346bcef",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e88a3b47-ee78-45d5-8568-af4cbe95446c"
        },
        "item": {
          "id": "0770143d-5eac-4eac-84db-478899e8539b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "67deec9c-37f6-4d58-8c1d-e5c4750a71d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20223583-d3e6-46fd-b1da-27cd3b4583f3",
        "cursor": {
          "ref": "b788a955-5b3f-47f5-88f4-327b42556ef5",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4912807a-9be6-4618-82cf-4460d5985ce5"
        },
        "item": {
          "id": "20223583-d3e6-46fd-b1da-27cd3b4583f3",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "328c2dac-5574-446e-ae00-8756f9e8a3f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2863a794-ac5d-4bba-b656-d5d6728c1ef2",
        "cursor": {
          "ref": "01dd8348-30b6-4ae3-8349-fff9bd108326",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "5c46aa4e-8c2d-4d30-9d85-1292baee300d"
        },
        "item": {
          "id": "2863a794-ac5d-4bba-b656-d5d6728c1ef2",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "eb5729fd-7d22-44f8-8265-de3e67793dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09caf060-687b-45de-86a1-731ed87d4e02",
        "cursor": {
          "ref": "03de028f-994a-4c7f-8111-fb0940f8a81c",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f2429fc5-4d51-4838-9a32-84dd3df204f6"
        },
        "item": {
          "id": "09caf060-687b-45de-86a1-731ed87d4e02",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f4eb6f5c-db1b-43b0-800b-4b816b3311df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ac5e43-eb6e-410b-b767-51cb5b0d1e2b",
        "cursor": {
          "ref": "80ef802d-8a5f-4974-9136-f8f14ddb65c6",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e717419d-560d-44d9-b8ab-29a12469f6cc"
        },
        "item": {
          "id": "e8ac5e43-eb6e-410b-b767-51cb5b0d1e2b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0fe9f4df-9e5f-493a-8124-d64cf12b843b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd1bc27-0b3f-42bf-b858-148b3af2d7f5",
        "cursor": {
          "ref": "79758c27-1749-4bc6-911c-5108587ba06c",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "379a1374-198e-4b4a-8a9e-29560023fe47"
        },
        "item": {
          "id": "7dd1bc27-0b3f-42bf-b858-148b3af2d7f5",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "8a9d31c7-28ba-481a-a58e-b2cfe5ab8f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e45961-f444-485a-aaff-b088a0cbafbe",
        "cursor": {
          "ref": "ebdad8c9-b201-453d-8dc1-15ddaeaeb785",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "464844f0-cd0d-420a-8100-643aa09971c4"
        },
        "item": {
          "id": "14e45961-f444-485a-aaff-b088a0cbafbe",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4fa9d603-a29c-419b-b234-a069172c0c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca32c3a8-e2a9-420a-83bf-98d88ec8c434",
        "cursor": {
          "ref": "aabe4767-e0b8-4f97-8491-a6c43db8e9c8",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "1263da37-0475-4914-a796-6b9f16d9c655"
        },
        "item": {
          "id": "ca32c3a8-e2a9-420a-83bf-98d88ec8c434",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "87fdceb4-b33c-485d-8f5c-a3d2fd58ac51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d09f6e-7323-4e59-93db-bad4235c16c2",
        "cursor": {
          "ref": "d4b6d29b-8fe5-475d-b83b-f86373482331",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f45264b5-b81a-478d-94e4-491563197fc3"
        },
        "item": {
          "id": "13d09f6e-7323-4e59-93db-bad4235c16c2",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "799039e8-6757-4cb5-b730-d26820fa89c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0a37d1-48b7-4c56-b7b7-d2d4b7ce3216",
        "cursor": {
          "ref": "a3cb17b3-8df9-4292-a79f-14aec5cf7e3c",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c8e55139-4fd4-41ff-8f5b-05382e8a26d5"
        },
        "item": {
          "id": "4c0a37d1-48b7-4c56-b7b7-d2d4b7ce3216",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "37b22781-985a-40b4-9567-b36bc2e13aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cec0006-c9e6-460a-b938-38c9b78f3cd2",
        "cursor": {
          "ref": "a3637702-3069-42b1-aae6-bb19178a4f73",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c52b1815-dacb-47c4-952c-4b3eb19f75f9"
        },
        "item": {
          "id": "1cec0006-c9e6-460a-b938-38c9b78f3cd2",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3159bd6b-ccc5-436a-b5c5-b6ffef2fc52f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa32d686-d96d-462b-9b56-9950183a5870",
        "cursor": {
          "ref": "c9f2db11-403a-42dc-bed2-bd53785a6ebb",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "28b4aa50-3006-4bff-ac51-838892a28bc9"
        },
        "item": {
          "id": "aa32d686-d96d-462b-9b56-9950183a5870",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "251635f0-e912-4c9e-9922-8659b4da0c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc96298-fd4b-4c67-bcb2-2c0c448884ea",
        "cursor": {
          "ref": "ee69708d-5944-4f69-956a-a1f3b815532f",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a8b09b4f-2bf2-485b-a57c-e00fbd6dc200"
        },
        "item": {
          "id": "1dc96298-fd4b-4c67-bcb2-2c0c448884ea",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "79f8222d-2e35-4250-85a3-6e9058f07348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076f1359-a3c4-474a-930c-ae020de6220c",
        "cursor": {
          "ref": "63edc205-ef4b-490d-a038-56e28a915d4f",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "fa72e6b0-1ea1-4498-8daf-e2628f276f95"
        },
        "item": {
          "id": "076f1359-a3c4-474a-930c-ae020de6220c",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "0f9b9028-3d4f-438f-88e3-2d60b7893f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c058fe73-eeae-41b0-9989-6a11e1fff41b",
        "cursor": {
          "ref": "b4ca999c-78ed-43c7-ac1a-69cb40417e22",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "2ea0661a-90f4-40b0-9aac-d9d5ee5b0773"
        },
        "item": {
          "id": "c058fe73-eeae-41b0-9989-6a11e1fff41b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8893c813-083e-4d84-a79d-30d063289de3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cab019e-2a95-44fc-939e-6a67bd65663d",
        "cursor": {
          "ref": "2f455254-0499-4e93-ac1d-c749759d1181",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "79c930aa-7bb6-4eaa-9b5d-e0b7f46d7575"
        },
        "item": {
          "id": "4cab019e-2a95-44fc-939e-6a67bd65663d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "027ec5af-7df7-4bd8-9b19-080e803cd7ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eaa53c8-1645-4845-8f79-b0daf5c8c1ae",
        "cursor": {
          "ref": "cb3376c9-2c7b-4a42-b0a0-3c19fb007bb4",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e5af92a7-d993-4648-853c-e624a96772ef"
        },
        "item": {
          "id": "0eaa53c8-1645-4845-8f79-b0daf5c8c1ae",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "86f6f54d-bfbc-4938-ac74-1949534550d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be7924c-6f63-4df9-9a14-ca8cffbacbbc",
        "cursor": {
          "ref": "eacf70e4-a462-4ff6-8d15-6ba4d2468fce",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "9c811e22-1499-4e50-bfa8-86b0ef100a72"
        },
        "item": {
          "id": "6be7924c-6f63-4df9-9a14-ca8cffbacbbc",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "41987566-b158-4b75-8379-fc86ebc3ed2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37fcd35-706c-40bc-8f32-011f7ec67762",
        "cursor": {
          "ref": "f75d5772-db63-4405-b27e-3e717c506a6a",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ae1ed565-378e-47f5-b0b8-9599ceba8564"
        },
        "item": {
          "id": "b37fcd35-706c-40bc-8f32-011f7ec67762",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6398a575-f92f-4c84-b60b-47ace4bc4ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a25676eb-f056-43d8-98d2-170f129a1af1",
        "cursor": {
          "ref": "1611b39e-b61f-4ac1-ba10-218d2d558178",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "772540bc-1e0c-4233-8fe4-bb1643ba0881"
        },
        "item": {
          "id": "a25676eb-f056-43d8-98d2-170f129a1af1",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b9dfa1d9-0b94-4a21-a184-8168c4d02a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3552bb5a-a8e5-4069-9f13-a2c338cdcf75",
        "cursor": {
          "ref": "98cd1cfd-932c-4c59-8f71-e6204ccdd41d",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "fc7c63b7-2921-4f51-b7e8-a3803a478002"
        },
        "item": {
          "id": "3552bb5a-a8e5-4069-9f13-a2c338cdcf75",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b8e591b4-64c5-4854-8d14-b2efd3839043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ccc4012-e9c4-450b-a717-15cd178e32ae",
        "cursor": {
          "ref": "f538fe6a-9a43-4ed1-ae1b-7d539e0f2b6a",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0b09da27-a5fc-4a4c-98c4-6b8bccfdd9f0"
        },
        "item": {
          "id": "1ccc4012-e9c4-450b-a717-15cd178e32ae",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f571a2b7-601f-4c83-85ef-4161b493e786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee7e1ad-020c-41ee-add8-1e39beedec9f",
        "cursor": {
          "ref": "c12e7e52-2dd0-4d23-8723-f43b389c441f",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "100c6c88-451a-4123-b88e-b3f2a34685ca"
        },
        "item": {
          "id": "0ee7e1ad-020c-41ee-add8-1e39beedec9f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6ad64692-6d54-48d7-83c6-ec80748079c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0afbd0d7-870b-4a80-8814-f2c47d1a9d60",
        "cursor": {
          "ref": "b7a48b1b-441c-4401-8acf-90ba2e0a9c70",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "89d95e75-6509-4003-80cc-b579ab58ea80"
        },
        "item": {
          "id": "0afbd0d7-870b-4a80-8814-f2c47d1a9d60",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c9b7a886-1350-4e35-8a33-93f20ead57b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55232c4-65e9-4355-a371-6203f32f2c25",
        "cursor": {
          "ref": "2b67bb5d-3d5b-44d7-8dec-064635395407",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "30c11a2c-aa05-4cc0-af11-1f502e019bb0"
        },
        "item": {
          "id": "c55232c4-65e9-4355-a371-6203f32f2c25",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ac6350f9-265b-4a14-b768-13eb5b244438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75332137-b119-48a9-98ba-bcf9ff861f11",
        "cursor": {
          "ref": "14c109d6-346d-49b6-b795-e7d50f813d1f",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a7de967c-da3c-428e-86aa-98a7e3677d4b"
        },
        "item": {
          "id": "75332137-b119-48a9-98ba-bcf9ff861f11",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "537b37f1-a024-443d-95d4-22c6dc7245f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd082dd9-da9f-469c-a2b2-9484e4f9f0bf",
        "cursor": {
          "ref": "edcb584d-7bc9-41b9-81ff-c5e63d393267",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "6b11613e-9df2-4915-9d2c-b6d0f6cd3c88"
        },
        "item": {
          "id": "dd082dd9-da9f-469c-a2b2-9484e4f9f0bf",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0edf2255-9c60-40a2-b8b4-0098b2c237d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba888775-20bb-4dc9-ac58-0c1571ae0a22",
        "cursor": {
          "ref": "26c9fee4-632b-422e-80a8-f3b42f017e2b",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "1491f37e-8cbd-4d32-a614-c203b2be57b6"
        },
        "item": {
          "id": "ba888775-20bb-4dc9-ac58-0c1571ae0a22",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "cacd74c3-32b0-44d8-bb7f-8beb152fa0ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f92a9683-1efa-4fb4-b408-a066db314e3a",
        "cursor": {
          "ref": "e1a5fc6c-1677-4423-9a76-2e976dbd4f89",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "2b78ff20-23d1-4627-8777-94ca16c215c4"
        },
        "item": {
          "id": "f92a9683-1efa-4fb4-b408-a066db314e3a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "84df47f0-cb5b-44e0-8af0-e04e21f1655f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "322a7c91-5421-4216-9d6d-73c5a5ba8cba",
        "cursor": {
          "ref": "a4e6e169-806d-492f-8c97-7caad2b4b42a",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "a20d1aff-889a-4800-a63d-f23d07f6baef"
        },
        "item": {
          "id": "322a7c91-5421-4216-9d6d-73c5a5ba8cba",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "81f881a8-d60b-4513-90de-68e70043aec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf611da-b62c-4b93-afff-292f04902d95",
        "cursor": {
          "ref": "7956cd07-a4dc-4300-aeda-a6086916ed86",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "fdfb475f-70f1-4306-bf74-edf761ebc80c"
        },
        "item": {
          "id": "9bf611da-b62c-4b93-afff-292f04902d95",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a221305e-47a9-4bb7-b4ca-8467b53d9dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f780eb-e145-46ba-a58d-ead38a329eb5",
        "cursor": {
          "ref": "3174e9b0-6e67-4ec6-b84c-20d2cc8f6708",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "3aa85d71-8af7-4add-b07c-4fc4354ab62e"
        },
        "item": {
          "id": "27f780eb-e145-46ba-a58d-ead38a329eb5",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "1d849247-f142-4e02-8094-fbbe0d4480be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d287a1b-7395-46cc-b30c-834a1b44a0cf",
        "cursor": {
          "ref": "9a033fc9-0da9-40e4-ac6a-75210d9d4608",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "4e6f6b80-9689-4572-92aa-bdf63fdcfed6"
        },
        "item": {
          "id": "2d287a1b-7395-46cc-b30c-834a1b44a0cf",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b7f6b7b6-4cc2-4109-8fa2-e1f25f1cfe95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d733f9e-e0ac-4fef-ae9d-3648eeda0c71",
        "cursor": {
          "ref": "dec8b572-bbad-48b3-a162-6c33094355fb",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "12e2257d-9950-4db3-b1d9-242d29b35e55"
        },
        "item": {
          "id": "1d733f9e-e0ac-4fef-ae9d-3648eeda0c71",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "993b0872-6e7c-4c94-a5ba-0537c4a8a840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "873d3f61-440e-4834-8fe6-062f7458c863",
        "cursor": {
          "ref": "ca0c82b8-6307-4643-a384-349241bfb6a4",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "2ee6bf75-aed0-4ea2-ba6d-b19d662acb07"
        },
        "item": {
          "id": "873d3f61-440e-4834-8fe6-062f7458c863",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "7ac37c52-112b-4fdc-8a0d-bc5915abaa02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b29d149-a2bc-4629-92c3-f7d73f1432e6",
        "cursor": {
          "ref": "a38c43be-aa46-42b0-849b-1aa8af05dc77",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "fc7e0b24-ad7c-4589-8c98-4456a8545be6"
        },
        "item": {
          "id": "9b29d149-a2bc-4629-92c3-f7d73f1432e6",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f3945963-85ad-4c60-8ae2-7fcbc7f33024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea22cd3-36c9-4d71-87a4-a3e43ee0b783",
        "cursor": {
          "ref": "32cca65e-5e54-4e19-83f0-e75bca34cac2",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "7362ce36-25a2-4ad5-b0c2-3111c78961c4"
        },
        "item": {
          "id": "6ea22cd3-36c9-4d71-87a4-a3e43ee0b783",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3b4d96e8-e37c-4362-b129-4b6a23ddaec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec0f7626-1445-4b1c-af5e-564e123b63f0",
        "cursor": {
          "ref": "817f26d9-e603-417d-a1b2-512859ecdf94",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "e86d3b3e-e374-4107-b203-6b0c7aeecd2d"
        },
        "item": {
          "id": "ec0f7626-1445-4b1c-af5e-564e123b63f0",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2a96bec7-6b65-440b-8a99-3326c6944251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d53b22ce-e3f0-4061-a09c-716a25168adb",
        "cursor": {
          "ref": "8890b755-f955-49e7-8241-1789697ed2be",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "679e2cd0-c959-4da7-84a0-6936350d48c5"
        },
        "item": {
          "id": "d53b22ce-e3f0-4061-a09c-716a25168adb",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "df6bc7af-9534-4a9a-8d2b-0639eb3de545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd7a42ca-84eb-4da8-9e3d-853f28327c85",
        "cursor": {
          "ref": "976d181c-a336-43bd-9c49-8d610a418111",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "8f176405-58e8-4d8f-b7b3-2bf2ccc9f248"
        },
        "item": {
          "id": "bd7a42ca-84eb-4da8-9e3d-853f28327c85",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b482477d-3688-473e-a2ad-45d27d1f0040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a5619c-46c4-42e7-9f62-c7240f2c409a",
        "cursor": {
          "ref": "52e67c81-e9f1-4690-b38d-b4ef12b256bc",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "c3f84b44-858e-489a-b772-216a70f3fc43"
        },
        "item": {
          "id": "88a5619c-46c4-42e7-9f62-c7240f2c409a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "90b4b800-ab8d-4e14-8ff2-2b35b23ac38b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39147dd0-79e9-40c2-8cc0-3a21b52def09",
        "cursor": {
          "ref": "06a9d5c0-e331-4765-9d0b-4c04a4de43e6",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "233784a2-c30e-4030-a9af-dd08093816d3"
        },
        "item": {
          "id": "39147dd0-79e9-40c2-8cc0-3a21b52def09",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e71f066a-b29c-492e-9e51-41c48f965fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa69d7e-08c9-4204-9581-62e933e8e455",
        "cursor": {
          "ref": "3925e325-8c0f-4ea4-a6a4-59642cece605",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "6c1d1d23-0d6f-4502-bf9e-9154cffa420f"
        },
        "item": {
          "id": "caa69d7e-08c9-4204-9581-62e933e8e455",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "13dbf01f-7c50-40b5-875f-90d1ddafd772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8024ee1-7fe0-48bd-8c88-6fffe4584d37",
        "cursor": {
          "ref": "83d596aa-9240-48c2-a9a0-49ae73795c9a",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "5568ff88-2160-4a60-964e-95ab49339d5d"
        },
        "item": {
          "id": "d8024ee1-7fe0-48bd-8c88-6fffe4584d37",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "983db1b9-389d-42e3-9c90-120a36774bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53fca73-60ea-4011-8f8a-d4aadd8a8c31",
        "cursor": {
          "ref": "7a60173e-789b-4a63-b696-4251745882c2",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "1ff6c67b-3bb6-4833-8399-b6345a08b0cd"
        },
        "item": {
          "id": "e53fca73-60ea-4011-8f8a-d4aadd8a8c31",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a2d5b263-145c-484d-8d78-11dc779e11df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0347ae-7b34-482f-ae2e-f3f943ca7de6",
        "cursor": {
          "ref": "a667b4d1-8661-4b6e-a37a-ff404fe4ca2b",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "35b3cfcf-eefd-4a86-8b7d-1e1aedd7132c"
        },
        "item": {
          "id": "3d0347ae-7b34-482f-ae2e-f3f943ca7de6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "fe5df615-0954-4117-8e61-4b4b906d0c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0deb8c26-5bb4-4dc0-adb3-536b429c71c6",
        "cursor": {
          "ref": "12f399da-4a7c-42e4-bdee-48ae3b6588f0",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "1a285683-73bc-487d-b464-3ff50ac73796"
        },
        "item": {
          "id": "0deb8c26-5bb4-4dc0-adb3-536b429c71c6",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "34e58e4d-a56f-467a-8716-5212e3c01fed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13cadccf-01fd-4b94-9105-71f365dc72fc",
        "cursor": {
          "ref": "e19f2ded-3841-4156-b13f-7e749f5d4a66",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "9fcb1464-cb29-4349-af93-bc0c7658d88c"
        },
        "item": {
          "id": "13cadccf-01fd-4b94-9105-71f365dc72fc",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d1091359-2e55-43b9-bdc4-4b799bf64452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "017e88da-a938-4284-af9c-c48d9d1a23b7",
        "cursor": {
          "ref": "dedfb7a8-d451-434d-9557-bc487dc7fb4c",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "e62f621b-6e63-41cd-bd90-03a93d0f2cb4"
        },
        "item": {
          "id": "017e88da-a938-4284-af9c-c48d9d1a23b7",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "175ec545-4804-4473-8c2b-7d62a882803c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d69b2c2c-43a9-4bd0-9135-c60a61c0f7c5",
        "cursor": {
          "ref": "cac1c4ee-228d-45f0-b0cb-c657ec84e4a5",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "fca97855-3c2b-4094-81cd-1b6f3e8118f9"
        },
        "item": {
          "id": "d69b2c2c-43a9-4bd0-9135-c60a61c0f7c5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "c9bb50a9-a3c2-489b-a614-6d167bee5954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0015cf-6a2d-484b-994e-ccc7633acab5",
        "cursor": {
          "ref": "cef3c053-568b-494f-8d09-bb6039a5f3d9",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "03e788ed-86b2-448b-bf17-121457f913c4"
        },
        "item": {
          "id": "be0015cf-6a2d-484b-994e-ccc7633acab5",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c51c4756-9ee1-4224-aa38-5c2aab4cfdec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff6dd85-d227-458d-af2f-9aa97a826f43",
        "cursor": {
          "ref": "5ef0bac5-185f-443a-9b14-ec5511d8503d",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "e7916bf3-0e0d-427f-8230-dae6d4a81487"
        },
        "item": {
          "id": "3ff6dd85-d227-458d-af2f-9aa97a826f43",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "74520412-2f32-43a9-a319-bdf952881b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efe92e59-0872-4633-adef-fbeeb5fe22a0",
        "cursor": {
          "ref": "2675b17a-f6bd-40c2-8e1a-689e44081167",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "a49204b8-d0ac-4641-b9c1-45f39931b53c"
        },
        "item": {
          "id": "efe92e59-0872-4633-adef-fbeeb5fe22a0",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "6f2694d1-1eec-493c-900d-ec6c35b6e735",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca12e80f-333e-49c3-bb8e-b9fd5c04040d",
        "cursor": {
          "ref": "f8749c6f-a5b5-48ae-89e1-7828176da592",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "590cdab4-dc98-4ff8-b8e9-d17a0178cc52"
        },
        "item": {
          "id": "ca12e80f-333e-49c3-bb8e-b9fd5c04040d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ffee0237-94e0-44f3-a2a6-43f65958feb7",
          "status": "OK",
          "code": 200,
          "responseTime": 115,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "668f1b35-ed70-408a-abb7-60dd55cb3c15",
        "cursor": {
          "ref": "87f6e047-6cb3-40d9-bc92-8f10f984504d",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "3f50fcb8-9689-4ac8-b284-5298f234ca4f"
        },
        "item": {
          "id": "668f1b35-ed70-408a-abb7-60dd55cb3c15",
          "name": "credentials_verify"
        },
        "response": {
          "id": "16cf9154-bfdb-4b33-be2e-c764836a1b20",
          "status": "OK",
          "code": 200,
          "responseTime": 1348,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d764009-a345-4f85-af8f-ef0ead44c056",
        "cursor": {
          "ref": "57000cdd-4be9-4503-b62e-3cf154db431e",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "fedcfe47-2ba9-49b8-aea5-a9d34896f6e4"
        },
        "item": {
          "id": "8d764009-a345-4f85-af8f-ef0ead44c056",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d8f2f6cd-1dea-48bb-a26f-69706c1eb9c1",
          "status": "OK",
          "code": 200,
          "responseTime": 1250,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf208e08-179c-4d4c-b1f1-e5f66969224c",
        "cursor": {
          "ref": "c79aff74-b1d1-4bc7-a9ab-ee49183252e8",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "04d8b5f9-5a4c-4f48-bfc5-5924bc039d60"
        },
        "item": {
          "id": "cf208e08-179c-4d4c-b1f1-e5f66969224c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3359a421-3db3-43c6-853a-ca705fc26751",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf208e08-179c-4d4c-b1f1-e5f66969224c",
        "cursor": {
          "ref": "c79aff74-b1d1-4bc7-a9ab-ee49183252e8",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "04d8b5f9-5a4c-4f48-bfc5-5924bc039d60"
        },
        "item": {
          "id": "cf208e08-179c-4d4c-b1f1-e5f66969224c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3359a421-3db3-43c6-853a-ca705fc26751",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af2f8580-0376-4435-a6fc-6a9d7b8d74c3",
        "cursor": {
          "ref": "54f3dae9-e45e-4e81-99dd-6d4be30c8822",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "c67722ff-2225-4a38-aa93-fd123c30ed2f"
        },
        "item": {
          "id": "af2f8580-0376-4435-a6fc-6a9d7b8d74c3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3c99d8fb-a022-4a51-a963-e9e5eb934679",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "286f91ea-4874-4202-ad7e-28070fa959a1",
        "cursor": {
          "ref": "b9182a20-b988-41d7-88cf-906315c6e6d7",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "5b8445f5-1348-497f-8559-de4bfc423e43"
        },
        "item": {
          "id": "286f91ea-4874-4202-ad7e-28070fa959a1",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "2ca56630-241d-414c-9747-76f97b41fab8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}