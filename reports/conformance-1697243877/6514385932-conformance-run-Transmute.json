{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e6786d2b-1f09-4880-b000-7767c4cc3189",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d05939b9-76b4-4db0-ab78-3b5119f5d01e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8e5e8811-4f7d-4ede-9d1a-96818d074eed",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a01f61dd-4ad8-4de2-aadb-c323daa3363f"
                }
              }
            ]
          },
          {
            "id": "28bf3ec9-8adf-499f-964c-bc68c2979e4c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e9c50a9f-5acd-46a7-9e39-2556af9d27fa",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1f13cfaf-a164-40c7-a8e0-3d1333a54df5"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "aed37722-dd0c-469f-bfc8-fae8fac5b4df",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "6c103db5-d45d-4054-843c-3cafa40b7289",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cef0d677-aa2d-43b4-b18c-2c6e176be7c6",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "961ddda7-62ea-426c-837d-904eaa7bd14f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "345885b7-3c29-4dda-b24f-883240d8d297"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c206cefb-e7bc-449f-8bad-d42e49c9c44e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0f810f4e-226f-4ebf-abf2-773cde03467e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "86992625-faba-4922-b9b9-ebe2349775d3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f0ca83e6-2697-426e-9dcd-5b02ac6f34b2"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "439692b1-0c3d-4f34-a1db-f7a552a039ac",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8d06cc15-cb15-45cc-90a6-64b16d0210cc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "92848494-0df1-4a84-89a1-cc249f4490b5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f7edc206-e5e9-4e59-88bb-e1ec0a4eeeae"
            }
          }
        ]
      },
      {
        "id": "bf3d5f4b-8934-48ee-a0b8-a5cedc554949",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1b2a3d55-3427-46ea-8d53-070bb9a6f1c6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b2406282-a90c-48e2-a2ca-f357a1ff4ab1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1a0afcbd-0a6d-47cf-9cb0-2993265405b1",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b80d7566-a575-447d-956e-8360356fa43b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9a469fd0-c27c-4d96-b51e-54561a2ffa09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78dd6130-7f22-4df0-b05b-b6963b710958",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a494b58-7dd6-4596-a0db-eb11d0093fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a312ca2d-cc19-417f-ad7a-4a35b1015332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f59bf0b5-8954-44e8-a760-452d6eb89c9c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc928dc-bb2e-4269-9fa1-f4017401938b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fd720857-1213-4f3f-bfea-7292ef89cea9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "de0de6f0-53ca-4a42-a8ba-ef41453a39ee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9e5c7c91-ddc7-4ffd-bb10-5f7fe0348e91",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f471f3ad-31a8-4943-b662-863314cba243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c1683ef-1e9f-467e-8120-e373b2602922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a66e7528-4d16-4d58-922a-4cab7ce6154e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0c82394-5053-48e0-9d90-f2c418a110b4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "911f76bd-134d-4797-b005-73712b4aeb05",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ec011164-d17f-42b9-8647-299d7aaf9de2",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0eb24d2a-2386-4281-a1c9-bb392a17b701",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "12e09a73-8e8b-4d31-92e7-32fcf7ea1c35"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0d631745-6da0-47d8-b99d-97fafe54c9e3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "cb2ed588-52ed-482b-844b-2a4f28dea037"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8791aadd-7d94-4f9d-af6e-b4c2344e158e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c3eab6ab-5e0b-43f8-90a7-203f6bc355ff"
            }
          }
        ]
      },
      {
        "id": "c595a895-5452-429d-b366-c2026c0fb693",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4376da4b-5919-4ef1-bc3d-10f1855a0a6f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3a88a430-fc09-49aa-ab78-d07fe3e1033e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "91f1b37c-0936-494f-86a8-5aa6a6352058",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe43c15-bdb5-405a-9f80-2390f72ebbce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cff23179-8529-4477-86e9-f5611132dd69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dea7cc8-c056-4dad-a6c8-b4c70a516376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a22d453-fddc-4efc-89b5-d96a357707fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f1acdb-6f6a-416d-9532-1c833d48a1d9",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc74f6c-ad70-45d0-ba2d-1dc99e25f973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41b9e71e-afa3-4977-b41f-244fb671ef2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f75448e-1f36-480f-b64b-d38a41072c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b274079-1069-431a-acca-ae6a21ec8e2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "437736b7-e352-47ee-8096-5cfc5b9c888a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "707618c3-d90a-4e15-af3b-ce0aed6a7590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce784798-a389-4085-919b-b38c900d6922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc5b39b-8319-41b8-b2c7-a850353fcaf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0a06877-99cb-4c83-89e9-fb2261b4ec1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbd9c81f-0cd5-4bd1-8eed-3eae14cd2ec4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05533d65-9dd1-4dd9-bfe3-2ed7c1777e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f97d1bb-f30f-4d6c-a91f-c2b10ca5e9c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "041e7a88-7578-4ea1-972d-99dfbbdfcfb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc922a2d-bd5a-4082-ade3-f72fea15aae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a222ef8-4f4d-401c-a34c-8b256c651c24",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69aff533-62b6-4c68-8473-1ab654d13677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e43110f-74fd-44e0-b3c1-29f00eaed49f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565a42eb-d69e-4ca4-8477-a036a3378ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5761ea7b-570f-4978-80e0-f32e0e760d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "019d078d-bd98-4a21-8ce1-1e1a562739fa",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09cb1551-5a33-425f-891c-c839c2ca164d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e6f195c-cea1-4c27-88ed-1c3768e27d4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50fb4d02-63e1-4ec2-8641-92f1fd62fb10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7ad05fd-5780-4b10-8b22-84d37607ec56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69a5d500-1a7d-455f-9d7e-ec806b47e5d6",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "790299cd-c3d1-4ae9-a2a4-4ddf70cc8d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44f0c615-1c56-4cab-9196-c4dcd1f245b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a280df8e-6eb6-4141-952f-62423d95024c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e2c9e0d-21ee-4200-b19d-4b81cc70ac49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df03ee82-a51a-463e-9281-fe981256562e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ecd17b-84a3-4624-b588-b3c127e2034e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc3e4791-cf27-444d-81cc-9ac92182c7ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "849840a7-29f0-400b-b407-d03f7b22b60e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8fce16d-a7ef-44b0-99ca-6eb5680e1886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f7b520c-7145-45af-8bf5-6c356029c8f8",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06be44a1-e161-4054-bd96-b5c90dde36f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f553dbc-7c9c-42fb-ba81-a06ca6861661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ab249e-5cc6-460f-a417-f2b61b69ac5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e332c657-a997-4975-9533-90a5d8be60bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1834bec-8179-4e7e-ad46-c444022fad77",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "529c2bcd-505d-4d4a-8d3b-d815b03f97c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0cb460e-3212-45c5-a86d-2b748e4a4628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f353acfe-48b3-4bc8-8239-3e56c94d9bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "729d6817-985d-4bfc-89e1-fff45f364aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83be4e48-9d6b-49e2-b278-d9f5408c9fbe",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91f8e442-585b-43b5-848c-9bd37cb76fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "554a5462-70df-4d9c-a853-0bbcb052eacc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee56352-deda-4cbb-adfc-46db342bf16f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b8f11d5-ea30-4887-81b7-49c42d44502a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "292c5c52-a49d-4527-8253-1d0280ce82fe",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cffd5ace-c7e5-43da-907f-56cf948b575f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "770cd7f0-8b57-421a-b5f3-8951b4251ce4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "668b66d8-0c9c-4a50-87d2-77ba5c3d4ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9dd3a454-1a04-482a-b1bf-c86172a4c858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "877289a9-7c8e-4582-8f79-0038b38a7fab",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3284f1b-150d-41fd-9019-5cb12d429e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db5f9f95-d7ea-4d53-b234-d273bf57bf8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64656f87-7ba9-482f-802c-bb244aa1b095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ca1e436-c896-4e82-a411-2e48236b32b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c1e725c-91d6-444c-9e12-b6301ba676cd",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1603bd5d-9532-460d-b6af-f5ed73ae37a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57cadc0e-5da9-444f-b02a-d2fdc3f1285b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de7abf95-4293-414d-b74b-e80f76af04eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dfa76c11-1bb9-4ed7-810e-a2513ca1b509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98dddf31-4bbd-4750-ac77-28e9025c3718",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f65bcc-1349-40fc-90e8-305e89960610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b92f845c-de36-4e63-8f87-04e9a7e4cfc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31d6a6c-c5fd-4a11-bf6a-45a35b821a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "138e3334-e92a-4287-bbfb-120f038b7f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a5663a-ee75-4781-a091-d0ed114e1771",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45e47d60-ebd9-4a54-85d8-f79cc3ba0edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7c8e9a4-0d54-445a-acd4-ce32179f694a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90bab683-b228-461d-bc5c-b00489c5bb66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dff2796c-6d6a-463e-8b27-8a66f31a711b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cc4d907-37e2-450d-a654-33482489fc06",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "718ed56c-daed-45cb-a427-8af4249cac11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e49c81eb-9060-4de2-8667-77046abd8085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a6f663-7f06-463c-b03f-a163fedc201b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e449e3b-34a5-4068-a454-2510a54ca984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0061f0c0-ff8a-4070-a51a-84b46c960f1b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f938f6d-e294-4aef-839f-da8f0b25053e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d5e44a7-21c6-45e7-a84f-a1bcd597eb24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f03f52-5772-4340-bf96-b6327215235d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3f1a7d9-0199-4468-8856-5a3998768470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "468d9f79-25dc-47c7-a5ff-91a276c6f9f5",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9147745-75eb-4016-9afe-a9d4e3df4fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "860c77d8-bb63-446d-9ccf-970229d1c212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f10e1dd-45b5-4f7a-89e5-ea9a04a1f942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a17f98cf-6011-40db-9f7d-35d8d91cdd4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ffa4479-fb37-439c-b5f7-3141d578a253",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6cc091-2bf1-47d3-a9af-4348a3858427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "639f2ed4-e384-4400-be07-1211c09f98c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "165c72cd-adf2-4d34-930f-0361162e3c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9af133d-ebde-4fea-aa15-f20781363810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9010dcd-caf6-4d2f-b9a6-309298a336fe",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "794a5b31-e47c-4075-b5cd-9d703220b0d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "991bdbae-2017-4669-b1d6-70bbddf1fbc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51474a11-a903-41e3-9988-69f85e876762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b16b9e4-8019-4386-bdf7-5c291bf6b725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "256a27da-f355-4825-95ad-5ab2497772df",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf40852-fd30-439e-ab24-07c9c0fe3697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53147471-2b1e-439e-8c3c-92e33a411578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d5c99b8-fffe-47f4-a097-95e6dcca78d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "99a1f1ba-cd21-46b0-b97c-26a4a6ec33a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c9c27ac-b235-4c57-a76b-1eebec4a90b4",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d61033ed-d4c6-4b82-8de0-784295c271ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd3ef3f1-a54a-4835-b02c-0f710336c752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd48f64-34fc-4f17-99e1-085c693bbcaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0159359c-3009-4cd0-959e-9de2ce954b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5a6531-dfd7-4311-b727-3c4422665646",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a74d1ca1-1c62-47cc-ae63-cd309aa1601b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d86f159-c273-4cb7-976d-5f65fb9dd361"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a7cfe7-b7c1-4516-8e81-e091b2d0d090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c030b4a-c75d-4ff8-8bed-ed11c3718e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a1a907-f8bb-4d95-a33d-5b467ebbad64",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b3287c-ffb3-4e48-9a62-0459428a347a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad8343e0-cb30-4773-b2e2-012a752902f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b728cb7-b561-49ca-953a-4cc2ddd9c2e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb5da3de-9ce9-452f-ad0b-d6e977f7badb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd73a72-6c96-4094-b56a-68e2df474d12",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c0f9e0d-df44-4625-9851-c826933d1832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75e18f11-f81c-4413-a145-4d1b59fd3b52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e957a65f-a603-4825-bdf2-1a2de2f59ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1042d72c-5852-46e6-a113-b523d19e5a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f165edac-740d-4502-9ee0-6888a422e882",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dacfa490-8461-4745-a4e2-9950318194fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7835e47d-76eb-4b7b-8ba1-06f459a9dee1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21746ca-9269-4fce-b95f-bd5c768e5a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f97f1fd-0bf6-4b6a-833d-b352f2557935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6835b43f-24a6-4bfb-bb57-5751f948bf97",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b97a564-a350-4d19-ab4a-8105224325c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc574676-c35a-423f-870e-92e43285357f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b695f3df-bbf5-4e16-b433-84a1c5aa1a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c137f6d-dc98-460c-8d40-14c719b1c828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e4fbc03-ebba-4e90-ab60-02b006ac3cc5",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5964d0-ad3a-4a22-ba80-b98bbd6d0d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99146162-d42c-4c21-85d3-709d74d8c153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fac1cd78-6896-4461-8c62-eefa67a2646d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea17e272-c2d4-44d6-8f30-305b0d736ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac1b826-6d53-4a73-a0f5-079e88db0245",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e204c4-8cde-4943-a3ef-ff8ed3c6894a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d173d049-5e47-4845-857a-66ddeafefcca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c7b1af-84d1-4c83-afdf-9cff153478da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "92aa897d-64bd-4634-bd43-c3f321ec06ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "138089db-a9c5-4d2c-a6ca-07bf7acec8f9",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14543bab-44c3-4463-b71a-d3e728df006e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3179243c-94be-4355-8990-c9579d7b8767"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ce8b99-d94c-4b44-b215-2df992cab01c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e71c969-e3a7-4b29-bc00-5e46bc4bb254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8363a1ec-4264-4edb-ab17-e05a3a469e9e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4c6846-69d8-45f0-a0e3-cf01a96b8abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bfdfdcf-5cce-444d-bccd-d34ee088b396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d682d83e-c67c-4ef2-ab23-3af794339de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "65b11b14-b0a2-4736-80ca-c9512e9c2e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db8e1e8-2144-4058-b1a0-00ff6ff336d5",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ba1f44-e4e5-45b8-8502-36bda09121a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4a2a9b2-2dbb-493d-b3ff-2548e5d9c175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa49413-6019-44a8-8347-862a8ffd3ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ad0b086-4da6-4f93-84d9-d0f1d1df6816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e310de8a-ff02-4383-8c03-bf0813746959",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce50053-5df1-468e-beb3-4eb5d5d753fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c89544c0-be68-4d1f-a156-e324ba318738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e34400-a9b7-4aeb-aabc-81807bbe85b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ff8144a-ce58-4330-80c1-b3e377aa0061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da19de9-11e7-474e-af3f-007d3b71c920",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e04bc98-3afa-48d8-af33-c0b90d3852d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb8091d2-163e-4f6b-a01c-00c66b346f55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d45122f-f131-4d19-ac96-f51ada9535f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "de19650b-b5e6-4a92-a046-6ae7ae69a023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d221e9bf-dc5e-493f-a111-40533c6c446c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db58796d-d9fd-4d8e-a9ba-b650cfa3954c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b89dfb1a-986d-4634-a053-d68c591d7c81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4707b35e-2a8c-4eda-b93a-eceb0c2c7f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ca4ea898-8fbb-4022-89dc-6552844fa487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2ddacc0-7a14-46b6-9866-3bb4064a19d9",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51bcf386-f528-4651-99b1-a28ad83e375e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f090d251-ada7-453d-b6a8-7d776410d1a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f634d6-d2e7-4df7-af0b-d22e44d1ec5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b43dc2ff-e5f4-4a2d-8ade-db5e26eae08b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd6ad948-9997-4f4f-a3e3-430a89a6c7bb",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17326894-d806-4903-9420-a0bb028b0d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8b96278-420c-4b22-b696-a0378f810045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "773392e6-ab11-4bcd-8975-b87ee9a9c1e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "76ecc4ce-b4c2-4c86-a5fc-6db4a8689afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aca6ff8-e0c0-4742-ab95-381753e6bb23",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7637ab-e316-4d6c-b01d-78dff598a0a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14824118-d969-473f-a511-9e97d099d074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e71ef16-d651-492e-a72d-82a7a13bb3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "144b1486-44d1-461b-825b-7538a086c3a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e8decda-5c8d-4d42-8060-5bf279ec4aac",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e274b9-6dbe-4254-8028-615eb1314dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ece377f-e81a-46f6-bb4c-a6fa9c51155b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a6300f-d48e-4981-baa1-39e26d4095a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0827b0ed-5fd8-469e-89d5-805de16f299b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ba1e5d-754a-4297-a999-ae1c5a57c349",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1460eb7-2c6f-4bd3-8e93-a937efae5440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a429cdec-3ea3-4579-a161-ce3bc2b52a5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4bb47f7-2353-4294-a598-e86c4b36888c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ed7d9ae-da44-43c4-bd55-3eafec48b5b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931ecc5d-3e4f-4e79-a9d0-67f95cad2d27",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba2811ec-48fc-412a-bbd1-e3b3b2c9486b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e604aec7-1761-4cc8-91c0-fc698c52cd4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c88ddb-e062-4a40-a869-54ef3e607792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "065f3aeb-a3d0-4ffb-b652-07e833c4aa4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3599a1e5-56da-4e62-8bb1-b63567c6f2e9",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad0f8f37-b718-41c9-83b4-0a565632b471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd962f53-f23d-494d-a525-d2ae7e84f477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e173941-324c-4cbf-9c5c-29823ca15768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e35c822-3830-44e6-82bf-401381271b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6411f77d-5bb0-4495-842c-672dca5181a1",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e51e902-435d-47a6-9f57-0263c65271e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e790790-d7c7-4b6f-8fca-63a57a35f583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38641bef-86a8-4092-85d4-e49ad1dbc1d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "38e595b8-87cf-404e-945d-58fddce4ed4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "083af324-9364-47ad-82b7-1342643b552f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37e29d34-703f-4733-a1d9-ab6bc6c7d3d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83025e2e-5404-4c87-95d1-8235e03d83c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a066b97c-47c0-4c4f-881c-f091dafbc151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ce2237a-18d2-41dc-a5ef-091042ac0e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ebdaab8-647e-46d9-86ef-d7f4b274f3cb",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc73352e-b2fe-46a5-b64c-a398140b176e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a782385-c382-45ac-9a28-f34b6f90d7e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43221f3e-da35-4506-bac9-b9d8f466d237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fee85ae4-e7cf-4a8a-8628-f8a8dfd0e238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "488bcdc5-8bc1-464b-827a-1a1a808b4c14",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "287f3f72-a4ce-4aa8-8f80-d07b511ae1a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7ca55bf-422b-4f39-a4a6-9fb7d9734b0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4515c0df-3126-443e-a207-caa297bc0755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f69afa1b-012b-4cda-92fa-9d7712361786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17dac911-52f6-46ad-91f8-104983c1f980",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b148b3a-8e45-4b95-8d6e-8475604944f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f464a02-7da2-4f01-b468-f43d613219e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a01cf7e2-bbb0-459b-a5ac-fd1d0e2577b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf58e52f-6e4a-4a9e-b838-36260bfddb8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8bc3070-aa8d-4fc8-a148-0ee6b038ae55",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "386671e0-4724-4c9c-a461-fbcd8824e443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeb15f21-c7b5-4bb7-9f48-84d20181efa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca159217-55af-4def-887b-dc11b24faebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe88c9b0-f019-4a0c-8934-26d8d886b05b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb6566d-36bd-41de-9d6f-1619cc55da86",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33011891-07a1-49f9-ad47-7da1f9dc14f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eddab2e-ecc2-4a2d-88f3-0ff62eb2ab6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5995a933-1213-4769-ad23-725700ea07bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d8da3484-da48-4a44-89a0-b476510258df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d744b61-90a8-4d6f-bf3e-1926f81cc24d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79fd2099-9d4b-48fd-accc-803fc8886a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48c1578c-f7fc-4eef-b357-c2900d321cdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187a1dfe-1327-4f65-8f4a-40dd8327b878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "00b27d6d-6c1c-4d0f-a1a9-7e5b5e4e2448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e37cf942-97e8-4629-8a6a-b43f2d7a622f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7726b74c-c992-4ce6-9213-9768cae2d0c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f37c569f-a820-4769-aaa0-56e6e8e2b28f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b7b7609-df71-4641-a123-234e4015215a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "30ea3d53-14ed-4e01-be45-7a6959f6650c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931ae199-e309-43f1-acf8-9cf604b4d2a7",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f08f110b-31b7-4090-87e1-43f7214406ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd140ed1-abd1-4907-b62d-4d23418c8f17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb67f30-d89f-48c8-bc1c-30db7127e71e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4efe5b9b-f694-4c0e-9385-a63f1d97e92b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "286d6f1e-a808-41ff-ae83-1bce82467d85",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77852ad7-8ac3-43be-89f5-189968ae083b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef343ae5-5ec1-4b81-9bc7-12907a04b079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c12e4c2-6976-4098-9305-caff12133799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd7967fd-a885-403a-a56b-9bad9ea132dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0150c41-34b6-404b-964c-8f9ae45227d9",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1d2389-057e-41b7-9567-a7226b033641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bee9a51-ba9a-4590-a64f-245a40698a23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d091dc70-1639-4ae7-bdbb-9daed14ba56e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9180fe30-4b55-4178-961e-6195f6432523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8ef1e8-c85e-495e-93a6-1cbefbde89b5",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c561064-c22e-4ffc-8db8-38189559e5f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c8da9be-d6ad-41b3-b206-ef50ce01a0e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ce7034-c24d-4e7e-8d5f-03d142d96c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "8444d1fa-3afe-4115-a0d2-2baa51cc9321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "889d2113-a003-4c70-8d79-ffafc7988326",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a74377-c566-4640-9c08-926432ebafe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "220c8865-e2f2-4361-9f85-92df8e35f663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d485a0c2-a316-4db8-a812-7271b76760d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e64edff6-6a29-4ede-98ae-9cb0a2b17bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2924d479-a05d-4599-8eb3-e6a60c909063",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "024e108f-4c6d-465a-83f5-bd453d1908f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a44e220d-4e3f-4d36-966a-e197b76c4939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dafdd5b4-3baf-4573-bdde-90a090d1e54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1cdd7485-462c-4e7c-9fd1-34d7b714cb06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f6f472-5660-496d-a75f-e76ce1f4d07a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "715629ab-3cf0-4595-ad1d-8e7ced9a1462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "765d359b-519b-4ed5-b69b-7d0fd7d977bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e4cd7d3-f3dd-4c89-9602-8b9713c0587d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bdcf0db3-5748-4b40-86fb-096e0c9104be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a08b1dac-fde8-4a76-8813-5eca56af2d08",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e106c6-16ba-46c1-8bb6-842bfde9d9ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f370c37f-8373-458b-9c9a-cdf807391888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f2aaa3-03a8-432c-a739-7d41a4c43e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "97f10463-cb38-48bc-8258-2fca8267f949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08426f8c-8b25-4368-a764-38cff01990ff",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ca44d3-2386-45a0-9c57-a0ff06a4c0a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "342641e3-b1d6-4bbf-9153-a2140c42d0ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb935a35-4da7-4d38-ac1b-6e66c2454527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4bd989a1-64f2-4644-a24f-b2af200656a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14af3ef9-1019-4923-9c57-1222bba058cd",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba42cbf-073e-44bb-9feb-9ca98be8ac0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88dbed2e-6ee1-494a-b482-d74548c81849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc2c2b7-b6cb-4e1a-9df0-2920f0e09bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "77924298-8e41-4482-a39a-441fbfb43013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca8c98b-316c-4c21-bb8a-e720beb9d0fe",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "894b33cf-93c8-4bb4-ba66-0d1b1de055b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6ac2092-059a-452e-9523-d9ecfcbd9227"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e9719e-9f9d-4570-9540-bef6a8c190ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ebb37c9-0e36-4854-ad00-96aab7f7a97e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "629119f4-5462-42bf-9930-2927bf8aeb18",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4656d1e-3a33-4d92-ae31-18aad7188a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41aeb3c2-c4c6-470e-809b-df4fba11144c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf99ee6-9f33-4d22-bd8a-9d46d03c2670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "890f0c1a-4e7c-4cc6-ac5d-a6762b0f5571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e6f71dd-5dbd-4a75-a4e6-2637a9bff7bb",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e65136-cb7e-4598-8133-0b04bbfd2314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7821b328-43da-4040-92fa-ae3ffe5c1274"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59458c9e-f1a7-4c53-a846-1c1414bd0e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "70909716-3998-48cc-8eb7-25cb64fecdd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6360af7a-3f51-4832-9d64-ed5d17e98363",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8961463d-7e2d-471b-bbd5-50c7103f096b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8badce63-a697-4f93-8d94-63fcc69be2cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e06486-af5c-40ca-8bba-ce1edc6c7717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3980b3a-7a77-4fd2-a5cf-d2320e4e8284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dbb37fa-159c-487d-b8ec-0cda2d8c1b9a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a6d480-5469-41bb-93a2-140cb62e55af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25bc07fd-99d6-415f-80c0-464a3505d5f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d7d7f1-1550-49eb-a1e5-f41f42fde4b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d46db945-0401-4a52-a77c-17b6236de984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "917a7040-ab80-4f0c-b7ab-f6f178ba05f0",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3226da57-3452-46e9-a647-318d56ef4b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef9e6d1b-2fbd-4482-a79f-dc8e1351c1e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d08bb2-633b-4be4-935a-aac3ca2dd255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5baffc87-0683-4540-b4f5-df262343a639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92926602-7791-4352-a782-e8c3daa97b34",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e19b48d5-a1e2-441e-b21a-f6e8e8cc1925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e72d2e7-04bc-4602-96a3-65310a721392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0882ef5f-29a0-403d-b9b0-36f0e831f564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a32d9d48-4861-40f4-9c81-31d1afd7b15c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2163233-cfd2-454c-82a1-70a5fffac4b8",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "960f861f-52e6-481d-9fb4-315a952daba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f84ff15-82ff-477b-82e7-b73d46dbf1c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ee1d63-daae-48f9-8fe1-5084eb6a2b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "84b4e4d3-4d4c-43e7-bb91-809773561297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627a7872-11da-42e2-83c0-3f8e1bd43642",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a921f8d-98bd-441d-bf78-e7ddff3498d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2518dae-e406-4632-81fa-57d7e28bc5a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2afc24a-1836-4a37-b0d8-db19729184ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "63947a4b-0a47-4dfe-9f93-f49e5d56fcc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f6caef4-854e-431e-b6ad-f8eec2d64eaf",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1a718e-8f05-4bb1-bf1a-1aa0c3ed07c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09b8ec15-eb02-432d-a033-aa378a15b853"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "572fa4ea-c941-49ce-9690-91de3133b9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e37bc26-eadf-4888-98a1-4ee82b7c7cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e202f15-2404-4a26-b938-e6f217aafe1c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a5fdee9-5289-462c-8421-911b324af385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "718aeae2-3aa9-4168-8499-1c395da200dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b970a691-79bc-43f1-9546-bca86423c03f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8cb7430e-fbf1-4554-846b-2851feccd321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbefbf99-b0fe-4e9a-b2ed-8f6932690e7b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b22fc7e-375a-43be-9fb6-cb66e9711dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cafa5f78-f40b-4693-a226-7ae74d3bfc4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f0e646-4875-4434-9a64-bd04d54eaf1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2c2879de-ed2c-40a9-96cd-aa43c07263f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db20b338-cfce-41a5-b0a9-aa83a1719434",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe71950-1707-4277-8313-191bf95f11fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55fd92c2-014f-4653-b3be-f1742174c5e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19217765-2c90-4d7a-8633-6e828d08c94b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "91fb785d-8ac9-4050-8401-5c334f0997b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b601449c-f701-4d9a-8a7f-0d055aa10da2",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe1c624-bf81-4e80-ad4d-0791d7e144b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76dc8b19-5e26-4c53-8398-7777b7993f04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a32d4a9a-abbc-41a9-a9e7-cbe7e048c60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df448fef-bb75-4652-be6c-7a9025c1e392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a09990-a3fe-4d29-8b74-981d40f8381d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ecfa47c-baec-43b5-80f8-a498168952a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5407540c-af46-4851-b7c0-262a57842d80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "988f0934-30f1-4a53-8728-8cd24c092fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "80362a80-ccc6-4888-b813-50068d78d9d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e6f10a-2b1a-4ff7-a5f3-60641e11109a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b36044-f66a-423f-959c-9bc20b116eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5121b909-ce8d-4550-980c-a78a1a23e530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df2b790-87f2-48e6-9042-c3c2175ca8c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae9716cb-62d6-4db4-ac00-4dbb24201e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b59dbdf6-1821-43e6-807a-f8e2265f7098",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec2a9e19-54c9-4e02-bfff-5b7fba20b4f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c4e3b72-66aa-4ee9-a1f4-a8dc6b55d147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc0fdc8-4718-43a5-af13-c9f7b36d395a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "22846d71-e15d-4f0b-8017-328d182e1602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d2f1a6-af23-42d7-a4c6-49100109e614",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d88f7c2-6485-45e6-b80d-42f85af3e1e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f4d9520-7398-4022-b312-635fde42e6b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea67b3db-e638-4826-ba2d-0039342f4aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7a736239-5304-42b5-89cc-74883f7b97db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab45cd91-371c-4559-85b0-5a91b14c198f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "628bf670-bce6-41c3-9cc6-809ac0ca68bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "178d320f-0eab-48e8-b81b-9c1c7f0b5b58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735e83fc-ba72-4a27-a0b4-d7089b581c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b15213b4-732d-4076-a178-f508090aa9ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa4d0a04-6215-4d48-a86b-c61317566b4b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e03ce9f-0547-4915-8cbb-780d7896abe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edc0ea72-db59-43ee-a0ca-908aefaa3cd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0e4b596-1422-42fa-bf02-7da414dc1855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aaa5b8b4-0a39-45ab-9095-755ee8b3a129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772bcd3f-b792-4f28-9f68-4a130f8db70f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0245ca4-6d0f-40f7-a801-91feb2f49356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "215e5215-9e5b-4781-b07e-d35f3b104e74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162335b7-9f2b-4be9-b6b3-d554a907ff3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "42f50e9f-a130-4b15-8f98-2642022e5254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfc3705f-1111-4efa-b0cf-a02e76e49ab6",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa677d2e-689d-4161-b735-fc14fa72a98f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1056fcdb-74cc-468f-b2e3-d34989c788eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41e31be-f744-4eb5-8a47-50d9e9e83edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f797a94-0296-4785-8f9b-5fa8365cdd2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fad1b72-2cc4-480a-b2c9-472fffc47b16",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee81fdc8-144b-4683-b923-5d5b70bff073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5495063a-a97e-48f9-8585-1c5378656b68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96bd825f-656c-42ef-9121-053b22512ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f4a0ed43-7d84-447f-af89-b280a8c66619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b7c4536-4782-41bf-9a44-2f8cd7e67f25",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4633bc54-cbe0-4ced-bb26-093dc2175bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8db02a61-6ec4-4fa5-941d-385b98e578fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419aae89-fc5b-4adf-bd9f-60e576489f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce5cf3c3-1241-4900-a7de-5c3ddbb14eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a195d092-d2f0-4e95-8620-24564d76a7f8",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f470009-4141-4f3b-b4c0-6cc884d78d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fc2df28-7c60-4bdf-9db8-15be78674ca4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39eb0bcd-5764-47d2-8455-8ba8afa850d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c154953d-f544-4062-94fa-76d28965ceba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eec3862-3e5b-4491-8bfe-c6953f35b367",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e40abd1-bd0d-412a-b411-6c45dbf090bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f40b48e5-0de8-450f-90f2-a6667073f12a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d92adec-2729-4f08-992f-296c4095e364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7941279-5848-4bfb-a96f-cee283d3994c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d62567-5ae2-47ef-9194-ce36406f0af1",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "081871c8-f488-4cd3-b148-b6b86b4b8d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c59deff-d8a6-4187-aa66-bfe7a61393f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b831fd-8666-42c9-8e92-8876964b99b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "64a1607c-d881-4938-9005-989263519325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b18cb66f-d546-404d-a344-d129a8ee942f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19cd1406-689f-421d-99b2-78c374c4e48a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28cabda6-3f43-4c5c-8a91-7dc661c10035"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c240bb03-d8fc-43de-9143-93347c27ab8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3668aa91-5cb6-41ac-a31d-fccdfe0ba62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ccebf2-8ab0-460f-9948-54044fd231d0",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "194b0bf0-3e08-483d-b35a-30439978d122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42cc22b7-9657-4dbf-9139-b4515d6f9d7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da49f99-e103-4df8-9254-5a27ce629dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ebc1d68-15d8-4d58-a7cc-806d25a8b143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9878223-29f3-434a-a8de-82188d93baab",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5359ee9f-0d00-46e2-8642-a52488b82732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7a21c08d-ce2e-4c48-bac3-bd12d2a43adf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6d4ab2-0d9b-46a6-af8e-b4a9c3a989b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "72f6d44c-d2af-4798-9b9b-9237569d6abe"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0e944716-a6c5-4f21-b38b-72afa4a6a798",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cf0a6e6d-2c6a-428d-b0f5-cb192bace04b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce16d61-1097-4951-9f50-6ee69f941ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46738e4b-7fe9-4a3a-ba91-25b632b73be9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8690dbae-2934-4e2d-a324-fac3ffbf0caa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d0b3c34-e1f2-4d7f-a6a5-79624617b947"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f58d83f1-3634-4a4f-97b8-0654866df2c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fced254f-c27b-4404-bba0-e60e11867466"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "36abf2b3-35b1-40a1-b276-5d17d4cfc292",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89c32f9a-efcc-4bc8-a78a-0c15e99b4a38"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "915d670f-1ae2-4777-8be1-d64a522508e6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ac5a23a3-b85a-4bbc-a202-24d8eda47a17"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "17f370ee-9e5b-4f26-9a0c-586195f3e747",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0091aebc-a73a-4323-8d1a-c8581306e2a7"
                }
              }
            ]
          },
          {
            "id": "122a8c1a-f65f-4809-b46c-e8b7798e585c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cd9ee36f-f9fd-4d91-8f95-7de3c71c7992",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4b37fb0-f4c6-4e29-86d4-a79e6a955f9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c539f11d-ecb0-4878-9551-adc92a9a5945"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6869199f-3715-4241-a7df-ea0395bf7743",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "446a4881-ea31-4a41-9cf3-aeb742e52474"
                    }
                  }
                ]
              },
              {
                "id": "c790b810-f761-4d31-b7a5-e37c5afc111d",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1efa7fe4-0767-45bf-a6a0-1a8f1c50ed00",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f8223f4e-0971-4e4b-8bb4-a5fe6bca9696"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "953b0f59-c8b8-442a-ba73-9cd253fb8ac2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fa9466c8-e992-4ecf-b0b0-7512e3607408"
                    }
                  }
                ]
              },
              {
                "id": "5f664b86-c331-4f76-a48f-2cc04274c6d5",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "65aca383-1d4d-4e4a-8e3a-58c91f0bb030",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "60120126-958e-4677-87c3-965024cce17b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c5d1307-5691-471f-b0b5-3c5aabc91651",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "92e3bdf5-add8-42ba-aeb2-58a0a392999b"
                    }
                  }
                ]
              },
              {
                "id": "5e71c06e-7300-4f09-ab5c-9c39f0bd25b2",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ef8e775-260e-4fba-92ce-ed5eefe238c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a3d1d89e-f8f3-4d87-9522-6d3975dc4981"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5718215f-6279-4919-8cea-54429e535040",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "48a29aa8-e2e2-441c-a2ab-af3367b41e04"
                    }
                  }
                ]
              },
              {
                "id": "2ef23dc8-427f-48ac-aa47-fe0fd1b97450",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "79d17186-635a-45ae-a21d-2cb88b05baf5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1e53e97f-c491-46af-a05d-23104a39bd20"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "20f174b3-d869-481b-aaf7-2c50ca44a01e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "1dcf0306-1964-4fc6-9aa3-00ae5671c5f3"
                    }
                  }
                ]
              },
              {
                "id": "6af7efe5-5204-420d-bc1c-cb02bbf7a20e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c09e749-a567-44fe-981e-75532e103e84",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "95f74467-da81-47e4-989a-3904f697741e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b71d6cd-b9de-4065-ae8c-73856a61fac1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "db3e0977-421a-4291-a58a-96f62db1db22"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e8508ec8-f7c7-4e33-94ec-123ce48f70c1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "684ce149-34f5-462d-a724-8228640888a5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "153cc381-dade-4963-90d8-08e02e50ffc0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5918cafa-fa95-4a74-9fde-24aa79844c69"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "966156a2-261e-4a70-a8f9-8e2428c1aa53",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "af20f411-4e50-40d5-9414-c3640ddaf43f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c95fb39c-6842-44b5-b922-37d854d5a10b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5d7472d1-823c-44d0-b5b3-5e0030d403dd"
            }
          }
        ]
      },
      {
        "id": "3760a15e-5a58-48bf-b5b7-f970d7c7310e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "0e0729bb-c146-4714-a403-9ee5e63b879b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b267fd31-df29-4273-9a03-84803022ee0d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a0e62aa8-adbe-47c4-a68d-5f92ff25d3f5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da1213a1-c40c-4f9f-9373-27c258e3b0c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89bb6afc-d991-48a5-b5bc-77964c33548e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af6cc802-00be-4f9d-9230-8b8e09f16ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6bdc1da-a48d-4f11-8b03-1b89d650e712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da007d5-5ff9-43a7-820d-61016b963a80",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d31096a-d718-459e-a7bc-08ef1d0f24e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "857aca22-a990-446d-9651-16051b62f135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3587060a-6ba6-4fdf-9850-258c05cee53b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "91eacbdb-2a66-447d-9c10-c10387ffbbdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77282b0f-bb2c-4b06-b87b-ae64d00bfbf1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f72427-bc5f-457e-90f2-26ed8bdf91fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3283735c-1d3f-4f50-af3c-4be8093a9c17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b44b83c9-5f0d-461f-ab09-a77cda87d770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c5bd608-8376-491b-bbdf-d4046e86775e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "692269ee-e342-4628-87af-4227a2be53d0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff4b48a-1274-4759-8978-64b4b710d858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69fdfee1-4a9b-4b1f-b89a-1777280c792f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67447384-db76-40dd-81df-f014ee78d94a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a14123f5-7fc6-48a4-abd0-7b8dd5017849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b51d0f-612f-47a6-9963-92e0d3f40ebe",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c89499-8df1-47a7-a4ba-d3f2d6481ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39e0def8-60e5-4912-9f55-1643876d8db1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0750b450-36fa-4850-a5e0-1fd20af92b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9ec3f74-2498-4b21-b68c-f30bdf5bc0b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23721573-17e8-45de-9dc7-ce731ffac6df",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2df073-8406-4f40-a1cb-358c23e94aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2edfb94a-44ae-447a-bf66-5284a9d63c6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64fcb7ce-1f51-4eea-b0c5-f1fc97e61197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "641d8bf5-f74b-44ab-9384-cb0294fc030b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08cc5a2f-c169-44a9-9c89-922d99b116d1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6fcf274-0bd5-4cdc-b009-e0e9aa7db7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7d190d9-68ae-4c7f-963c-d138ca6d58de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781fcf41-03f7-4df0-b6de-93786c36977b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "36efa35f-6eb4-4a8f-9dd8-f2aa9ddeb130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bb889bf-66c7-477f-bece-2a856c4c5fd0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7f579d-d91c-44cf-b6a7-ddcff6493337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9e93efe-b3fd-4515-8f25-d6e0069b0ae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08c683c-516c-4118-a7f1-36e34d6f25a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "494956c4-c696-4ec9-8318-023414d94fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f12c9a3-80de-48a8-9ee7-95abee9c8d8a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72eb6eb4-2ab2-4782-b9cc-3b323b977695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afde366b-7519-4a9c-8a32-b0920b402090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37394ea0-927c-4522-91ac-71e2c8df210c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec5defb6-f2c1-4ca7-83c4-af8435a0331e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f58454-72dc-484c-88d1-7391bff65c34",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e13b39-c430-4e71-b54d-d9c86d7a7b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33616cdd-dcff-413d-993c-ccdc80eb6261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cdd7dce-c2be-4d86-afac-b886269cf4c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "60a7c2d9-337a-4132-86c5-e17290d77c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc183ad-dd63-4e3f-b2f3-86df5abf332a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d1557d3-cbc5-45f9-b214-f605c95d8ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "679ab36b-b57b-4cd5-bdc5-fc2d326fc590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28eb2711-0761-49a9-84e1-bdb620fd7913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4ad7ea40-ce14-4f24-a8ec-6a884cd0e8ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "851ad2f6-2f6d-415b-bf60-e44ced91e2bd",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf6bc71-3cbc-4745-a51d-cc0db52b8e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d880052a-9769-4419-acce-84f42731aba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba90968-b71c-45ef-b30c-8fab370370b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "34c40686-6f59-4212-9bd4-125eba09e354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b04a4baf-7681-47fc-8968-aca284b41d05",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c257e9-2ea4-4ee6-92ab-ebb6e59aea93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ba2df4f-c271-46a6-8ef3-500def9863b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64bd4576-134e-46aa-a7d9-394a702f307d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "494ae4e3-9c61-43bd-b69f-fdcc4086975e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0642017c-ad59-4b71-9eb4-0550f8d5c0b3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d93c55dc-9a99-434e-ae19-41fec11a0ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7331de12-d150-4c8b-82cc-700a0e43798f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeb07bd0-dd40-44ea-98a1-77e016e52382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "02db85bc-9c89-4122-9d1b-e13047b93deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0733848-711d-46fe-827f-a4a3c3431284",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ad29084-7197-4619-8a40-717b2e29868e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f204e3d-497d-46e4-b1b1-03378c1b5baa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be8317f9-fd43-4508-b943-eb3898f98071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1addeb7b-1f50-417f-8fb7-d5c1bcc889d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73575e15-ef9d-41f0-b20f-055b1c8ae163",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77100962-edf1-4390-99fd-a406d8430ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18f126ad-d9b9-4e20-9715-ccb276c3b72f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63344aa2-e660-4ab8-8670-1600dfe5b76e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0916078-6bfa-449e-8291-f17dc3fb8d33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58bee0a9-4af4-40ee-88ab-27182a5f6a9e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a89f5da-e9c1-45d1-a21f-1ceab7a45d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e522c4eb-d18d-4237-895b-535961ad818f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f720bf-6254-40ec-a243-bba7127bbfa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2e6390d-0a97-41d7-aa71-9b9a8503ada2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e990a10-6f54-4ec4-91b8-6d860588b694",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c93680-6f9f-469a-bfc5-26da766658e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65b2d9fa-f531-4517-a560-13dc0c1f374d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771981aa-7775-4436-8df5-06e52938e408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "014e67ba-e047-4e78-b3a1-b9bb63a72db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48cc811b-48e9-4b50-8ac3-6d7a3adb0e52",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "190257f9-c2ec-45ef-90b6-e03302e7cb33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2845f539-d9f6-4b76-93dc-90d398d6dd35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b23cfc-46bf-4116-a35b-0a73730f7042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9f96d7a-e7e5-46f7-9cea-8fc068a73b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc30ff5-192c-4c1f-9331-0d7963c4d3fc",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f10817-0419-4e59-a9de-22b1813ebb26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f80ce733-d3af-4593-b1d7-d4a9d6f1a1f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e651da00-ed84-4768-96c1-1e1bbdab83d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b357e70f-5fe1-4288-880a-cd3b630cc76f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f1e006-f36e-48f3-8476-aae25eed344f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "899d474e-79d9-4183-b2f6-90bd4bd2966e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2baeaa1-b6df-4ae2-8191-1e6f2cc72b9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e2393b-b627-432b-baa8-895d2503c93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9feda32-5d6d-4638-ae76-547185cd7f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a3edd6-f521-41e8-879a-15369219d6fd",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ea90d6-f783-41e6-9c27-5c1df4c44b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "870485de-2ef3-4bf9-abc5-56f0b240db66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06881982-1f49-4a2b-a329-5d33a2950b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84bae199-372b-488f-8670-02e93fb57117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "637472e3-cf91-4841-b815-23b0caba9f73",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e498ab-0b8f-4382-9f3d-182da6009ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "018965d6-0b30-45c6-9cb6-11295efa8750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1f679f-20b8-4e13-8d1f-22c5902e601f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f1b8a26-733c-4c7f-9920-49b1b64772b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25377dcb-4bc2-461d-8d70-393034745447",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de729597-9332-4331-a78a-d06dbd1718ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d014b5f6-230c-4a95-83fc-c6d2be0c78a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea2d91e-0d47-4bb9-beae-0c5c788a1e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf7810c4-71cf-413a-ab1f-f408abbbdc3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa559bd-395e-44e3-bef4-31d1a3a36d97",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd35cde-0876-4096-b6ab-2202a1744c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7060a3b2-75b7-46af-84d3-3a1d0e89c1e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d320ae-94a9-454c-9b1d-a5ab57173dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f532a1d-d64b-4cf0-846d-0aac4afe6e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a7b3f0-be23-4aab-be43-5d88f3cffff4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d60f4c8-17b8-4003-a909-ef4496e3fadd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1ac6a52-70a4-4563-a798-c393fc55c6a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "507b809f-e63a-4ffe-829b-5564e2005b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b38fe88e-2b2f-4f6c-a461-6263243f55c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c66bf17-ed50-4723-be2e-291383dd213a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f3c6060-15e4-45fb-a2e6-fb53cd4e9ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "644e5be8-933f-4069-86de-f82058ad3511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec0fbc5-c568-490a-a077-0b9a3fade2a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88a75b23-a38a-4b90-89c7-729400958ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68be2b3a-9dda-4fd4-8583-5198b5e419e9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08fb0ffc-4b12-4b68-8a77-b25589b7053b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5e36b8f-1fd0-4e29-8eb1-1fec436fab05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4c12de-c2c5-4d32-83ff-dabf03a7e6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e83b7c6-b608-4cd1-8404-4a5e6a74c64b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e05062d-caa2-4220-a13d-e279384cf3b9",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c0a99b-1215-4845-878a-0a0252602a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83467298-59ab-4492-a50d-c65e3a3a00c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e47099-d7be-48ae-904b-685b613c4f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a364daa9-ba5e-400d-bf72-e9ac343465ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b303e0e0-d277-4c07-b511-872d32cdb98f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "176a6dc5-c088-4523-a73c-d0a419d38f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a06c561-18d5-4d84-9662-d319ec6c75db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddaa0779-dade-4aba-9bae-70f90729945d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64c04f73-9d96-452e-a9cc-456783095525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df6e221a-612c-4925-b33d-1e68ac0590cd",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e031d51-f89c-44e1-a3ec-aae490fddf3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35aa89b8-0ba8-4d7f-9faa-19b600bfd784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f4d3618-fd97-4411-9e53-4d67fc4cf7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75087835-febd-448d-9a1c-c42cd7c6b63a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed0535b-d55f-4db2-8c7a-23a70e37f480",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e035b682-4694-4397-b1c0-5deea7627119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca9f6a14-7bed-4d7b-ab91-c934181f1d55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef672b6-035b-417c-a3fa-44730ff8ba40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4a728ba-aa61-49e6-9284-a01d7f1b850d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "07d982a9-1686-4335-824d-157faa8e2a10",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fcc50b3f-d7f4-4850-8ab1-1b334ff34a5a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c52c9450-e21e-4810-90fe-5a6276f62b36",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "cf8867d3-9eb3-45f1-a540-36e80f9d8c36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e19961-a9b1-459b-9006-47ab68db7726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a1515b0d-679d-43a3-8c01-ccfeb42e84b4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96dd6c83-a59f-4551-9758-0b1b8a3e100b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f659b631-6263-486e-ac3d-d14a5dac1caa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "34f64db2-88ad-4c75-822a-543077508ee1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef56eb2f-447d-4072-8b4b-e752d8bd987a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ff7edb59-bbca-44e1-b4f9-a8746254c9da",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "27fe0098-5d02-44a8-955c-fd3c98872eef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "edecd28b-57a4-4868-913b-a66f27c6c454",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6fa2e329-fe95-4d2d-b5d8-ffceaa2d6705"
            }
          }
        ]
      },
      {
        "id": "583cf93f-84ef-4550-b5ea-6a0b663fac7b",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "ac71e38a-112a-472e-8048-bc128b29f0d4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bc6c0265-8320-45b4-babf-4e75dfa32685",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "877c17ff-0763-4375-9653-b3af6bad3a8b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b2e962-f31a-4bbb-b9d5-c6f45b6e6d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2baff7e7-b86f-421e-831a-b5e372a4142f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c075c56a-342d-4740-8818-745e09956041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "397b7470-1c55-4547-a8ab-c3e9aca2f0c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f10576d7-6cd8-43e8-b89b-0e056596156d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b390d91f-f3ea-44c4-9262-44f7ea6308fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "710bc1d4-d0b6-4650-8ed6-13b7186dfb59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c09431b-130b-446a-a9bd-77b490a69ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "604010ec-e488-4b16-a49d-4ee70afc75e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5eb132-c3f8-43cb-bf3b-16352c63cb7b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "542eea82-63db-44f4-a2ba-755480eb29ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eac3c7d1-aead-4a9e-95b1-98694bf852dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8632217f-dc7b-46ce-b632-94dfbf1e7cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d6325eb-55ae-430d-9a7a-ee69478657c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c1265e-cfa7-4a2b-a96a-5972f0f8930a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40942e02-8af6-4585-9be2-bd30172e8b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afae731f-4c99-428d-9995-1d2d1ff4ab7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66932c4c-ae20-4573-9a2a-5bb828c4e8fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "936026ad-c509-4715-90cd-e69ca4a5a3e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e3504d8-b027-4aee-b606-e96e9dac4458",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ad3582-476a-4920-bc5a-c9e4a32fd759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1616bbf2-b701-4810-afdc-03cc1cf27207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc9744b-ff2f-462e-8712-ea6363f91792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebd1a381-52ea-4a3f-ba55-d8f1ea083279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4772f3cc-248b-473d-9821-26947145acf3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a074c45-9139-4234-bcb1-24ad0c900044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "480f33eb-c874-47f4-a462-aaba76d328d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5fceb51-7483-460f-b24b-778de58b3607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce5cb401-b3c7-4f4e-bae2-1a1bcfb2bbc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c703d3af-8ce8-402a-81dc-03b41f905ea4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e7e9a5-597d-44cf-9436-8e38798ff632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dbbd869-4659-4a79-96ae-3d9c714da172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e06ad1e9-a207-4a9d-b491-384748441532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f03a6b86-f661-467d-8a6a-6059dc4cb463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cbbbc66-b8fa-481b-b3e9-aeaea862cdcf",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4843f395-4408-407d-9030-e34300090b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68c9a124-7c93-4b54-aa21-421e9fcff3ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed46c2b-2dab-4c65-b9fb-8d06965591e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "12d68b63-c963-4fe6-a20d-81879a72524a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5231f6-c983-4bbe-98b6-3a454c491dfa",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d39b6a-bf25-4d7b-8041-6b8162b17907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b01b739d-a0a7-4ec5-ba2f-4a07755dff7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e24c20-6b27-4be3-a57e-11b5520ec10c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b420b908-09d1-4cfb-a9bb-17ba056d1db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10cc678-b254-4a20-b312-1ebfd417045b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc667ab-6610-454a-a688-53d9dc221f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79a44869-ed73-44e1-8ade-9a05f4502184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a36d42-735c-4cbf-b7a1-1deca787700d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6db508d3-c7cf-4bae-b418-586391cc380a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a174b19d-578a-4d59-b536-1dafd6e2f8e0",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a44f2dd-b477-4934-859e-b81c8991b12f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66e052a0-5f9e-4440-b5cc-4d5567933be8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0887bc0-4410-4cc3-ac79-258233ec9249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a549b554-d925-45f3-962b-4e38bb0454f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5d19ef5-bf46-4978-b677-9e73283b6a9f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "383e5dbb-7e4f-455c-9888-105935309564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a878668-c159-4892-ad37-5580bf605a96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84bbd07c-45c1-497d-acfb-1c31cdd9f0eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "98c21c35-f59c-4652-aa8a-f3e2a53cd962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50085e7d-fa04-4e1c-839f-19d5248600ac",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c55830f-f210-44fc-b079-dd142b56860a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b3a3706-e61c-4c7f-8fd7-7f5bd2f7a34f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d0c75c-42a4-46ff-b611-8da0d0afa4c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad91bea4-463e-490b-a01f-98c105727bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b66ca9f4-85df-4254-a885-4317c6950136",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d42f13-f596-444a-b99f-d0a8a86e1e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b66d9aef-390d-428f-9823-7135c9a023db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0002988-b19f-47df-bce3-098edb0bedec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "48bb4e2a-bbdd-4b68-a113-ee1f7539a8fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3a7aaf-4c20-4557-9e87-f810f845d5a7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b13bafef-decb-428e-9857-3f616df21ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b574fa18-7ddb-4395-831f-5be185e1eae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e62c5a0-fe22-4aa5-ae3d-2e4b28b53215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "23746083-8e79-4a82-8944-2af25470a0e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2179ca13-400d-4371-9b4b-ea3c72267003",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff994bf0-e87c-4386-abae-71b8a23e633a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2214a1d6-7ab4-4c15-83f5-2a686fa64a3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb9779fd-3c7d-4198-8edf-368d4061e9de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "94910037-540e-46ea-a290-390db9af0b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aeb66ce-87ed-420d-8b25-cee1e4323b6b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c07a287-be52-4ddb-be36-9bf7c6b1e599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e5c80e0-af9e-4479-ae8a-6a8782f91ea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fbf66d5-108a-428f-be70-139b15ebb6b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b7583be-cc99-4974-8195-4c3cd1bdffa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ac2381-0ec7-4a03-8554-b394a27cfaa8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "028b7624-399b-41aa-9099-ba2cddb1e874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "323eca03-8fc4-4c6b-aacb-83319a57934b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb09316-a60f-49d3-950b-a2111f92e0ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ac4b7f1-4366-4ffb-a57f-f6ac133e3d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c046c32-ee19-4418-bfe2-431454943865",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9119ab-5ccf-4997-bdcd-884650d30e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6dbecbb-c44b-444a-b716-e2903d016ca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0194bf20-a9ba-49de-bb93-fb5d15cd6930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2ea98d4-3f00-40cd-9446-d01e11bf07c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38535b6-1b8b-488d-98a6-a968e2e52881",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac1fd6e5-3dee-4efd-b649-53a0489b0836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07a6396f-37b5-499f-a56c-89062ee58d4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6480a65-b3d1-45e8-b28f-115808bcfa5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cc35e27-698c-4c58-8b69-2f5c34453a87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "907cf66a-7711-42ac-88e2-c4d4b5030b4a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "683d713d-99e5-42ab-b813-08c3ec1fb6bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6a176d7-544d-4408-9cb1-25750ccba71c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6bae76a-045d-4144-bc10-6986433cfdd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70afc38d-7ed3-495b-be4e-4f4caa916f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e73ed9-9be2-4966-a5f5-925fb6a9acd4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6748cc27-edf4-4f5a-96d2-9e5df2438941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "698454bc-2f90-4670-b0c5-df41555a9050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8422f69-5f89-4414-b191-63c78814cc88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bac15281-4292-4c7e-9f97-8acda6a9e887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3435637-389c-4da2-98d1-27db32b17510",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf9a9b78-f31c-4a09-8f2a-dd08b6ca9a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c245dadf-e7fb-48d5-92a8-a6d1aaaa0bb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a025252f-b9b4-4121-8e56-9ae465531326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a83a95d-d2ae-455e-a0bc-e776a73be319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "608f7a66-975c-4ca9-bacf-a66b8823f986",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca6f2dc-9c38-4ad5-8722-3f2a9b33a8ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90059419-89cb-497f-86eb-f8577b878a34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "613c8ad2-365c-4005-878f-37aa87c97ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d5f0ec8-b289-4d98-a81a-361bd3ba1861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68040520-1658-4ad4-83c5-7cbc667d7abf",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4015317-2ce7-4f0d-8ea8-7f5cf417c911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c342ee7-bf50-4cf5-b576-8d0934437050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd86d99-f0ff-4abf-9778-28f3415c098b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d3bb459-7201-452f-9f3a-cf99ebe712d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bdb2665-bbc4-4ab1-807b-d4aebf6a8a3c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8a4202-c896-49e3-ba76-4345dac85129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c522f3f8-1309-4ff1-aea9-dc24735d8ee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a48700a9-0e61-41f1-90b4-5c6c9ce806ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "271c6864-43df-40ce-be43-e515b8981374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f15d24-7d04-43df-b32e-4cce749cc461",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d40a8b-38c1-4a2c-b18c-d78b1b418e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f305ac5-93f2-4f06-8ed1-f43d4de73261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "818b9409-90ff-4abe-97a0-662ff2a8ef17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76217ca7-e2a7-4509-b2df-de20554f1162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46945866-6a39-491f-a992-fb9e7892e4a3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2386bb-a32c-47b5-a405-ad67e0b7aae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d674793b-9e4f-428a-9ae8-fb93f92b83e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab09e51-1201-4165-a635-4c3407472e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f05c545-4152-424e-85d9-83201294b964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b7cb8eb-5765-4363-9e89-7498e9325032",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dee9ed8-e7b4-44c0-8087-c9c2fd970f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39a58919-81d1-435d-962c-5d15c7257697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e99f24e-7dfd-415e-bd14-dd99d66dcf45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "598ad67f-ab67-4e4c-8f39-fcafb6a77d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7425d134-657e-455f-84f7-6f4b1473e30a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3abfc02-7211-4b1e-8892-62869833dda9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bcaf1b2-1c56-4871-8a65-18feb3450e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64b2f6b-ab28-4a5f-8b94-5a7cd1b82a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7c5355e-fe30-4713-800f-3fe277266b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd9588e2-3596-454f-814b-173b5dbec443",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf716d23-01c7-414f-b8ca-a5cb7a1065be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b818760b-8c5f-4a1a-821a-6093c4aba07f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb26ecc7-5124-4dc1-91ee-07e287e74574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "174e8115-3c04-46a7-98c2-c0e65f3cbd92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e2bfeb9-860a-4cc1-ae30-eb712abc6e36",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "558d361b-103f-4797-95cf-f33feed80afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be745fd8-4cab-456f-9a8d-9aacaeb0adc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc4ba07d-3e94-4040-9f13-11b444e04fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "310ecadb-fc4b-4dc5-bdab-ea588a8184c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "620c801b-19b6-4309-961b-c9b5aa4ef7ea",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e348c43-c0c5-4fb7-bd69-bcc2cc2d91cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa5b2687-a232-4ec6-b78e-26c9303b4de2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f09d32db-0081-43f5-8ee1-23017e1ea13d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4dae706-45b8-4350-a614-f7be99a206b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb646db-15b9-4b83-8dd0-109a378c5ef4",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63026c69-e21f-46a2-bce0-0d212abb5a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11687958-69e6-42ec-9ad1-2427e1f7139b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdfe2422-9de0-4260-acd2-e2059539d5b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d97f86bd-c89a-45bf-b4a0-e90a6c9f3a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcebae81-bddf-470a-84a0-943b19e4ab72",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e089f2-4356-45a8-9dba-1d581e0ae4ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a576fc64-533d-4ce6-891b-7967b7f84353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e9864a-3b8d-42c2-acc8-c589969afb58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91dd5e1b-cd4f-4a24-a2b4-a532d29d68a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61cb5bc8-2721-4b48-8f06-2f3bf90cd255",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "effe27b3-36be-40fd-9d74-2588231a32eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45d90c6b-8698-46ea-8b5a-e8a48dc5e491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f9e850-8d64-4e8f-bd8b-1486693c269f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fc7049e-f2cc-486e-ba5b-1d722c8d74f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5feeb5a4-c42a-4455-a449-61fe04fe2bac",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e34ffc8f-1da3-4f5c-9174-a36ead0f7c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3e846ae-c479-4084-901d-597250311277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "990c29cd-a267-46f4-a1a8-413091e8f08d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac65f2be-aaab-4d70-91ac-440f58a5221f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0096297f-9c7e-494b-b4f8-a55b14450ad1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6e77cb09-25e5-4730-8d1d-bba27caf7890",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8a36f5-5380-49f6-9184-cc64bfa89ec0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ecb4863e-9a9b-4531-a80c-5dc1e7d1cfed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e80cbb-2373-417b-8a74-df26d9e53af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8d49be02-e94d-4c25-bc8a-51a974ba9f9e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9829dc1a-41a4-4835-bb36-5c2f36421a1d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a0cb17d-1b75-427e-9aa3-349f903c395b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bea14f63-38ca-4a1e-9728-aa5aba4d9d86",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7efa1ce-96a3-4001-bc7a-24047ebcd142"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a1b46979-b0b7-412a-9f5e-ad6e2b89fe8b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "33e9aaf3-2e81-48c4-acfd-1519a26b9f77"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b9c6cd63-ef0a-441f-935b-4847994401c9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cd4f4cce-9c29-408e-a831-e103443e9247"
            }
          }
        ]
      },
      {
        "id": "6e0308e7-eb60-447b-88f8-e554a6b6cbbb",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e9bcd700-e790-4b63-9c5c-0df9b25e6e55",
            "name": "Negative Testing",
            "item": [
              {
                "id": "20e79ec4-ee8a-4c26-bff0-71b37f711d44",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2de6a051-59ae-42fe-8040-b14a6ff1c176",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aadaa21-ee6a-4954-9410-5aae706ea6f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bef4177a-3361-4da9-bbea-4a59d2b86f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4092079b-aa82-444b-93e2-064ce72fa42b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e420a1af-9b63-4465-8f95-bd7ad9c5c95f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22e58876-07e9-4419-827f-0b2192f7f549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a0b9e3-eac0-4a4c-8b77-5a74b3296cd1",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60706386-c68d-4f14-9a5c-d294ba84222f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3e6144a-5b94-46f8-97ae-7c5508249fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "609600db-7581-4070-936d-6e396d14cab8",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "653cc83f-428d-4873-8395-7dc39c68d934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d53321ea-b1f8-4879-8866-1ff5f4279f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "680ec5a8-3c50-40e7-be49-752a11218187",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b72c8c-fda3-45b7-b24b-aaa09b14cab1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6bc29e3-bf09-4a3e-9c5e-5601c2ed6439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc68432e-93e5-4b81-9537-0bfea677e705",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a50cba74-f246-4d89-9f13-4f926fc113b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a43dc24-1dbb-4aac-bc2c-6fc856cb9172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f93d8a8f-8afa-45b2-a119-3f47345d132a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e349164a-9a80-42dc-a336-6c14fc83861d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43575174-fc0d-4d89-a5a6-ab0f600071e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c4005de-cd2c-4406-bdf4-0602c42e3de6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99f97390-7f76-4b60-b2f5-457d9c9d0569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d21e42f4-2d83-414a-9e89-9fda16a4baa7",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf3e185-4d19-46f7-9908-44794465b25c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25f25346-5c27-4aec-a467-cd854e38c330"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89cd5bad-3cee-4053-8a41-2922ffdea198",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ec443cc-590a-433c-82fb-9876e23919ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a32e85c7-8841-4bf2-a590-a88856b96b95",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8550391d-24ec-42ff-ad9f-3ce9ec82604c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8aae37e3-1846-4c70-b674-7fbfc0f3b631"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7417fb-ed04-45bb-9237-817075e09877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df5534df-d273-4739-a2a7-d49d5eca60f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a673aaa-8f40-4b8a-9fcd-7315e9054e93",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7749dd94-9d38-498e-a9c3-b58f1e847128",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a09d1fd-41e1-4b75-8489-5d459cec331c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf55322-ffb6-4b2a-9855-1a4bb163682d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8b7eb54-f65d-4f75-994f-6b524e2660b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f8eb0c-d168-443c-afd5-c3011515ad11",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a12eda5-d93b-48b7-92bc-d57ca3a51372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60ced25b-0945-4bfd-91ff-231352ab6f23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "797acdfb-f508-4b94-9e96-9f59db06071d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df53b90e-e090-4c8d-8f5d-a29d01e79da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67559b62-3f45-4357-9058-8f7fb65c3fad",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c43316d6-65b7-4d2c-9426-6c78997488fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9447f972-48f1-4c6a-bbd5-3e4e32a67e4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43409aa1-87b5-4c7e-ba23-a2b0fb3f2a1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d8b99fc-dced-4b7d-aa5f-0e11d79d16f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f0ffbe-be40-4ac9-8f86-d048018d0fc2",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e44eb7f0-9be9-457b-80b9-f0cc169ddbcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c63e2f0f-8728-41cf-92fa-b152315f4869"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ece3f5-d9eb-440d-8223-d02843bdfcc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90b1b3f9-0c86-43a7-b529-7318d6e0ba70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3a5ec40-3122-4467-9a9d-fce46610ba47",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23471f89-3801-4cf7-8859-ba5b736d583d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "478cad17-cd92-4732-815a-8294efb476cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a525d4-b65d-44d8-82f2-8822eb43e2d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec0d06c4-0027-450f-991e-b20686a06e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6742be78-0ef5-4203-b129-969e9e991b89",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9ef461-2557-4f58-bf63-7c9060fc9739",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3b09d0c-cf38-454c-abaf-3f774fd77d48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e3408f-99aa-44cc-aea8-be751ce78bf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8882a303-9cd3-42f2-92d4-8ba262d97c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99417632-8ab4-4b6c-a3e5-e64758c2da4e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a1a58cb-3744-4247-ba66-96d28ee9bb9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26c1b7ae-50bb-427c-ba0e-7b81d168a493"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82478000-15a1-4ea7-918b-76bd8b81d64f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d08dcd8-26fb-44ff-9d76-a3fe1d85c26f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "061695d4-a39d-4a18-a583-b2d32cbe0eb6",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f324c7-b46e-46fd-aa8b-9714456800cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97be7d4b-1a3a-4b6b-b3a9-148b189c0385"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a930a7b-23ea-4dff-b718-1af106eaca68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e505cf1-5114-41cb-9f44-06b337206dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c571dd-d471-4b12-a025-0c371de20dcc",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb1b3f75-c683-4b88-9fff-8a70e9328495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e0e252f-e337-486f-8a86-daba011f9e90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "726b5e6a-89d0-4ac8-822f-c1ae3f88101a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5630f100-4089-4f5e-a645-833686023b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2009f360-db28-441f-8f4b-961858129e21",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f790c038-8c0a-4d2a-af55-26661c09a04f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fff5b188-26d9-4a1f-858b-7a06ee741c8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ec61e0-c8ba-4520-9d2a-687ef685c226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b5ed4a5-63e2-41c9-b13f-9a218fc4a188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71752cd2-c65f-4124-9e83-5022865454b7",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e317970e-3e1e-43e0-b378-0621ed2cf465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8c05db5-798b-423b-9388-62e747f6804f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b4f535c-8675-40ca-83e1-71cf5e5340f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1aea936-f569-498b-a74b-10c8a7b2ea1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fabdb58-e3dd-41b4-ba90-1be86923f2b5",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd108c84-d45a-4335-8845-ae80006f0065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e3eaf73-a688-46be-b322-adcb6730f328"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82423fb0-b09c-4055-a3c5-b5abf00df96e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dab25c1-4c08-4f44-8285-4309ea428560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89426a27-70eb-4ed1-88eb-d5f5135292c3",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e397d57c-a1d0-47da-9201-e6fa5ecd9ee2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "588d5fb0-5bc0-456a-9d08-553c46208c0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b015a9-4202-4ee0-8c8b-7c30777f2aaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "649c874b-11a7-46a6-9b1d-7605cc17bd94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340626be-a1cb-4e08-badf-621e2d35c7b7",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a37af6-fa78-4253-8185-e8d5ecf08608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe21693d-c7f2-49f9-9ae7-03543736ae22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb453986-8dc3-4350-942a-1bab3d42def0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3208fd95-e3e1-4dc3-ae4f-66b067f2795d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a266098b-414c-4112-a5ce-dcc19335e8bb",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a51e7fe-aa11-44c1-98cc-9e33c38c262c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "060e37d0-df4c-404d-9e9d-7aaaeb8614b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caca84c0-598a-4c28-8a55-4fcba1583109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af0225d5-cb90-472f-bb67-c36a41f5fca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c4e27a-b291-419b-a524-8418b9cc3f60",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb04ea0-222b-4251-9b02-76bea5eb2a2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45ece1a0-966e-4f50-b23f-3e12b4edf6c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "052b1881-b49a-4c4b-8c53-4abea411a7d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b5dbb37-aa74-4c13-8d43-8df0defa3512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "923dc9b7-7e5c-4f80-af97-63d652f283e6",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62375de9-9430-4fe2-9d16-168f94a87c80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5f1e3b2-e6c0-4415-84c5-40cb7553beb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25495ebb-729a-436f-83d2-7cc34c977951",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71699703-9172-400a-bc0b-99f47f08b29d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c90987-dc9c-4810-9ce3-49e372ba7af0",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1534a12-5a75-4540-8e0d-25667cbbbb8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92c82385-c676-4e04-b2ae-e4e919a8971b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad5677e-c287-402a-88d5-bcbfddc3dc80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57d3f6f2-1ee1-4fa3-ab71-98f59bfbec97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab79a12d-4740-452b-9aea-d2315f081999",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11466843-6f17-4c7e-b7a2-f0a98c7b9733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "516400a1-8971-4a5c-9638-728431a2ebce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ad5c2d-8ad4-4738-b499-bb292befd7ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11f2cfc9-7c67-4d0b-a40b-b7027418a7d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d9a560-c311-4265-afc5-b95affc54138",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c110db14-a67d-417e-8e6e-7273b579f7b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68f9cf00-7f18-44ce-af15-55c89bed253c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0aef2d-b0e6-46ba-a7e3-13031bf8ed79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3071cadc-f05c-40b4-8f20-259efc9c586a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b846a60f-c27d-479e-9b76-99a0ca100450",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8240e00f-620d-4fab-ad10-b321ff3a8479",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a80b8a8-47aa-4a10-aea6-bf296538721c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8968885-3ae8-4b4e-a1d3-ebacfdee253a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71f9e9ee-9ea1-4b88-9c6f-ff2e530cfb79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aed0430-f3b8-4eb9-85fd-aa36f8b02e0d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a51136d-3acc-4ff4-b1be-884a0bdd131e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adc95d0b-a8f8-49b4-ac6c-59f706742c8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f5a6a01-b046-4f26-afb7-c49d31ea77ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc62a0d8-ce03-48a9-aeeb-dbba79af0a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e5f2972-888e-44f7-9a68-74c877de8d81",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda7337c-e358-4050-ac5e-0535481c00f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50b3323a-bc8b-4007-9c1f-af4a60ab25e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c976fe7e-9108-4e78-a42d-754f45c1795c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63dc216b-0762-4c59-8b34-05cdf5a7404d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff9a35b-2c4e-4e73-8447-25d0296c26de",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef4480ff-be7b-48af-907f-4b272b2487bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d9120c3-d1df-46f3-be79-d4ee18403a57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d07ff684-e049-4921-8593-e5c4fa85d872",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e15a94d8-1ab1-47e2-b276-12e225e39ea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8a6b55c-b6ae-43a0-9da3-78417499f8e8",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c982e49-f08d-4cce-b1ee-b49be2c4e352",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "095c8e84-0823-4dc5-bf1d-bce51f1c4706"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "860ae67f-7462-4d2c-bd3d-84ff1403d7cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc91b31b-28aa-4020-ac4c-022526279b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1475f3bb-49f3-425a-a439-627cab1b5354",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66bcd7e9-e74f-4b4d-8704-075dbc6267ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92fcc5ca-8b60-4a0f-b29d-7d9dd382ea24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb8c13b-4789-4e77-a09d-636940de0839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff6b91af-8018-44b6-8ed0-0d0f95f76dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5176b485-425c-4781-9102-02b5bc0e4fd8",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39907a36-f801-4df6-b3a0-e43d16aefb25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11899f09-689c-4267-bf40-a603252af03c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c867b4-28f7-439a-9ecf-5159d0782f49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8402985-17da-456d-8e44-35babeebbfc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8878cc41-aa16-47e0-8894-1bc810340802",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17da3b5e-acb8-4e28-8269-5d98422b46a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8fcf06b-f54a-477f-8407-54b5c9c00085"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acdb8320-2b56-4e65-9818-05684dfa4b2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79e1cb53-4b78-42ff-85bd-b2d166c72eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd6008ff-8236-494e-8474-33c1178a5324",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "931ec9fd-67a9-470e-aed2-3e7ce6d15de2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "598b013c-76ed-4365-a06c-0e4f1a93463b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd508976-5857-43ef-bd7b-1ee13c678740",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad445eb1-75d8-448d-85eb-bd7d9d416aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f10059-9d4a-45f2-a751-b4df63097e27",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1217cbc-c32b-42a2-97ba-677f92a535a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23857605-b087-4097-9293-462654129d06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd18b815-3223-4d61-83be-8c6cc95cfc57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5653dd9-0b3b-4229-9ae0-d70df2a11f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a21f9fc-7c8d-4d06-93f9-af81b9a9f629",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c562e277-e1c4-4a98-9a37-3eb2df8d687a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "299fe132-ce8c-46f2-803a-2ce4772d6f85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "867e090e-76f3-4590-ab2c-942cc9db5712",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ac59bed-f6c2-4d87-8f7a-6c59ea5476d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c073558-7952-4ac5-aad8-b26dee0de4f6",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d2f3ade-749b-4d80-8556-f1768b5d5c2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b424838-7116-4873-bb36-3bc1cc5171e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f825a76-f806-474b-9aad-f3ba0d8e47ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c5add7a-1380-4353-a879-6217bb484341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb7cb26d-ab70-4209-8daa-d6fa3a10ad76",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c363b99-dda4-4b5a-b5cc-99be1e5915be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d547f817-a0ed-4a4d-9327-ec249052bb42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c33d010b-a335-4ca5-aa63-57aa22c33e98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e12e34b-d870-4b0a-9572-e52c7c548455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb8187aa-20f2-4260-8287-b5865547c275",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b475da-8765-46c1-865d-1c76abccf56c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25a0fef4-4f2d-4dab-8760-a444f425cd16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e932fd-c23c-4a34-bbb2-ff2f0b200ab3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45039215-dfb0-4e51-bb65-fa9128b504bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f253b7b-9a33-4695-8e4c-cc8d19a60729",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1361326f-1f78-4a69-a78a-696bf44e2812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe62c4a4-0ee4-4df1-a261-ecd0c0eef4d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e576716-aa45-44b8-b2f3-1bd842766893",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a4b8a81-611a-4bc8-b8ec-49aa5933b690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f694a725-e32f-4993-b251-850d1e177511",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77cafe91-ae0b-451d-8380-d2de33559961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd535e1f-1744-4764-8d84-460d6804e105"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee3a2ee4-1c4e-4360-b05c-38bc0903fe18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ca15218-3d27-42a0-b2e2-f06ac2c2cb16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f7269db-4bc9-4e33-806d-8459531e3883",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05fe2008-1539-48e9-bc3a-b40be2e4ce77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2591299-487c-455c-a9a8-a92cbf0ca1ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e3583a-40c2-4c39-bb31-ee575862e0bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3741696-6922-4b03-bfe4-a5092251cd56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "245bd1a5-a161-4dd1-9d15-bc25417b8ca2",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b11f01b9-41d9-4249-bf87-96fb305dfd84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2165ecf-dbc8-4f73-af2f-5c1b73c19900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edfef54b-58e1-4f33-bf38-a0c978925cd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de9321b5-17c8-418d-8cb3-d9aada9b3117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a319672d-e15b-4b94-9ad4-fab6a128a971",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac12cbf-45b9-44af-af10-7df8b0d9cdcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2b99640-6d79-4b69-94cf-468cc92e5997"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7cc1d09-04e7-4e6e-9cb6-96cfe8abebfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "295002b7-0b98-4791-ba36-e561a5a821b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1983ea88-e175-48b6-be75-f74934e8c1cd",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe902416-15ed-45c8-88e3-cef235a9d8ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3a76b6d-d956-4fd7-9697-8438c60c2893"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dbe3574-8376-4a18-b148-d37edf6dad2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6689d7f-e498-4770-8c19-dcd9849169d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b02ec138-21d9-4b11-988a-be4cd60e7ca7",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce564511-a65b-47f0-a77e-ed8ece15e50e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f59a0ce6-0396-4a1d-a258-345c4d5d50b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aabdcfe-a923-444d-9cc5-8ec20c1f9cae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c572115-1782-4fe3-b88e-76b8df11c174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3aeb919-71a6-435d-9304-8e75b52c500d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b778d4-9de3-4e45-9bec-6062ba4dfb6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e95e71b9-c25d-4bb9-8c5d-9a1bda924db2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "841b18ad-ba29-4356-9cac-e43004b68e02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f86907f4-89bb-4358-85f7-bdd5fb85bacb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "739d654e-2dd8-43ca-879d-62e54d23903e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f78a6d4-88f8-4b44-a753-94c421b81a1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b8e0b91-36ad-4475-b326-f4e1c0c0a084"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec1d06c-46be-4d17-abba-8c013edac02f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49db483a-2597-4e85-bfd9-16fc414830a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbef7871-3622-40a9-8ec0-e0bfef4bb9fb",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e734c5dc-6519-45f5-a26e-c5a33df82404",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a37b61e2-7c8d-4af7-945e-69d9eee53841"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04012c3-9872-46f9-b2d0-b370d61a1298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d39a471-05e6-4eab-abeb-3e891f7f8dcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd03035d-90bc-4660-ac8f-5c003c89514c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "537fc85c-1f1a-409e-9ce2-a2c11a0add8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b1a6291-0602-45ce-8655-2307f5291835"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2007dec2-9216-4031-89fe-a9df1227c043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8de92b83-4602-4a87-90c0-d0c853c26df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "322b5c23-e854-4878-b6b2-e0b2890206ef",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29390927-e808-4c05-b726-358c54810f35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9db8fd2-d85a-4949-999d-7b72d27ec37c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80646ce-4299-4aaf-b168-93bc325d691c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f0cff3b-6507-4001-b382-567e292ba994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f66674-7c69-48b0-bd21-e0c0ac2bf620",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08582349-bb2d-473a-b67b-5d1be14e09e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e977b5f6-5dec-4598-8c2a-60c2e3620c85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec5c432-8644-4f7c-a7c7-a1c433b71d6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30fb3ea3-20a2-4646-968b-a144a0e2467b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34f16994-3139-4c5e-95e7-5e9181e3629d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17160b69-a157-4d5a-88cd-591c7dc3ba8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "138f97ab-e7a9-4ece-a1b3-5a1e83540af8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd48d76f-f0e6-48a6-a400-e1b6f87226f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78ad39b5-8400-4ee6-afd5-92b05758f340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b8dbfd-c873-49ca-b466-42623f2777a4",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "370d9f46-d4ea-4c8c-8e00-a5a2d0e5917e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e39c72a-e3a4-4594-b6af-2c17d8b31acc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "710f7939-d2d2-4814-b427-0212e0f3d9ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91e0b182-9e56-4980-9493-0d6e02fe4bc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd05d3a-914a-4fb1-a6be-b7f54732f4d0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c6cf2ad-1517-4c85-99db-b6f5322a5e08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "123e99dd-e689-4774-9d6e-1b02f6a4b150"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "237409f3-9bbe-4409-a7ed-116fc19f0689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57238af6-00e9-4f81-92b8-48ba54d81a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27771b0b-63ea-40a3-91f5-8e38633300f7",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4efaf236-7f78-484f-a8ee-859acf392a3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ecc39bc-d189-4d1b-97f3-3d66ee227262"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "627c1c6b-1ad3-4d1c-83bc-099a056e5791",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a3cab03-8283-4acb-a18e-51d7c0834e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d626f93f-9c76-4e23-976d-6248abfde69d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a32034b-b146-46ad-88a3-57a87ebbfe70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c1270b0-5fdc-4e00-8257-758e73f89b75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d399632d-0627-4942-8b6f-804813def810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "806dc44d-1f94-4ee9-84e0-a429ae051a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c3f34d-675a-48bb-8549-614f45954ea2",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d65785-956b-4cdf-b527-0f83c9dd139f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56201600-4ded-4554-93df-25a1185fd2d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c97ba5-893e-44b4-a1d6-a33d9eeacc94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82bc1adc-297e-4d6d-bfcf-0d40d0e8c32d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7933823-ea8c-4835-9bc0-02d6a4481500",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "948d6410-bd05-4bd8-ac32-623227cb1caf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a598124-d1a1-4bc7-a633-071c395e3e68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba678f0-16c1-46ce-afb3-33c1e75ac726",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "874955c2-1680-49c0-b54c-2cb032d5a8bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bbdc9dd-4df5-4f27-a463-e396a1fe3ceb",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5295f98-8104-49c7-9e13-d7ab8fcb8770",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "696029e3-ed96-4c4a-a3db-396fecef379e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23bfd1ef-755d-4cf7-bfbe-f8a14abd05d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87bcc585-78aa-4011-97e2-e75a96b21810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c8081b-12bb-4012-a3d1-00535e0f76de",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee83813c-a2fc-4d48-ad11-af562a3c5794",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28901401-469f-41c0-9805-a710d0a568cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a03366-5b27-4863-ba37-b4c750dffd6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aa62582-eb7f-41f5-90ad-0301ff70c166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d3be616-b26e-4a35-8a8c-175318aab1be",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e646e5-4875-4eed-8545-e6c12eb4e6eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c584613c-ea2b-4e54-bf2e-da454dfb46bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "265a55d3-54ec-49ab-9d29-a4efe75c8a82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71f269ab-410f-4c00-b43c-14bd723b18c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50588e6c-d7d6-48ac-ab3f-8a855b25c6c5",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac51275-fbf0-48a9-82dd-4bcb07eee2fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd0bd0b3-b9ad-4c1d-918c-d30ee8d2e4f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4232320c-2c2f-4f59-b718-2440528930ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d816f17-6203-4601-afd8-00512fba35bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "208d8fc9-2dc4-4708-9087-70c0f5c1f341",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "320e13a8-16af-48f5-ad52-dfb817298a4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "938f0b8a-c8a5-4bf4-9ff0-5e17bfc2746d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76165299-b376-4a3f-b77d-f356efb69748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8524713-46c2-4f26-8626-99a8d3dd09a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6bb23a1-d189-4a83-be56-48631c17b645",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e585f813-bff0-445f-b377-30bb3126420f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1b67935-1913-46dc-808a-cf1a10cf7d8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9e39944-114b-4814-a193-668152a92008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24a6d0ba-d56f-4bc5-8f5f-16b58d93a343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e5cee42-6420-495b-b92c-a9386cf1898c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47515e2e-e438-4789-a49d-96fa9a386ff4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fdd5583-040b-47dc-b23b-06bbea184795"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e9e69a8-9a32-4b0c-ba83-f116e1410f97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e20a1d7-26cf-4fa9-8366-6cc204809164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75392739-930c-43b2-b954-45d0bbb59362",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97acd62f-bd64-4c77-93ab-83b72c7a0709",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c227a13c-b83f-4094-9f22-648a0fe05778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed6d9b3-7501-4061-a9f0-7b3cdd680d53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2e08691-4840-43a3-b8c9-21d9b0592d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b76f1e-f1ca-421b-af82-7ca3669c47ab",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "052b75e9-17d4-4d47-a3f2-87edf9f33258",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9aae3ee5-f308-48d7-827d-5920325af01f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d007f1a-0163-4244-9b3c-a4e96b0b7437",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7966dbb1-fe68-4f18-ae8c-daa8fd3f2cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e74206d-694d-4834-ad6b-3870e993049b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15018789-9f9d-4fe2-8ce9-e654677d9b19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b205881-bca0-4789-9274-fcbfdd93b4fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fadc6924-bf52-4642-8edd-25aadb58a9dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c8d19da-2a81-4f5a-80e9-79d53fad14d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a3ff180-cf9d-4b3b-aec0-a2e37949d269",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee632fb3-f265-4440-a506-db7b95d3a017",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5e7e726-ec0e-4d5a-991e-299ecd3c51aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "002b427c-97d5-41e1-b59b-c9f12e0f98ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72da6747-cf6c-4192-9d1f-c0f8820bbee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cac2a80-9bdc-4e5a-948d-60cbf9d27b9d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "307120e8-f72f-48a9-9e60-7854332f3747",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a283f64-425c-493a-9ed6-18633358ec75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7b7881-daae-4dd7-8ffd-cb9f6f0b3ae4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c6d0e41-43f2-4329-ab33-7f7b849fd3b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf2bf1cc-01b5-4ab4-ab30-96d741199230",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "224e3fa2-4843-4a82-b6d3-56a8319b2353",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49654d99-09be-4a03-9562-acf95dfbdb95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82035462-3460-4368-a21c-2765d4608401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "922cc62b-a4ab-4e7d-9a77-b2663e820e70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a0e684f-a4ee-4ff3-aa26-937da4a5e7a6",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "776f5a96-cc65-484b-b1a2-09bc6b76967f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8102948c-8626-40fa-9d24-3d70c142d615"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5420a1a-b4f1-49f8-aafc-60a7b86c49de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "300e94ce-cea5-4915-bbf2-2d6284d85d1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f99d5321-34b8-41a8-ad02-9365730e8df0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46fbc28c-2eba-4cf4-9050-c8e88daa8843",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "861f3bc1-a2b8-497a-b048-172dc938e236"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b391d0-14a1-463a-ad9b-9a18a3d36a77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53dc7d83-b75f-44b4-9ac4-63fb395f84b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "950fe387-d02c-415e-8da8-b38208ba31c9",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00fe4b1b-60e8-49af-8f7b-2a763a8ca98a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1e6dc70-ecbf-465d-a311-099fa4ad4aef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "713e35f3-3b98-4777-a779-4195498cb8ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f805b6ba-227b-46fe-8b5a-fa7968d93d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e3a86b4-9bfd-45d2-a78e-625e5e491eb0",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0cf781f-f390-465f-b596-b5000de53286",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30f5f6c5-dfae-4987-a7cc-d7ef4d136218"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "324551d7-de65-432d-b167-6f20a2b5ed4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "179f4e70-0716-4129-ae43-79b7d49f9285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee148186-638e-44ea-97de-01c52609b8de",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "772205fa-0e38-4ccb-8995-d2b9fb45eac9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e73ed6d4-69e2-4787-80f7-9bb41f7537b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d378b27-4043-444c-b405-3b411acda538",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d61999cd-cf69-4318-9254-adb80f871e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a1db910-1ec9-4161-8a26-2b42f69d68c2",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "727a7e64-a267-4670-9e94-cd3121280e0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "347d0d08-9c5e-4451-9ac2-12a71b557f66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c1dee3-d5e1-48e2-9cca-3bf8b3894cf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "260c3e45-5a62-4cdc-afc2-9a1262422ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f26704f7-df2e-438b-97d4-1e5b679869c4",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e40d62-aa4e-4882-a258-a28b8768c1c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56580dff-d463-44b7-9365-f16679e6c528"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a6717b1-1db3-4bbd-825b-a657bca21215",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad81d487-a471-4791-9167-c79362a3e3a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f45027-d7ab-4622-a625-c7a859be2eeb",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f79b59e-69ee-4759-be71-66065ca6f74a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fe4eeb8-7ce7-47f1-9821-0b8ae0734f11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b25860be-3275-4032-89c0-03c066efd349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2342efec-8a91-49b0-aca8-78c7629af82b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48baf605-8cc0-41a5-a7e9-e34db516b8a6",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f977fa-52b2-43c6-ad3b-79bc98c3142f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45625a3b-ecfc-44a1-8335-2b16d0ead9a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ff5e6c-d91b-4e8c-a385-f414e7f91d13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e7c71a6-3bb8-4248-80a6-be07d698587e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c1126e-cd68-411e-b9e9-009bcfb35901",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81850915-7b1c-4e68-b041-b7206e290a02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "586b94c2-ec13-4ee6-907f-9a689cba5829"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73067b80-a627-417d-9b55-3de7a30a76d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f79608a-81fc-4373-b8ab-82231fd0d2b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce3cfe4-573b-473e-b4c3-86fbc6b14402",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ce1625-3da0-455c-839e-10c36133d771",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a53b174b-d94a-4235-a97a-48f358456053"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f133c9-e590-4b3e-bfc5-99b24c01d476",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "498c3a7b-9e2c-43d7-a9ca-5a18edab2b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07a679ab-a2ca-4cd2-b77b-0d8d7f8ae050",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb08422-da28-4411-b47a-0fd438b3c443",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2615019c-a988-41ed-986a-63ce59ebbd22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "171e36fe-613f-463b-b193-64b8138d7b20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c3d0cf0-d0cf-48fb-ae39-42ca19091268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db56c74-bc00-4aca-bcd7-bbf240a4b78e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22080639-b2ec-4da6-9243-cc37b0963be2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0921d395-f685-4c43-b732-4337df0fb424"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0050221-f980-4a4d-8f78-df46906e32d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e0d6bf1-e5f0-473d-adb8-31fae03b5942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc091bd-46d4-471f-8503-c1c89c3036e4",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b040233f-10c2-469f-bf11-b955262cb76f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b658552-7d1e-4fbd-bb02-3a48e48a3b9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "671ede0a-cfed-4e81-b42e-5b6ac746dd6e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccd42ad2-faa7-428a-9c84-12b153185221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efad69d3-8088-4768-8eda-1a6691338ab3",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9676145-bdd2-45a0-9df0-8696163a9537",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76b0ebb9-d776-44b1-9b68-2d22dc3b70e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64cc4735-cb47-4286-946b-5ece89374709",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6852b90d-31f8-4034-a05b-c2f336169d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dbe9544-7e1e-4821-9745-2cb2dc0b7cf4",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b13a639c-ce6e-444d-8c4b-1bc224434860",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e74ce40e-d708-48b6-a715-72c51900e778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6402d8ca-e68d-4d13-8d4b-ee9c380b4f21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e71bd019-7705-47cc-9a6d-db396ab7453e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce45efe-b90e-411f-b657-9985ef466a2d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e82fe38-37bd-4d4e-90fd-cd5e709be2f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d6f7b89-ecbe-400e-8d1b-c62db114b895"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b72cf3d6-7e06-4ca8-96e4-79136922949c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d31cf5d-d784-4c53-b5f7-7b11e166f1f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88666e10-a653-4ae1-b865-206933765602",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8622d5c5-00df-42c5-8532-7d4addc4ff10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b39ecd2c-0cc9-4a71-bce6-2c78c68fe0a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a65c0579-1a27-4a98-8aee-293e23b93dd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18168831-2b23-4450-8512-c451d3ee302a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3443bea7-d0f6-4665-b8b6-c582f8927179",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081df10e-83fa-4397-8f9d-b8e6d2081ab6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adb9f0ba-f145-444f-a9ef-e17a7ab017a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db9274dd-06db-4a62-a990-0959bfdea197",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d41ccff6-ee02-40e3-a333-37940030c1ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd65da39-67a5-46ca-97e2-cf2bb921a5da",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a57496b4-156c-407a-b472-a490f23c8320",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c150f2c-0b91-4ba3-91fa-9ca1812737c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "031829c6-97c5-4c4d-a456-b8911b936efe",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7ff086e-befe-4fda-8807-abd4199ded2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c7d1f5-ec6e-4c70-8064-4483db802926",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e3676b-03cd-46bd-8747-77ede21c0aa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45892b62-0370-4084-8342-1710707e956e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba9c1d2-7bea-4afb-81bd-0d5601de1a34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45f100ba-7828-4131-b74a-3250b654d308"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "46935290-cb9f-4087-ae53-2b3046e62944",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34969595-09dd-405c-b6b7-cf052b5165ae"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a90c9da6-945f-41f1-ad0e-7b11d92529a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "648238d2-69a1-44ab-936c-55b5b658f7f1"
                    }
                  }
                ]
              },
              {
                "id": "0816d117-be43-4d14-a701-e1d50e3e85e9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3f7018ce-263a-44cb-bada-7ddc0f0eb072",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a313e82-3457-432e-aa5d-d16424e65182",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "55ff9e14-4a8f-4916-923a-9510618cb616"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d7618b-4f13-49b8-a410-7a77402993d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aace5e39-9d87-4f5a-9893-e3c25e467abf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b8fbb491-6a7e-40f7-ae8c-2d24f615a991",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae4d57ef-4613-4a79-a337-d462f21f7f37"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed683a42-35e4-4497-b318-8f05d2c521f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4992c008-5c5d-47fc-a88c-7629f938641c"
                    }
                  }
                ]
              },
              {
                "id": "c98c8237-9aad-495c-8bf6-3a012ce71b88",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0d4d3e4c-f415-48ea-825d-90e29f60fe84",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "687bfd82-6ea3-4a61-a43f-1884aa7779e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "2abb96eb-86e8-48bb-ad64-1f6e25c0bd3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7241e0ea-de10-4c1b-b64c-05126599d2c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4664651-b590-4c84-a5f0-60160c24ef64"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ce98c592-a7aa-475c-a476-39bbf7e67528",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9525a443-6c9b-4917-9421-6cd4e7476633",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b29076f2-624a-4ca3-8936-6f04d58d0eb7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a83f528f-741f-4e65-904f-a88ded491b99"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6be76dd5-68f4-4030-adef-b9b3c261f4c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "535b3fb2-0198-4fad-b850-a13b752806b8"
                    }
                  }
                ]
              },
              {
                "id": "473f70c2-a04e-4c80-94e7-146eed67e4fc",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "97205ae2-6d5d-4f90-8a71-c910b4abfd83",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7141aa3c-abf0-4988-a26f-6b152afa6e4d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc785681-e482-4deb-a25e-ab99ac891dc1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d29c8e7-4941-4df2-bf3f-6e2dc402eb78"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3280c340-b6b4-4214-a984-809f810bfa7c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "aba89cc5-fdc3-4d85-9755-117246d4bf62"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6a69fecf-ed67-4195-94ce-a29cfcdcef23",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f8a5d3e1-09c5-45e7-a1fa-ce9951b755e9"
            }
          }
        ]
      },
      {
        "id": "985d1e8d-b765-4739-bdee-90eb487e8066",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "07b4fe30-38ef-49a5-929a-b2f310e148f5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "05cfbc90-4fac-4703-94a5-09b4c8e41364",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "429d56cc-d57a-4f75-9f17-285ae0be23c6",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e59927ab-9db6-4b9f-b3f2-f4d1bcdd38c8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "044f1e30-88df-4f0b-b351-c46d49f651f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35ba335-1d89-44ef-a82e-b53f23dab6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2898d519-f7c4-4400-8e49-27d7fd5279a9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4a26d79f-4d71-45d2-b575-08b96072d31d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b3aad5d8-f911-4a71-8cdb-9119fe5f9fcb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c7c16082-9457-4df7-9585-05fe5700bbbd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51a8dc33-5da6-487c-909a-354c993c76e6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6708566f-c151-407d-a78f-c2cd5c2464a7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "76cd6b84-7f90-4687-b79e-bc8cc1146059"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a47b9ee-0e73-40de-9407-848487687dca",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "049120d0-ff1e-4fa7-8e57-585843279c4e"
            }
          }
        ]
      },
      {
        "id": "f0321ac5-2368-4329-aa30-866bc6c96db8",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "897ab9f4-1d96-4b96-92cc-2f70e5b117ad",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4b8c491f-447e-4bd6-8dc6-dc299a66db81",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3959d02b-fe1d-4cbf-8c71-034ab93e225b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c90231-5043-4da6-a03a-eee6c36286ee",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bef627c0-5f66-4ccf-bad4-abb78d78006a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa51136b-3dce-495b-9291-c09aadf52188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e1427b2f-0b43-4251-8657-41f0a97b174e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e6dfc6a-d1b4-4729-b267-7b878257a9e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "39a77c13-9c62-4851-8517-a44eaf2cb2dd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "06238cae-1b5f-4e15-b607-f0f0c399719c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "15202b95-421d-406e-8308-898dedcd3724"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c29b78ef-746e-440d-81e2-56a8eccaaee8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "863ed148-643c-4c0a-a164-a607889a4ce7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "279ef82f-5f94-4dda-a25b-5a78ec6399eb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3b484a6b-3359-4bb5-ba00-81e34e9188fa"
            }
          }
        ]
      },
      {
        "id": "d8829410-aed8-43ce-9c0e-7ab91b68ae9c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "7cef0f46-1796-468e-8df2-9014a0e039f4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c288c2e6-3887-4255-a30d-70110be4cd7a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6d5fbdf6-7dc4-4aaa-9afe-61ef9e3b269a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29bb5ae3-120f-4701-a25b-f8a2b00d2d39",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a21cb148-1069-4893-b6bf-f3f3f4baf564"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c64c9b6c-7020-4bee-abe9-8e87625e690f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d92ced14-5c78-43a7-b2d3-82ce36ae4450"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a68671ab-1c89-4667-a79d-d6bf5f681133",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52c84d6d-57dc-49b3-a684-21770d118ccb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3a2bfc2-165d-4d4c-a12d-79014c830ddf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed5d6126-cbbc-4cad-97a1-9470871c548d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d106504e-660b-4476-a449-904de42b9f56",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9b656c4d-c379-4967-bbed-08ca4c3218f5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f4660ccc-5e94-4f10-9cc0-c4ff4c6092a5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1e67c929-3893-4087-ab5e-876479c41e4a"
            }
          }
        ]
      },
      {
        "id": "29c79c7d-3b1f-4058-8deb-b39508a3fa47",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ba9e96c-73b9-4e77-a99a-00f1213e8f78",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "161157dc-d529-4de8-9cd8-216fbd697b80",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d051b44c-818e-4036-8b18-700f34740c3b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dd8b4b63-be8d-41bf-8e48-02126a7b2c24",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1d712326-04b1-4691-b8c6-7e3c16483d8a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 6
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 474.366197183099,
      "responseMin": 10,
      "responseMax": 14252,
      "responseSd": 1744.7702277348044,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1697243543366,
      "completed": 1697243690362
    },
    "executions": [
      {
        "id": "d05939b9-76b4-4db0-ab78-3b5119f5d01e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8bc95253-d644-4799-aafe-4e2ecde36a23",
          "httpRequestId": "6e950c1d-73cb-48f8-afeb-f35affbec346"
        },
        "item": {
          "id": "d05939b9-76b4-4db0-ab78-3b5119f5d01e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6088f149-74ed-45a5-b9cd-e0aa839a5a22",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 0
        }
      },
      {
        "id": "28bf3ec9-8adf-499f-964c-bc68c2979e4c",
        "cursor": {
          "ref": "85f23e98-52fd-4a9d-963f-549d8a1cc175",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "4e01442f-55bb-4e34-b173-2929bfb1c972"
        },
        "item": {
          "id": "28bf3ec9-8adf-499f-964c-bc68c2979e4c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "de7a5bba-db0f-4bb3-a59b-3405d5c8770a",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "cef0d677-aa2d-43b4-b18c-2c6e176be7c6",
        "cursor": {
          "ref": "b1070c24-fa9c-4538-a1ce-00d4371447ea",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7b696db8-6ba3-4704-add0-5b32f6a18c14"
        },
        "item": {
          "id": "cef0d677-aa2d-43b4-b18c-2c6e176be7c6",
          "name": "did_json"
        },
        "response": {
          "id": "04f58656-1601-43cf-9d62-b5193e8a46dc",
          "status": "OK",
          "code": 200,
          "responseTime": 2780,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0afcbd-0a6d-47cf-9cb0-2993265405b1",
        "cursor": {
          "ref": "298ec88c-a7d7-4552-9193-3533ad67435b",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "66b58606-dafa-4bd3-80c8-726a6ddca33e"
        },
        "item": {
          "id": "1a0afcbd-0a6d-47cf-9cb0-2993265405b1",
          "name": "did:invalid"
        },
        "response": {
          "id": "eb79ce88-a3ad-4b92-9d58-d0859cb91bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2372,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0afcbd-0a6d-47cf-9cb0-2993265405b1",
        "cursor": {
          "ref": "298ec88c-a7d7-4552-9193-3533ad67435b",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "66b58606-dafa-4bd3-80c8-726a6ddca33e"
        },
        "item": {
          "id": "1a0afcbd-0a6d-47cf-9cb0-2993265405b1",
          "name": "did:invalid"
        },
        "response": {
          "id": "eb79ce88-a3ad-4b92-9d58-d0859cb91bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2372,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78dd6130-7f22-4df0-b05b-b6963b710958",
        "cursor": {
          "ref": "5f24465c-801b-42e4-adb2-0bc81eed70db",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7db9407c-daf4-4dcb-a51f-ba0410af90df"
        },
        "item": {
          "id": "78dd6130-7f22-4df0-b05b-b6963b710958",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fd428a38-c2f7-4752-8887-f3e5e7bfb778",
          "status": "Not Found",
          "code": 404,
          "responseTime": 336,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59bf0b5-8954-44e8-a760-452d6eb89c9c",
        "cursor": {
          "ref": "8ed94af9-6f7c-4b10-bee9-c1d2505d1797",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "aaeaf1fe-5f91-4585-ab10-9e371f91c464"
        },
        "item": {
          "id": "f59bf0b5-8954-44e8-a760-452d6eb89c9c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "35fba2fc-38af-486b-ba64-33c2153b6cb1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1875,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5c7c91-ddc7-4ffd-bb10-5f7fe0348e91",
        "cursor": {
          "ref": "f9f1dece-8bfc-442f-b303-e51b4223ab87",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "49e60a03-01d9-4ad0-b852-e906e7ddfcd4"
        },
        "item": {
          "id": "9e5c7c91-ddc7-4ffd-bb10-5f7fe0348e91",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "5a280e3d-c674-4a3e-8dfb-f00c86d448d1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec011164-d17f-42b9-8647-299d7aaf9de2",
        "cursor": {
          "ref": "923c10a1-d409-42fe-afe4-190c495925b7",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "87fef8cb-0895-4812-a143-20b22f005bb3"
        },
        "item": {
          "id": "ec011164-d17f-42b9-8647-299d7aaf9de2",
          "name": "identifiers"
        },
        "response": {
          "id": "f20bd187-e178-41bc-880d-590fb1cc964e",
          "status": "OK",
          "code": 200,
          "responseTime": 1631,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f1b37c-0936-494f-86a8-5aa6a6352058",
        "cursor": {
          "ref": "6341abd3-d8cc-4097-9e3e-bcaeed0a5248",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "def6c147-20f3-440f-b335-8890b19268bb"
        },
        "item": {
          "id": "91f1b37c-0936-494f-86a8-5aa6a6352058",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "30ae9fb9-2929-433f-b211-1ebbe3a22296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f1acdb-6f6a-416d-9532-1c833d48a1d9",
        "cursor": {
          "ref": "60c5e52b-9436-41b8-92cf-b4569baadfca",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "cc69d549-adb2-409f-bba1-90590bdf5b0a"
        },
        "item": {
          "id": "54f1acdb-6f6a-416d-9532-1c833d48a1d9",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "22578c99-06aa-43b5-bb75-cf5bd2ecf570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "437736b7-e352-47ee-8096-5cfc5b9c888a",
        "cursor": {
          "ref": "4d4c13b8-33ae-42fc-8891-f2a80ae552a5",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e975fc4b-86a1-4f86-a6e4-d2cb02cd13aa"
        },
        "item": {
          "id": "437736b7-e352-47ee-8096-5cfc5b9c888a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "83efe481-99f1-4bcc-b014-de6d35bc5ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbd9c81f-0cd5-4bd1-8eed-3eae14cd2ec4",
        "cursor": {
          "ref": "f4340ee9-036d-4588-8eb0-824d731adb06",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1e9bae3e-1664-470f-bcb7-5e9a8ac07f4f"
        },
        "item": {
          "id": "dbd9c81f-0cd5-4bd1-8eed-3eae14cd2ec4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "84136461-c113-4bbd-a0c9-8bcb8c038dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a222ef8-4f4d-401c-a34c-8b256c651c24",
        "cursor": {
          "ref": "d76f5d5c-15a2-4692-bafb-8782c4654308",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5e166972-e478-41b0-93b7-8cd2ef90fc71"
        },
        "item": {
          "id": "1a222ef8-4f4d-401c-a34c-8b256c651c24",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "07f93cfd-fab1-4897-ae45-67302cca7814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "019d078d-bd98-4a21-8ce1-1e1a562739fa",
        "cursor": {
          "ref": "d812ec95-26b5-4080-bcc4-0f20532df4af",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "74c92900-7557-41f5-8822-14e1ed7da3c6"
        },
        "item": {
          "id": "019d078d-bd98-4a21-8ce1-1e1a562739fa",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d2e3199f-7f89-4a40-9e03-2d526b5fece7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a5d500-1a7d-455f-9d7e-ec806b47e5d6",
        "cursor": {
          "ref": "3fa850bc-fdff-41ff-8e9b-cf1b92a73804",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ee199d42-3969-4b25-91ac-8bc482fc260d"
        },
        "item": {
          "id": "69a5d500-1a7d-455f-9d7e-ec806b47e5d6",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a85d8602-5c95-40be-bd12-00efdaf2901b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df03ee82-a51a-463e-9281-fe981256562e",
        "cursor": {
          "ref": "2c293322-6f6c-49e8-8d19-5fbfd9493f05",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "3a324aed-5c3e-4510-8de0-87ebe04962fb"
        },
        "item": {
          "id": "df03ee82-a51a-463e-9281-fe981256562e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "7f7d4d83-542c-4d80-80d5-ebb4a44a4cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f7b520c-7145-45af-8bf5-6c356029c8f8",
        "cursor": {
          "ref": "ca42f31d-8a7b-461b-a53b-c031a2a52733",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5abad4e9-8804-42f3-bd16-7709c3c88c46"
        },
        "item": {
          "id": "9f7b520c-7145-45af-8bf5-6c356029c8f8",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "516157e8-2215-4a87-b98b-528db89cc750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1834bec-8179-4e7e-ad46-c444022fad77",
        "cursor": {
          "ref": "f2f29afd-a084-4f62-a9c8-5e005296b359",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "e9d8f948-aba6-4d82-8580-63023ee76f89"
        },
        "item": {
          "id": "e1834bec-8179-4e7e-ad46-c444022fad77",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "2b56805a-d28d-4727-b29b-b2598f74b2f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83be4e48-9d6b-49e2-b278-d9f5408c9fbe",
        "cursor": {
          "ref": "53a4f229-a102-424f-a527-eccbb58a70c7",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "6c4e6346-fdde-43d5-a475-b1e9500da6ef"
        },
        "item": {
          "id": "83be4e48-9d6b-49e2-b278-d9f5408c9fbe",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "66a7b460-fce7-499b-a580-79ad81fb71b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "292c5c52-a49d-4527-8253-1d0280ce82fe",
        "cursor": {
          "ref": "a7000377-4e8f-420c-bb50-64c758b11b63",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "12d08359-a11c-4dfc-9112-381a596c214c"
        },
        "item": {
          "id": "292c5c52-a49d-4527-8253-1d0280ce82fe",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "daf103d6-1acf-4fd1-9560-1a4e82929551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "877289a9-7c8e-4582-8f79-0038b38a7fab",
        "cursor": {
          "ref": "c0711824-1c98-4eb8-b6be-e3aa7eeb09e2",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "88930d1a-c5ff-47bc-81f9-39306f4489c2"
        },
        "item": {
          "id": "877289a9-7c8e-4582-8f79-0038b38a7fab",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7b264e3a-b47b-4c69-8213-3285034b7e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c1e725c-91d6-444c-9e12-b6301ba676cd",
        "cursor": {
          "ref": "c32fdc22-8933-4691-8f92-ac6335b68b0c",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "fbecbd59-b4d8-4ea5-9a7d-48f9123c14cd"
        },
        "item": {
          "id": "4c1e725c-91d6-444c-9e12-b6301ba676cd",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9d928d7c-2521-4ca9-88f7-a6fa47a3f962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98dddf31-4bbd-4750-ac77-28e9025c3718",
        "cursor": {
          "ref": "9222ee64-7792-421c-990d-f3df1a498293",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "55850429-ffd4-4ea5-9609-74b452b5bf1e"
        },
        "item": {
          "id": "98dddf31-4bbd-4750-ac77-28e9025c3718",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a603aee2-34b8-4442-bbcf-022ffccac5e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a5663a-ee75-4781-a091-d0ed114e1771",
        "cursor": {
          "ref": "48813e2b-ec38-46d6-9794-cc1818f0b008",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7d671783-971c-4f6d-b97c-ea17b3254a23"
        },
        "item": {
          "id": "29a5663a-ee75-4781-a091-d0ed114e1771",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "6233c002-9a69-4047-809a-d935fa68ac69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc4d907-37e2-450d-a654-33482489fc06",
        "cursor": {
          "ref": "71422789-25d9-4cc2-bdc7-5b1b2d1cbc3b",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "358d99f7-ee6a-4f70-a8ac-6f226c435516"
        },
        "item": {
          "id": "0cc4d907-37e2-450d-a654-33482489fc06",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "741f113e-33b5-4ee8-afa3-face44a55165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0061f0c0-ff8a-4070-a51a-84b46c960f1b",
        "cursor": {
          "ref": "85e6879f-af93-4935-9c62-2c96c532e81c",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "84d7c792-32ff-4bca-a2ac-d0a2b445d020"
        },
        "item": {
          "id": "0061f0c0-ff8a-4070-a51a-84b46c960f1b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "72fa98b1-827c-4a79-8711-2839a5b44e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "468d9f79-25dc-47c7-a5ff-91a276c6f9f5",
        "cursor": {
          "ref": "319d21f8-e8ee-4157-a339-4b098bf66aed",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "0f6598ed-a08b-4be8-b560-861065814d82"
        },
        "item": {
          "id": "468d9f79-25dc-47c7-a5ff-91a276c6f9f5",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "54c5d331-d7ef-463f-97c6-06877f1d70ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ffa4479-fb37-439c-b5f7-3141d578a253",
        "cursor": {
          "ref": "a9d866f7-946f-43f5-9ee0-6571a7006c09",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "75f55ccc-0ea1-4e2d-971e-c86bdfe09d39"
        },
        "item": {
          "id": "0ffa4479-fb37-439c-b5f7-3141d578a253",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "fc31f9e5-af80-4711-8c8a-66cf6e986dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9010dcd-caf6-4d2f-b9a6-309298a336fe",
        "cursor": {
          "ref": "1947ada2-b071-4b9b-b880-cb0abd94a2b7",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4da70265-b8f6-4ccd-9347-b0d6e455972e"
        },
        "item": {
          "id": "b9010dcd-caf6-4d2f-b9a6-309298a336fe",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6e330310-d77d-4e45-ac27-564aaccb3b11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256a27da-f355-4825-95ad-5ab2497772df",
        "cursor": {
          "ref": "cbf85e93-6387-4d59-9d09-304d330c2cf1",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5c3ce688-caa3-4e25-acd4-28c32236f965"
        },
        "item": {
          "id": "256a27da-f355-4825-95ad-5ab2497772df",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "fd64d1e9-8d4c-4df5-a63a-f87e62d4a6e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c9c27ac-b235-4c57-a76b-1eebec4a90b4",
        "cursor": {
          "ref": "c41da989-ef4f-47c0-beda-9af383c8a7b5",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "90d1de3c-3211-430f-a28a-ede27b381e5c"
        },
        "item": {
          "id": "0c9c27ac-b235-4c57-a76b-1eebec4a90b4",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4c85bad5-9014-47f5-955e-a7203e148406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5a6531-dfd7-4311-b727-3c4422665646",
        "cursor": {
          "ref": "0b323413-0ed0-45a7-a482-4e9ea159e770",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "abd7ccda-6643-47d6-a825-bef33c766348"
        },
        "item": {
          "id": "ba5a6531-dfd7-4311-b727-3c4422665646",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "596fcf93-d9eb-41dc-a483-928d385ff8bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a1a907-f8bb-4d95-a33d-5b467ebbad64",
        "cursor": {
          "ref": "1c561c79-064e-40f8-896a-0094d8ef1c18",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "30a294e8-9897-4d1b-860b-386517fb0446"
        },
        "item": {
          "id": "54a1a907-f8bb-4d95-a33d-5b467ebbad64",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "294a0eb1-2595-4af5-97fd-606a2d28afcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd73a72-6c96-4094-b56a-68e2df474d12",
        "cursor": {
          "ref": "fa1513e5-f6d7-465b-8ee0-0042ac028b28",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3216d7e8-09c5-4219-986d-d6f7b249098c"
        },
        "item": {
          "id": "7dd73a72-6c96-4094-b56a-68e2df474d12",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "998c9f86-01fb-4098-b5b2-b3c5ea7b601e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f165edac-740d-4502-9ee0-6888a422e882",
        "cursor": {
          "ref": "6ed49b85-fb32-4843-93ba-58c3cb60221a",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ac9dc962-fe49-4589-8867-79de223af3ef"
        },
        "item": {
          "id": "f165edac-740d-4502-9ee0-6888a422e882",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "23b90184-446c-400c-bd70-26f83f48b26f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6835b43f-24a6-4bfb-bb57-5751f948bf97",
        "cursor": {
          "ref": "e30405ff-b51e-4325-9d59-96342d0804fd",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5843f01c-08e2-4296-9cec-fa10d675f69e"
        },
        "item": {
          "id": "6835b43f-24a6-4bfb-bb57-5751f948bf97",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ad4e356a-a84a-4272-826f-d2b04bafd8f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4fbc03-ebba-4e90-ab60-02b006ac3cc5",
        "cursor": {
          "ref": "4dae7a56-f270-4663-a6c6-c4c2eb869fd2",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7c0adbea-8b47-470d-8bf4-cd671b27be3d"
        },
        "item": {
          "id": "7e4fbc03-ebba-4e90-ab60-02b006ac3cc5",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "451e1084-4c7b-488f-87ef-5617cfd4a5d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac1b826-6d53-4a73-a0f5-079e88db0245",
        "cursor": {
          "ref": "523598ce-e286-401f-9003-a0d0fa173d09",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "618c22b0-2bbc-4262-8a8c-c42ca30dc1a4"
        },
        "item": {
          "id": "fac1b826-6d53-4a73-a0f5-079e88db0245",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a3955d36-b87b-47d4-9425-75a4bb02b015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "138089db-a9c5-4d2c-a6ca-07bf7acec8f9",
        "cursor": {
          "ref": "f6ffa477-3902-4719-bba7-317a28f7ee0c",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "69bad7f3-555b-4a65-a698-b2f6574c569e"
        },
        "item": {
          "id": "138089db-a9c5-4d2c-a6ca-07bf7acec8f9",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5e3aacd8-5e1a-4b7c-a1ed-2b10b5550675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8363a1ec-4264-4edb-ab17-e05a3a469e9e",
        "cursor": {
          "ref": "b3f1f3b8-4dbb-4179-acc0-607572aea240",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7e7d2161-a466-489b-99e0-2c30830ff808"
        },
        "item": {
          "id": "8363a1ec-4264-4edb-ab17-e05a3a469e9e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a2715f6a-980d-4079-baf2-b5a40c996edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db8e1e8-2144-4058-b1a0-00ff6ff336d5",
        "cursor": {
          "ref": "ef88787d-66d7-41e1-8ea5-bd8466a4d6d9",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "45251935-6a3f-412b-b74e-74c0582bfa9a"
        },
        "item": {
          "id": "7db8e1e8-2144-4058-b1a0-00ff6ff336d5",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e1c3f934-f929-45a6-aed8-ae490636bbca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e310de8a-ff02-4383-8c03-bf0813746959",
        "cursor": {
          "ref": "46ab3336-9bc0-460b-ad78-f0a65200bf15",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a38869d2-671d-410e-883c-9068961ca022"
        },
        "item": {
          "id": "e310de8a-ff02-4383-8c03-bf0813746959",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "58d59eac-9cc6-41bd-9af7-50e7256e17a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da19de9-11e7-474e-af3f-007d3b71c920",
        "cursor": {
          "ref": "3df0d8c0-f29a-4c06-9038-60bcde27415e",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5e484180-ea31-4a8f-8baa-0076ba3bcc21"
        },
        "item": {
          "id": "8da19de9-11e7-474e-af3f-007d3b71c920",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "19a5df13-8439-49ab-acdd-829b6abcaeff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d221e9bf-dc5e-493f-a111-40533c6c446c",
        "cursor": {
          "ref": "98f61b09-7c16-4c46-8433-0b456bb76d0d",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c93d556f-b8bf-456e-9f52-4579ca530f0d"
        },
        "item": {
          "id": "d221e9bf-dc5e-493f-a111-40533c6c446c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "13e3787a-1175-4cc1-93ce-7da51b35b75f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 2817,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ddacc0-7a14-46b6-9866-3bb4064a19d9",
        "cursor": {
          "ref": "a7234e0e-d515-48ec-bb7e-fdecbdde9359",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f60dd379-feae-4f7b-a01d-44b40d163eaa"
        },
        "item": {
          "id": "a2ddacc0-7a14-46b6-9866-3bb4064a19d9",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "70c4ddf6-69b8-48b3-8e20-ee44cb9142d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd6ad948-9997-4f4f-a3e3-430a89a6c7bb",
        "cursor": {
          "ref": "ebb9b9cd-6459-4890-90f6-f7fd78f3ce00",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c71566fc-5f62-4529-a0d7-5231fce3d63a"
        },
        "item": {
          "id": "cd6ad948-9997-4f4f-a3e3-430a89a6c7bb",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "50bedd1e-9277-4fe7-95a0-2c189ab85eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aca6ff8-e0c0-4742-ab95-381753e6bb23",
        "cursor": {
          "ref": "fa0689bc-2c26-447d-8c40-64118aac2a38",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e044267b-7891-4cc6-9b85-c56eb26f6473"
        },
        "item": {
          "id": "3aca6ff8-e0c0-4742-ab95-381753e6bb23",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f9476bde-0011-4b85-8415-915986532be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e8decda-5c8d-4d42-8060-5bf279ec4aac",
        "cursor": {
          "ref": "18409683-b87a-44a1-9b1d-2980fd09c7ec",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "083afa25-7298-4101-97ee-ab81fa785047"
        },
        "item": {
          "id": "7e8decda-5c8d-4d42-8060-5bf279ec4aac",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "13af099c-7e29-4f75-ac6c-3e168b492cdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ba1e5d-754a-4297-a999-ae1c5a57c349",
        "cursor": {
          "ref": "dba5ff65-572f-47c9-9f44-32bdf5b2c30d",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "fde51eb2-8aa0-4733-9730-e38f10a7992f"
        },
        "item": {
          "id": "70ba1e5d-754a-4297-a999-ae1c5a57c349",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "258e671e-703b-4603-b88e-931ed8d3d9fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931ecc5d-3e4f-4e79-a9d0-67f95cad2d27",
        "cursor": {
          "ref": "47885a19-5bb5-4ce5-bf47-fba99b5a5e5b",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a741ee82-22e7-445e-b3c8-4f95dade2de2"
        },
        "item": {
          "id": "931ecc5d-3e4f-4e79-a9d0-67f95cad2d27",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "10c257af-033c-43e5-b7d4-236a4328a90d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3599a1e5-56da-4e62-8bb1-b63567c6f2e9",
        "cursor": {
          "ref": "c651c18c-44ce-40a1-b0fa-5f4376e1a396",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "85d20632-2598-4996-9d56-e209a5d63954"
        },
        "item": {
          "id": "3599a1e5-56da-4e62-8bb1-b63567c6f2e9",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6a1b3ffd-f87b-44e1-9a21-4bbd7d530f5d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 2871,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6411f77d-5bb0-4495-842c-672dca5181a1",
        "cursor": {
          "ref": "28bc6fa1-7704-4194-a832-5b402796ede1",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4c49d559-60f0-4ca2-aa44-8331a56a7e2d"
        },
        "item": {
          "id": "6411f77d-5bb0-4495-842c-672dca5181a1",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "8ac984d0-3843-4eae-b9ec-5f5980276d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083af324-9364-47ad-82b7-1342643b552f",
        "cursor": {
          "ref": "bde09cc8-16a2-45a2-8e80-0ecce43dfd06",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "72d5600b-8b2d-4afa-a8e0-259cefb00a96"
        },
        "item": {
          "id": "083af324-9364-47ad-82b7-1342643b552f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "522bf6ed-649b-4cda-813c-aec514930d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ebdaab8-647e-46d9-86ef-d7f4b274f3cb",
        "cursor": {
          "ref": "dce6040a-80f3-4d3a-b1ab-9fef3ff90caa",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b85c9b82-c166-4ab1-905a-64f5796ec20f"
        },
        "item": {
          "id": "4ebdaab8-647e-46d9-86ef-d7f4b274f3cb",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e67068c3-2b4a-4587-b360-cb4c62a255c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "488bcdc5-8bc1-464b-827a-1a1a808b4c14",
        "cursor": {
          "ref": "3bf085d2-0093-44a2-ad7d-0b28bc5ce767",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c761f9ef-7e41-41cf-9944-a0348c811c5c"
        },
        "item": {
          "id": "488bcdc5-8bc1-464b-827a-1a1a808b4c14",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0f37c6b4-cbe1-4faa-8f49-544475c85b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17dac911-52f6-46ad-91f8-104983c1f980",
        "cursor": {
          "ref": "fcbd8ec6-2829-4bd3-b9d1-d896032f9415",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c90b6cba-d458-45d6-92f6-6e9a3f2558bf"
        },
        "item": {
          "id": "17dac911-52f6-46ad-91f8-104983c1f980",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e9f74306-9381-40c3-9ade-ea58199cf542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8bc3070-aa8d-4fc8-a148-0ee6b038ae55",
        "cursor": {
          "ref": "7d3de769-0229-4e05-8fc5-0eaa71ce1e44",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "bf705802-d873-48e5-a9bb-6b3d99ab0392"
        },
        "item": {
          "id": "d8bc3070-aa8d-4fc8-a148-0ee6b038ae55",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b12d54cf-fdac-467e-8903-33eb4c1c110c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb6566d-36bd-41de-9d6f-1619cc55da86",
        "cursor": {
          "ref": "ea86dbb8-c4a3-410f-a5c6-5266f17d7321",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3ee714b2-4248-4064-9c46-c98c75e1533b"
        },
        "item": {
          "id": "1eb6566d-36bd-41de-9d6f-1619cc55da86",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ba3495b3-cc1a-4f74-9dc2-395cc455ade5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d744b61-90a8-4d6f-bf3e-1926f81cc24d",
        "cursor": {
          "ref": "8f2f1539-b252-4c04-8a47-d06e407367eb",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f5d9b3d1-aab7-468f-94c6-f5995cbeccf8"
        },
        "item": {
          "id": "1d744b61-90a8-4d6f-bf3e-1926f81cc24d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6869156c-f611-4a72-8eb5-2fb6393c058b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e37cf942-97e8-4629-8a6a-b43f2d7a622f",
        "cursor": {
          "ref": "df302f5e-bfbc-4286-8e64-61d5b5f0a20f",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b27d804e-8b15-4679-893c-9b6538e0d3f3"
        },
        "item": {
          "id": "e37cf942-97e8-4629-8a6a-b43f2d7a622f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "34badf88-51de-4edf-8e4f-e1139f415ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931ae199-e309-43f1-acf8-9cf604b4d2a7",
        "cursor": {
          "ref": "207fc42f-43b8-4036-8650-9b1666e0ad17",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e5704038-9de0-4ae4-b02b-9e626796b926"
        },
        "item": {
          "id": "931ae199-e309-43f1-acf8-9cf604b4d2a7",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3879185d-5340-4c6e-9a54-18a7765ed864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "286d6f1e-a808-41ff-ae83-1bce82467d85",
        "cursor": {
          "ref": "94b782e0-6f11-44a9-8b51-5839deb0ce66",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "741bc250-b557-4857-8888-dbdf225f10da"
        },
        "item": {
          "id": "286d6f1e-a808-41ff-ae83-1bce82467d85",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6c450217-54d0-4a4e-8073-ee3d285496c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0150c41-34b6-404b-964c-8f9ae45227d9",
        "cursor": {
          "ref": "07d2d4b4-9fb4-4785-92e6-c3244dd7d4ea",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6051fec7-b5fe-4a66-9bf8-54111824358f"
        },
        "item": {
          "id": "f0150c41-34b6-404b-964c-8f9ae45227d9",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d1171259-bb77-4496-9889-b69438bc48b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8ef1e8-c85e-495e-93a6-1cbefbde89b5",
        "cursor": {
          "ref": "d220a6ab-630a-4c0e-8758-5850e1ebceac",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "42dc6c38-a925-4af2-9593-9dc5bd096160"
        },
        "item": {
          "id": "9c8ef1e8-c85e-495e-93a6-1cbefbde89b5",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "91a07406-f8bf-4db3-a040-5d3efb208add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "889d2113-a003-4c70-8d79-ffafc7988326",
        "cursor": {
          "ref": "b62f334f-d8d5-4255-a199-dd84dbb612e6",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "af306702-ced4-4d36-ac29-d9daf48e3b8f"
        },
        "item": {
          "id": "889d2113-a003-4c70-8d79-ffafc7988326",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "31b101c6-f130-4791-ad64-b8fdeef5dc03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2924d479-a05d-4599-8eb3-e6a60c909063",
        "cursor": {
          "ref": "e95d210e-c124-4cf1-b688-0622e2bce78f",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "326cc886-3141-4944-915c-b506a44a7604"
        },
        "item": {
          "id": "2924d479-a05d-4599-8eb3-e6a60c909063",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "4d1aca69-e566-4944-86b3-094a1d62cbab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f6f472-5660-496d-a75f-e76ce1f4d07a",
        "cursor": {
          "ref": "415d03ab-3046-4560-859a-62c42716960f",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "7dabe38a-0870-4547-a6cf-1372d973c0d6"
        },
        "item": {
          "id": "08f6f472-5660-496d-a75f-e76ce1f4d07a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c3498f8b-ebb4-4a38-99f2-66e3295c21e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a08b1dac-fde8-4a76-8813-5eca56af2d08",
        "cursor": {
          "ref": "12c355e1-26c0-458e-bd41-7fce32234d11",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6ac81033-ef5a-4af3-b813-f62bfc8c0086"
        },
        "item": {
          "id": "a08b1dac-fde8-4a76-8813-5eca56af2d08",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4b5a383b-6161-419b-81a6-c3782232e9d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08426f8c-8b25-4368-a764-38cff01990ff",
        "cursor": {
          "ref": "5feae004-a5db-4ad6-8726-75dab338aa43",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "bee30899-b21e-4059-8d81-7f08994da4fd"
        },
        "item": {
          "id": "08426f8c-8b25-4368-a764-38cff01990ff",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "f3c5cfe0-0653-4ecc-b692-1968f1d32a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14af3ef9-1019-4923-9c57-1222bba058cd",
        "cursor": {
          "ref": "b9971b02-14d2-4980-b00d-4616f4a4f833",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e21cd977-0843-4133-a2a4-fdb0ae00c084"
        },
        "item": {
          "id": "14af3ef9-1019-4923-9c57-1222bba058cd",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "755c11a8-421f-43e8-a55e-80f2ae95eda3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca8c98b-316c-4c21-bb8a-e720beb9d0fe",
        "cursor": {
          "ref": "166b5590-d89d-46de-8731-eac6e63831c0",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9e1d0854-fc43-46bf-8e49-4878bb5db06e"
        },
        "item": {
          "id": "6ca8c98b-316c-4c21-bb8a-e720beb9d0fe",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d000e437-a9aa-4a9d-82ad-3c7c5a4332b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629119f4-5462-42bf-9930-2927bf8aeb18",
        "cursor": {
          "ref": "7641c74b-abda-4c1c-9d73-93038078ef25",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "26f8af9a-09d8-4613-913d-86a99381d537"
        },
        "item": {
          "id": "629119f4-5462-42bf-9930-2927bf8aeb18",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "8a10904e-49f6-4436-bcc8-4ae1a74fdd87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e6f71dd-5dbd-4a75-a4e6-2637a9bff7bb",
        "cursor": {
          "ref": "9d83d973-25b1-4a7e-802f-93e7bd62c962",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6b4a40da-867c-49f2-9aed-cf7b4cce6406"
        },
        "item": {
          "id": "0e6f71dd-5dbd-4a75-a4e6-2637a9bff7bb",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ae5f4dc5-ae7a-4e91-9dfe-04a2bef6513c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6360af7a-3f51-4832-9d64-ed5d17e98363",
        "cursor": {
          "ref": "d16135c1-f9b1-43f1-87f7-3ad58608fb33",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "041c6473-f1a1-4572-af45-b7cff1173238"
        },
        "item": {
          "id": "6360af7a-3f51-4832-9d64-ed5d17e98363",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "cfb6ee8b-4154-41aa-bfb6-338c11009cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dbb37fa-159c-487d-b8ec-0cda2d8c1b9a",
        "cursor": {
          "ref": "35793763-6431-4acd-b418-d002528ec2a6",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "29e936c9-d827-488b-8102-fa7cd9c33bc5"
        },
        "item": {
          "id": "2dbb37fa-159c-487d-b8ec-0cda2d8c1b9a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "482edc55-3039-41fe-a4ca-e46b51844ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "917a7040-ab80-4f0c-b7ab-f6f178ba05f0",
        "cursor": {
          "ref": "3ed4c515-8009-4cd3-beef-bd3d66198467",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "df5a52aa-6c32-49c1-ac05-dfd544b42dbb"
        },
        "item": {
          "id": "917a7040-ab80-4f0c-b7ab-f6f178ba05f0",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "cc41e343-f974-471f-b1e1-912912b33903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92926602-7791-4352-a782-e8c3daa97b34",
        "cursor": {
          "ref": "5e2d581f-1516-496c-bb25-513430c88179",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "71e33dac-2078-402f-9a36-2f3dec334a8c"
        },
        "item": {
          "id": "92926602-7791-4352-a782-e8c3daa97b34",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "6e6b9e3a-8cc3-4fc0-aa21-422d8af5822d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2163233-cfd2-454c-82a1-70a5fffac4b8",
        "cursor": {
          "ref": "2ebd470f-ee29-4f7c-a8fd-77af5d7b2ac3",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b58ddbb8-bf23-40bb-89a1-159682536e1b"
        },
        "item": {
          "id": "e2163233-cfd2-454c-82a1-70a5fffac4b8",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d5ac33bb-145e-41d1-a801-2265d77895d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627a7872-11da-42e2-83c0-3f8e1bd43642",
        "cursor": {
          "ref": "af8141df-8e95-479c-a5be-6a868d6b053c",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5b8f1d8d-541e-4f31-82d7-2334f88605d0"
        },
        "item": {
          "id": "627a7872-11da-42e2-83c0-3f8e1bd43642",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9cbdf357-87a6-44fe-ab41-35da8328f774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f6caef4-854e-431e-b6ad-f8eec2d64eaf",
        "cursor": {
          "ref": "032615ac-9708-448d-b367-2b48795107bf",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "55916825-04b9-4a6a-8c11-f215348327a2"
        },
        "item": {
          "id": "9f6caef4-854e-431e-b6ad-f8eec2d64eaf",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1587720c-cc1c-4a1d-afe6-1d7ceeceeb49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e202f15-2404-4a26-b938-e6f217aafe1c",
        "cursor": {
          "ref": "8046af65-731b-46ac-815e-cdabd5ef7b16",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "193456aa-7f15-4296-bce0-58ab5ac19b6d"
        },
        "item": {
          "id": "8e202f15-2404-4a26-b938-e6f217aafe1c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ed83b64b-b605-40e7-9464-de1084a61218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbefbf99-b0fe-4e9a-b2ed-8f6932690e7b",
        "cursor": {
          "ref": "f1aecea9-1146-49d4-b894-3c509654e656",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d5e592e5-0ac6-4266-816a-8bde1a0dff54"
        },
        "item": {
          "id": "cbefbf99-b0fe-4e9a-b2ed-8f6932690e7b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b4014825-d119-45fc-8676-0cf70c33ba04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db20b338-cfce-41a5-b0a9-aa83a1719434",
        "cursor": {
          "ref": "a67d214c-390c-4e1a-bce2-5754afe74376",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "09ae5271-545e-4440-8458-4dedad0a6e4f"
        },
        "item": {
          "id": "db20b338-cfce-41a5-b0a9-aa83a1719434",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "8b1eadbf-1e12-4c19-afa5-8944a44af86d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b601449c-f701-4d9a-8a7f-0d055aa10da2",
        "cursor": {
          "ref": "02e89252-403d-44d5-91b1-ddeab323586e",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d756149b-2491-4453-b0ce-e3258be753dc"
        },
        "item": {
          "id": "b601449c-f701-4d9a-8a7f-0d055aa10da2",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "bab8632a-9df6-48dd-97af-4490b89a6a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a09990-a3fe-4d29-8b74-981d40f8381d",
        "cursor": {
          "ref": "ce0071d5-15c2-4a03-8be8-6ebdd0681f25",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "12d02ca8-d7e7-4a4d-9afe-db86fc1056de"
        },
        "item": {
          "id": "45a09990-a3fe-4d29-8b74-981d40f8381d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2bbab50b-2dfc-496e-a9fe-b409587fe8da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e6f10a-2b1a-4ff7-a5f3-60641e11109a",
        "cursor": {
          "ref": "d2797e67-5138-42b0-8732-295ff7d80070",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "09767ff4-6e3f-4c8b-bc1d-8889e10f3c00"
        },
        "item": {
          "id": "17e6f10a-2b1a-4ff7-a5f3-60641e11109a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b1f9aab6-9170-4768-a35f-4ade1fdbc046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b59dbdf6-1821-43e6-807a-f8e2265f7098",
        "cursor": {
          "ref": "1747afc4-f59c-402e-94ee-401a224bd06e",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a23f69b8-507a-47e3-9ac6-3246d6108398"
        },
        "item": {
          "id": "b59dbdf6-1821-43e6-807a-f8e2265f7098",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "689060f3-e96e-49f1-afa1-f4e6666dcea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d2f1a6-af23-42d7-a4c6-49100109e614",
        "cursor": {
          "ref": "af8ed396-fb05-4abe-a295-d2f79a519332",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "9f1ec650-ffc3-40ea-9aba-2c4822f3a600"
        },
        "item": {
          "id": "b0d2f1a6-af23-42d7-a4c6-49100109e614",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "7d52d702-c074-46db-a6ed-18fb6f6942d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab45cd91-371c-4559-85b0-5a91b14c198f",
        "cursor": {
          "ref": "319189bd-fb81-4946-8c1b-a622a626594c",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "25c2dd00-c78f-43d5-8604-0ba1443fff2b"
        },
        "item": {
          "id": "ab45cd91-371c-4559-85b0-5a91b14c198f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3267198e-e0a5-46fc-bc8d-cedddc097b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa4d0a04-6215-4d48-a86b-c61317566b4b",
        "cursor": {
          "ref": "52ebbcbe-a707-497b-9122-a94928e9d602",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "593cc3ed-70c8-4f87-a736-861d72b6c012"
        },
        "item": {
          "id": "fa4d0a04-6215-4d48-a86b-c61317566b4b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "264f767b-a45d-4837-b87b-77113d95d970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772bcd3f-b792-4f28-9f68-4a130f8db70f",
        "cursor": {
          "ref": "66886b57-8333-491d-a81c-26d1ba1feccd",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a2641597-32e6-4773-8d41-2b288d0fcb19"
        },
        "item": {
          "id": "772bcd3f-b792-4f28-9f68-4a130f8db70f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "59ae22f5-e36b-45e4-8065-1c2cd0ccafca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc3705f-1111-4efa-b0cf-a02e76e49ab6",
        "cursor": {
          "ref": "9e06e62c-d03b-4dc7-be6f-6cdfcb696147",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5df3d286-86ba-41f5-831a-e9aecdb4ada6"
        },
        "item": {
          "id": "cfc3705f-1111-4efa-b0cf-a02e76e49ab6",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1405e6ab-5111-4cfa-950b-09cc184cc161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fad1b72-2cc4-480a-b2c9-472fffc47b16",
        "cursor": {
          "ref": "423d6d28-98c6-4770-acfe-4fccef15dde1",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c5be9d7d-fba5-4553-bce3-69a59ca9572f"
        },
        "item": {
          "id": "4fad1b72-2cc4-480a-b2c9-472fffc47b16",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4883c541-6c70-4c01-b12f-a2268fcb1c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b7c4536-4782-41bf-9a44-2f8cd7e67f25",
        "cursor": {
          "ref": "7c2409fb-9abb-4bd8-8779-956f21a08fd7",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "49cf86c8-a930-42e6-be39-f09b55540ab7"
        },
        "item": {
          "id": "5b7c4536-4782-41bf-9a44-2f8cd7e67f25",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "9d3d054f-9d0d-4bcb-bec6-cc7989721b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a195d092-d2f0-4e95-8620-24564d76a7f8",
        "cursor": {
          "ref": "c90415b5-133f-449a-a5b7-29beec16a791",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "774fd845-aead-4f7b-8c6a-f11c4a9b2254"
        },
        "item": {
          "id": "a195d092-d2f0-4e95-8620-24564d76a7f8",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d0245e97-b2a6-4978-b8d5-0b9e9f2738e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eec3862-3e5b-4491-8bfe-c6953f35b367",
        "cursor": {
          "ref": "4a8d8f62-5e76-4c96-856d-a64b4dc29109",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "813efcdc-9826-49e1-b0c9-ca4d529c4cb4"
        },
        "item": {
          "id": "0eec3862-3e5b-4491-8bfe-c6953f35b367",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0eb79634-3983-48d3-af32-4202ee1952dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d62567-5ae2-47ef-9194-ce36406f0af1",
        "cursor": {
          "ref": "d132fc72-2715-48bf-8e23-faacf6a91b75",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "adb43ba7-084a-4971-96c1-3962a76994fa"
        },
        "item": {
          "id": "16d62567-5ae2-47ef-9194-ce36406f0af1",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ef0d4d40-da62-4d6e-9023-e408c8c39db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b18cb66f-d546-404d-a344-d129a8ee942f",
        "cursor": {
          "ref": "7ef36615-21d7-423e-8104-da0e470c8810",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "48887dbe-184a-4e05-95d2-682d2c37fe02"
        },
        "item": {
          "id": "b18cb66f-d546-404d-a344-d129a8ee942f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "4b4b0f20-9029-47a8-82f5-c48bf5ecc99f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ccebf2-8ab0-460f-9948-54044fd231d0",
        "cursor": {
          "ref": "91f369e6-2f1c-4615-80c6-7a40fbaceb50",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c1fab004-b7ea-45fd-8ddd-0a4d6143a624"
        },
        "item": {
          "id": "77ccebf2-8ab0-460f-9948-54044fd231d0",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8f9e17fb-6722-45c4-84d3-7e7041e5ee5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9878223-29f3-434a-a8de-82188d93baab",
        "cursor": {
          "ref": "eb56caf9-105f-4c55-90dd-7609e529f590",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "0fd18f72-8434-4ee3-ab89-d97606085c3a"
        },
        "item": {
          "id": "b9878223-29f3-434a-a8de-82188d93baab",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b53537e3-fc57-475f-b05f-d74a1cc2accf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf0a6e6d-2c6a-428d-b0f5-cb192bace04b",
        "cursor": {
          "ref": "3c457fa5-65cc-4f59-a26a-68a92f555122",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "3dec7019-d7e3-4fbc-bc9f-b2056948ee42"
        },
        "item": {
          "id": "cf0a6e6d-2c6a-428d-b0f5-cb192bace04b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c3c1c382-fdee-44d7-a2da-0411ae8c309c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9ee36f-f9fd-4d91-8f95-7de3c71c7992",
        "cursor": {
          "ref": "93f1f6a8-2b84-4d23-9670-5a3cefb5d4d7",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "95c2faa3-68e8-4f05-b347-1b48e92c6fc8"
        },
        "item": {
          "id": "cd9ee36f-f9fd-4d91-8f95-7de3c71c7992",
          "name": "credentials_issue"
        },
        "response": {
          "id": "67d03b16-7dd9-43be-a2d4-9a71f8860077",
          "status": "Created",
          "code": 201,
          "responseTime": 13573,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "c790b810-f761-4d31-b7a5-e37c5afc111d",
        "cursor": {
          "ref": "8cb992e3-0f7f-40ac-92d9-d22c6c2e7755",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a588b81b-49c4-408c-a9f1-8ca2cf5a506d"
        },
        "item": {
          "id": "c790b810-f761-4d31-b7a5-e37c5afc111d",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "381164db-234f-4629-a956-93681bf3713f",
          "status": "Created",
          "code": 201,
          "responseTime": 14252,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f664b86-c331-4f76-a48f-2cc04274c6d5",
        "cursor": {
          "ref": "8f101583-5481-4776-a8b3-7b8812cf23e8",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "62e76154-170e-471e-8d8d-fea920054282"
        },
        "item": {
          "id": "5f664b86-c331-4f76-a48f-2cc04274c6d5",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "2e2a8558-9b99-4687-8094-f9c3cd84c2e7",
          "status": "Created",
          "code": 201,
          "responseTime": 12937,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e71c06e-7300-4f09-ab5c-9c39f0bd25b2",
        "cursor": {
          "ref": "98183002-9c3c-4af9-bbaa-7ccc338cc409",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "c270fc16-643d-4d24-83ac-422fd0b9f770"
        },
        "item": {
          "id": "5e71c06e-7300-4f09-ab5c-9c39f0bd25b2",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "60add62e-cc82-4695-aefa-ee78b914a411",
          "status": "Created",
          "code": 201,
          "responseTime": 12425,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef23dc8-427f-48ac-aa47-fe0fd1b97450",
        "cursor": {
          "ref": "6b0f5a0d-65b7-4d9c-9703-2f13c3381278",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2d556336-43bc-4e47-a2ab-85099cce9e37"
        },
        "item": {
          "id": "2ef23dc8-427f-48ac-aa47-fe0fd1b97450",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "04c0d952-8c80-4ee1-93d9-7e8e798406c1",
          "status": "Created",
          "code": 201,
          "responseTime": 12786,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af7efe5-5204-420d-bc1c-cb02bbf7a20e",
        "cursor": {
          "ref": "060a2d82-51e5-4e22-9097-20e3daaaef58",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "0ef7a352-66f1-42f3-83f7-c5d8821a68b4"
        },
        "item": {
          "id": "6af7efe5-5204-420d-bc1c-cb02bbf7a20e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b1d5f1d8-8f7e-4131-ac3f-a7150e5eb17f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "a0e62aa8-adbe-47c4-a68d-5f92ff25d3f5",
        "cursor": {
          "ref": "e6853b10-94d9-451c-ac5e-521f6416c2e4",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0235ce70-3fe1-4418-8026-d967e523ab41"
        },
        "item": {
          "id": "a0e62aa8-adbe-47c4-a68d-5f92ff25d3f5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "10b82b55-ab3e-4fc7-aa75-10738bdd3c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da007d5-5ff9-43a7-820d-61016b963a80",
        "cursor": {
          "ref": "3a511f2b-d344-4b83-8f43-1c24005d750b",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "21da355f-3b42-4ec7-a4ae-6dfe3d16bd51"
        },
        "item": {
          "id": "2da007d5-5ff9-43a7-820d-61016b963a80",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "bc99de67-bd60-468b-828d-4507650d43cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77282b0f-bb2c-4b06-b87b-ae64d00bfbf1",
        "cursor": {
          "ref": "61e6208c-d222-403d-9179-555dee258ae1",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "899ba707-de95-4635-bfc9-29bbda60a679"
        },
        "item": {
          "id": "77282b0f-bb2c-4b06-b87b-ae64d00bfbf1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8595f28d-058f-4082-8497-f956eeacb859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "692269ee-e342-4628-87af-4227a2be53d0",
        "cursor": {
          "ref": "6683b7ac-2044-4e45-84e0-9fa28806dbfd",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6c4b4d99-ca9f-442a-99a3-ace60f696776"
        },
        "item": {
          "id": "692269ee-e342-4628-87af-4227a2be53d0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3bc03dcb-1a37-41c6-927c-eea2c55353e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b51d0f-612f-47a6-9963-92e0d3f40ebe",
        "cursor": {
          "ref": "494b3bb6-d67c-4c4e-92dc-bbd4f52640f5",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "08037575-76d5-434e-ae87-06bd59ab6546"
        },
        "item": {
          "id": "30b51d0f-612f-47a6-9963-92e0d3f40ebe",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0f032d63-8da7-436e-8207-63bb87678d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23721573-17e8-45de-9dc7-ce731ffac6df",
        "cursor": {
          "ref": "736a87ea-91bb-4830-983a-ebaff8c051c7",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4652e2bd-ac8d-40fc-93e6-5a32373878a9"
        },
        "item": {
          "id": "23721573-17e8-45de-9dc7-ce731ffac6df",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "30897487-8962-476b-a2b0-fd950ea6bf69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08cc5a2f-c169-44a9-9c89-922d99b116d1",
        "cursor": {
          "ref": "6e8ef817-c521-4cc4-bed1-26cbfd54dc23",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "7e7a26a1-d2aa-464f-be03-3da30f30387e"
        },
        "item": {
          "id": "08cc5a2f-c169-44a9-9c89-922d99b116d1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "56cb39fc-b311-4cc0-822d-9bc911bd3dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb889bf-66c7-477f-bece-2a856c4c5fd0",
        "cursor": {
          "ref": "ffa6ae4e-4c03-46f2-8a38-428d348dff98",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c0fab83c-923a-4b84-b15a-aeb2ec819e16"
        },
        "item": {
          "id": "4bb889bf-66c7-477f-bece-2a856c4c5fd0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "34c20bea-3ddf-4b2c-95fa-ebcdacc89d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f12c9a3-80de-48a8-9ee7-95abee9c8d8a",
        "cursor": {
          "ref": "8b8ea057-6549-46a3-84b2-3f1564774ca8",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "bdb649cf-5e78-4ca3-8064-d59b2f0af862"
        },
        "item": {
          "id": "3f12c9a3-80de-48a8-9ee7-95abee9c8d8a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "016ea0aa-86a6-4d37-a2e6-de849b581667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f58454-72dc-484c-88d1-7391bff65c34",
        "cursor": {
          "ref": "3ebacfd6-001a-4d1b-8217-3b0aa5be40dd",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "4b93dc8b-dbb0-4ea3-ab23-afb6ac4bf0c9"
        },
        "item": {
          "id": "58f58454-72dc-484c-88d1-7391bff65c34",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e997f2c9-f5e2-4c61-8a0d-72c6b9bee92c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc183ad-dd63-4e3f-b2f3-86df5abf332a",
        "cursor": {
          "ref": "0b367c72-04e0-4e4b-a6d5-4db44a28ec3a",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "874be56f-4262-4b1c-856f-036fff4e23e4"
        },
        "item": {
          "id": "3bc183ad-dd63-4e3f-b2f3-86df5abf332a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "fa4f046d-d5e8-4d57-b49f-5c93d1511776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "851ad2f6-2f6d-415b-bf60-e44ced91e2bd",
        "cursor": {
          "ref": "7bb22be3-6f3d-4545-9e6d-047bb807e6cb",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c4458999-f757-4449-a6ac-777185690328"
        },
        "item": {
          "id": "851ad2f6-2f6d-415b-bf60-e44ced91e2bd",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7f4a1790-f5cc-44ea-9339-3d4ca2fb1a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b04a4baf-7681-47fc-8968-aca284b41d05",
        "cursor": {
          "ref": "de608a5c-64a0-4a37-aad8-c35cbcb56992",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2265c106-eaea-441e-9546-4e5c017fc35e"
        },
        "item": {
          "id": "b04a4baf-7681-47fc-8968-aca284b41d05",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7931575c-c662-4c3a-83e6-8528c9720896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0642017c-ad59-4b71-9eb4-0550f8d5c0b3",
        "cursor": {
          "ref": "f5507de8-eb8e-468b-b8d3-54b1b47db09b",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ce493804-e317-4470-a238-4b413633caae"
        },
        "item": {
          "id": "0642017c-ad59-4b71-9eb4-0550f8d5c0b3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "902800a0-4f83-42b4-a363-240fe3bb2d64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0733848-711d-46fe-827f-a4a3c3431284",
        "cursor": {
          "ref": "9789f5d5-0302-4367-bf63-2dc37e8ee1bb",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ae14a88c-bcb6-4393-b94c-555990eeb0b7"
        },
        "item": {
          "id": "c0733848-711d-46fe-827f-a4a3c3431284",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "afee7569-ac36-40fd-81af-0bbe416ecd7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73575e15-ef9d-41f0-b20f-055b1c8ae163",
        "cursor": {
          "ref": "d3ad423d-2339-4faa-b481-33dbefbd694a",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "81b58e9f-ad5c-4ace-9634-75d42748857f"
        },
        "item": {
          "id": "73575e15-ef9d-41f0-b20f-055b1c8ae163",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "50dad993-df6e-4419-aa8a-7000c57f33df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58bee0a9-4af4-40ee-88ab-27182a5f6a9e",
        "cursor": {
          "ref": "0c0bfd03-8d2d-43b2-881b-772bb80a7805",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "72fabed0-7a69-4379-a7e6-cdd0f022ee22"
        },
        "item": {
          "id": "58bee0a9-4af4-40ee-88ab-27182a5f6a9e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c6b1f19d-4029-47ad-a63f-143f6eb3ebbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e990a10-6f54-4ec4-91b8-6d860588b694",
        "cursor": {
          "ref": "eefc720f-860d-43a3-be35-f3400d950b3d",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0f592909-d85d-4d9a-88a9-5063c0bae664"
        },
        "item": {
          "id": "5e990a10-6f54-4ec4-91b8-6d860588b694",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6eb74f69-e9b3-4171-b3d1-0974d1936e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48cc811b-48e9-4b50-8ac3-6d7a3adb0e52",
        "cursor": {
          "ref": "65d89ff4-868c-4641-aff0-4febcbcbba49",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "58033193-6794-47c1-8308-9c061026d7f9"
        },
        "item": {
          "id": "48cc811b-48e9-4b50-8ac3-6d7a3adb0e52",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b2884185-68b9-4b8e-850b-4ab5361eecf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc30ff5-192c-4c1f-9331-0d7963c4d3fc",
        "cursor": {
          "ref": "6904bbca-23dd-4b20-bfc7-dcd1d9fafd43",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "1878bb0f-03ac-44fe-a83e-263d91e2f640"
        },
        "item": {
          "id": "1bc30ff5-192c-4c1f-9331-0d7963c4d3fc",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9a6bcdc5-4e74-435c-a534-934b07331d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f1e006-f36e-48f3-8476-aae25eed344f",
        "cursor": {
          "ref": "dc530b19-110b-412b-80ba-7bff9dce5767",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "736cc573-a180-4252-bb23-f170b03e9d58"
        },
        "item": {
          "id": "f2f1e006-f36e-48f3-8476-aae25eed344f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0fe2e366-dfd1-44b8-b344-8b2cbd99133a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a3edd6-f521-41e8-879a-15369219d6fd",
        "cursor": {
          "ref": "54e89d01-6fac-4a4b-900e-9a0119f4f234",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "72504830-dbb5-46fd-8ec1-f27982b9a91b"
        },
        "item": {
          "id": "b9a3edd6-f521-41e8-879a-15369219d6fd",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e9b97293-e29e-4647-bfaa-238b7c03d0da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "637472e3-cf91-4841-b815-23b0caba9f73",
        "cursor": {
          "ref": "0530d86e-8878-47ad-896a-72bb77a104a7",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b9597ffe-2fce-4d0b-9218-7d7feec074da"
        },
        "item": {
          "id": "637472e3-cf91-4841-b815-23b0caba9f73",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "773d6280-8c99-4aa4-a018-e90754aa80fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25377dcb-4bc2-461d-8d70-393034745447",
        "cursor": {
          "ref": "984b2aba-6c83-40f4-b797-2878b284235d",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "0f4bfd2c-b2a5-4acc-923c-72c1dd4cb55e"
        },
        "item": {
          "id": "25377dcb-4bc2-461d-8d70-393034745447",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0ed86760-cc96-43df-bddd-c45357c0c0fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa559bd-395e-44e3-bef4-31d1a3a36d97",
        "cursor": {
          "ref": "702556a5-9ead-40c6-a59f-e5179e17d910",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9bca6612-8bd8-4e46-a9a5-90f18bf3c2b1"
        },
        "item": {
          "id": "7fa559bd-395e-44e3-bef4-31d1a3a36d97",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "dea54650-a2ba-4d72-8320-649c998a2844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a7b3f0-be23-4aab-be43-5d88f3cffff4",
        "cursor": {
          "ref": "a48e2920-8ab0-4dc8-ae58-0268d8a2af76",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "510a41c3-acfc-4091-ba83-e37477d897de"
        },
        "item": {
          "id": "25a7b3f0-be23-4aab-be43-5d88f3cffff4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9be24bb1-a497-43f4-8af3-fe5a82a33c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c66bf17-ed50-4723-be2e-291383dd213a",
        "cursor": {
          "ref": "1503a41f-e1e3-4bdf-84df-a472b22488c3",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b5770794-cc3d-4070-aa64-d25fb0de4962"
        },
        "item": {
          "id": "2c66bf17-ed50-4723-be2e-291383dd213a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0386e5d6-68f1-4d80-b237-5756cfc3bf1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68be2b3a-9dda-4fd4-8583-5198b5e419e9",
        "cursor": {
          "ref": "b5c4b9d8-81dd-4ed1-8e6b-dae19f7d0773",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "8e5010cf-fd94-4df9-b043-069713ed0f6b"
        },
        "item": {
          "id": "68be2b3a-9dda-4fd4-8583-5198b5e419e9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1d4fe70f-f835-48f8-a2e1-d89b4f95c56b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e05062d-caa2-4220-a13d-e279384cf3b9",
        "cursor": {
          "ref": "2346b0c0-e65e-4057-a3a0-58d4bbc48ddd",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f3d6ce0f-5871-4e67-95bd-a92e49a38966"
        },
        "item": {
          "id": "4e05062d-caa2-4220-a13d-e279384cf3b9",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8ce5866d-bb0e-4cd8-9141-27d2e356cc1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b303e0e0-d277-4c07-b511-872d32cdb98f",
        "cursor": {
          "ref": "8312c074-cbb1-4095-93d3-601a05dcaa40",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "aa0b41b8-861c-4d52-a2fd-9679e66e5623"
        },
        "item": {
          "id": "b303e0e0-d277-4c07-b511-872d32cdb98f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d3d2aa18-38d5-479a-9e1c-2f2c07575c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df6e221a-612c-4925-b33d-1e68ac0590cd",
        "cursor": {
          "ref": "b5848f1b-b449-4123-875e-85530df9f04d",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "bd1c5171-ad19-4dda-9404-8490cd88c43b"
        },
        "item": {
          "id": "df6e221a-612c-4925-b33d-1e68ac0590cd",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "aee082a4-c9cf-4735-91d5-c053c7291acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed0535b-d55f-4db2-8c7a-23a70e37f480",
        "cursor": {
          "ref": "3aaa3906-bf3b-4df3-b9d2-cf7976aa9412",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6c6ad5f9-eabe-433a-a6a3-0d3ccb350296"
        },
        "item": {
          "id": "4ed0535b-d55f-4db2-8c7a-23a70e37f480",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "c8e3b03e-d880-4a3a-abda-8e1511c62783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc50b3f-d7f4-4850-8ab1-1b334ff34a5a",
        "cursor": {
          "ref": "1c218014-40c5-4bbe-b326-a89f9406da74",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c057ca6b-dafe-4358-ac44-350e0e57dc66"
        },
        "item": {
          "id": "fcc50b3f-d7f4-4850-8ab1-1b334ff34a5a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "656ec680-24fd-4b5c-be11-be3663155230",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "877c17ff-0763-4375-9653-b3af6bad3a8b",
        "cursor": {
          "ref": "d02a8422-f278-47ea-a7a8-2742c3f51531",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "7cc8703a-e52d-4865-bc4f-add1aefba66f"
        },
        "item": {
          "id": "877c17ff-0763-4375-9653-b3af6bad3a8b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "35e744f9-d369-4e81-89ac-0037707f017d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f10576d7-6cd8-43e8-b89b-0e056596156d",
        "cursor": {
          "ref": "f9074722-a292-4cb9-9552-c3f4d96ea03c",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0ff9c670-7592-43e3-adaf-58f2b38b5fff"
        },
        "item": {
          "id": "f10576d7-6cd8-43e8-b89b-0e056596156d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f40c47b8-b94a-42f0-abd5-3cd0b5a00a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5eb132-c3f8-43cb-bf3b-16352c63cb7b",
        "cursor": {
          "ref": "8467eef7-35d1-4de8-859a-95385027efb2",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "47e9adec-3499-4461-8a40-c691b9b19258"
        },
        "item": {
          "id": "ae5eb132-c3f8-43cb-bf3b-16352c63cb7b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "514e4018-d3d9-4079-bfc2-8e1a1050c354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c1265e-cfa7-4a2b-a96a-5972f0f8930a",
        "cursor": {
          "ref": "509b4b51-2b67-4925-803a-8904a886a587",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1610aa71-5d2e-4a72-9f73-32ca69811977"
        },
        "item": {
          "id": "17c1265e-cfa7-4a2b-a96a-5972f0f8930a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4b8d6193-e4bf-4380-8cb1-a6bc1ceaf0dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e3504d8-b027-4aee-b606-e96e9dac4458",
        "cursor": {
          "ref": "b314fc15-e764-4e43-b1de-1a484018b96c",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a3f74cf7-8523-425f-b624-b4d75a100de1"
        },
        "item": {
          "id": "9e3504d8-b027-4aee-b606-e96e9dac4458",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "90728bca-fb81-4798-b0de-75a62b85f4d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4772f3cc-248b-473d-9821-26947145acf3",
        "cursor": {
          "ref": "7297162b-dbd8-458c-8558-d671ef669524",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "4847e96f-8bf0-4959-ba0a-e446d92a7609"
        },
        "item": {
          "id": "4772f3cc-248b-473d-9821-26947145acf3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8d9f6fe1-985b-4307-abfa-4862a4676b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c703d3af-8ce8-402a-81dc-03b41f905ea4",
        "cursor": {
          "ref": "3eeee583-18f6-4864-a0cd-083ef7c4dbf9",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "74b58929-cff8-4c9e-8b5f-033f76e6b602"
        },
        "item": {
          "id": "c703d3af-8ce8-402a-81dc-03b41f905ea4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "bb0176ed-ea08-4ccc-8612-4fd3c752b948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cbbbc66-b8fa-481b-b3e9-aeaea862cdcf",
        "cursor": {
          "ref": "b8a9abfb-c869-4627-aa52-34a59e8992fb",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "4dcb9fc9-9716-4968-b905-9be8d6cbed19"
        },
        "item": {
          "id": "9cbbbc66-b8fa-481b-b3e9-aeaea862cdcf",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "97486e16-b508-422a-955f-56cb09c798a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5231f6-c983-4bbe-98b6-3a454c491dfa",
        "cursor": {
          "ref": "db8d623c-ff01-469b-bbb8-2564cf9ac691",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "548715e4-735e-4a8f-8a24-6aacbd333105"
        },
        "item": {
          "id": "df5231f6-c983-4bbe-98b6-3a454c491dfa",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6d282009-3aba-41d3-b0be-b4f87017efe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10cc678-b254-4a20-b312-1ebfd417045b",
        "cursor": {
          "ref": "a478e6ef-52e7-4e95-b40b-40dfd44714bc",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "cc8f1ec8-2131-4158-a01f-e2b512efd9f5"
        },
        "item": {
          "id": "d10cc678-b254-4a20-b312-1ebfd417045b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ef82f809-f811-42af-ac3f-7c97d71d53fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a174b19d-578a-4d59-b536-1dafd6e2f8e0",
        "cursor": {
          "ref": "ebc12526-f829-45b1-8400-a6cbbbd91f9c",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b08cd5cf-1186-4185-ac56-4c3cb7ad357f"
        },
        "item": {
          "id": "a174b19d-578a-4d59-b536-1dafd6e2f8e0",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d926bf80-887d-4c8e-a5c1-02044ed727c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d19ef5-bf46-4978-b677-9e73283b6a9f",
        "cursor": {
          "ref": "e08a3d5e-1b99-4941-a1bb-754b3a5976fd",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "898cb1b2-e835-41af-a36c-a476a2776565"
        },
        "item": {
          "id": "d5d19ef5-bf46-4978-b677-9e73283b6a9f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f734a85d-111c-4dde-9fb6-ace8b0d0e528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50085e7d-fa04-4e1c-839f-19d5248600ac",
        "cursor": {
          "ref": "7734372a-9c95-4a3a-96d7-5b98fa6a37d0",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a2eda2ec-5397-439f-b571-59df0a15536e"
        },
        "item": {
          "id": "50085e7d-fa04-4e1c-839f-19d5248600ac",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "335e8b33-f33a-4a65-8a3a-1817ec51ccf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b66ca9f4-85df-4254-a885-4317c6950136",
        "cursor": {
          "ref": "7377ccc2-6415-4940-a28a-a0b170db3f3f",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "87a08df7-06c7-4039-9317-3d28ed035408"
        },
        "item": {
          "id": "b66ca9f4-85df-4254-a885-4317c6950136",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ee24a2b0-f645-4b4c-bfd2-e56e322bde1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3a7aaf-4c20-4557-9e87-f810f845d5a7",
        "cursor": {
          "ref": "0ee5d69e-b102-4422-b580-865e28faf6f1",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "776c57a7-509b-4495-b656-17d4198a26db"
        },
        "item": {
          "id": "aa3a7aaf-4c20-4557-9e87-f810f845d5a7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "86b63be0-32d1-4c4e-af7c-3c0587ba2005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2179ca13-400d-4371-9b4b-ea3c72267003",
        "cursor": {
          "ref": "9fc96783-6f20-4283-bd1e-d3a5f6582c03",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "51d842fe-5991-4f2a-b8e2-d230c6925be0"
        },
        "item": {
          "id": "2179ca13-400d-4371-9b4b-ea3c72267003",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7945bafa-d065-4406-af7f-41affba9910c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aeb66ce-87ed-420d-8b25-cee1e4323b6b",
        "cursor": {
          "ref": "60609ea8-655b-48f1-8bae-1acc8f11f531",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "39d36b53-6072-4a04-9ae2-6884675704fe"
        },
        "item": {
          "id": "6aeb66ce-87ed-420d-8b25-cee1e4323b6b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1a9e4df2-bcf5-4075-8d65-cd69496bed62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ac2381-0ec7-4a03-8554-b394a27cfaa8",
        "cursor": {
          "ref": "01b341c4-5d3f-4ecb-90d6-a478dc87f70c",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "96380955-389e-4ef5-b191-767c89e20da3"
        },
        "item": {
          "id": "c7ac2381-0ec7-4a03-8554-b394a27cfaa8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e3ca8f83-b536-4df4-98a6-7d196c5988af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c046c32-ee19-4418-bfe2-431454943865",
        "cursor": {
          "ref": "22ae3321-ab3a-45be-98c9-d437496867b0",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2291d7a0-aabe-401c-ba0d-a4712766e7d4"
        },
        "item": {
          "id": "5c046c32-ee19-4418-bfe2-431454943865",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f5606ee7-63ca-4625-a650-f8f20784cfef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38535b6-1b8b-488d-98a6-a968e2e52881",
        "cursor": {
          "ref": "b73e1c69-408e-47e7-ab15-126fe9f33bbf",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "724a5aa1-79a6-4ccb-b62b-b04208ed63bd"
        },
        "item": {
          "id": "b38535b6-1b8b-488d-98a6-a968e2e52881",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c942b22b-e759-4431-9ef7-8f6bcac0b44a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907cf66a-7711-42ac-88e2-c4d4b5030b4a",
        "cursor": {
          "ref": "ff4cf533-7caa-4828-ab53-06bb6f750883",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "5f458263-0e04-4ce7-9ac3-889820f57710"
        },
        "item": {
          "id": "907cf66a-7711-42ac-88e2-c4d4b5030b4a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1f01df74-028a-4cb1-abaa-af8a33e029c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e73ed9-9be2-4966-a5f5-925fb6a9acd4",
        "cursor": {
          "ref": "d9342901-a837-4560-8822-90220f2ce515",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "c8be4bfd-30fc-4195-80f7-8f8ff858f1ee"
        },
        "item": {
          "id": "08e73ed9-9be2-4966-a5f5-925fb6a9acd4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a4f0651b-99e3-424f-b1c3-fbc6a45e0b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3435637-389c-4da2-98d1-27db32b17510",
        "cursor": {
          "ref": "dfce0521-7674-4f5f-8a52-317fdc09a5be",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a6b35b32-fa68-4802-ac8d-2c98757f86a7"
        },
        "item": {
          "id": "a3435637-389c-4da2-98d1-27db32b17510",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "028e22ce-2c42-44a1-8eb5-e7b5f1562f67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "608f7a66-975c-4ca9-bacf-a66b8823f986",
        "cursor": {
          "ref": "40bff174-5faf-4903-b6ca-3216e588364f",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6ff15871-8a57-498b-951b-819c6046d0cc"
        },
        "item": {
          "id": "608f7a66-975c-4ca9-bacf-a66b8823f986",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "68278a3b-dd43-4832-98ba-ee414453afa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68040520-1658-4ad4-83c5-7cbc667d7abf",
        "cursor": {
          "ref": "a3fcb440-6c6e-46ea-aeac-0bd3679dc5d8",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a5d04096-285e-428d-a4ee-0e5fcec3525f"
        },
        "item": {
          "id": "68040520-1658-4ad4-83c5-7cbc667d7abf",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e75a5112-1374-47c2-ae0b-14530adc5a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bdb2665-bbc4-4ab1-807b-d4aebf6a8a3c",
        "cursor": {
          "ref": "43dcad80-5b5e-4be0-b3c9-970625684f38",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5e4341ef-1881-452d-abca-060e6809c174"
        },
        "item": {
          "id": "1bdb2665-bbc4-4ab1-807b-d4aebf6a8a3c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "cea26da1-4917-4d53-9c7d-890eb7b3a38c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f15d24-7d04-43df-b32e-4cce749cc461",
        "cursor": {
          "ref": "33d77c54-b9be-4cba-9415-48422cdab992",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "6723f584-391e-48bb-87ec-1017d9b975a9"
        },
        "item": {
          "id": "52f15d24-7d04-43df-b32e-4cce749cc461",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5964206e-1580-4311-b360-d58ce06ebd85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46945866-6a39-491f-a992-fb9e7892e4a3",
        "cursor": {
          "ref": "66fad38f-4c46-4c25-9782-e60bcaf50f29",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "b5ed3c18-ac8d-4f9d-8efb-5f0c6ded8370"
        },
        "item": {
          "id": "46945866-6a39-491f-a992-fb9e7892e4a3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "68786320-5889-416c-921f-86003ec965b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7cb8eb-5765-4363-9e89-7498e9325032",
        "cursor": {
          "ref": "45b06444-0b81-457c-9fa2-c675454c5ada",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "267a0830-7c51-4f87-a51f-e9161e56e7d9"
        },
        "item": {
          "id": "2b7cb8eb-5765-4363-9e89-7498e9325032",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d631508b-da32-4c7a-b97e-f7302001f26a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7425d134-657e-455f-84f7-6f4b1473e30a",
        "cursor": {
          "ref": "2ebf2752-4446-4efb-8c15-84d51677e418",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "17b243ae-4cbb-4d2b-bfd2-c27f5d633d8d"
        },
        "item": {
          "id": "7425d134-657e-455f-84f7-6f4b1473e30a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "96f70a9c-4577-40c1-93d9-070e9226306b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd9588e2-3596-454f-814b-173b5dbec443",
        "cursor": {
          "ref": "bf274eaa-4887-453d-92f3-fa3fd4fc8769",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "017865a1-b51d-4bc0-ad02-22aa63428c82"
        },
        "item": {
          "id": "fd9588e2-3596-454f-814b-173b5dbec443",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d0f946f9-bee7-4d86-ba4e-d08367aea936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e2bfeb9-860a-4cc1-ae30-eb712abc6e36",
        "cursor": {
          "ref": "168f072e-7833-419c-9ed5-59a41c1bb4e2",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "33d0daed-91df-4e33-bbb0-d008f08c7749"
        },
        "item": {
          "id": "2e2bfeb9-860a-4cc1-ae30-eb712abc6e36",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "535e6f44-fc8e-478e-979c-315923159c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620c801b-19b6-4309-961b-c9b5aa4ef7ea",
        "cursor": {
          "ref": "85be5cc7-cc97-4c24-828d-261103173cc8",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "0c1f65a9-a310-4ed2-bf57-1c73bb3cef40"
        },
        "item": {
          "id": "620c801b-19b6-4309-961b-c9b5aa4ef7ea",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "7ee1045f-4e64-4f0c-b983-fd5da595777c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb646db-15b9-4b83-8dd0-109a378c5ef4",
        "cursor": {
          "ref": "6e1b44cd-0806-44de-88c7-40327e4344da",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c6f72e45-baf0-4e43-bc0c-7fe62772ad40"
        },
        "item": {
          "id": "3bb646db-15b9-4b83-8dd0-109a378c5ef4",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "687e8cae-b1c8-4b96-ba5b-19709785a573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcebae81-bddf-470a-84a0-943b19e4ab72",
        "cursor": {
          "ref": "cd0d373c-12d2-4370-ac81-897e4f38666f",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0005542c-909b-4da4-9891-010afc244964"
        },
        "item": {
          "id": "fcebae81-bddf-470a-84a0-943b19e4ab72",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "9c723a32-1e1c-47dd-8f36-d27d1b10b77b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61cb5bc8-2721-4b48-8f06-2f3bf90cd255",
        "cursor": {
          "ref": "28337517-2d7a-4e9a-a85e-87a59e3b264a",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "81c16a52-20e2-4de7-aede-e3495f8f55c2"
        },
        "item": {
          "id": "61cb5bc8-2721-4b48-8f06-2f3bf90cd255",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ce46dd1f-b7d8-469a-b737-7f4ffc2e64e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5feeb5a4-c42a-4455-a449-61fe04fe2bac",
        "cursor": {
          "ref": "262c88e1-8461-460e-b729-5cf7cf96e04b",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "abd54347-611a-4862-9545-a829b3cf7e67"
        },
        "item": {
          "id": "5feeb5a4-c42a-4455-a449-61fe04fe2bac",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "da2b6729-6dad-4176-809b-880c7ebf4719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e77cb09-25e5-4730-8d1d-bba27caf7890",
        "cursor": {
          "ref": "a857d5db-6861-458a-9471-e63495a03c76",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b38be37a-5855-4ca2-ae8b-3af63d950c52"
        },
        "item": {
          "id": "6e77cb09-25e5-4730-8d1d-bba27caf7890",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "844212f7-c9ce-4464-89ee-8b82868d8ab2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de6a051-59ae-42fe-8040-b14a6ff1c176",
        "cursor": {
          "ref": "390e0e76-58b0-4523-9f8e-24c6c37abf8e",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "dd68acbd-081b-48ea-be5a-216e94938218"
        },
        "item": {
          "id": "2de6a051-59ae-42fe-8040-b14a6ff1c176",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6bf6726c-06c2-4677-b864-7f79023094b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4092079b-aa82-444b-93e2-064ce72fa42b",
        "cursor": {
          "ref": "68995bc0-5a96-48e7-a6ec-bfb3e4a7c477",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "cc0718e4-e50a-491b-99d3-62ac507fe865"
        },
        "item": {
          "id": "4092079b-aa82-444b-93e2-064ce72fa42b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d0f8b04e-0d0a-4ee0-85ec-d22734be716c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a0b9e3-eac0-4a4c-8b77-5a74b3296cd1",
        "cursor": {
          "ref": "36ab8f65-736d-4df2-a2e4-d70fce60b62c",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "32fe24db-20d0-4d63-bb41-d68dc3bd786b"
        },
        "item": {
          "id": "52a0b9e3-eac0-4a4c-8b77-5a74b3296cd1",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "7ed62c35-cdf2-4caf-bb30-25c1b953effa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609600db-7581-4070-936d-6e396d14cab8",
        "cursor": {
          "ref": "dcea67c3-b108-415c-a72a-c704b0f247c0",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "0885371d-9e60-4f02-ada3-f780c89812a3"
        },
        "item": {
          "id": "609600db-7581-4070-936d-6e396d14cab8",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6337b065-08eb-428f-852e-7c1fb9ea7109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "680ec5a8-3c50-40e7-be49-752a11218187",
        "cursor": {
          "ref": "180e159b-2549-471d-9d8a-c82836162a16",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "43b1dc26-3ec6-45fb-8b9e-ab08bd02df07"
        },
        "item": {
          "id": "680ec5a8-3c50-40e7-be49-752a11218187",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "8cf32b04-cc00-45b7-8bfa-c3a04f2010f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc68432e-93e5-4b81-9537-0bfea677e705",
        "cursor": {
          "ref": "4600f28f-503c-49fc-a72f-2f103b2a2feb",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "61cf5997-8542-4caf-98d9-1416a7691723"
        },
        "item": {
          "id": "dc68432e-93e5-4b81-9537-0bfea677e705",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "6cc49c80-4532-4634-bf80-617bd99ecea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f93d8a8f-8afa-45b2-a119-3f47345d132a",
        "cursor": {
          "ref": "1fbff213-f0d3-4325-8794-4028d093be52",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4742e43c-7b16-403c-9dc7-8ca6fd82e8e9"
        },
        "item": {
          "id": "f93d8a8f-8afa-45b2-a119-3f47345d132a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "7fc70f12-5b8d-487b-9530-00751a183f58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d21e42f4-2d83-414a-9e89-9fda16a4baa7",
        "cursor": {
          "ref": "ab6a7d60-d55c-4b01-a97d-7b6f93e6f495",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "eec4b327-6897-498f-b7b1-91ea1fb958f1"
        },
        "item": {
          "id": "d21e42f4-2d83-414a-9e89-9fda16a4baa7",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "062d85ba-bcf8-4c38-b750-03e301c046cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32e85c7-8841-4bf2-a590-a88856b96b95",
        "cursor": {
          "ref": "7399e881-92e4-48aa-a085-ca88c45acefc",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "fe8f8e79-deef-4467-a93c-e4f9c2fe7a65"
        },
        "item": {
          "id": "a32e85c7-8841-4bf2-a590-a88856b96b95",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "036a86bb-98cc-499a-8058-4819f4ce4fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a673aaa-8f40-4b8a-9fcd-7315e9054e93",
        "cursor": {
          "ref": "768d1cd4-dbdb-4eab-8fcc-8b7f0214f32f",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7d82bae2-4cc7-4430-a9b6-f04d3b80f041"
        },
        "item": {
          "id": "7a673aaa-8f40-4b8a-9fcd-7315e9054e93",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "83220865-36f6-4b94-9c8b-6654c8019d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f8eb0c-d168-443c-afd5-c3011515ad11",
        "cursor": {
          "ref": "1667c506-2962-4f54-bda8-b30754c748d7",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "1149190e-50e5-4f42-98e9-a6eda984cf86"
        },
        "item": {
          "id": "37f8eb0c-d168-443c-afd5-c3011515ad11",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "3621b281-00a1-4c62-8eaa-90910205dcf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67559b62-3f45-4357-9058-8f7fb65c3fad",
        "cursor": {
          "ref": "02c22cfd-22ce-422d-87e7-b0899ce9677d",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3531d673-6f01-4c06-a4b7-10bedbd829a3"
        },
        "item": {
          "id": "67559b62-3f45-4357-9058-8f7fb65c3fad",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d8badf28-805a-4970-8f24-ea190d894094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f0ffbe-be40-4ac9-8f86-d048018d0fc2",
        "cursor": {
          "ref": "083d3849-4ca3-4006-8dc8-61c75bf3b963",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b7b57930-d689-432c-b54f-89438b072779"
        },
        "item": {
          "id": "61f0ffbe-be40-4ac9-8f86-d048018d0fc2",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "49db3277-e53c-40b0-8637-c1fbbc3311fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3a5ec40-3122-4467-9a9d-fce46610ba47",
        "cursor": {
          "ref": "dea8eb85-d53e-4b11-9094-1be91d416b47",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "7712e799-ba45-4f6a-93e9-ef35182c3cb2"
        },
        "item": {
          "id": "f3a5ec40-3122-4467-9a9d-fce46610ba47",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d34eda38-9947-4907-abe4-b2150d23b1bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6742be78-0ef5-4203-b129-969e9e991b89",
        "cursor": {
          "ref": "69c2b845-5bf9-4449-ab6c-4cce12d46310",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "cbeb01f8-cc87-46fa-9e0e-920f2144145b"
        },
        "item": {
          "id": "6742be78-0ef5-4203-b129-969e9e991b89",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "60998098-694f-449c-a367-0442b0ce301f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99417632-8ab4-4b6c-a3e5-e64758c2da4e",
        "cursor": {
          "ref": "8e1c4303-3821-49cb-ad70-4414c34b6838",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ad02afe9-eedc-4b5d-b64d-4c96aed7a9dd"
        },
        "item": {
          "id": "99417632-8ab4-4b6c-a3e5-e64758c2da4e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "eecf389c-4c86-4446-b543-0e29006029e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "061695d4-a39d-4a18-a583-b2d32cbe0eb6",
        "cursor": {
          "ref": "3f31ea31-c64e-4f88-ba8b-0a99f7e9d517",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c6ba1bd4-d179-4a92-9c80-5eef850d74b9"
        },
        "item": {
          "id": "061695d4-a39d-4a18-a583-b2d32cbe0eb6",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "3199d1b3-445f-4aa0-a4b3-e0e5b71b6238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c571dd-d471-4b12-a025-0c371de20dcc",
        "cursor": {
          "ref": "a6f36ea8-9afc-4d99-92ff-04b7425f97ba",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9c27009a-a0e7-4ec4-b408-1dfc1510b794"
        },
        "item": {
          "id": "38c571dd-d471-4b12-a025-0c371de20dcc",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c9f6c57f-288c-4d4e-b39c-c3ff7845ab60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2009f360-db28-441f-8f4b-961858129e21",
        "cursor": {
          "ref": "9d9197bd-70df-4de7-b617-6d6cbec922e3",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6a238df9-9b90-4075-9ed1-ada2c791b1a7"
        },
        "item": {
          "id": "2009f360-db28-441f-8f4b-961858129e21",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "00b754c1-da1c-464e-9e2c-dc653e05ca90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71752cd2-c65f-4124-9e83-5022865454b7",
        "cursor": {
          "ref": "4d6b08bc-4e11-40f1-8cfa-9fe0234fc551",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ccba543b-95ef-4d7d-a5ac-8fe9c7933409"
        },
        "item": {
          "id": "71752cd2-c65f-4124-9e83-5022865454b7",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "17915976-b862-40a5-9ccc-aaf656666dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fabdb58-e3dd-41b4-ba90-1be86923f2b5",
        "cursor": {
          "ref": "9d0b6c37-b69d-47d2-98f4-8e5a2240f479",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "bcb317da-d371-48b2-b3e8-0a55ba0613f0"
        },
        "item": {
          "id": "2fabdb58-e3dd-41b4-ba90-1be86923f2b5",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f6746f6f-5b20-4a47-9898-394b3d843eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89426a27-70eb-4ed1-88eb-d5f5135292c3",
        "cursor": {
          "ref": "f3389c91-c6e3-4672-896b-b3807e1cc516",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f223e9e6-ed63-452c-8e23-256ea9f5a86a"
        },
        "item": {
          "id": "89426a27-70eb-4ed1-88eb-d5f5135292c3",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "13003d4c-8b9f-4497-92a9-48cd80b0ec5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340626be-a1cb-4e08-badf-621e2d35c7b7",
        "cursor": {
          "ref": "a65b6a77-00b1-474e-9c34-15837e64e157",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "4c456465-c03d-4d50-962a-0bd3706fcb61"
        },
        "item": {
          "id": "340626be-a1cb-4e08-badf-621e2d35c7b7",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "9e84f256-7ac4-4b04-b240-7c8da82c3bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a266098b-414c-4112-a5ce-dcc19335e8bb",
        "cursor": {
          "ref": "9ff241a5-f99f-41ba-b53f-7931efca6da6",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "9c525baf-6a27-4410-b8a7-9e3adb424372"
        },
        "item": {
          "id": "a266098b-414c-4112-a5ce-dcc19335e8bb",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "21c5a9a2-71d0-4a03-9cad-d6294b3011e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c4e27a-b291-419b-a524-8418b9cc3f60",
        "cursor": {
          "ref": "8a0e8b4c-789d-4db8-8abb-78a79776eb72",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "19fd7cf0-0998-41d2-926c-8a6937965ed5"
        },
        "item": {
          "id": "c0c4e27a-b291-419b-a524-8418b9cc3f60",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1ee1d2e7-685e-421c-b62d-261f101ab148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "923dc9b7-7e5c-4f80-af97-63d652f283e6",
        "cursor": {
          "ref": "c6aff86d-ef4a-401d-836f-a259088172e0",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7e02bbb4-6a7f-4ef0-867c-bd4592add892"
        },
        "item": {
          "id": "923dc9b7-7e5c-4f80-af97-63d652f283e6",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f7fd1745-fa4e-4b95-b166-4e1d29aa15e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c90987-dc9c-4810-9ce3-49e372ba7af0",
        "cursor": {
          "ref": "0dbf4e5d-d3a1-4180-bff6-2ded8acc5ef9",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "997650e7-7444-4130-8762-8f9ca25d2627"
        },
        "item": {
          "id": "54c90987-dc9c-4810-9ce3-49e372ba7af0",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "cc067311-3055-4933-9272-0662505988fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab79a12d-4740-452b-9aea-d2315f081999",
        "cursor": {
          "ref": "c25c5c9b-3ec6-4bb0-b26e-c88f446062f1",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b501418a-6770-4882-bb81-9d9989d96ed7"
        },
        "item": {
          "id": "ab79a12d-4740-452b-9aea-d2315f081999",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "69176b0d-14cc-4f1c-9be0-0ad35417af3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d9a560-c311-4265-afc5-b95affc54138",
        "cursor": {
          "ref": "7215daf7-c524-4232-b36d-ae4ce9cdf312",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "cd11a2e3-937d-44f1-bb77-e35d5c87bc1f"
        },
        "item": {
          "id": "b3d9a560-c311-4265-afc5-b95affc54138",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "84db0f6f-a161-4d8f-86d8-35cd3cbe499c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b846a60f-c27d-479e-9b76-99a0ca100450",
        "cursor": {
          "ref": "a99d364d-0e71-4c89-852d-a775d2868a10",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "27a00177-cf21-483c-8dfc-2874abd0f7fa"
        },
        "item": {
          "id": "b846a60f-c27d-479e-9b76-99a0ca100450",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "df7d4a4a-cc4d-448f-b73c-89f72893c759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aed0430-f3b8-4eb9-85fd-aa36f8b02e0d",
        "cursor": {
          "ref": "11d108cb-76e3-405c-a413-06c6c96121d6",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0436ebd1-b57a-4a6e-8bf3-d8cb15fcafd0"
        },
        "item": {
          "id": "2aed0430-f3b8-4eb9-85fd-aa36f8b02e0d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "771aac26-ac86-43dc-8404-405e7cd04b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e5f2972-888e-44f7-9a68-74c877de8d81",
        "cursor": {
          "ref": "8aab0434-7adb-4446-a3d6-846476e8b169",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "9a4dd2f6-0f69-418d-aeaa-0048c99600c2"
        },
        "item": {
          "id": "7e5f2972-888e-44f7-9a68-74c877de8d81",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8c3d8b06-34ca-4a69-9f13-0c2402a15e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff9a35b-2c4e-4e73-8447-25d0296c26de",
        "cursor": {
          "ref": "ac664f00-34ef-452c-a089-d53ff1161832",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3f877d72-e463-4d0c-a12e-90eff51942f7"
        },
        "item": {
          "id": "0ff9a35b-2c4e-4e73-8447-25d0296c26de",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0e37a3fa-691e-46c2-997f-a91823e32c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a6b55c-b6ae-43a0-9da3-78417499f8e8",
        "cursor": {
          "ref": "afbac664-f822-4750-96bc-a89dcec8a073",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b2ded786-85b1-425f-97e0-01f76df35337"
        },
        "item": {
          "id": "f8a6b55c-b6ae-43a0-9da3-78417499f8e8",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c9fe6dfe-2544-4f07-ab1e-d360e50dfbe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1475f3bb-49f3-425a-a439-627cab1b5354",
        "cursor": {
          "ref": "2832d604-1400-4845-acc3-78ab7b10d9ea",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "214458d0-4500-432a-bedc-44c4cf0c7c96"
        },
        "item": {
          "id": "1475f3bb-49f3-425a-a439-627cab1b5354",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "18447b40-65de-4b0c-ad9a-3d897653782f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5176b485-425c-4781-9102-02b5bc0e4fd8",
        "cursor": {
          "ref": "4ca5dc21-6d6b-481f-b8c5-7a12331d6119",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c2a5ec75-2975-4614-976a-5c71db3b0e82"
        },
        "item": {
          "id": "5176b485-425c-4781-9102-02b5bc0e4fd8",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "15aef923-6e57-4db1-9f2c-bbc7f817d8c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8878cc41-aa16-47e0-8894-1bc810340802",
        "cursor": {
          "ref": "d578c6c1-ce1a-431a-bf43-cc0b53241143",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f5bc3906-4342-4d6c-9396-2d8af34f188c"
        },
        "item": {
          "id": "8878cc41-aa16-47e0-8894-1bc810340802",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "bcfbacf8-d458-4eea-bc90-5fe93ebb1775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd6008ff-8236-494e-8474-33c1178a5324",
        "cursor": {
          "ref": "967b8cfc-d179-43c7-9f6b-014a67b7c6da",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2be32790-ed6a-48bb-a190-e2dc11ebc753"
        },
        "item": {
          "id": "bd6008ff-8236-494e-8474-33c1178a5324",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "301876f5-cbf3-488a-8c0d-4a4df143f8ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f10059-9d4a-45f2-a751-b4df63097e27",
        "cursor": {
          "ref": "990057b3-2152-4807-9510-08b65e2ba25f",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "78149ee9-1c14-4690-87a5-49198eab6594"
        },
        "item": {
          "id": "f2f10059-9d4a-45f2-a751-b4df63097e27",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d820ce1c-5017-4d88-ac1e-8166db61f028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a21f9fc-7c8d-4d06-93f9-af81b9a9f629",
        "cursor": {
          "ref": "317d9db9-a0e9-46f0-8753-a5e6716d31b5",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "fa142ce6-6659-4d73-aafe-f55cf982828e"
        },
        "item": {
          "id": "5a21f9fc-7c8d-4d06-93f9-af81b9a9f629",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1929321c-264e-4c79-a0a7-667ca8271ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c073558-7952-4ac5-aad8-b26dee0de4f6",
        "cursor": {
          "ref": "dfd1a048-4581-4be5-8e87-90f75d396cc9",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "be5f7ec7-db5e-459e-976e-8acd7ca3022a"
        },
        "item": {
          "id": "3c073558-7952-4ac5-aad8-b26dee0de4f6",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "31182de8-1e3d-4956-96f8-a124cc1efbb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb7cb26d-ab70-4209-8daa-d6fa3a10ad76",
        "cursor": {
          "ref": "48a5618e-df57-4d1d-a776-8e610584234e",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "8f7447b7-90e0-4ccd-b9b1-a356b0dad437"
        },
        "item": {
          "id": "cb7cb26d-ab70-4209-8daa-d6fa3a10ad76",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "2ab9f67f-20e6-4a96-9d51-23659b78fb27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb8187aa-20f2-4260-8287-b5865547c275",
        "cursor": {
          "ref": "5a102cd3-97f5-4f52-87a0-3811734d5f8e",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "cbb05c42-e5a6-4ca8-a589-7b25d215e064"
        },
        "item": {
          "id": "bb8187aa-20f2-4260-8287-b5865547c275",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "637644c2-df2a-467f-859f-a43aaafbad56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f253b7b-9a33-4695-8e4c-cc8d19a60729",
        "cursor": {
          "ref": "e6fedfa5-8356-4965-bfc9-8ee0ebf05bbe",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "24321f11-a89c-487c-b00d-1fa387439b17"
        },
        "item": {
          "id": "3f253b7b-9a33-4695-8e4c-cc8d19a60729",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "228f664d-2992-4e17-b95f-1dc99238f71d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f694a725-e32f-4993-b251-850d1e177511",
        "cursor": {
          "ref": "e957c671-978a-4197-a814-d2430a38fa17",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "5f05cb9e-e370-4285-ab6f-b38795e2044e"
        },
        "item": {
          "id": "f694a725-e32f-4993-b251-850d1e177511",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8687e665-2f8f-4bc7-92d6-48fe8123d2ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f7269db-4bc9-4e33-806d-8459531e3883",
        "cursor": {
          "ref": "6b81df1b-fa15-415b-b9ba-83c4fb8206af",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "85bcb748-1280-47dc-8127-0886fd51e74b"
        },
        "item": {
          "id": "6f7269db-4bc9-4e33-806d-8459531e3883",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "df785e39-405f-4529-b86c-af72eb6589ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "245bd1a5-a161-4dd1-9d15-bc25417b8ca2",
        "cursor": {
          "ref": "b3091364-fe0e-4197-b048-c15dfdad6717",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a154f59b-3cd1-405d-a89d-14a376995910"
        },
        "item": {
          "id": "245bd1a5-a161-4dd1-9d15-bc25417b8ca2",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "4bbdbe23-48bf-4e5c-a07e-12dc1c54bf52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a319672d-e15b-4b94-9ad4-fab6a128a971",
        "cursor": {
          "ref": "d5d2fc55-651c-4cca-9364-e80a9e2e145a",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "05966677-3f8c-4418-9cc3-b7d5293d8b77"
        },
        "item": {
          "id": "a319672d-e15b-4b94-9ad4-fab6a128a971",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "80422661-64d9-4d6f-8b00-79d80675c00a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1983ea88-e175-48b6-be75-f74934e8c1cd",
        "cursor": {
          "ref": "d54c6eac-29b0-4784-87c2-120267cd0a46",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "aa0dec9f-3946-4bb9-9e9e-a67902a93c21"
        },
        "item": {
          "id": "1983ea88-e175-48b6-be75-f74934e8c1cd",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b249cd98-e32d-49db-96d8-a1b3cd5b9392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b02ec138-21d9-4b11-988a-be4cd60e7ca7",
        "cursor": {
          "ref": "dba88c1b-b20f-4bd8-8ce2-6dc492f998c5",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "54f2f649-81c3-4d0d-8f7b-1392e1658111"
        },
        "item": {
          "id": "b02ec138-21d9-4b11-988a-be4cd60e7ca7",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "be0362a3-91a4-4c1e-8a1c-666d26d4650c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3aeb919-71a6-435d-9304-8e75b52c500d",
        "cursor": {
          "ref": "25ee8a51-7138-4cac-a5c4-41851d831427",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "08a25f95-31a7-436f-bc70-f3dd3136cbfc"
        },
        "item": {
          "id": "d3aeb919-71a6-435d-9304-8e75b52c500d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f76acbad-a1b1-4a36-9e8f-71b8d9e891a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739d654e-2dd8-43ca-879d-62e54d23903e",
        "cursor": {
          "ref": "4db641a0-5421-4803-b9da-3382b8912aa0",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "bff9599a-94c0-4e93-9e03-3809544867a2"
        },
        "item": {
          "id": "739d654e-2dd8-43ca-879d-62e54d23903e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "82870eff-1d24-4c85-aca7-ed619693dbbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbef7871-3622-40a9-8ec0-e0bfef4bb9fb",
        "cursor": {
          "ref": "849938d2-58a7-4c34-892c-e78818c4a508",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3d88570c-eced-43e0-a983-15eee871b992"
        },
        "item": {
          "id": "fbef7871-3622-40a9-8ec0-e0bfef4bb9fb",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a4679ab0-f4b7-4b56-8c72-999db5779c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd03035d-90bc-4660-ac8f-5c003c89514c",
        "cursor": {
          "ref": "272e372f-a267-4b20-a5fb-7495d765e220",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "30aaa764-a70c-4b8a-94aa-5d38b22daab5"
        },
        "item": {
          "id": "cd03035d-90bc-4660-ac8f-5c003c89514c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c6a1b3e9-a4e0-4516-90d9-3a8b689b7c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "322b5c23-e854-4878-b6b2-e0b2890206ef",
        "cursor": {
          "ref": "821ec27c-09cf-4541-b08d-5644859df5e1",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "06262aca-644a-4c03-b360-e5ef898aed71"
        },
        "item": {
          "id": "322b5c23-e854-4878-b6b2-e0b2890206ef",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ba5a8abe-054e-4ba2-a340-9f275ee5c72d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f66674-7c69-48b0-bd21-e0c0ac2bf620",
        "cursor": {
          "ref": "f9cfb494-d7a1-4b9a-ba82-6e020a845a0b",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "85da488a-2abc-4e51-b9d8-88368dc289e9"
        },
        "item": {
          "id": "27f66674-7c69-48b0-bd21-e0c0ac2bf620",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d02b3c8e-d846-4e3b-992f-8bd7d7e9b851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34f16994-3139-4c5e-95e7-5e9181e3629d",
        "cursor": {
          "ref": "ecca9ab2-0c92-4e5f-b1da-403c5de39e10",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e0ad92e9-d08f-4826-a797-31429fff938a"
        },
        "item": {
          "id": "34f16994-3139-4c5e-95e7-5e9181e3629d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0634aaa0-de17-4f76-9264-26ff0150d89e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b8dbfd-c873-49ca-b466-42623f2777a4",
        "cursor": {
          "ref": "4ecc140a-7496-46d6-9109-7e3e18afe542",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "1d29d855-298c-4711-995b-01d76be60ca2"
        },
        "item": {
          "id": "a8b8dbfd-c873-49ca-b466-42623f2777a4",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9e5f9fe8-3aaf-43d5-addd-0aebe07ef1f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd05d3a-914a-4fb1-a6be-b7f54732f4d0",
        "cursor": {
          "ref": "da22e7dd-fb40-4c75-b71c-4ee99c99698a",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "bca835db-bf5f-4a5a-99b7-424619a305c3"
        },
        "item": {
          "id": "6fd05d3a-914a-4fb1-a6be-b7f54732f4d0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "42f46c7b-87d4-4ed0-b51f-a7c5fda48b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27771b0b-63ea-40a3-91f5-8e38633300f7",
        "cursor": {
          "ref": "e7283afd-8e98-4fc0-9231-3c8b85bbdb38",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "14e9a252-9ac8-42d6-84a2-b187911c2688"
        },
        "item": {
          "id": "27771b0b-63ea-40a3-91f5-8e38633300f7",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "353d7d98-32ec-46e3-8c83-c50d659c006c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d626f93f-9c76-4e23-976d-6248abfde69d",
        "cursor": {
          "ref": "d4043f49-4890-4819-89d5-d14daa521074",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "40308ad6-6f3b-44c2-88d8-525816e35ae8"
        },
        "item": {
          "id": "d626f93f-9c76-4e23-976d-6248abfde69d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "273bca12-3366-42b4-b9db-b46fba4043df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c3f34d-675a-48bb-8549-614f45954ea2",
        "cursor": {
          "ref": "16ffa7e0-e2c0-40ec-ad18-1f5d25a68c59",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "af2fe1e7-7dab-4502-9c59-82ff4a7dc0fe"
        },
        "item": {
          "id": "d3c3f34d-675a-48bb-8549-614f45954ea2",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "82ac7984-140c-4fb4-8507-9486e23d13e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7933823-ea8c-4835-9bc0-02d6a4481500",
        "cursor": {
          "ref": "98985722-c910-4861-a615-ab551c4d1dfb",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "74e97cd6-6581-49b8-8e08-f74042308ac0"
        },
        "item": {
          "id": "d7933823-ea8c-4835-9bc0-02d6a4481500",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "71e821a4-bcc3-4c6c-a8a3-3f3a8379b2ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbdc9dd-4df5-4f27-a463-e396a1fe3ceb",
        "cursor": {
          "ref": "ed017e6e-9b92-4e4f-b157-f4eb06c6f3c8",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c461fe00-1b51-472e-a771-3ec6ae5a9b45"
        },
        "item": {
          "id": "2bbdc9dd-4df5-4f27-a463-e396a1fe3ceb",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2d29d9a7-6bfe-4c2a-8149-e98f5f6776fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c8081b-12bb-4012-a3d1-00535e0f76de",
        "cursor": {
          "ref": "7cc578e1-e4e2-467c-9eb3-e304b27d9acd",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "38d5e969-627f-4602-89a8-5033329b5456"
        },
        "item": {
          "id": "20c8081b-12bb-4012-a3d1-00535e0f76de",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ed7bf4ff-8da7-4190-b5d7-88657626395c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3be616-b26e-4a35-8a8c-175318aab1be",
        "cursor": {
          "ref": "0bfca1a1-d88e-4470-9e68-47b94f4c508c",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "59969700-e72b-48d7-90c1-9904144be8de"
        },
        "item": {
          "id": "0d3be616-b26e-4a35-8a8c-175318aab1be",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d24be3cd-2091-4cab-abb2-6041d74e389d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50588e6c-d7d6-48ac-ab3f-8a855b25c6c5",
        "cursor": {
          "ref": "aa13ac5d-e2d8-499c-a32c-29c7abe33ef6",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d81452bc-336b-4b04-9e42-165ff2bafdeb"
        },
        "item": {
          "id": "50588e6c-d7d6-48ac-ab3f-8a855b25c6c5",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0758a7be-1fa7-4b5c-8b2e-48e759f2867a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "208d8fc9-2dc4-4708-9087-70c0f5c1f341",
        "cursor": {
          "ref": "64bf8e83-4494-4aed-942a-be81dbc1f81c",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "bb089070-f692-4bb8-ac43-25f8dbd18e98"
        },
        "item": {
          "id": "208d8fc9-2dc4-4708-9087-70c0f5c1f341",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "3f5acfb4-e07a-411d-a3a9-53fdba519931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6bb23a1-d189-4a83-be56-48631c17b645",
        "cursor": {
          "ref": "7d1e7263-44b6-4856-b39d-c90a33698772",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2f2dcbe0-0c82-4963-8ad6-308f5a630e2f"
        },
        "item": {
          "id": "e6bb23a1-d189-4a83-be56-48631c17b645",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "0b034b23-4713-488f-8b5c-27abeb9f9e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5cee42-6420-495b-b92c-a9386cf1898c",
        "cursor": {
          "ref": "8e5bb548-442b-4edf-b274-44d5dd2e64d0",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0e843572-30ec-4aea-a703-3dd959e6f28e"
        },
        "item": {
          "id": "5e5cee42-6420-495b-b92c-a9386cf1898c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3ab42434-c24f-4a9c-b697-a5b707c9496e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75392739-930c-43b2-b954-45d0bbb59362",
        "cursor": {
          "ref": "d213c93f-c9de-4bc4-b9b5-f6a448238d5e",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "0382c328-76c2-4adc-93af-a897ebff8856"
        },
        "item": {
          "id": "75392739-930c-43b2-b954-45d0bbb59362",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "053e22d4-0d36-4cc4-8dc9-be3c178955d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b76f1e-f1ca-421b-af82-7ca3669c47ab",
        "cursor": {
          "ref": "506ba0f8-82a7-45fd-8ad2-33fe5d3a58f6",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d78a53aa-c095-4dff-9a33-270b45b53a8a"
        },
        "item": {
          "id": "15b76f1e-f1ca-421b-af82-7ca3669c47ab",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0c35a5af-3994-4635-979a-b121f4eb7222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e74206d-694d-4834-ad6b-3870e993049b",
        "cursor": {
          "ref": "ae7366a3-154e-449d-b422-76822b7c4900",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "2c617ae1-bbe1-40f5-8cce-80deb6144eca"
        },
        "item": {
          "id": "3e74206d-694d-4834-ad6b-3870e993049b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0498aeb7-cd5f-447e-bfaa-9eb703af594f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a3ff180-cf9d-4b3b-aec0-a2e37949d269",
        "cursor": {
          "ref": "9691166e-8a66-42c9-a413-1133759bcf99",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "f1815a9d-fbaa-402f-96ee-e1994c9bf978"
        },
        "item": {
          "id": "9a3ff180-cf9d-4b3b-aec0-a2e37949d269",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0c750f68-6131-4e29-b230-f4c16f0419bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cac2a80-9bdc-4e5a-948d-60cbf9d27b9d",
        "cursor": {
          "ref": "a3fc8801-618d-4bd7-8c6f-acb5405df06f",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "ed2660a1-afdb-4e21-acf3-e51eec525433"
        },
        "item": {
          "id": "8cac2a80-9bdc-4e5a-948d-60cbf9d27b9d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "86285626-2f7e-4c83-bcc8-579d61b3c048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf2bf1cc-01b5-4ab4-ab30-96d741199230",
        "cursor": {
          "ref": "1a80e5c5-175b-417b-b7cf-6fb1a11240c0",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "70c434c0-f200-4489-b692-83565527a9b4"
        },
        "item": {
          "id": "cf2bf1cc-01b5-4ab4-ab30-96d741199230",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "53ff779d-49d5-422f-9e9e-22e18faddde7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a0e684f-a4ee-4ff3-aa26-937da4a5e7a6",
        "cursor": {
          "ref": "bc2109d8-6912-4709-8926-21759e167397",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "0fbae4dd-3029-4bf5-9260-6b5da769f6ef"
        },
        "item": {
          "id": "8a0e684f-a4ee-4ff3-aa26-937da4a5e7a6",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3d0d560c-7b80-4eef-a8c6-e7d96b63ddeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99d5321-34b8-41a8-ad02-9365730e8df0",
        "cursor": {
          "ref": "cb8ca4bc-4f2e-4094-a9d4-c731b7f80597",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "2ab9417b-fad2-4a3e-9551-d39f605a0604"
        },
        "item": {
          "id": "f99d5321-34b8-41a8-ad02-9365730e8df0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "bc224afd-286c-47e6-9a49-80dd41f4f3b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "950fe387-d02c-415e-8da8-b38208ba31c9",
        "cursor": {
          "ref": "2094886e-56bf-49ff-9a82-835968c44c71",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "0c1b2402-7333-4f17-8cdb-ad3a4ef7c313"
        },
        "item": {
          "id": "950fe387-d02c-415e-8da8-b38208ba31c9",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e4902dcc-e510-4ce6-8370-0bfa346e73d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e3a86b4-9bfd-45d2-a78e-625e5e491eb0",
        "cursor": {
          "ref": "c0c812e9-8415-43c4-af68-4480a4ea15f8",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "e35f3b86-513f-4fbb-bd19-1b38b1be0662"
        },
        "item": {
          "id": "8e3a86b4-9bfd-45d2-a78e-625e5e491eb0",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "b02fbd41-faca-4932-aaee-bdbab85dcc61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee148186-638e-44ea-97de-01c52609b8de",
        "cursor": {
          "ref": "f1ada263-f034-492a-95b2-912ce46db88a",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "078f4115-34d4-44a5-8a88-aaa7d250fcda"
        },
        "item": {
          "id": "ee148186-638e-44ea-97de-01c52609b8de",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5e6a1ab0-2c2a-4b94-8af2-241b6a85ec3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1db910-1ec9-4161-8a26-2b42f69d68c2",
        "cursor": {
          "ref": "cbf33172-e91b-4a04-8886-002732b419e8",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "d3670e2d-17d7-4441-85d7-93ab42e38fac"
        },
        "item": {
          "id": "1a1db910-1ec9-4161-8a26-2b42f69d68c2",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9e2722f0-2df9-4f4e-b110-841b289feefd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f26704f7-df2e-438b-97d4-1e5b679869c4",
        "cursor": {
          "ref": "6f3bb0b4-a16c-4841-8326-594a45a61edd",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "07f7126c-02af-4968-a026-ba76dfc434be"
        },
        "item": {
          "id": "f26704f7-df2e-438b-97d4-1e5b679869c4",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "6d599ef8-96df-428c-93bd-2e02d39718a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f45027-d7ab-4622-a625-c7a859be2eeb",
        "cursor": {
          "ref": "90e4899f-c648-4f77-876d-513b325cfecf",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "09209538-f50f-4593-8ec2-8d8c7a548448"
        },
        "item": {
          "id": "02f45027-d7ab-4622-a625-c7a859be2eeb",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "99535993-d249-4437-8cb8-cb502ad3a758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48baf605-8cc0-41a5-a7e9-e34db516b8a6",
        "cursor": {
          "ref": "1778dd49-3801-446d-9703-c9cd6a30bee2",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "5a66d587-8883-4620-92cc-d9f1c0a3975c"
        },
        "item": {
          "id": "48baf605-8cc0-41a5-a7e9-e34db516b8a6",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8611c71a-8f0e-4576-bc8f-cab9aef09993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c1126e-cd68-411e-b9e9-009bcfb35901",
        "cursor": {
          "ref": "7d4571fe-4755-4259-9176-081f557e2ffa",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "bd8f0599-8d05-49da-809d-1677530dd499"
        },
        "item": {
          "id": "b1c1126e-cd68-411e-b9e9-009bcfb35901",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "5c7c104a-c00a-413a-ad24-713c66a0a6c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce3cfe4-573b-473e-b4c3-86fbc6b14402",
        "cursor": {
          "ref": "ddcb3e29-0f2c-4df8-b762-2f8310dd70fc",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "751cd69b-ff13-4f25-9c95-439249dc5c90"
        },
        "item": {
          "id": "8ce3cfe4-573b-473e-b4c3-86fbc6b14402",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "86fb35fe-15e4-4fbe-ae8b-b111dcf73719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a679ab-a2ca-4cd2-b77b-0d8d7f8ae050",
        "cursor": {
          "ref": "b135a4d9-e02e-487a-8b98-ba7d39f7eec0",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "44260402-ad5a-4e9f-9f3b-404552f94127"
        },
        "item": {
          "id": "07a679ab-a2ca-4cd2-b77b-0d8d7f8ae050",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5ff92a7b-d7a7-44ac-8f51-de607ae56859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db56c74-bc00-4aca-bcd7-bbf240a4b78e",
        "cursor": {
          "ref": "51e8ee42-2ada-4cbc-948f-f5456a65ab60",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "967c8185-9945-4cef-9b89-eaccd9775e20"
        },
        "item": {
          "id": "0db56c74-bc00-4aca-bcd7-bbf240a4b78e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "121d5e7d-66b0-4d3d-b61d-5187a6d1794c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc091bd-46d4-471f-8503-c1c89c3036e4",
        "cursor": {
          "ref": "f8503877-0774-4080-b758-9fee30443a63",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "b00554db-6cb0-48fd-9848-3a603636f3fd"
        },
        "item": {
          "id": "8fc091bd-46d4-471f-8503-c1c89c3036e4",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b6beffdc-42ff-490a-b45f-fc3706846ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efad69d3-8088-4768-8eda-1a6691338ab3",
        "cursor": {
          "ref": "72e0a096-c48b-4b03-bc4c-6fda54bdc955",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "614d1866-7daa-4c71-9ba3-182f25eb8f55"
        },
        "item": {
          "id": "efad69d3-8088-4768-8eda-1a6691338ab3",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "3700f083-e1ef-430a-8590-299d946ec234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dbe9544-7e1e-4821-9745-2cb2dc0b7cf4",
        "cursor": {
          "ref": "9c5d5838-4da6-41c3-a901-63365be03d5c",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "deaf6144-ba7e-402b-8a45-24b99f6e1592"
        },
        "item": {
          "id": "8dbe9544-7e1e-4821-9745-2cb2dc0b7cf4",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e4e3e7ca-864d-48dd-bd41-350d23872b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce45efe-b90e-411f-b657-9985ef466a2d",
        "cursor": {
          "ref": "628f3423-6443-4233-b547-7d2704bf6890",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "2b1d56cc-a6e8-411e-a589-c3a88c698eb1"
        },
        "item": {
          "id": "7ce45efe-b90e-411f-b657-9985ef466a2d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "88d3f1df-3a66-4377-b4c6-c0236d3cf5ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88666e10-a653-4ae1-b865-206933765602",
        "cursor": {
          "ref": "dc5e0ec3-308a-4f24-8a1f-59c6b3a45618",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "fd9e368c-3076-4f40-ad0a-c46533dadbe8"
        },
        "item": {
          "id": "88666e10-a653-4ae1-b865-206933765602",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c897fc3b-f6c1-41df-a310-92aed36b5444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3443bea7-d0f6-4665-b8b6-c582f8927179",
        "cursor": {
          "ref": "242742c7-c4e8-423a-a376-97339488e932",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "618f49f8-b4d7-4dff-8b31-7a367ebc7a4c"
        },
        "item": {
          "id": "3443bea7-d0f6-4665-b8b6-c582f8927179",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0c2e7977-d6a6-4f77-b6db-b58185a2b820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd65da39-67a5-46ca-97e2-cf2bb921a5da",
        "cursor": {
          "ref": "0ee20dab-5fdf-44d0-9e48-a864d45880ba",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "f9df78cf-2cc4-4096-b98a-e1753358cfe7"
        },
        "item": {
          "id": "dd65da39-67a5-46ca-97e2-cf2bb921a5da",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "5628dc20-cf90-4e31-a45b-2223ae58f47b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c7d1f5-ec6e-4c70-8064-4483db802926",
        "cursor": {
          "ref": "4c7fbe3d-93bc-4796-99b9-cb16e6e98544",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "404972de-93e1-4fe7-8efb-8b0cc1dcb4e0"
        },
        "item": {
          "id": "89c7d1f5-ec6e-4c70-8064-4483db802926",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5ae1c3e3-0bb2-4789-a573-8f570b9fa424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f7018ce-263a-44cb-bada-7ddc0f0eb072",
        "cursor": {
          "ref": "01f64e69-662d-4536-b9c4-c68b89630830",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "6272561f-3835-4bc4-a16e-995279c8bf47"
        },
        "item": {
          "id": "3f7018ce-263a-44cb-bada-7ddc0f0eb072",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c16f5726-58f3-465b-bf1e-4ae843af0415",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d4d3e4c-f415-48ea-825d-90e29f60fe84",
        "cursor": {
          "ref": "cecc14bc-5f37-4768-b7a8-6fb0968e993a",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "7daff914-8520-4613-a711-a07c17cab8d4"
        },
        "item": {
          "id": "0d4d3e4c-f415-48ea-825d-90e29f60fe84",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b8b4bab6-638f-4bf0-ac68-da3e23e8baaf",
          "status": "OK",
          "code": 200,
          "responseTime": 116,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "9525a443-6c9b-4917-9421-6cd4e7476633",
        "cursor": {
          "ref": "7e89a0b3-149e-4da5-9b9d-4530bd452d02",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "eab6a458-7b1d-4aff-b1a0-e72e0c9d88a2"
        },
        "item": {
          "id": "9525a443-6c9b-4917-9421-6cd4e7476633",
          "name": "credentials_verify"
        },
        "response": {
          "id": "79d88672-e899-4e22-a233-c5fa82324f0b",
          "status": "OK",
          "code": 200,
          "responseTime": 1834,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "473f70c2-a04e-4c80-94e7-146eed67e4fc",
        "cursor": {
          "ref": "153c2c39-5f23-418d-987e-6f95bceaf4f3",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "d2e1e607-479b-4a04-a5d9-b6267f9f6c24"
        },
        "item": {
          "id": "473f70c2-a04e-4c80-94e7-146eed67e4fc",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5f90bf17-4006-41d8-982f-30ad9e077c4a",
          "status": "OK",
          "code": 200,
          "responseTime": 1413,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "429d56cc-d57a-4f75-9f17-285ae0be23c6",
        "cursor": {
          "ref": "eccfa49a-d773-4c10-9c55-2e5e4974859c",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "1f6957f4-d45b-47a0-a2fa-19a99f300873"
        },
        "item": {
          "id": "429d56cc-d57a-4f75-9f17-285ae0be23c6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c8451847-65b2-415d-afe9-c50fb61988d0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "429d56cc-d57a-4f75-9f17-285ae0be23c6",
        "cursor": {
          "ref": "eccfa49a-d773-4c10-9c55-2e5e4974859c",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "1f6957f4-d45b-47a0-a2fa-19a99f300873"
        },
        "item": {
          "id": "429d56cc-d57a-4f75-9f17-285ae0be23c6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c8451847-65b2-415d-afe9-c50fb61988d0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3959d02b-fe1d-4cbf-8c71-034ab93e225b",
        "cursor": {
          "ref": "8a720b2c-36a6-48f8-9038-b962f7aceaed",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "9f8e7348-86d2-4894-9006-7a7e3b22a3c7"
        },
        "item": {
          "id": "3959d02b-fe1d-4cbf-8c71-034ab93e225b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0f49f8bf-0e76-4736-a159-f9f6af97dda9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d5fbdf6-7dc4-4aaa-9afe-61ef9e3b269a",
        "cursor": {
          "ref": "11f180ff-c7bd-4176-86f7-dcb7df6d7897",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "1e74147b-1140-4a63-ab4b-4333393b34e2"
        },
        "item": {
          "id": "6d5fbdf6-7dc4-4aaa-9afe-61ef9e3b269a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f0c64cc0-ab6d-403d-81bb-2084cc1c2bdf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}