{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "77de2e6b-9ee8-4a0a-93ea-b1d99df02fc1",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a345a9e6-b782-437c-9125-41bc32eaf609",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e47cbfba-f5e8-4840-8991-999e4fec1ce4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "57b442a8-9745-4710-8c9a-8f2d22a77197"
                }
              }
            ]
          },
          {
            "id": "b9ec77fd-ebe8-4b2c-befe-c4b1596c5aa0",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "49487ba0-f8ab-4278-83ea-00b6de9d9338",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2d258b7b-e483-4ee0-b1f6-e0879885f585"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f05fe3fb-a242-43b7-9e02-3d5b6cdf6df1",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ae6f5d7f-a1e1-4637-92c6-89669e9ada0c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9d5d9dce-8533-4556-bb6b-eb675b1d80fb",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6426e7cf-2bde-4efb-9267-85f0df43ce3e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3348c9d7-882b-4991-84e0-0dbf443de08f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5377cce7-24ed-4a00-9d2c-d572a3bb9e38",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "343eae31-0a32-4de6-9198-4b2d6d83cadc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cb900410-fd33-4dba-9e15-5ddf00489990",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d945adae-c5d7-4231-aff8-60ef41e5d7a6"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "76bb243b-9ed9-4a78-8e47-fd55debd3df3",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "bee07b86-0786-43f0-afb5-dd71a3f85960"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d793cf25-f966-4dc3-99db-03ff0c8a41fe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "992d92a7-1cda-4384-82dd-99fcee811c46"
            }
          }
        ]
      },
      {
        "id": "6d220bd3-353d-4d53-935c-c6ba7a6e7db2",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c53391b7-6b25-4f26-9849-0b099efc1a8e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4fd9e244-b705-4365-a264-4944a5a76ac2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fee576a1-18ec-40f1-acba-f13ae4581601",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e1863ba-061c-465e-8f2c-e2607cc26e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d7da634-bdf1-4337-a236-45c8c24b1657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "970e51b5-2641-45f4-ac09-4690ee60f722",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2568e2f8-756d-4cc5-87e1-e908efc7f1c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "51780fd7-7fc5-4667-95db-2b4cfa070296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ff764d-fa9d-48da-b5b2-0ffc99ba3e5d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21010a7d-8a6a-432a-bc6e-f647fe50028c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8fc39258-341a-4a90-a412-0cc5bc300614"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bcec0b73-06d3-4f71-9aae-c99c24fc381f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2bfeb64c-498d-4dd9-990b-3a2c989b9067",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "158a7fc8-57f4-49aa-bde0-f6cb4e1e91b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1db8f173-019a-44a8-ab79-42e2b3955ae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a19e0eb-f4f4-40a6-96df-c01e2b01ac97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5853159-c91b-4385-b6c7-610c8374e35a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3ac3a890-707f-427b-9fca-d2d1bcc2466f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f80104dc-be50-46df-81b8-69944592c889",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cfaaa511-924b-4fa7-9dc1-33720683a609",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a8efbc63-d191-41b3-ae0b-92669b81d298"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b64dc400-79e0-423b-ae31-27acd866c72d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "54a915ee-cdd7-41e9-859a-3ea16d122ff0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "58d621aa-a20a-4958-8c01-0439ae07ad74",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0555a5d1-7ba4-4730-8e39-4248e8748dfc"
            }
          }
        ]
      },
      {
        "id": "7d57e544-259b-4a76-8005-5f15e8cfcaf1",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "71dc6cc4-a95b-49b3-86e9-8f1feb31b259",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fdb8d98f-e8ac-40c1-ac44-dcf20ef0242d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "8bce7f3b-98ce-450d-abec-ac495da867f5",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a5e7822-4ffd-4f4e-ac8a-cc431aad03c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "551c6d50-cc1b-41f6-a45a-817c95c0710f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de60368-8f89-43d9-a2f6-19bd4136b684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4dd3fa75-7a52-403f-8fa5-81f780adb9be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b603da-d413-4c8c-a0e7-8a645096e49c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b838ab-fc56-4de4-a0d5-03efb5f37755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a28c510-cbc9-425e-8d77-0419ef75b5a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba23d33-971b-4183-904b-f6453460c470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f425f66-3284-480c-b32d-898631d63058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d4375b-2650-445a-85c2-c61700789135",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b69c011-dcdd-4633-923d-fa0f8823c7eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79c5ba2c-1e84-4324-9c4d-53f615cae171"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "144c26fd-20aa-493c-87d0-6f97dfbf90e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d681b6ae-d7e2-45f9-94a0-4f0501e48374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a3f3dd-6cca-4fe7-93b1-e9f0ff7169d1",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f177f7-a9f5-4083-afcc-37e205c8ce84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76ae7025-abe4-4a87-afd4-d6853d56489b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a44497-f406-4efb-9bda-3e1c8430a663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40852eee-c280-4756-a730-4f4898a55cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a9dac7-044f-4365-8c67-60315b1daae1",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c2a1e07-7ecc-4f21-a054-248bfb3104f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac96a4be-64dc-4dd1-a4f8-93978869de26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59db0f6f-e6da-4983-85af-32148eef0607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56fd69a2-5071-45fc-8da6-7fa1b84d99c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2079e691-fd3a-4f8f-b735-ab4760d0e943",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35edfc7c-5d1b-4284-a4ae-4bc2066069ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ffe462d-1d90-4e88-93b2-b38916a144df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca73f97-68b3-44ab-9181-03e0031e206d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bdf5108b-0d41-4268-b7b9-f023f4fc18e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a573c3e4-508a-4eb4-bccf-17bf27e9b3b4",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc5ab38-7662-488e-a6a9-e36e494442b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5485eaa4-f400-413e-8868-b115002c14e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be69ada4-e014-4ac0-971c-cd4aebea93a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d729b0d-bf26-406e-a67d-3e9d6e83bf10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5653ec4-99ac-4131-9212-730985485f00",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b58fbe26-e092-4176-9195-2eefd95044b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0535ac48-8beb-4f37-87b0-330048ff5be5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb02080-b137-437a-84f8-5d0935da7a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6989aa6-73ef-4d1e-b61e-a8f27e5ebaa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e54eca9c-a547-4baa-877a-54317c7099f4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6437368a-31e5-48ee-bcaf-e42889dc0ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4371ca72-7cc2-4a7d-83d7-fbe84a470010"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3114f2-f244-4761-8eba-e9f68d692c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4c2c339-3ce2-45a4-ad62-c62e1bd59f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d269419-6f13-4815-977a-0ed2652d6a96",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6f8b61-dc7a-4175-927e-c41e25f92bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae740d8c-db97-4d0e-9043-76e246b7e43d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb33fcd-c838-4fec-99b4-5028aa6ad052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2040472b-f61d-4a67-a00c-7bcbb22b4a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a1f7234-375b-4713-8288-4c8215cd2d96",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "665fecdd-9b9b-4290-946b-7f32c332ad3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65cf8cff-5df4-429d-989b-9744d6639af5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed279602-dba5-4ccb-a6d0-a5a8e8b22320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4bee4052-4537-4216-a716-7dea4754aa70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceba22f2-e09a-4ae2-9230-35069691f70a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6681378-ecec-484d-8bdc-c3e0264d37d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1e476fa-1b8c-49ac-966d-6f699104557f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba9d39a-3656-42f5-a7fb-c094776674bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "682111c0-8b56-4320-aa0a-36f015ded63b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d7ecb1-6b29-413e-b3f4-ca12dd6bf5fa",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dbdcb01-26ff-41c1-bd35-a60742c145ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee1dccc7-e81c-4b69-a13f-565ffd07e578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4806d087-27d8-4f2a-98fd-f07c22d60260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "070ad7f0-8f59-4b83-bda4-c6f1872f677c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af68af9-2cd2-483a-9b38-aadf40327951",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf276f9d-e064-4834-908b-bb89da3eb53d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce5a324d-98b4-4be1-ad3a-7bbe18073c11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27cc0aa3-8d83-492a-b110-d03e57bc91d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3bf8d85-717b-4c72-ba60-bb2b986ec5d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "604afd22-8484-4a68-aff5-1950ce58eebd",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4adca753-2ea0-414f-bbd6-9da749a27727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c52a3451-7157-4a6f-a490-dc29a8ce085b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6845c7de-a78f-40a4-9f1f-908e54b8f4ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1fd3d1a-0822-4b6d-af51-bed8d4743bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "581ee54f-ce5d-4387-9ea0-c1c09b68f911",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19269a6d-6f40-44db-ac2f-b7edb7dbc182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c47c807c-866b-4a67-990a-b42018fa4c81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e3da9ae-3b4d-4986-af05-0c90941a8d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a4738a4-f302-4c09-ae34-a3b9abfecbbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "837f1e8f-47ea-4878-ab00-cc2cf321186c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "314128dc-c91d-440a-b44a-1e0612c21ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46e44c8d-4ed8-4915-aaa3-39076e4de40d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "203ae53d-30d8-4258-bfb2-1d636eded52d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09caa647-dd4e-4f15-83ad-0508552fa9f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d0024a5-34ad-4f5d-8f74-af9471e631dc",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7c40f3-932e-45b9-b9cf-d8e015b57439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd381a38-baaf-4cb5-8a9e-c3976fd9591d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1589bdb7-0d35-4816-8fc3-7686748326b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c06130ff-bfb1-46a8-89a2-ee985aa0967f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4393a71c-ab1c-482c-a9d3-4efb5256ec77",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c925408f-98d0-4e9b-afab-1e9a70be52cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d704a6d-21bd-4990-b53f-61b8b750b384"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fece8b59-ac42-4625-8fc2-2c8e357935e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "61b4b732-224d-43a5-b798-eaab8cd59b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09cd219c-9baf-434e-9344-23de215e7a7a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de85231-162e-4458-b377-956547bf22b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3c6922a-b6bb-43ef-b699-a08f01498692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "536fd509-ed61-4390-8e01-858dba2619a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f4ae043-8732-46d0-a304-a3b6b3b381db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed585be-17cc-4285-b966-11d64697d4e7",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "621a4c5e-ae47-4b2a-9368-87dac7c89815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15960f2a-9924-4c90-91a2-5f67a56168d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5fe2a5-42a4-4cd2-b805-f23235c13686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "457de8e3-641f-4658-9b70-4376edb4c421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f676423c-d676-448e-a4c9-f3c1cf88cf7f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d7e41e-9277-4091-8b60-22a82889fc1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73f505c1-1c0b-43cd-9709-94dc32f11be6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee8f752-1802-40b2-9fbd-79bd4fca93a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5437dd1-79a0-4268-b281-748148f44520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d546cc5-06f1-4fc0-a15b-0d9db9312cfd",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb42263-0c61-450d-9ae6-60e02f568321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "834c149f-4922-44a8-962d-2305829ae126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50aa05ef-fff3-40df-afb1-b34eb2cc2364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "75dafe76-ed27-44b9-b399-88d6496d7ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0732ccad-291f-499e-81c0-77aa19966867",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e1c2d24-23a0-49f7-a657-a5cd93159086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "027dff5f-9cc7-4c2c-b9cf-ea58c48c0398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08fed9cb-cab8-4d7b-b806-f3f85c989e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1244b415-a984-4d16-b8b3-77905922de0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f2a7b0-0ce9-4d9d-b2d5-f410b93d6564",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b50dfa12-c148-47e3-af58-6deb27edd796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41d37abe-f59c-41b4-8ee8-f7385ea64cd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdcdb36f-7600-4cc7-816c-f3b6ebca5686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ccf8f78-d61f-4600-b25e-941551b4a555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac20b3c-ffb5-40ed-9f80-873dcc8a86c7",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c45750-b97f-4b84-b986-a02d2d6ecd9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "513770b3-c8b5-4c6a-aae4-6f920d864744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bfe4078-eb80-433a-ac4c-3fbb7b70fe08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e0f9ce8-9c36-422f-95c1-4c2db40dce32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd1fb772-8999-437e-bd33-27a145565a95",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ce46cf-6e96-4ff9-8deb-623ee5bfad5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7750cb15-c4e5-4d41-9d0d-6f9c968d0277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a4892d-58bd-469f-a21a-f39b5391fbd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f265fa2-e319-4abc-a975-4da7ea5b9369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33dbb44a-f3af-42f8-9bd0-d28a73418e9c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4844aa-825c-41cb-b535-8c36ee9546b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec145dfa-f186-4867-b5eb-8d752186bb74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d8454d-89c6-43e4-b85c-9b00f8cacdbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "37201305-2c8a-4be4-8acc-2da1fe34fcd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "216f8b7c-6228-47ef-b645-3def3d47939e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d519b479-1157-4517-a44e-76049def90e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "919312fd-558c-4b78-984a-257430821a8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ffbb6b4-7a99-4f84-91ff-bb3901fb69e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cfe19ed-4669-4a81-b46e-69eceb87d946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa4882e2-2e4e-4a54-b536-8c3f06423815",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "762d997d-de5c-4fcb-930b-fe2c55660a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "937f81ae-a9e4-4a4c-8631-34cb5aa5a0af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "139ed8c7-8418-406e-a8c9-513cf7ee0837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9704764e-2146-458f-8724-cc8057cb0409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "509aa1f2-049d-4a5b-835b-be702b847f74",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18eb0553-54d5-488e-a591-7b882a4dcc0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1c92c44-b803-433c-ae2a-1fdda583baf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d30ba78-1a34-4d0a-aca0-ad93f31c128c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "538904ea-9c09-44b3-ad79-4c4ae091811a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de4931e-cf48-46d9-a40d-f8abb0e60ca4",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44c3a11-5dbc-43b6-9416-f2cefb48675c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "379897b1-cab1-41a8-9b3a-9cccb7083646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "515f2724-cfc1-4874-b1c8-70000be20df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d99c1199-592b-4e04-8214-92e3c4ca4529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90efe7ae-9b3a-4db6-af15-eb5833c12f1e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "870a11d6-39d3-4f02-9a9c-08a096b70b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c0b3ee4-3970-4883-9965-a55a5435e357"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0b2287-6286-4d92-8afd-de4c8d08f848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f556d44e-57d5-44f0-9ddb-2446398cf1ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a24956d-1fcf-46ce-9a6e-8604c027f8d9",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c7c4d3b-7a4a-4ffd-8972-5c40e0445d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0c071a7-56a5-4bec-8726-3586cbc25ec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d8fbd2-c0ce-4614-bbec-513ab6a28bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "39f60d59-08be-4b15-a527-59cffc3af4c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f049817b-4f2b-41b9-a0c8-90dae0b49882",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bfa1cd2-a46b-444d-a3cf-6d70246556fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8082aa00-d9b8-4e05-b2d9-b5d49683c3ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f78ec22-eb5f-4598-9f18-54e44e35334d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d7eb7c21-4d74-4bea-95bc-dd48d48474ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f66091-f655-4c57-b5ad-aa7671ac45b8",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce428d0-a920-4f22-8302-e8033033bcfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b6f17d59-ffd9-4ced-b244-13e2f9cc7acd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bf7f166-47c6-4729-8067-c6504e13d546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d15070a8-7bb7-4b55-958a-147e990607fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559f82a8-2e73-4a1f-b052-c117165f4cfd",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a61036f7-5315-45cb-b475-56fb49064c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4253fbd9-023d-4acf-8b2e-d2d2b2470713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9c25bf-0c56-49ca-ae3b-9626cb4cf2e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffa2586d-134b-4c7d-8b25-e02cb651309b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23653529-5073-486c-beb2-9e361bfdf2a6",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a752fa9-95d8-479f-b48e-2546bfe96d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6c3e1e3-7972-441f-92bc-b3aced88934f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af12ca66-3ce8-4625-b6fd-5f515bbe3b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "07bb5bcc-5b1c-4606-95ac-88611e1ab4b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f72b6c0f-2942-428c-857d-a50a3e2fd8cd",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4928da9f-4929-4d44-a20f-c11e8b40cf2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aea0f01-fd8f-439d-9ab4-ab475eb48571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd877ca-b3bf-4865-9a05-e1e4c62f0ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "71fd8b50-76ec-4c7c-8321-831cc05880b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed47b6c-2c7b-423b-b5ef-37d4f8e32f66",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f91832-a325-4432-9816-14f1fbd3b23d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6745c226-db3c-4249-af8c-31c411600b6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e421f1e-724a-4900-bc76-fe606fb89827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4527a473-d9ca-4a89-b35b-fcf76520d812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6e97e3-3626-49a2-88c1-9d434d9b74ef",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38951ec0-4cb2-4ea5-8f16-ea73cf24bccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f091684-fe38-4019-a578-23b943627e31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a94ee70c-6fdc-4467-99d7-db13a4c443cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "246af64d-4411-4871-98c8-3e10712fa505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe414289-9232-4f81-b858-847bfb328821",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11a1659-d55d-4435-b862-df8e9485a166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d42db36e-e371-479d-a2ed-9292e324c8af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8fd057d-dc6b-4f1b-9ae9-58b8963805ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "78236edd-5a33-423f-b15b-cc0ad53f02c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2039236c-3ce3-4ed2-95e2-c3d4e0c8df02",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b02802ed-86a2-4feb-a3a4-109442fcd58b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53afbf05-2531-4c60-a7c6-a0f46c983b32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed155fd7-25bb-4161-848b-19da588de3ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb8db98c-17a0-494e-ae3c-30d44debe3c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7276889-de35-4176-a24c-0794d903c081",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bcb4a85-83f4-4861-be2f-7d9e7f5029c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c817561-5c73-4329-8ce5-78738edf83aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb9c6165-0f57-4259-a3d3-bb5313db285a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "24ac40c1-4476-465d-ae29-81af7c4232f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f4e9da1-3437-414b-a53e-1fd3787f7845",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85326196-1586-4ff5-ba7a-b646a8cb2dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a999464c-7299-445f-a86b-cbb53d578986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d9b60d-7945-4614-9e3d-217c48e282b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f9718fc-0864-428a-85d3-f0a0a0ac551d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb5f9b8-d798-4c9d-9911-d1b14e2c3b62",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a87fe280-b0da-486b-897f-187ae88f519d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14bcf52c-e9ba-405d-814b-76ef73ea6fc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f155d2-edd2-4bfc-93d2-61ec318d5a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a54f0a3-148a-4867-8c22-3d03a90ca81b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b27c53a-578d-489d-92bd-fe71bcfe157e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd25d325-46e4-4b5c-8ae9-6af390ddb134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7971a462-f113-460e-84d0-f1cdcd0718a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "456bcfd7-14c9-4683-8e8e-aaaf4b3e77e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2170e676-b5d4-4e8e-ae48-17a82c13c95a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23bac7d-b540-476a-9f60-61e78511e771",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e64516ec-850c-46b6-986d-a5ce5a47ccd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e554544c-2ee9-47cb-9811-ac6cab815a55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de58e800-81d6-4ad1-9db9-6b9f0b78d2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5a51be2-8585-4a67-9a19-b186ec8727fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac1f6fcb-dcb4-45a7-b8c6-884e33f96852",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d3b994-078b-46bc-810e-fe82910d7b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc1cb821-fdab-4099-a3f6-6c50ebf859d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7602e1e4-cd91-436a-9ddc-c88d7468cb40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0bc1130-9422-402e-8fc6-70511a6ae375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9032ff-dadc-4de6-9764-576dd6d27ba7",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3c2a918-189a-40cb-b5e7-65f376ccd75e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ce6a86b-a495-4837-bbac-8bccf93aebdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2119a77-69da-4e8a-b232-01a9b4b00b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6873bf27-d6ae-4374-9bb0-0b5c2f274d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca9477cc-d881-4768-a0dc-4bf8c2cdc5ee",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0164d0e9-4ca8-48ed-8aea-00c95d6647cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30c4bcf6-9eb3-4d7b-a045-a1cf094ac528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff19ea01-7b81-4f4c-b72a-253d3e2088f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "91fc46cd-4eea-47ee-9fb7-767297566b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4bb5a85-fa26-4aaa-a82e-c88e9974bfcc",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c18851d8-a119-48cb-888b-edbe1d29f6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7465127-5c95-43be-9a1f-4fdb214abdaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1e8019-00b0-4da3-8427-fdb947ef6989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c1e9f06-7145-451c-b514-9bf676275179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61890ca1-5aa6-4b81-aa4f-ee6ce595b03d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa442b68-43e6-461f-9e52-7cc57c6f1979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92bbb3c4-eb7c-4fb4-8d2c-e02b828467b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af13c6dd-4457-467a-948e-5059e4863765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c7a649b-4adc-43d0-ac08-66b80d37f2a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c7ec93f-1de9-4309-b6aa-7681c0f554f5",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8449f85-6b88-4191-b23e-771c02f9700d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85ba2f86-ec89-43c3-900b-5f347bc44099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf0e0c7c-028b-4c54-8646-a9612cd46814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9077babe-6b1c-4cdc-88bf-0811267a3eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db819550-0e0d-49f4-83e2-4c1aa704536d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "747e0389-3a1a-4083-a816-b69a749d2c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c4e8602-642d-4cea-9281-a6bb7c906056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a17d0348-cd5b-435b-89a3-f14571650b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7716c4e2-5c0a-4cdd-87fa-2388d0043e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee4a583-558e-42de-abc4-43133f2368cd",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b43489ea-47bd-46f5-98b9-600e45ace287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c736d90-4248-4024-a1b3-ac4a42686ee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f94c65-1e68-4959-8c67-23966c7874f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ffd35e38-6e96-4e08-904f-8b92217b8cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1901a3e1-c88b-484b-91d2-61f1b3904c53",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5efe970c-b9eb-46e4-bbc2-017529ed201d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce6cd343-30d5-4500-836b-f7a2af25de85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f61327f8-1db7-42d3-b14b-a5acc1867230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "50c1aeaf-c886-4811-9c2c-6c4efbf26ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3364beb-edcb-4a61-9ff8-4c9fd3364959",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70588d69-86d9-44f4-bf59-4979062e28d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df2a27a1-91a9-4aa9-a97e-4449f5318a4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "916d798b-56d9-4b76-b851-04c5b87d38b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a48eadda-6559-4bee-8297-d56b7f9f693e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a83b5b09-33f4-44d2-a32b-594f71284758",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96d1853-6d09-4dee-970b-6781c0d24721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "610e4dc3-5591-4ad7-9c21-febc9053f8f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7a3110e-e367-42c9-b782-076456b3e8eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2212f9c6-02df-4e69-ba03-54b4cf2714d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a6a64ff-2793-484a-b728-d298b97fe4c2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "983ac250-b39f-4ddc-94a6-0bd1b9cb3ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b66a4d13-9253-4fce-8ed1-124027ed1629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da505b1-5581-4a80-905b-a4b60aa1bcc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e65bd47b-6fd4-4d3f-b4bd-e6242bed7ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d593b8-ce86-4c07-b27b-099a517c7068",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19563ea7-1d20-4f34-9ac6-23c8fa43102d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f2206ac-3071-420d-a249-e20ff860be33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d28ed5d4-fe1b-4c25-809e-8bd119add4bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ac092fb-478d-4731-a1a9-412a2a2b7aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d24437c-01e1-4368-a8e0-a6761ab8b2e4",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad7d03e0-cc1d-4085-8340-d07353a1b863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b56aef02-25b8-46a9-b81c-949166f4af52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a46a10-eda6-4602-a731-124e76f0df22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cd52e33-cba9-42a3-97cc-fcd111370d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb6f7e9-c420-4766-bdf3-a7da8f3b01e3",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd8b1b8-e76b-4667-9efd-6c0748881be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e25a7c05-552b-40aa-b534-14ae913ff459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321124a9-66bd-4711-9928-a3ede06b7c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "10602b0d-5360-4f46-9bcc-d4b6e3fb10df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cbac22b-58fb-4003-a4a2-7d53abfafba8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73a285a-8c7e-4aaa-a210-4dd0628ffccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "040d5b73-d454-4855-aee9-99f525a38635"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaf7fdab-07e8-4631-9d1b-5a4802e256b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad3b0ec2-5d1d-477d-bad9-341a0e94496f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d37c1fab-ef0c-4244-9175-1aca4e0b314e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39bbd56d-16c7-4ff4-93c2-8f7ed1f2a2e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1044861a-216c-4239-8d18-80d8f2e08b45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "118fe98c-1edc-45ff-9388-99dbdf77ab03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "204f2415-a2f7-4fbb-b5ba-ea8aec1b224c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a27da22f-8250-4a8a-b1f7-0cc5e9419608",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab8c126-dac6-4efc-84a0-8d1fde88f8ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d88248b-4a45-4e03-9346-b3d67035a6c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3dca446-90cc-4d17-94a1-0dd8419a59e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8bf6af6-7ea9-44d9-a615-fa40a9873029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a6eb18-49cd-4c37-9c5d-3f8d3d1908ea",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51edea8a-5b08-4428-906d-9365d2aae3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d782b6-c6ba-4a19-8116-079e72a2427d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de478b7a-5feb-4e93-829e-574649718235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b1963b89-cb65-4655-931b-0a9fcf5c57ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c8e6fe-fb73-452b-b3d9-39a7582fcdbc",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "139150c6-6bb5-420c-80a9-d71610fdb8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b52c481-075d-4b2b-a637-0a1e405a6e56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27214d3b-8181-4bfc-8756-f1fb0147a66a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "56df1558-cf76-479f-96ff-962d8a42f855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f98a39fc-b323-4fbf-abd6-3a3931e90737",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c00d5a0-bcc4-4f78-8edd-5a8060900dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "854dda9d-7db7-4ce8-8c38-30c844212e5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ecf0eb6-8de3-48e1-acba-77120c64e522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "90bedae7-a560-41f3-869d-2fb69d3ad049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c19bb3f1-40be-464a-b274-085d4a34104a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4423ef-ab3a-488e-8e29-a2f3ab0f39d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0f4430d-4357-49c7-ac45-fe2d0e1f542e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714fc49d-0e29-4105-b88c-adce33e9fd58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "48222728-665d-448b-824a-714a4743cfb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b72500-7a45-415f-a940-bd4cb9e78e82",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df1fae3-c9c4-454f-ab12-564c6e385ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1443289c-06f1-46ed-b544-f5b3d84f08ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0711256a-9e4e-4645-b675-0dfa1cd54aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9281a2e-ad72-4ece-a7b2-2ffd5a14123a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5adf5e6-8e09-478d-a602-530dbbccf541",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca0ad40-2d82-4f6d-86a4-504e9176ae9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0f14704-e506-4040-a25f-f19744b1ff26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be00a594-2b3c-4ac3-a9fe-be0aceb8add6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "36e2384e-ec89-4848-9e63-42ff8809875e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf0efeec-f319-4d7d-a04d-c960a26c856f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cefe46f0-d539-4ccd-a376-67e2437534d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63bd1b8a-2a8a-4e26-b843-5427e9449f1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f24dc056-4b5a-443a-8de7-d586ca3b91e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5e17c53-9324-4d27-8529-a4a73db5e779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac9a86a7-1a14-4759-be25-615caebd9724",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf5794f-cf4b-4840-82bf-758ee7426500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f2bf0b6-5018-4ed4-8894-5e50d710407a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bba9fa2-2ee1-457f-be02-167b0086b03c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1b72a5ef-5c4b-40af-8018-fd0ff39212d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7a15ce-5d1e-4dbc-9032-2139cf6faa9e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e94f937-80ec-4c16-a68c-f0cf3f538ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0029360-0269-4602-b6d5-2662d5ef587a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f98ed0-ea5e-4334-928c-c794760635c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "52eb57cf-d69b-4631-b861-80de8caf4a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00dccd32-7d14-4cf3-bea4-dd31e7c66f97",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3aaa30e-89f4-4d58-9f3a-0a13d56d7806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c82c20a-914b-416b-a788-220ca86951c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb4b5911-e65a-481b-9a62-a5fe84ebf96b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7436c6ea-0bd1-405a-90e6-73b6e360019b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53c8021-75e1-4a09-9921-32f30e7a1e2b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d25dbd43-082d-461e-9101-f362e9a920fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b3e2d10-b4fb-4fc6-afe9-538741159482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa31556a-2c24-41b3-a21f-e3c0fc6c9d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1f11a65-5abb-429e-8a47-f27a69661b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eacae846-bc79-4c07-958e-7f214761752f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45ca85f-e101-428b-a5c5-daa9e3e7a11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "040d431a-0742-4841-8c77-95af075ce94c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d9a0d31-db81-4e21-8946-32aabbf5a7e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8f0ad40-164f-4941-9354-1bfc7a8534fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c66128e8-3520-4fc9-899c-ec618dff1349",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6ee6aa-d33c-4830-b17d-d900b4a42df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87673849-29ea-4c62-bda6-a4a19404dc11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c27e9ecd-4dec-430f-a633-2a4eff4c60cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4aba44da-c609-442c-9b36-35db3f9e2632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e0d853f-6598-47cc-9a79-6f419c4a2310",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87cf87e2-667c-460e-b68b-c569fa19d42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f84b22f3-8ab0-4608-94ac-e35dac44ef4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b0d97e-0f65-4694-9414-dac45ec11065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2dec02ee-8b64-424c-9052-bf8f6f1cde11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ddf12f-ae07-4ffb-8fc7-fb378acdcb53",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce069a4a-900d-449c-922e-783cbe3b10f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "714e9da6-d71c-4795-a1a0-8af7eeeba42b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd153082-b2b3-499d-bb06-af53ecb83ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac32b10a-5666-4ccb-aca0-50f5f6c71aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "745ba390-3156-4635-8313-5ee6468d6198",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a39fa1-dfa2-4079-b2bd-fdd533f32ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53bc8372-f057-447a-ac1d-d1c852ff9cf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee19677-c68e-45d8-ae10-55122815a248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "09118845-1b03-47a9-ba2f-377e393724a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b751f4a7-caa2-4940-97bd-51c4c6ded0cb",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f1c1a1-de67-40f8-903a-f2a827efc3d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2cea83b-f73f-4715-9683-631215cbf7f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d5fc97-eb50-4132-a68f-0df96eb6ae76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dadfc6ff-a58c-4539-90d2-aa5da82e8a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d50a94-62a8-40bd-88da-db6ce70da41f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8255efdb-3935-46d5-9424-a5a4956fdbe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62a882c3-7c45-4e8a-a7dd-fb50f5b0e429"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c43f9f-9bbc-4c1f-bc43-1d900fc9b234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f07fd258-d213-4ec6-87fb-90daa8b4bf6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7623a46f-c969-4deb-bd37-17ffa7f5a73e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6baa949-a5c2-48c9-af88-0dc8ad31c7db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82bb41b2-616f-4770-8cfd-30a3bd544904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d973aa-8ed7-4182-90b9-29347f398871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f6bf3b6a-0af5-4616-a289-42737243f125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc3d4cd-603e-43e5-85af-9fd1fb55288b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77718fad-a618-4b56-a8e9-58571a4b4578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59679766-92f8-4d09-a68c-a9741757a37d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c974c3a-c5c7-4b3f-a34a-c4a9a149ecdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3ca9286-d955-435c-ab37-9d38b354943b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a074703d-33ad-4885-896c-cf5d518624c0",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7547bfb-48f8-4ffe-aabb-42a14aa95528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbe3fd8c-fe56-4e17-8852-22981dbfb1c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe4fe9b-581f-48fe-b1eb-4d9f6d130ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0cc0577f-c634-4996-a548-ccf14dad35ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97cd3ace-1cfe-4181-ad0f-072191a96d12",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19fd454f-004f-46cf-bfd5-1edd9fd56028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1827069c-a138-49d2-811a-caa395013ba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5364a23d-d4e9-4e75-9e5e-d3d6cb92b6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb653d04-9e8d-4ca1-821d-dfcceb37f579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc95ae66-2fb0-46fe-b96f-9d26b15a87bd",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66b3a52b-4cda-4c1e-91f5-3d52793208a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8861ecd3-bcde-4908-bfea-57370f9f827a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec57318c-e420-4bf3-8d0d-e44badfaa525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b18a0fb9-1428-40d8-bd55-d1b6d35c541e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d81ece-c1e6-4f62-8ff4-bded27c47490",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8b04ca-a7e7-465a-9080-ed0bbff1ea94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7a0141b-a036-48b9-8887-8c03e53c82a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f794cb9d-1886-4274-8374-88de09788a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "aefb47d1-3ff5-4ded-a4f3-a1ddf1fdfd56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e5c921-0e4f-494f-8f94-49cb80433345",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9feb85a5-40e7-4fb5-95c0-dc28574e853c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21fb8781-664d-483e-89bd-b3ba29a08007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e05ba3-b93a-4517-a30a-88127444f819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "88b3b6a5-6d3f-420b-87c7-34e54b2dcb27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c66ec1cf-39c0-4b9b-881c-bd657fae6535",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cbd68fb-2ac6-469d-92c2-6d2b69225033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ddd54ed3-4835-4ce6-b78e-8a4a40082c2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c3e6bd-8802-41b1-84e7-8fc22ce9b4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9b3b494-f694-407b-b18c-3773dffafdf9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "31b90479-746b-450e-903a-1f4d1b500222",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cf07dbb4-6420-4f67-81e8-cacbcbf3e7c4",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5288e0cc-f559-4ac0-97b8-90c0f5c05ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "98910b74-a620-478c-ba79-028d78692cd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51faa3ea-8394-4b1b-ab97-35f2ed3270ea",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a605806e-b411-4a96-8545-3b522cc1d7e0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "19abc4f5-9326-48f0-b2dd-6edb9de97777",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e6c93eb-6c90-44fa-81af-2b597982919f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a8a7024-3e53-4439-aa58-adfbcefaee9f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36c6e096-5f19-448d-a3e5-c78d5ceeaa9b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c8e67bf2-b413-4d05-a2ca-04958306f5b4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e957f0b5-b611-448f-90b9-3421fb172ebd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d485ad79-f95c-4433-88b0-d8025ba11b82",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bcbdf0a3-39e6-494e-9b7e-173b13554fb0"
                }
              }
            ]
          },
          {
            "id": "3c369faf-ff36-42e9-a26b-67a80484d7a2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6c1d251d-cfd6-4c7e-a3dc-ddca0cd3052f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2aed2ab0-f20d-48e9-b972-6fc4d616690a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "604be8f2-5437-4947-998b-f05b7d28b327"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6fe7ad84-61cc-4f09-99b3-6c6d3f2ee9f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "643470f7-bdb1-4c21-810d-ce35a770626d"
                    }
                  }
                ]
              },
              {
                "id": "a3c255f3-8718-4d28-b648-40f5ce4ff766",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "41e35452-5c1e-4a27-a0f6-bce9a76b4dcd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b8435e79-a5cf-4ed7-9690-2fdc71f36137"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13f4b602-3e76-4324-9f51-67b0d9ef7d4f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dc97e652-abc1-4656-8f52-c72c17d33bec"
                    }
                  }
                ]
              },
              {
                "id": "ae7d8e69-5e35-4055-addc-07d94ca53f2c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3bd8cd8-6851-433f-9038-31b4b6057036",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2c31b6d4-69c7-478a-a5d8-5372c1882f43"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22dcdfb5-6f8a-4983-bd9b-c92f2093af05",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4469348f-3a9b-45cd-9277-590a63dcfd58"
                    }
                  }
                ]
              },
              {
                "id": "057fb8d8-55aa-4b4e-b66f-ae4b35a4c9e3",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "21519fa7-204d-4acc-9eab-e8dec08a2a14",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4abd1d36-d5c0-43ed-b4bc-5400cb40d7b9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1afaa630-ff16-428c-95f7-bbc70958c1e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "2c80b38a-ba23-4de0-a499-8b5f544384ca"
                    }
                  }
                ]
              },
              {
                "id": "0fc449bd-76cf-469b-99b2-5bdaaa328efd",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec03fd43-88af-49ab-b2d6-cee06458c9e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ffbde6a6-976a-42d2-be22-ef14f5ef6218"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d1e2a20-636d-491d-a014-a3640056a65d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "71cf56c7-ecbe-4570-91e2-e7ab0ac1403d"
                    }
                  }
                ]
              },
              {
                "id": "4d4eaecc-526b-400b-9cd8-8fb93efade00",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "566b202c-b41f-4067-8e6e-27eb2981438f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b7a28bbe-d03f-4dc2-a019-56929a653045"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78161305-a275-4ac3-9392-31a28dd0c336",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "775c4feb-b147-49bb-8f68-eaea0fdd13d7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0c369a3b-7313-4265-bb41-037314e46d16",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "71352f45-d9ab-4e96-b31c-6684231ecfa6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "32a2fbdc-29f2-4bbb-822c-63d3013e22a3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "82ad9787-b7eb-4f3f-9333-702166fe9304"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0e761011-e463-4e57-84c4-46d7c22e5294",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1df6e04b-abe3-49e2-81f0-73145cd1662a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "85c6998a-3599-4a91-ad50-cc932842bde6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "13396f09-eec0-44c8-b588-ba8f86bc149c"
            }
          }
        ]
      },
      {
        "id": "39083b05-b175-493c-b7c5-e8680ec1e2c3",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "0cc2edbc-589a-4460-a202-3166796ff3f1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "569c2639-96b0-49d7-883f-6a01d0f00798",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "df50c195-30e8-4538-b273-1cb69263be92",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1bf5548-981c-4adc-b7b8-22ca13547350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e7d6eb1-1932-4a55-903a-1c1ffeab3284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48896e09-2859-46aa-adbb-ca3f25877d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e2f41b1-308f-4c62-a320-7f9b52291207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a35695-16e2-4773-9d6a-b64d387b58b7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1a11c1-b537-48ae-aece-f011bd5c4bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a602b4b-9a3c-46f3-9dc5-5b413d613d8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a91126b5-d362-436f-b674-ead671e0916c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "809ff569-7877-4206-a9b9-215b0e8a8b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22136fb1-6032-4082-a3f9-6c3fcb4f880e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61dac339-a0e5-47f7-acc6-21ce70703e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df141895-192f-473e-9133-3c7f6d408706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb87702e-b7a9-4879-bdd0-be30310fefc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e25aaeaf-d1db-4f1a-9683-383e6c644191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa9b190-a338-4948-bf8d-aebace813f12",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0515ffc3-7c6b-48d6-8d92-7ad709c7bd9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "346a3f89-6b17-4c50-91b9-2d85405b60dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9289e4a8-e138-4fa5-8125-a6bb1d1bef9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6054523e-e88c-40a7-959f-f6ee8223adc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c84d44-8e66-48f1-99de-edec0409fb41",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f7f83df-fb90-4de9-a715-b852a263fee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bbe477d-e975-4aa2-900a-5667a05d388d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dceb4a41-8b4f-42a4-8d91-f249068cbaaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "063a20ec-7ae0-42d2-981a-2672d373207a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd223266-98c1-4147-abba-7821e53a5b6d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9864d8-53b6-4df5-b5f6-bff1b1cb6de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b2a912b-ba61-4652-9028-02186cb8908a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aaa99e5-7034-47e5-ab42-23a383c8ef93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2240fb6-760a-4dce-b260-0a8a8a6c1977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e893ffe-f110-4629-aaa4-3002bdd5e816",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d63257ba-7069-43a9-a7ca-77636e0afa1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8975e4a2-58bf-4d6f-9d19-6d6e03a55fee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db06c36f-2440-4713-a212-cae705589061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "05636774-346b-49a3-9c52-457b8c6bc869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83a5bfaf-f981-43a0-af98-eefd79fda335",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced9d5f7-df8d-44a8-8de7-39b249b125ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa13afb7-0e33-4298-9ddc-bab31067fa3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6967f0d1-ee2d-4687-bfe7-225e94da6366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "74488fad-347c-4b6f-b4aa-5923b2dd851d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f31133-4a12-427f-9936-cb2109b8bb29",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2676fb00-5bf4-44e3-b907-0c7df72e1f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e828471d-5945-422f-b435-1471c0061a0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bbf5dc6-af01-44b5-bb69-6ffa8d773cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccac183b-1121-4bdf-bf95-d5b0e47cb430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a337123-6e8f-4bba-b24b-711d4623b9d0",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2057b2ee-68b3-4532-a9ed-c9d78a2a422a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9cbbeca-c0a3-4134-9d49-05919ed911e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45fbdc43-ddc7-4673-930d-b60f19c32938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "98f843ff-bbaa-49e8-bd67-e60e288a137b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c870543-1a4f-4a36-811a-af3fac36b68c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7cc38fa-f114-4b6a-96ab-a1eee6ed2a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7278ac72-4b15-4f9d-98f7-799fc0c5e495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04831076-f03a-4b16-8bb5-339e9cae4d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "920f4d0c-4923-409f-a233-411d60ca5373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a171b3-9014-46e4-b327-278d3f3c580e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3aa5f2-8d74-4efb-a5df-4906b385e7a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40ff2a2d-5ab6-4d8e-93e6-e5863c1aca07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "998d03aa-78dd-453f-b3fc-c0db88743f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "508171ff-dfda-4a18-8018-08c861ff6c5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3c23fa-4410-429b-9c7e-09987edc5c2a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d1281cb-2351-4a76-9068-827e373565e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec84cc6a-51a2-4fa4-9946-733779cc6f84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c768da78-6fa2-4403-b86c-1d612a8e4417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0ae61b3-2232-457f-98be-75f021317f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c0b3bb-f88c-46c3-8d6d-d2fb04404e93",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b12ab9dc-b8d2-4bfa-a366-7117b8f8fe61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "820bd867-ff44-468e-b34e-7ba5d4a02dfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "108dad2b-c078-400c-ba04-184124adbae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f58fd34-3c75-4869-a2d8-427f36b0789f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a16a745e-3401-4ce2-b187-15465070aa03",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e83776-b976-48ad-8fe9-6ee6422632d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d5d0d59-e856-4b8e-a779-cebcfca040c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31b7112-5e4f-47f8-8cf8-98647b5cb269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c2046e9-d209-4e5a-8982-0701f2469e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf78524-d09c-4d7e-9ad1-1173d0fdf10c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bfe92bf-c58e-4359-9b94-9f43a2bbd437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2585577-05e8-46ee-b116-3753d33b1e6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6642c49-5b2e-4455-b5fb-ce6dad382f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f37a1624-8277-4c52-b4f2-3882cfa091a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e24685-46ee-4daa-bcd9-88602f18d440",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "675d0109-e40f-4122-8742-1179217c9147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec6e8941-30b0-438b-957b-f89216492eaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3743b533-fb41-41d5-a6ca-d39a1e8befd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd5be6bf-832b-45da-97cc-5511b8463a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f60f4f4-e52f-4cb8-8d8f-a5c9d02d5eea",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d32f17ca-d32e-4bab-bc72-d0d9bee62bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f719670f-19fd-4717-a259-f860017f4bb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf0eddab-4d92-4b18-b906-0a38735d84a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "60d35499-1ce0-4c9b-ab2e-7e436532b5a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f0892e4-ce8d-42f8-bf9c-c44c5c24e256",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b0cc6b-4887-46c5-810c-80a8272fe155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6411b63-69f4-4233-8eca-b9a0738f4132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7410f62-6ac0-4f79-805d-d95d52580c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02990f9d-6665-4de6-a209-3b8f56ca3126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf79e42f-2f8e-4ea7-8be3-b652db3a0a7a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "574d5566-03d8-4129-bf58-99706f5b8201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96001183-7720-4365-9986-5ed021003e71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53176ad9-c52f-4fae-907b-fb7a77f689e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1d53d85-2888-4569-8ef1-6c414b19454c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c03369f-0a67-4f1e-b6fa-ed0f290af138",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "978fcebc-6bdc-4d23-b31f-b89a63e9bec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "432f5c92-0f97-4588-982b-d3403f3e67a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8120dbcb-95cf-4541-ac35-62b87b72b8a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff3fba8b-21f0-42ff-bd58-8357e69e313d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d82a949-6701-4357-bb7a-cd67c7c2c71c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a4ff8c-2faa-4531-8909-4635d6b81423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f25c2ec-27d0-4b00-8d1e-d012b9dd3b6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2417999e-8e30-492f-8fcc-b37b9afee59a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b83f6169-6a1c-4b37-98b6-0c39d1186f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c730c5-040f-42da-9bc8-7b7a58ee3091",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22629c3c-24a9-433a-b661-8c1614186bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "017f2129-93e6-4f0f-8489-bf826fe5ee73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d19634fa-7881-4684-acf9-063861754bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "846a755d-0000-4526-869d-5dc1ea07ddf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fbcb3f8-8cab-4ee0-8890-799748a81bfb",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afdf5b53-e612-400f-bb8a-d4f681063a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61fb64fc-941f-4b13-b829-5a4271013283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f9bc8df-a247-4461-bf8a-6a4263676277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3f46bed-e427-410a-b638-7656e72637d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a370e3-45a7-42ec-a056-4f361703b62f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c60e83-b4a3-4c07-ab78-a8363036c1cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7aff13e-6891-4ebe-b528-c00892e0e4ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea3db3d2-35fe-43fe-b77f-bce8723eae7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e117b3e1-1253-4224-a936-a0f6ca8befd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a5f4fd2-02ee-4e3a-9789-5a61c6d6cb57",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb866cc-cc00-4a4d-a334-aa93918c8260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3466b05a-0a8c-4f74-beb2-f18c60857060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82043d7f-e4f7-43e9-8142-60b27612b0fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cb4c3c2-7b1c-418e-a21e-3e2eef5ec806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71237a21-553d-497b-b4df-15aa4bdf2f67",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "229b504d-6f8b-4b8c-8b97-5751852ea9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c92fc74-402d-4f30-9ea3-c165ff2ed1cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77dbbd98-afaa-45d1-a74d-1c66df5fe934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e93be3dc-f760-414c-983a-4d96a908049a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bfc59a9-4ad9-4a03-8f4f-1deb57ed5808",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41eafb82-ffaa-4ed3-b5db-a2c8d5be86f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15bf4476-2a7f-4963-9337-1eec5a4b56fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec8ae0d-8e96-49e7-8f36-36919a8f4f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aafa2b06-1d49-43b7-971b-14ccc73ed408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a143611-3070-44bf-9e59-3b33ba5ff402",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb94d95-0517-4c75-8779-7ccc8dd90cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8da7fbae-fc6f-4412-a1ca-abb535b96c94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a7f616-52a5-46a4-970e-4ec00c6034f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdb5563b-a350-43dc-a119-bf2ceb9ba578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "699dff72-bb5c-45c1-bfa8-e2e0b90a96e7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf836777-eff1-4db2-affa-a39ebdee585a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b72aa9e6-ed88-4d6d-b599-62332c07845f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be3105a-5e37-414c-b728-7c94d0f98015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc352c9e-9041-4549-b225-8a32eb92fbb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b679961-5403-4ba8-a3fd-b4cbec286790",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47c346b-8cb2-4b80-9f77-7e184dddc4f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45670373-f2fd-494a-9ee1-e4d7a62a6512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a1720ae-11ed-425d-a4d2-bedbbb78a919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96933afb-1d0a-4bfc-a492-e1ce8d3be37e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65db76b7-0ff9-4de0-a694-3b8cb70c2511",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae33d819-d1b6-41de-9ab3-54cbb3320942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0903f7b4-c69b-4d29-ba7b-09f09c3a7ff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b93d02a6-e55b-4578-a978-74f6fb48609b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba597f50-4fe3-4ade-9b16-dfb90ccfd7be"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8093c467-7818-4972-8fdb-a37000099a06",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "84ac385d-4633-4de8-ae28-2224de71bb3b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2383f37d-cd00-4b6a-b8fa-ad4124289b7b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e8ce6728-be5c-449f-87a4-c8969f95528d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc03f68c-66fc-4aff-91fd-3fb44ce39261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2dade7c-35de-4803-8b44-a1cced69f2d3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ac9be36-6ada-4c1a-81d8-92af19e0896b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9522cb65-4332-4ccc-9881-eef757801795"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c631aec5-004a-4a3a-bfc7-a6407a12a4b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6fe3a729-9d07-4ffc-980c-7d85f97222f8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b1d8f149-bec8-4b20-9922-773ae3ce1c9d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0eef6f53-5600-40fc-ae5c-90f2346e41b0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "373e2651-1ff7-4c95-9e83-2bb5c7d48fef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e73adcf7-fc1b-424e-b7af-03399921e468"
            }
          }
        ]
      },
      {
        "id": "e096fb07-64ea-4fcb-b228-854b5056d3f7",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "1b1b695d-04a2-47ff-97b0-eca806d06cb1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "90c8ead5-2c7e-47dc-aa67-9d48529b00f7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1acb8078-a3db-40b4-b98e-e52ba5c8a4ea",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a64ff27-34ea-4acf-98f9-24111bc24fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66c9b910-5504-4f95-adec-fe85580f384d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d1d125d-38c5-4f9f-824e-d28a9ea6bea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "14c34f35-c4fa-4b99-91f9-668aca461ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89df2a53-1c17-4851-b7c5-5e0e363fc1a8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e136ae0e-1996-49c3-a87d-1c9c3930b2f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40bfe1da-3b22-4ad4-a2c1-4c5a444b9e45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a4b1af0-64d4-48fe-a270-6f0ae0700b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5720fc60-4828-4568-a1c0-5a4c3bb5ed2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5745370-e1e1-4861-98b8-254c3fba714a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b571a90c-8a27-4afe-9e92-0d2131430621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed9d57ea-a523-4b95-99db-a44f44452ff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d060b6ef-69ff-439c-b0b2-d560e141f3d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "77bf9cca-ac3b-4165-b4c3-70401eb09c03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7859f76-7fb9-49df-b473-3013ebadcb5c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ceeb901-d630-4929-9183-be39b219b86a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5989f66-17ec-4cb2-aad0-db72a647a598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac6ead79-9d7c-4d7e-98ea-40eaed738658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc46ca7f-26d2-4d36-96d2-f56d609ded16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e3bcc00-3c6a-4162-9ee4-d71e9d82bdf9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d01372f-63b3-4909-9932-b8a357514de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38b3ec21-e305-407b-a331-b98d676e100e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d44192f-797c-4fbc-84ab-af708b8421df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "673d1741-34ca-49d9-811f-6ae55d2af2d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74944347-bbf4-4487-ad34-d37450d549cc",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f77cd0b-a40e-4be5-a690-6005cb060b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36dc2c7b-2520-4def-8d74-70925c542053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16352d47-3e5b-4ef8-b037-221d8d1a7d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6c36b12-e7a2-4854-afe0-9f445c4195b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "066723d2-6ee0-44fd-b3ea-91dcb97e1bdf",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "581da0e9-b73d-44ba-a117-de441b5998bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ea09fe7-29f3-4a48-9491-4f2ae91d2236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcdbe091-dbd1-4f14-b1c7-d7541efdcd7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8270f7f6-9303-4338-9bb8-abb5e4fc8766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef10618b-9f89-45d9-a507-2806e97eb642",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb97f07-3ef2-4730-a1e2-4767159cd662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "904f8ecf-008d-4949-8c3c-5f463d180390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f7291e0-aae7-4d07-ab04-59c29a5ebc62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf50ef1c-e153-45cf-8b35-843fcc6f07a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4d4d3c-b1f7-4d49-8a8f-745dd0b8738e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62aad26-823d-479b-905c-8b70cb25b179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d297ebc-bfa0-4824-985e-64f3d1d4a6c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3128a0c-5063-459b-b30d-9ecf700a6df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5da5c285-abe1-426f-b049-dcc95d8294c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd45b7c-33e4-45f2-a509-0da295253be0",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03dfd955-0e70-402a-b7ee-eb2969b68b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee3f57fe-9d0e-43be-ad8b-e92fcaea5d50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e7d269-debf-404e-8e31-a3492bef5243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "47a70edc-3c8b-4521-8b96-250ac90351d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e5e6358-984e-4181-8477-1c7176766131",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7626aa-4a1f-40b0-a93b-dc94705a318e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c55c45ae-f04c-426c-9b5a-da47b42974d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b452f3dc-f206-4f6f-8973-af90cf46705a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3954c1a2-c503-406c-9937-5c2bc41c194d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55986532-3d73-4678-b1fb-8a6c63e00dea",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ff67e7-e60d-4e64-adaa-aaf56a2e77d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce00ff3b-e0c7-4b29-9a87-b6f50eed83e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f13d5c91-bd57-4a6d-bd4e-30f87d94a669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e0dd20d4-8a06-47db-ac15-aa2054ae88ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a1eb869-c93e-41a9-adf7-935599c2330e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24e927bf-86c7-4444-952a-4cb69e2d80d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ab8bb6e-4643-434a-a166-55ca444b20be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ed7edd-3917-4a9a-ba3f-3f84304d7403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "36a856a4-c26d-4435-bc50-247dd512690a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b389d62-1802-4b2e-a780-73362861965f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe925510-43cc-4d29-8747-bd50b579eb62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "776f2672-ee14-4803-965d-afffec6cc1db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d37a996-11fc-4618-9a50-d65070a8396a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8114f3d6-c328-44bf-a9ed-98c46e15b7a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b0687f7-8a47-4958-ae5b-ba90b2c3a2de",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e65751e-f380-4b5c-81a9-e0a1e4935d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8170d2f1-9447-4ad1-8d19-932f27701c23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24a7b1a-8a21-4007-969e-64fcef771b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d18e16c-0351-4e09-8021-23d40639a37e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414c6cb9-77ab-471d-9926-1eca57f19670",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb38dd1f-847d-4ca0-8052-81dbc58edc94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cd60286-7cec-4600-a6d5-80a45345d06f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "986d9e61-d4bc-4c09-a29f-469d0410b106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "69da4d88-1247-48d5-aadf-5032647d7faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef80fd54-5c9d-428f-a48f-a1097522e56a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a7198d-ba5b-4be1-8588-94fcfc561950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f743345-5a1c-4432-81b4-2d0b9cbad78c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85dc69f5-3b7b-4cdb-b377-1d62f9af2e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ffc8234-f26a-43c3-84e1-a8d61aa08949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ec72bd-a22d-423d-89aa-c820fad6c407",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1766063-e6cb-4b40-87cc-c1e8370ddece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cefb69c6-e6f9-443a-9d0a-7f65653c1c35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e580470c-94a7-4052-ac6a-c449296d181c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "347953c1-cd3d-4138-9fad-00d059175ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "781715e1-0383-422a-ae09-93dec690ddc6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f0cc39a-717b-42c4-a20a-d6753e24809d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a31a0f9-46db-428f-af03-35737c3b23b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f78dc6e5-2c28-4bcf-b5a9-20735f1d33fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9b7bc10-6f7c-4879-b650-d09da1495455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "488ee3ea-c71f-408e-9c8d-dbdb5f5c2621",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f3c3379-179e-472b-89fe-7693d0678e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6546bd80-db37-482c-8700-f0560856d5c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "531a7d22-03db-4377-996e-9f12b1fa0926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38f269b8-00b2-4eb6-9a57-e02a2f716988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ce9e55-0566-4d6a-909e-c213225e574c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be6dc5d8-fb20-4bcc-9af4-9f96291b999f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55fddd66-1449-4e27-9be9-58302308c682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "562d06a1-d74e-4394-ab04-6a07019c5daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75c0a261-96c4-49d9-9a33-3d5b6bc87b6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7abb2c3-78c7-4773-9081-4d4dc2d5610c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51194f58-3efc-4351-ba6e-253e074f8d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b11c57db-1ef8-4d10-bc07-a2e565659f75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d9675e-d1f4-40d9-bd5b-496c8fbeafc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8ed2646-15a0-49ad-8726-37aff040534f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dacae898-a1dd-4f25-a772-b07b238c0bd5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4dc0360-8cd9-4bb5-ac55-4f74d3460883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "081e87b8-f12e-4250-bc4e-65af7380bbc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c1229d-70b5-4626-af55-0d0b773fccf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "695e1e81-a40b-411c-a4b1-b0331391d18e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7c82a2-50e5-4648-bb6d-77953b380087",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54eccd96-5e15-433a-b4ca-676e60edda89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d69db0af-09d4-4798-95ab-384f28922bc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a09b977c-4aa2-4ef1-901c-d5d3ff16ec9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f059853c-1fb1-4dea-b85f-44165803c6de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe7effa-3adc-4d64-8bcc-15bb10f1eb74",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df62f305-afad-416b-92cb-527d7bb1ccfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30952e21-cc81-45c8-a776-ca5df6b2825f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fad5e98-0255-46de-bdab-98cb7cf27dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "155f70c1-4994-4369-a888-4bddefed20d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f8ecaa-a4b3-4574-a6f3-2b0277157239",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f14fd15-3e6b-4552-ba22-a67a113a6029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e165c930-0e4f-4a0a-9f85-764e94f7b25f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e272ccfd-112c-4a89-8527-471fded3d850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd302bf5-279d-4718-84f9-ed6da86e2322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f66aadb-06da-4079-bfab-63b79ca6b1f5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c43dccf8-47c1-45cb-b626-e739b698f051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97bc54e0-f349-47b7-ab56-bc1e0f4d68f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a388b857-8308-48f9-a1ed-81a4477119a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27a2a89f-3ad6-43cd-9b92-e0c18a1489ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e0e97e-67a1-4b3a-b960-b8430b07cbb9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aed82dc-7940-4f08-8fb3-66cb55b3bc15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7508bf55-9b9b-4cab-a795-d79759277f18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36174109-2f2c-4ce6-bd6f-0bb33018cc83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f09536ee-a61c-471a-ab3f-9a95be22fa4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e32ff34-8159-4b60-a244-7175395a52f3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "629b3fe1-d95c-4514-848a-d69a655ae34e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "785fe62c-31b6-46d6-9da8-c3fbb6c8cd0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c12154a-9d5d-4f5f-9fec-fa277d174792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd03b3aa-f652-4137-b293-872cfc931e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb5eed0-e95a-4c1d-b4ac-6bc2a568d842",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3775e2-8e0c-44c4-b7dc-de4a70ec325d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43c60a4e-0170-4013-a336-423ffebe8166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "410b4dda-f712-47d6-b8c8-d852e62619ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39ae969d-42f1-40e0-b515-7e639eec097b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb6983a-e304-4570-be76-4bc97763b6b2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc95c7aa-547a-4a6e-8f52-4e5063ecee07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "667d06b7-6df4-418b-9340-7da0dd072755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d387896-7fdf-4a93-9edb-c657fe5d50cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "137f9979-fd45-4599-a36b-48ec383aa402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150ffea8-c581-4b42-b5cb-c17599f510b0",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1758ec74-3ecd-4bec-8197-4fe801d67ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48fe4ed6-a1a8-4b5c-8055-0e3b87afcdfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b18731-9073-4dd3-b84b-986bd8f1f945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb3dbabe-8abf-40f3-9b40-fd0df71fc201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34dbc635-2f84-4708-b437-1b67b41ba5d8",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c439542-f59f-4120-baf7-7e62bfa7fbce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8411f04-4106-4c5b-a68e-15e7e305afe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd34bb9-b7b6-46f7-a32c-30d58d589966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a74b1f7-31ee-4653-aab9-25f57cbe871e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61ca37a9-3d07-4cf9-a816-1a2bf61af315",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "063b8c0e-bf23-40f1-8071-68a20b73cbff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b8b4f40-bdd3-4afe-8b44-1d840cfe23f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c95f645-f17e-4bb6-bfb7-cbc0c86030d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be9c6c66-afa5-43a3-9e20-085a6e166096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b72d31-3e21-4353-885e-a7f507c9587e",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40fee1b6-e176-4598-be12-39b8e2d09efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa82fa27-5755-4764-adf4-da74565bc9de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe2d5d0-3b49-434b-9dca-9ab986b217b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe9cd802-d383-4714-96ae-aa614979d597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b5a8e14-8d00-48db-969d-ca13ad9f9845",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20497480-ed2d-4fb9-85a6-897137602262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46a8c0af-0864-47e1-b25a-55b17e66d3c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c01811-ee35-4394-a9b8-f316fb62316a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11955013-76bf-42b7-945f-645acc5b065d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a1620f6-1af4-4867-ac0f-e56714bb2fba",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae852091-e1cd-4294-919e-319edd1d795d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdfeac52-7c45-4aa7-abc5-ab6c2bf30126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af4e208a-60f2-46b8-89a1-93bf65ff3712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b38f71e-c155-4d9a-be4c-fae6d203f247"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "35c81325-f0b1-4b12-87af-dd2e86d9f98b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5544bdc1-f25a-49db-a88b-d240781d1523",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "796420ee-e304-4e27-90b5-4baa1f42e312",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4c1b3f3a-63ae-4a77-aff3-1fff7d6f763f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90bf6d56-81a4-4f20-bd96-a85619648ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ade730ad-6f3f-4293-a945-04e5493f2e71"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9cd4eac6-fa49-4a4a-82b3-be0d42e6a84f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b3ac54ad-f7af-4548-a895-e15241ca1019"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea412010-eeb5-42f5-a368-5ef993db8c33",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8ed2771-aa3e-46c6-94a7-14834ce9fa7d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "610ef2dc-b1b6-4b99-9db0-fe282b2419d6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "36c93fe5-12ec-4d46-9654-e6cd934e47f3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d6806ee4-8551-4e33-a2bc-137067c6bef3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "43b035e7-62b2-4b43-975a-ca494ef5f7a8"
            }
          }
        ]
      },
      {
        "id": "4dcda48e-ad57-4e5e-a10c-011278530248",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a780e12b-f9ce-4f0d-8070-db84960d246a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5517ee19-e361-41f6-a422-3fa40ae144c1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ba232ec0-dd53-40c9-b5fe-5fefa128a5e0",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b18cd2a-e722-42e6-abe5-b443f8db8b66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f53d3a48-9dfe-4618-aea2-c81ce1986b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767c260f-12f4-4c7b-9464-c4cd515eb110",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "053a688c-6c6e-4465-8b8a-7d7578805639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "742c6ecf-087b-423f-b58e-39b33d0c3ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b33cbe-5032-4a6e-b908-7aa4e085a19f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4aa2c08-9f72-4835-bd7f-c0dbc1459e1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f30eed48-a963-4b31-8396-a56d5fef9d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dcc5f93-1740-4bd1-8ab6-c584ae237637",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58eb5d6d-d1e9-4152-b624-3a8d7c6d8bdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bfc66a7-0d87-4876-a544-257b57754da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1240579f-178f-42ac-9262-dcdcb31108cd",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6390e832-b267-424e-82f2-b16c66877334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6848310b-4448-412a-80b9-d066be4f64a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f061a0d-466e-4f5e-98fb-d9d1d9cbd05f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fcf5db4-e725-42c6-a44b-de34f9bad0aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37a29e1e-b8b4-4126-af1d-8e8a97354d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15737aae-bb17-4f52-90eb-64f420488d1d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db4a7a96-3007-4c7e-b551-b34d2363588b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46d0adb2-f0c8-4382-914f-748fc19453da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f62648-d700-4af4-8943-421304b8609c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fcbf541-f9f1-436c-a8ee-e8d27c92f013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3dd81d7-b0b6-41a1-ba82-1939da8d650f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b00d2d-3f6f-4606-ab25-91c0e8c62fce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfa823ea-0a97-4a54-a313-a05961fa7338"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac23399-d7de-4a0f-a6a9-a62c3f4b3f0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e27376b0-63cf-4750-8719-70c251153546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0caba091-adba-422c-bf9a-184a000eca05",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa83ff11-c767-419a-9011-a9f717de278f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f33e6c5e-962d-439d-a5af-4430742da272"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ebf6e8-cef9-4163-b6f3-4176926e3d91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a7de2c2-bc32-40c0-9ceb-bb8fdd17e349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9dd5318-e835-4840-8fa1-23a657ea65fb",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94659bc3-218d-4df0-9be3-183f4d5d2cd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "208fd033-afaf-4881-87f2-44f8dab95895"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6913201-7e82-4dbb-939d-449c1dca2200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cf758ab-6f70-433f-8192-f2369276191c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6299313f-edaf-4751-b3b1-7f773182d20f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82830a3f-6f11-44cd-a36b-ba4798b612be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0718bb6e-9271-4116-99f3-0dae5a38bb8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cefdea4-c616-4770-b2e6-3bdd3adcec8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecf7ec49-a601-4b20-a602-ab7f1ff2ae38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce24b548-dd4b-4d25-9c47-10b6e371b7a8",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb814a0b-5fee-4dae-8679-605cc961d09c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16545704-7eab-4adf-8349-5e370ba1dbb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a53f1b-2e85-43a2-b6e4-4e40ef387da5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "001d93f0-8242-494b-9c02-dc92c512443f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "084f5b99-3dca-4936-8098-be1e8b5fd452",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2958a45d-6797-4591-bcd4-eeab2af1e7f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ca32094-da2e-4a28-9247-48f9802be77a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0764fe34-f722-4a49-ae32-5dacc9522f1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "298007e4-135b-45ab-82bc-c2beb9f198b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "248d6f41-864d-4ae5-8a31-494619b9f3a1",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1229160-5ddf-4f7e-80f4-ab3baf870d41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9563c93-5b5a-48f8-a94c-f95560caf3e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbbb9fa0-3492-4bc9-8251-beb030d36440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69cf8377-d530-454b-a33d-b6a69b3538c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78147137-1ca5-4e85-a8bb-b066d3906d7e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ae3fd2-02a0-410b-a699-42f48fb85ceb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2eeed05d-0a77-477c-90c1-d0605e9f09ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b098bf-305e-49b7-8e04-1e058c676535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f283cc45-a67f-410a-8ab3-523855191323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e3769cc-b37a-48d8-8bc3-82e1c2dc3e31",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d49d3b8c-ba7a-48ec-b125-c44f5b7e7016",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da7c3d71-e411-4265-a985-a5d126bcfb87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b886a30-e4f1-4408-b224-b6e564b91fc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "242fc638-df49-47f1-ae72-a5d50d146d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0719b58-2d43-4611-9fe5-03d710536ed5",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d5a011-e090-44c7-962d-ff747143d72b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc8d316e-2a89-407d-adda-a6d53b7ed4e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6da27d0-8955-4f1f-bf85-60252c26f203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7195bba9-4ce4-47e9-9127-108063fd2254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0bb8c7c-1574-43e6-9cd9-5adb5708d65c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "858de9cf-ba87-4eba-9349-b28d2c6b79a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78094827-8020-42f0-82fc-f7791baa422e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "913fc234-9e5f-49fb-a1b5-ac944f2cd9bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0ef4614-9bce-436c-8625-0ddf7844d9df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c76759-efd0-4a23-b6a7-0d0edec8c6d9",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c45a09-5419-4bc8-8d90-7de10cb7cb47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0da97f1c-ccb5-4ea2-8665-8ce90081d0fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1589ec-2a4c-42cc-b963-34b4579fd388",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63bcc664-109b-4981-ab7d-c4b15979cd54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "447e570b-7d97-42e4-9260-9f1cd3eeb8ac",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c00eacd1-1b76-4c45-9e66-afda8c679671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bef12bb-0319-43fd-89e4-b1d822fd104b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcde8224-3b75-41c9-a03a-876d0018da5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b93d8f6a-4e59-4166-bb56-77ac69e08ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeee12bc-dd9a-41c0-abba-d43676d0557b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad13bd3-46f6-4d06-8bb2-c52bd08520f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e6cf666-64e0-43ad-b986-bc475845916e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8df132f-66fd-451a-966b-d227ba305366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b314c480-539a-4da9-94c2-939446803686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f623f5c-bfe7-45c5-bf4e-afe9a2f68d9d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b4998d-0ee5-462f-a8ec-36a97fff3dca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f581d8b8-b832-400a-8d3a-376e682ac627"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f672f5-88bc-447b-aff7-a9205bd11a53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1329044-61ba-4887-bb1c-a0e31a55e26f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be47f0b2-c2f9-4c12-a930-230b31bbe512",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de72fd2c-0067-4506-ad76-b5c9c98ad7e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ead8e63-90c9-4589-885a-07596790309e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff2cf1c9-15a7-43e2-acad-6262c702bd43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18a79030-fc73-4938-b9be-798bb141d6f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "978c0df1-5fa2-4491-a12a-d0ec0feb394a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d25582-ee84-4611-a887-384fd56279b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41c31314-8c9e-486b-9956-1c852a032f93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9155cfa-f09b-4752-87e4-e39fe57b4c3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d230e516-aafa-4be3-bd74-c486ba74feb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b25383a-5518-44af-bd90-cf03e6cd2d3e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd6905fc-e54c-47c1-a823-e67ce0dc8099",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74d8f5a6-36b7-4c26-8f49-ccd244f713c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c16ea72b-22be-4f96-8af8-73b94fec4e54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25c60069-d18a-4cc4-8545-9f74ea7fe01b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d8299a-6cc0-466e-bd36-1b2f72bb041a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b23e29a-0323-448c-8eca-889ac332a557",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a144387d-dce1-4236-afca-0ae009ee8925"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f5c00bf-f58a-4442-abf2-448637976ba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88de8b0a-7adb-40a2-8eea-b3cf613eb982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a40786a4-7a44-4cb4-bf06-9f0ec9cdab38",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b637741-d186-4caf-b58c-fbc55d869d6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecef671d-f121-49e8-9845-cd666c00f12a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f27b4b-fe3b-42e6-8615-7e8d85bab057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0af5bb9f-75f3-4dea-909a-8f8fd2add81a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a36a12-dcb4-4716-8bf0-ffb0c6559208",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e211588-3544-4a25-ad55-3791b214ce80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1c03d50-8f15-4c90-ac6f-c9fcba81bfd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b2e211-e800-4f89-8845-90bcbc63eca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8880d1ae-6d24-405c-9039-aced7ec9c77c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af31714c-c7da-46b3-9671-6ca4886a0a96",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f72cf4-176e-4ab4-8333-1dd85613fbf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a425cca-e646-42f4-8181-731e2d7c779c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f222ead0-a4e0-4cbe-8a97-f3ac9621677f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cfa2778-900f-47c8-80ba-c8c63ff24cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b0ddce-f47a-4867-9e79-23a891634c94",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e45ef29-bbd6-4436-8c05-17184f97b474",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9862e60f-cbb3-4326-8180-945d512d7bca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc51e4a5-2a39-44f9-97f3-d842d5b5a707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a593802-c3c0-46f8-b69c-f9405a4267e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f97d24d-43f1-45d9-98ae-ac1f63ba83c0",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "920638fa-b2f1-4e02-bc49-965a27c49e6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c25dd3f-b08e-42ce-95f9-7ef9632f9f43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad09da2-0af9-4164-ad4d-a4ad4b1335fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3c82d7a-385d-4010-8b0a-e60937338f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "045b4e4f-b146-4e30-8651-4330e933fac1",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc6c8d22-926a-4bf9-8400-acd15b2fab05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc423f93-ffcd-4138-b317-d4f9f53e9775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bbccd65-006c-46ba-9d03-16c5017048b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b32f2bb4-42e3-44dc-9781-52a8fe76b90f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7f6de9-4223-4072-82e4-4f20ffda8902",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e4eaa4-99a6-4fb6-8125-61d51b777a7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7484630a-f4ee-48f8-a1cf-e4b17367d692"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f28095-87e3-4809-a389-2b8726fc13e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b4ea640-8b35-4fe9-9b6f-66460679876d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82991d45-46ed-41f7-b4a8-ceda923a29d9",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e388b62b-a242-418c-88b6-1c4720993171",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f597706b-643d-4c51-b80a-0dbeac5dd97d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e5c8b9-fd9b-4355-8872-00a0f3d51711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b369927-2145-4e55-af05-ae61b5307135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c25d86b1-6bc5-4979-b930-b0af3b2e3581",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be29abd4-fd0f-4251-a78f-ce1191ac9e7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68aa2e49-f606-4fa9-a93a-76343a0911d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "378dcf97-02b7-4518-b6eb-1f997e17a598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbf257d6-cc63-4de9-9f76-0eb8184986a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20fa74ac-4f9e-4ebb-92ae-8450884622bf",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6149d182-2af8-421c-aed7-4753e10cb2ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ab4bfd6-8460-4d96-81d6-558a1e7b6272"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e7bde6c-67dd-42d5-9015-ac1032f06473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a64ec77-d307-48b8-aa89-b39e8df801f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36816a7-d7d8-4e0e-952d-8cbee57dc844",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeb07ad7-1508-455b-b7ab-39736437db8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "345cb76d-2a76-4e6d-9060-e75d77a41a4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07cb8dda-1a05-43d1-acac-faab40260159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dcae240-9941-4a07-8bfd-ead5092a2428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df3e4c7-5043-4c18-add2-318650d140ab",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d96f2e-64bc-4cbe-bf04-d552b5cab61c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b103a1c2-fd6d-4588-b985-9cb59a36fe42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac5af64-1ab3-4c6c-addd-8e9177bc5f44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cf2438e-b84b-4853-a71b-bdb47f96dec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a55f20aa-6ef5-4d96-8161-a2e2abc5cc2d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b033e1-50ff-4085-bcdc-d785c1069eb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04f1af35-72f2-412b-8cc0-35331d33172d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c195c1e-a4ec-4329-b281-02ece067f43c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "850fa804-d527-451b-840a-22d7bf255707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf28284-c2db-403d-8942-52211b1c922d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e13a3d2-a424-423c-b92a-4cba639058ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6df2ca37-c46f-4b57-8301-0b9e0b853c14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff9100f2-d836-4974-843c-f3f81303736b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4de53d73-d4c1-46dc-a1d7-85d10c56c320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c626f9dd-e0f3-4f0a-a8d2-84575e283fa2",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb25c0d-d446-4bba-92b8-510ece5b7e79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fc6fadb-fbc1-40a7-aeae-764d4d411441"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e6620a-84dc-414a-9acd-fbf16dcaefc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "715b13a2-41be-4760-a788-7217e1c9f3a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1899f8e3-ba21-48e2-92cd-a5a5a1bf44e8",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f93e6059-1be5-48a4-8a40-46a62dd97034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e63556be-5843-48e2-a30b-84d21f2f6aeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae3fc7d3-932a-48cc-8d7a-8eb4c9d56492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "166d97f0-36d4-4e41-aa0e-d74455e055b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c8a98d1-1ed9-407e-a33a-77d30778adf9",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2765af56-9d8f-403b-ae4f-3a2590fb0041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "082d6699-bbd9-4949-8099-9684bfbd45be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc0b607-56c5-4b6f-8270-10870a3f23bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "649992d5-f5ad-4817-852b-561b6f7f5f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233dbd7f-8922-4777-8244-8fec866a4674",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae1f8d43-6cc5-4537-9f59-093f44606eaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf266a63-d728-45a8-995a-10ef45f688cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4498ea2-6e60-42a0-92b9-f8b9ffb6af54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dee9800-dfa8-4eef-ba86-3f8434989bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2c9c29-6c33-4688-b8ed-2d8ff07447ee",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9062857-12c4-486f-90e4-05d27e71019f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77ca84c3-95d5-4351-a10b-610d93e4282e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2de3673-ba91-4e55-ac56-a9ecacb17a2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d3c7dae-268b-431e-b9b2-7e9a4641a942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0f467d-cebc-43af-afda-0349d88085b2",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb329dc-dabd-4d88-9349-e0b1c1ea9b01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e082f31e-c961-4c42-bfe9-7ae0df827135"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9e378ce-229d-4454-8c82-17f7ef7254cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d97c959d-1a47-4ee9-8215-d3851c79d3da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4309b760-e9ca-4a48-8ca9-e4048b39b0fa",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f300a9f-c65b-4a4b-ae2b-ba2c263863d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96123807-4305-4206-8ab0-bbbb1c8d032f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e67b334-3788-4fd5-985f-a52b944d2066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d91ccbda-1aee-4e51-8efa-3870ec674917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d363cb73-83af-4ffe-82f4-6f833b6677cf",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b758f9b-3b51-4b8c-82c7-c60842734b49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0118937c-fe5b-4769-bf82-35ff4ff76873"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c70030cc-59c9-4fc5-b149-26ffb0d467c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82761128-5f6f-44ec-b197-45d2858ddb98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b38559e-711a-4d2a-9ed0-98ef9fafcb8e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ad25b8-0d7a-4b40-802c-3abc502d0448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acfd6117-049f-4e17-8476-b3c8ccbcd3eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e50ccf2b-da5a-4f4d-9040-efa1d392436b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ac303bf-3da2-4a0b-b570-dda5b733b7bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d88ff6e5-de3a-4998-92d3-bce4fed49d5a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "139de000-080e-4434-9361-2de3312ed819",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81caa8d6-3069-484c-b6da-413014e7884e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aadd6b6-c0e8-4a7f-89f8-eabe2fe331d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b600aec-35a6-4a61-a17c-203213e3f9c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e75010ac-dbfc-4804-a7bd-038528f429a0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4def30d-d021-4302-930d-47afca884d10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9822361-8b2e-4503-ba11-f23170a0e504"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb3328d2-3045-4343-9e47-4cf55199f027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91c5e964-fcc8-425d-98ed-ad58c9b1e35d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e9e0ab-1b54-4c9a-b1bf-081693fa5073",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e9036b1-d684-49f5-b5b3-24315a49df66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45876210-8ea4-4f22-8ecc-7d2771941adc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0750b97-394f-4085-8d83-94ccee25d137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abdab8e7-eca9-418c-b904-6199a7b4770b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a55e5f0-323a-4349-a34d-1dc2e508f6e4",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e19d9ba-78e1-4bb4-8c4b-bdf6792c434d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81fb4093-3077-4f27-9a55-f5b201ff3e00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba8f59b-caa5-44cf-826b-a0916b186e0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff28d785-e1bf-4856-b4e8-356f34f6931d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45eefd38-20eb-4c3f-afb0-2004e27674f4",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771e5b2b-650c-4c59-8986-b13fe744f018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28947780-259c-4ecf-8359-be1eb3f62174"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "196b414f-5854-4a01-b609-6f3f0004a79b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac6b122f-23dc-4509-8788-27830eb7b9a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "754ad2fe-d194-4534-9f5b-cdf923913705",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f016d4bb-4520-4f2f-afe6-3100efca2caf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "107c5eb0-2d41-435c-a0b1-c094062401db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba84f52-7fcd-443a-acb1-cfc89f009b09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bcb00e8-cf1a-4add-842c-7a155e962430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2f38a7-5893-4344-8a4e-3e973ebe56e8",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f997c238-0731-4854-8288-8713d073e534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d140a3e2-7bdf-46f9-acbf-8e51944c5a00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eafe5615-bf58-4fcb-8342-88fac47e0b49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0d4a8f8-453e-4a97-a11f-a4b11798ebc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf532d9-8b68-4e97-aff4-6e1ead0e097e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c599f5-3ce1-46f9-b9e6-a96aeea2fc07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "612aba44-09be-48ef-abe1-35e7a78852a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f31a9b-d4dd-4d8e-b08d-fcf2a2caa10d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "847841c8-c903-411b-a0ab-bc852f4505e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee68141-4d1b-4882-8adb-556f70436897",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de7c954e-e0ae-45d2-9757-4ada2b059fda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "982f5608-4a49-4002-8ff0-ee491a0ea85e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efbbd9cd-d9fa-4aad-a655-928fb6929184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb79beed-29ea-4497-a364-7760afbb74c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d10ab75-74b8-478a-a7cc-b78286ee9484",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08886ebe-73c6-4a3c-b374-bd86faf8001a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46bbdde1-39c3-4ce8-8b59-2fcc8dec58e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea67b953-3823-4faf-9f82-db63eb330713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "193677b7-0f12-4448-8f5a-39c0271ac3d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8197ae3f-1b80-41f8-b247-2ca97b523b3e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab96987a-7e61-40db-bf1a-388920980d28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cd08996-4767-4465-aefc-b4b662df8d0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a91c3e9b-8f9c-499f-9abe-e5132c768a49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad99a92d-5999-4bc8-b8ae-adf752586ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a78bc6-b374-49d2-bdfb-bd439244c74d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27e0d333-b685-4b66-b31d-256ec9aef330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3339e5d1-c8da-41c1-be19-ede49d276e44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b9bf57e-8bf7-45a3-84fa-ec9f8c57dd56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bc2a759-527a-4abc-8360-5e5684741c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2281bddc-b0e5-45be-9156-4137971a5ab4",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "699c59d2-37cd-45df-a4f8-0c9a30e0fd6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "374d955c-1120-4d94-8f03-5dcef5f30ecf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b017bf-c58a-4b0e-a578-b1c4aa535c4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0966c4ce-bcc4-4769-981f-98f4a00f6570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8414cbb7-4247-4b46-a502-37de321cc651",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3ff136-5236-498d-b7f5-20c0c9f83cf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ed668c3-fb71-4756-ac0c-ff8910f3dc99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d54bbfa8-409a-47ac-bf1d-f24828b63a67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efc4f24e-6cae-456c-bc7a-7f04e49e23d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ca61b6-016b-4917-b877-ca8794a09c60",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57514f7b-2af0-4943-aa2a-4e1fc90a376c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a5f6d40-a78a-493a-acea-77d06a483ee6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66994b98-e217-41da-94db-490d4bcf758b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f136ce26-d38d-4633-bf4a-cd041de26000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f104f5-fb39-415e-a494-71239cea83b5",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abdfa519-727e-45cc-94aa-de8a81108401",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a987da6-1ad4-43cd-8c63-28f43596645e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a963e7-0e24-4295-a23b-ee9bc392e3e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13536709-b8f3-419e-b21d-9f4de0336835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "293bf205-0f5c-4332-87c1-b643c2917516",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c8ce9a-f4d6-45d2-8918-cfb3c47f6862",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80dee440-fc17-4f87-9dbe-7b5b5cc928a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb425928-79f7-4177-9afd-b0514de8fecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "676874b5-3dcd-44af-b13b-29326720e3b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa8a26a-dc56-40cd-81e6-a4a418ff05bb",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd66bbf-70ff-492b-a97a-020ba3a4717d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82376c4c-9e04-4559-a4bd-c27d424ac87c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68dcaace-b885-4dd2-9eaa-91a91307fb2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe95874b-1cb3-4252-bbcc-1b52c0f8c131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e0f6b9-4275-40f6-9622-97cbba341f34",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "525bcf7c-c873-4b03-ac1a-5de578488b4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca5fa281-f15c-4856-b620-a2972629a2a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f601f238-114b-4e21-b90a-d555b2e02a3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22ebe68d-055c-4fb3-8ba3-4d7d5bb2cda3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a102deba-4254-4811-b9b7-8d1db3687dd9",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf78ee4-f4c5-476b-9961-0b1efe31364b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de6ad336-a1b3-4a2a-a15d-07fd7693b9f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd5eb7b-b526-4c22-b11a-7e46a240f202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "417cbbf7-a09e-46dd-a3cd-a643b5844640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24fbb425-b8fb-423d-acb3-9b37571523de",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "022b1fd8-2caa-454b-9eb8-8146ff3225e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3a69228-f131-42a2-930a-ca6ecaa74d1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "594be72d-beac-47af-ad81-a32d6bfc53c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "019075b3-2fac-498a-a8a2-41505f5c516e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d017a1a3-aed9-4cd4-9453-8959a259e5ef",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7f4cd7b-114f-426b-8a17-292cf3e06265",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a2fc333-21ed-4cb3-8439-6bf257183e76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf43784-4fe8-413e-a2fc-e7a5dabfcd3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6cf5b62-13e0-4d13-a6a9-443b073d2274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f8b355-08bd-4f10-8ea8-e7f7fa9aae79",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4bd970-ba2c-4333-b3bf-bd0073a3923d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbed3c73-bbe3-47cf-856d-df3c682bc10d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09cfd14f-170e-4512-809f-c9e8c18d15d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a8febb9-8dd5-4820-8e2a-48e91cb02875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea689c46-4550-432a-835c-41b64ed87d81",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68dba2b5-a1fd-406b-bde9-0c4dcec36378",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6faee59-bac2-4545-a0ef-bc97dff90fee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a4aceb9-23a8-4b17-94e2-bb8e9efd48b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5b6d8d8-0c0c-4b6b-941e-078b1d0ecf92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd260ffa-f611-4adf-b357-cf1ea049bc9b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "473c9a61-79bb-485d-911b-22c9ca77b037",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e2c5663-afc0-436a-a20a-191d7ed6d1d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11588534-e6a8-4e4c-b47d-05a446f4d832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7f3cfa1-d38b-4a7f-b7e1-4fb301f078a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b51c8723-1ab9-453e-814b-d127549d22e8",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f24f40-f5ab-4a55-b2dd-c4b39a8ae8a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5acfcd77-52b1-4068-b7aa-1dd61bacf91d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "587e4419-ff4d-4904-99ed-49abb7795b64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06f7e52e-f30e-4fc8-90a5-aa6fd0033e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c177eef-8739-40e8-8706-ef531a9b59c8",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43dd636c-c1dd-4d1b-8452-5261b56ff082",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f95f3f4-e98f-4ad8-afb6-ae036dc01cbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf72066-525d-49d1-aa0e-b92a591e9c39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f6ad7ef-fbbf-43b5-9b63-6c04f0cd0d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ba07f57-a24a-4886-8128-f7de08017a71",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70bbc775-05b9-4184-890e-151f860d2958",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3783d23-f312-4fbf-b7f8-50766d77eac0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf4b53bd-df4a-4042-8fbf-9d08cb2aec1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b8d1935-f724-4a73-8559-3b4c5af9de7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3779689-6987-47ec-bb44-56b774c3aaea",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c81d780-87eb-4ddd-9402-62948864564c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10143078-78ad-4627-8778-ec1b82fb25f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00630dbc-7e1d-4e35-b300-1a1352c1e0ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82de7902-8a9a-4532-b538-e58b699bca73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f719371-ba97-404f-b223-62e98a737b71",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f495e9a-8312-4e16-94e1-09427ea3a279",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc2c3ecd-1dee-40d5-aa2c-bab74dfcfcc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "708534d1-7ce4-4ac5-bded-41da4231723f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6b47b3c-4ec1-4ed6-8c03-b6662c7c47f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3069be60-c280-420b-81bf-79db82a18e8b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fed1f9f-c22f-45b4-a5a8-8c75b7894ab1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cf95b74-5589-4949-b372-6610d6b0f1dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b37c3d9-88eb-465a-b8bf-43dccb954389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cca9526-b9cb-4e3a-a816-74bd08616698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d8f9cd-5ad9-426f-8bbf-99def431f739",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef0be5a-19ac-42cc-b755-324dff0ad6c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f1446e9-5ac5-4704-8f11-cfb04d1062cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30fb0c8a-92ce-4240-b9b7-d74d3ca01660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c24b1ce-5471-45c8-b1fa-ca9c1f1dd13e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d44edd7-8db6-4394-895d-81ea8ae993b0",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff87cc4c-da32-42f3-b523-8b72db3e0aba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a06bf40d-1d26-4010-8595-3e1ec0fb8296"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f8410a-ade7-4763-a162-6caffcbe261a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ce90352-241d-4d95-9c4d-fd87d6a653ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bbdfbae-1b4d-4074-8b33-c87d69c8e26a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c6845b-9260-4ac5-b853-e43b6aad9666",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bcdd856-0db8-4ad5-aa00-7d6f93b0eec7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1881a09-1891-487f-b8ce-5125c5510bf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78c77e00-6b64-416a-8e3c-b6aa6a047e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caeb2371-9874-4f05-b0d0-04492fa3da26",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c35f52-0b94-4438-8c37-70e683639ecf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c22631d4-6012-4d95-9157-0ca8da604e90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca65971f-4c29-419e-b857-3d10dbf60df0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b67486a-6ded-4da6-bb06-e700c6020783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af9ed86-ba88-46fb-9f4d-e1b981277198",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1631caf8-0bc8-4a7d-93b7-5461ea5e6afd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa515647-7fbf-4feb-98f8-cd0d1166adc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab133b0-13fe-4432-9c2b-dbb85b34a29a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "356efacb-dc9f-4f75-87ec-e224bbe4506d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f5281f-e2f1-45eb-af0d-cfcd96c80127",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a3e859-5186-469f-997c-e7a82beee3eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e101570-8c79-4377-9266-eca1beaab4d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eee25d3-6465-4dd8-82b4-14706c788df7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c54f9cb-d96f-48e3-a4a6-5f99838c59b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f330e482-c951-4135-8ada-6686cbe49baf",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "140a4ea9-0bf6-474d-8c9a-e8c9108b37bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c304aa8-0ac9-47bd-bd33-7d869ca23b17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45c2371f-16a7-4111-9e0a-4e51052d6c13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f25d0934-ec57-4034-be59-e67b99843ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d75c6839-9887-4b60-98b4-a49116705f29",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d594101-eb6e-482a-b4d1-3d25b049003f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a75d1a4f-e7df-4159-959d-35a3312a4f81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6c2a9b-408e-4242-814a-249520d1d532",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc5c2ad5-fdfc-4d7b-a383-53be504807ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "439fee3e-f35c-48a7-b94d-38105c7fa106",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0774934e-3c5c-4ab8-a42c-ce314f676d84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "060ace48-7ac7-485d-aa68-8107cf89c0b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c84f1702-3eda-42e5-a11f-eea9f51ef8dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1379dfcc-7729-4130-9ff8-d338f3d170cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00f62d4a-f8b1-4788-a4be-9220ead1f038",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b1ad70-209e-49c8-8edf-1948e6fc4749",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1edbc745-6310-40be-ab4d-b2e18a9e8936"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f5c184-1c26-4783-bd26-399449bac1a0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ba57bf4-8522-4611-9759-854a39e6788e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89678fac-ddfc-400b-b6a3-f9b629119fcf",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b8f18e0-b7b8-4b3e-874e-1bb7f0a2606d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f7be3ae-0c73-472f-afec-e11a80a1ce9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b6f025-09b8-436a-9f3f-d5bcb88105d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dee8aa9f-192c-4239-a6e2-3735609591eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe208f2-a0f2-47ee-9354-16dedaf86ef9",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0ccb87-33b5-4584-9e64-f429247210a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "137c4f3c-aeb7-4dd5-9f03-d01e3a0188be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac0d9450-517c-43c6-8f78-75e3c839ce63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f779fd6-0642-4796-830c-0e817556a171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c7e06bb-101a-4983-ad17-ef3156d6acb9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb195ec5-ae00-45a3-bf1b-a726b517b3e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f262c23-5fba-427b-976d-3fd6ff4bb0ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62af956f-37aa-4f0a-a76f-dc0a70b9c945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91363136-0bf1-4831-8b41-152abf456d15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e684ab68-1809-47ee-a350-6f8068107748",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "105f1452-2d85-43ec-8bdb-8a24175d028d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fddc6fa-b5cf-4760-bbd1-f86946e8bb4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec746e0-0d24-49bf-b2ed-3861a73200c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d82be292-537f-4936-aad9-9731b218a91b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0932dfba-d567-41ff-99bb-3efcbdd24c80",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d4936a7-74a7-48f5-8cec-514aeb82834b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5616c47f-e5e3-47c3-bd1d-e6f99d5a658b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39477a39-4469-4709-bcc0-f2ac10415036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51ef3767-b70a-4b82-bd41-4ef252888005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c7e6a3-98ed-461c-85ec-1151d5411550",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccfbf384-d40c-4407-8df3-61ed06706d02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07e626e6-66af-4ee7-9e34-707c93f84cea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "141d6a79-5509-4b4c-a37a-2aee6e3b6e97",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1bdbcb1-baf5-4c6a-b746-80245770c3a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb8c704-0443-4dd8-bc28-f7e328353827",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee871a85-27da-41f6-941e-2ca73d6d74e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3af20aac-b251-4204-8917-3730fd8d8be9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be76566-f3c6-4640-b516-f7062950472a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15940bb9-b63a-4a24-834c-70eb9f9b721b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c451604b-0371-4e77-be63-79f9a9599f4e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7a7920f-a343-45a6-9dad-7d715cd3faa6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f61b94ab-1543-4a86-b717-46db7ab8e23a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a5264cb3-4097-41f1-b50e-a25bea635aae"
                    }
                  }
                ]
              },
              {
                "id": "d09db592-35e7-477e-bd83-80ca6e9a9d55",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e0689de6-b391-49f3-8b4c-f17a0f52a861",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fcfeab4-d1f9-4b3a-87cb-445f29d19b2d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8f686d3d-98ae-414e-a379-c92ba1f7612c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "882aa3c3-57fc-4395-b763-763c0e6c5b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af8d8803-e1f8-4902-965d-caf9003ced76"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27ced280-6510-4ced-a281-388302680617",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7651557-3dcd-432b-9f80-9c2d0a46d1e0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f95adc5-6321-49aa-bbd7-3159cafc4e1e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f861e550-e26f-4ba1-be04-8dd6f480ee2e"
                    }
                  }
                ]
              },
              {
                "id": "61a8e7d1-084c-4402-8c5f-0eb9f00fb0af",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c94f86e0-9af6-4e5b-b9b8-2be4ee92a3ce",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ab9c7f-77b2-4635-9c85-a73fafaf82cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "29ef464e-2162-4306-a758-545a16c0f421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9480c639-fccb-41da-a3ee-0d4982558d9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c311d5e5-c7be-45c6-a7f4-ddf0ef1f866f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "96862d03-5909-4370-9a72-91681f3f38be",
            "name": "Positive Testing",
            "item": [
              {
                "id": "af13e998-02ac-405d-a2ba-7634fce258a1",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "386b3669-9f7e-48ec-85c1-d48621b40cb1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f7217365-396a-40bf-9601-5733df99e92c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b481bb09-3a95-4114-b727-c5b0b38750ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a71c0b2-a54a-4cb7-8683-a747ef5333c8"
                    }
                  }
                ]
              },
              {
                "id": "26fe3daf-9781-44bc-9ec6-20791abbe6cb",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe6541f9-09ab-4965-9935-33709bafd886",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "af54aa00-71d7-4c53-8b48-3256efc4c394"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85db1291-54b8-40bc-8c71-d18688e8dd7e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e79eceb-8817-4f5a-a571-8802cb92cb44"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a4fb4fdc-46a1-410b-93cd-777f0a29cd69",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "50b215d8-630b-42ea-ab89-98008f46bf26"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e574b0db-ebcc-4220-a9c5-5a04ceec96a5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e99542df-2b47-421e-88a0-b6d0143fdfa4"
            }
          }
        ]
      },
      {
        "id": "8eef7f90-79ff-4325-b77e-eca9677ac831",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "80513711-c37f-4454-a9bf-7d33d5eaf0bb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5f2158ea-a12d-4a22-86f8-16240bfedb09",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "52b98ead-bc92-4465-bee2-00c3c83aff8e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19be8d14-f308-4fe2-a34f-bc8780b864ca",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4420b65e-a5c3-47a3-8eb5-ac038fed24d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea67033f-fc9f-4828-9bd1-ca102f959da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a38a4ef-2c68-4945-9f8b-532c350cddeb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb597d03-37b0-46a4-8fc8-e823f6dfad26",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db73d937-a4b7-4410-acb7-0196349ad0df"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fca597a2-6c0e-4512-8b25-fcee257f655a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9930a561-f393-4fc9-a541-9fca923ece65"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "10abebae-5585-4687-a859-1b09788f444a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "6f2695a0-69cc-4773-80c0-9c124e41c5f2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4763d3a5-73a3-47a9-b3c6-eacd4e784fca",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0d073e09-7dbe-42da-8cd8-5aa16c1ab708"
            }
          }
        ]
      },
      {
        "id": "77579a0f-bcf2-427d-8353-b4bac6e71af5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "cc72b6d0-6834-428c-abd7-47931f48e7f1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "76137542-750f-4cfe-a6dc-7db4a50568c2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e9ef627e-79e9-4292-9e82-88fd4126d7d5",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcfa12a5-3daf-40ed-a5a8-b4b3f37c2d31",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a9f321a-b1bf-4872-896a-b35544750f79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d01ce8e5-8552-460a-915d-2f3b69f23fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dbcfce0b-64f4-44d1-8e36-04c46f1122d0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88534f97-de27-4115-9af8-cb2b98d478c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a0e81c7-c581-4007-b05b-d15dd600c424"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "954afb96-0cfd-4080-9d93-70f83736a523",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9cb938f4-5fd7-4b20-8fb6-5bb6569d2ef0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c423b70c-f481-4b6d-871c-82e906640e89",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "34d47851-d0e4-49c1-910d-bb1f302f5f27"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "70b4e3f4-8a7d-4bff-8dcf-0684c5236c5f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eb181f6b-7e31-4df7-bf01-d1083c995381"
            }
          }
        ]
      },
      {
        "id": "ccccd7ff-66c2-408f-ad6c-69147920b35f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f325e3f8-8d80-4cbe-81c4-330b5436f389",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f4ca1a08-0dd6-47be-b2fb-820697bcdbb8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "44e9df1e-3c8d-40fb-912a-069823b6c80e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb502bc5-1bab-49a4-b327-5774268ccbbb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e3549d9-786c-4a0f-9f0f-61b4f9537b49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a62f6669-6cd1-4c62-911d-433dd9e836da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "20e9124f-d4d9-4bc4-9495-9ecc9033e78d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7805325-1ec2-43f6-acc7-8906b913ab49",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "841d8994-e6c7-44b0-a171-99a84d4d13f3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b57ec62c-5f59-43d3-a184-27892543e938",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c623f05f-7af6-499e-9e7d-6ccde06f0104"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8700bc6a-49ed-4958-8df0-50714671b2b8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8f1a77c4-c087-46ef-a7c5-55a9269a451a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a513bedd-bfc1-4635-8cd1-8eb16ee031c7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "85d4ffc9-a995-412b-b3ce-cb698f24cc93"
            }
          }
        ]
      },
      {
        "id": "89a80ea3-9e84-4c64-9dbf-b7df60890d1d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "36033df5-8996-44a8-9905-2b06b377092b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "06379f13-e8bd-4db5-8467-1b3143cb2379",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6d77d175-9c6a-4c83-9f75-323c066522a2",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f4afef1d-e46a-45ac-87a0-2fd29a51f204",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7de2a7ee-f5ef-4523-b278-5be42cfc0f7d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 13.387323943661972,
      "responseMin": 8,
      "responseMax": 300,
      "responseSd": 23.973973150343138,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1687913316213,
      "completed": 1687913331507
    },
    "executions": [
      {
        "id": "a345a9e6-b782-437c-9125-41bc32eaf609",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e7469a5e-37cf-4dba-98db-042dc450ca1a",
          "httpRequestId": "9ed68e8d-5c06-41c1-a65a-aab521863d03"
        },
        "item": {
          "id": "a345a9e6-b782-437c-9125-41bc32eaf609",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "20b0683f-2026-416f-b843-9c10e5969363",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 0
        }
      },
      {
        "id": "b9ec77fd-ebe8-4b2c-befe-c4b1596c5aa0",
        "cursor": {
          "ref": "27c35878-e2b3-4f41-aded-bebed78b1fa7",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b6e2963d-55a0-419a-8d1a-85b16998826a"
        },
        "item": {
          "id": "b9ec77fd-ebe8-4b2c-befe-c4b1596c5aa0",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "3704d60a-4100-4725-aaff-d2b18f2da940",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "9d5d9dce-8533-4556-bb6b-eb675b1d80fb",
        "cursor": {
          "ref": "8c314e2f-f686-4ee2-b5a7-6bd6e45563f8",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b578faa7-d737-4095-99e7-31c36d0c7f8a"
        },
        "item": {
          "id": "9d5d9dce-8533-4556-bb6b-eb675b1d80fb",
          "name": "did_json"
        },
        "response": {
          "id": "f8163510-290a-47a2-a2d2-e43c3cb997a2",
          "status": "OK",
          "code": 200,
          "responseTime": 169,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee576a1-18ec-40f1-acba-f13ae4581601",
        "cursor": {
          "ref": "1b00f2e8-8b29-426a-a148-6f96fa22cdd5",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a3a37bef-64ff-4fd0-be13-7730097d4575"
        },
        "item": {
          "id": "fee576a1-18ec-40f1-acba-f13ae4581601",
          "name": "did:invalid"
        },
        "response": {
          "id": "d09ab91a-bc79-4bf8-9421-9b43967aad14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee576a1-18ec-40f1-acba-f13ae4581601",
        "cursor": {
          "ref": "1b00f2e8-8b29-426a-a148-6f96fa22cdd5",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a3a37bef-64ff-4fd0-be13-7730097d4575"
        },
        "item": {
          "id": "fee576a1-18ec-40f1-acba-f13ae4581601",
          "name": "did:invalid"
        },
        "response": {
          "id": "d09ab91a-bc79-4bf8-9421-9b43967aad14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "970e51b5-2641-45f4-ac09-4690ee60f722",
        "cursor": {
          "ref": "6f33ff23-01d0-425e-8d39-a4ae3aee7aab",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "bbf71b01-c745-4a44-892f-875f2e0bf0e3"
        },
        "item": {
          "id": "970e51b5-2641-45f4-ac09-4690ee60f722",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "83fa506e-dc4c-4ec1-b446-0b4197d12100",
          "status": "Not Found",
          "code": 404,
          "responseTime": 300,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ff764d-fa9d-48da-b5b2-0ffc99ba3e5d",
        "cursor": {
          "ref": "2c2f98ce-ac01-44aa-8973-9c8da475c7d9",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0e950a7f-09f6-48c6-846e-b05f26e647eb"
        },
        "item": {
          "id": "c4ff764d-fa9d-48da-b5b2-0ffc99ba3e5d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "775607f1-a132-469d-a250-65a5233cd0f7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bfeb64c-498d-4dd9-990b-3a2c989b9067",
        "cursor": {
          "ref": "58b2a0e3-2b10-4b22-a543-5b8e93081889",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b78e799d-2fb2-4eab-94f2-a959b4a42a3e"
        },
        "item": {
          "id": "2bfeb64c-498d-4dd9-990b-3a2c989b9067",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3eb841f3-1b27-432e-a799-bf64c6511e28",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80104dc-be50-46df-81b8-69944592c889",
        "cursor": {
          "ref": "ab577f25-9831-466a-84f7-51e7e6792797",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6447979a-8b60-444e-a212-a75209d29f07"
        },
        "item": {
          "id": "f80104dc-be50-46df-81b8-69944592c889",
          "name": "identifiers"
        },
        "response": {
          "id": "f89af87b-1325-47cf-8916-45bf8a46dd45",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bce7f3b-98ce-450d-abec-ac495da867f5",
        "cursor": {
          "ref": "16393589-b60b-4a71-9da8-f8ee41c29233",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "600389aa-4fcc-46d4-91bb-5c5a1e2ee28c"
        },
        "item": {
          "id": "8bce7f3b-98ce-450d-abec-ac495da867f5",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "63f10fb3-dcb3-4813-b87c-7216b4baabdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b603da-d413-4c8c-a0e7-8a645096e49c",
        "cursor": {
          "ref": "2efca34d-1bef-4a05-9148-5627a07719a7",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "db4759e5-f35f-4156-8ce1-28b305aadabd"
        },
        "item": {
          "id": "86b603da-d413-4c8c-a0e7-8a645096e49c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "1d05098d-32b7-4ffd-a13c-a0067e18ef97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d4375b-2650-445a-85c2-c61700789135",
        "cursor": {
          "ref": "7d6a2028-f736-4481-a9ec-53f5e5f8531d",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8180c4f9-ed12-40b4-970d-db587e0ccb56"
        },
        "item": {
          "id": "72d4375b-2650-445a-85c2-c61700789135",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "0b8c2ec7-19dc-4803-ae6e-8ebb8a02a8ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a3f3dd-6cca-4fe7-93b1-e9f0ff7169d1",
        "cursor": {
          "ref": "20dcced9-bfee-4c80-a8e1-14187468d964",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "25fb640b-76a5-4891-a8cc-0441ddfd2f6b"
        },
        "item": {
          "id": "b0a3f3dd-6cca-4fe7-93b1-e9f0ff7169d1",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "719cec4c-f685-4729-9028-c473ae826608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a9dac7-044f-4365-8c67-60315b1daae1",
        "cursor": {
          "ref": "5b4f1f2b-d052-4bcd-be31-aaea1792ac39",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "46f6b43c-a99b-4279-aa43-ad4df9eba05f"
        },
        "item": {
          "id": "47a9dac7-044f-4365-8c67-60315b1daae1",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "0addd1bc-d198-4111-acb1-2f3cb8d4bd28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2079e691-fd3a-4f8f-b735-ab4760d0e943",
        "cursor": {
          "ref": "23f496d7-29a7-4d56-8895-b7fab2e9198e",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3226483a-fc41-4b9b-858b-96e263f439da"
        },
        "item": {
          "id": "2079e691-fd3a-4f8f-b735-ab4760d0e943",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b565669c-62f5-4475-8d88-010286f9559c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a573c3e4-508a-4eb4-bccf-17bf27e9b3b4",
        "cursor": {
          "ref": "9a38f713-54f9-432b-9c20-f97aea31d4bc",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ffd2a5ab-b7ec-4dc6-912b-c338453fb210"
        },
        "item": {
          "id": "a573c3e4-508a-4eb4-bccf-17bf27e9b3b4",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2d995ee0-36a8-4400-82a7-8c20f85eafce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5653ec4-99ac-4131-9212-730985485f00",
        "cursor": {
          "ref": "55b2f76d-7671-4f51-a7a8-d2c3e93cd430",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f5e47563-91b1-4bba-a113-fae59581cc91"
        },
        "item": {
          "id": "d5653ec4-99ac-4131-9212-730985485f00",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "27bd0fd2-5ec1-4991-8e83-b6451447eba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e54eca9c-a547-4baa-877a-54317c7099f4",
        "cursor": {
          "ref": "082918be-4282-4193-9e5f-b70eebe1e7c7",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "fd2f50c8-263f-4d92-9e0e-7d519f5f33c1"
        },
        "item": {
          "id": "e54eca9c-a547-4baa-877a-54317c7099f4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ea23592e-971a-46ff-abad-52a72ca50e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d269419-6f13-4815-977a-0ed2652d6a96",
        "cursor": {
          "ref": "384ad03d-43ff-4388-b515-79bc812c2cd7",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "1d41226a-fd96-4af7-a650-dab64d13f68d"
        },
        "item": {
          "id": "2d269419-6f13-4815-977a-0ed2652d6a96",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "fc3d623a-eeca-4035-81b6-6288d07f8382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a1f7234-375b-4713-8288-4c8215cd2d96",
        "cursor": {
          "ref": "c97e6235-ccda-4d57-b99d-42fb824774d6",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "048ff3b1-55cd-4942-98db-ae02058ab4de"
        },
        "item": {
          "id": "5a1f7234-375b-4713-8288-4c8215cd2d96",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "12198d99-30a5-46d5-bff5-0448e7c6f317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceba22f2-e09a-4ae2-9230-35069691f70a",
        "cursor": {
          "ref": "126e72e0-a379-4621-be2f-917cbdf36138",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "bff90247-12ae-416b-bc19-7066bda34a1b"
        },
        "item": {
          "id": "ceba22f2-e09a-4ae2-9230-35069691f70a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "85e230ca-fc7d-4944-a550-98dbd4ae0dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d7ecb1-6b29-413e-b3f4-ca12dd6bf5fa",
        "cursor": {
          "ref": "0b40f530-5d8f-40a8-93a5-3ce9475daa3b",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3b0b7a11-4654-41ea-bd98-6e6158594505"
        },
        "item": {
          "id": "a1d7ecb1-6b29-413e-b3f4-ca12dd6bf5fa",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "75fc55be-f3f8-4530-a9a9-b98963371030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af68af9-2cd2-483a-9b38-aadf40327951",
        "cursor": {
          "ref": "7b454dac-9e59-48ae-b5d5-b3a2c1dd019b",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e3c52f99-9454-4338-a341-3fc7e2a0b018"
        },
        "item": {
          "id": "1af68af9-2cd2-483a-9b38-aadf40327951",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1a785f6e-f284-4131-ab8f-b9637f1cd69a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "604afd22-8484-4a68-aff5-1950ce58eebd",
        "cursor": {
          "ref": "99f25064-5fe0-4106-be73-46c5e254a90b",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a80bacb1-ea65-43e7-8239-9978ab7a7dd8"
        },
        "item": {
          "id": "604afd22-8484-4a68-aff5-1950ce58eebd",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "562f976f-cb7d-42c5-9905-cc2226460027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "581ee54f-ce5d-4387-9ea0-c1c09b68f911",
        "cursor": {
          "ref": "9a2283f5-969a-42d3-b61e-48a1927d679c",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d892e624-8103-4073-9b9e-c52bdb08e3cb"
        },
        "item": {
          "id": "581ee54f-ce5d-4387-9ea0-c1c09b68f911",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c17914e0-f677-4c53-b4b3-e2c1d8ba281b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "837f1e8f-47ea-4878-ab00-cc2cf321186c",
        "cursor": {
          "ref": "2fd04cbe-b6a1-4f34-8064-c62410aaa8ae",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "40299c73-1cb2-4be1-9495-1923946c38ec"
        },
        "item": {
          "id": "837f1e8f-47ea-4878-ab00-cc2cf321186c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e54f3c41-503c-4407-84d6-3395ced7b66b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d0024a5-34ad-4f5d-8f74-af9471e631dc",
        "cursor": {
          "ref": "0700e63e-d0ef-4fbb-9ec8-df21bd058dc2",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "85c9db9f-8e77-40cb-9fbd-3084097f66df"
        },
        "item": {
          "id": "7d0024a5-34ad-4f5d-8f74-af9471e631dc",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "4fe5e6ab-ceb0-46cb-a1a6-a72651a89775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4393a71c-ab1c-482c-a9d3-4efb5256ec77",
        "cursor": {
          "ref": "07daa45d-34b6-43e1-acec-489262a35cce",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c1131493-5d49-46c3-929d-c51db99cb3cc"
        },
        "item": {
          "id": "4393a71c-ab1c-482c-a9d3-4efb5256ec77",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6dae884e-665a-4a3d-8180-aff87cc5e70b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09cd219c-9baf-434e-9344-23de215e7a7a",
        "cursor": {
          "ref": "093c504d-914a-4c27-b0de-9ea0f914c688",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8de44452-20e4-4aa0-acfc-76c1564a0d8e"
        },
        "item": {
          "id": "09cd219c-9baf-434e-9344-23de215e7a7a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "1cbf1b30-8b2a-4cee-85bb-98d9263d22c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed585be-17cc-4285-b966-11d64697d4e7",
        "cursor": {
          "ref": "942313d8-613b-4233-87c8-990de771e345",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "3605f926-f1bf-44ee-93d7-89680ef2bf90"
        },
        "item": {
          "id": "9ed585be-17cc-4285-b966-11d64697d4e7",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d7e3f9eb-51bb-4e25-b1ae-b9a35d7384d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f676423c-d676-448e-a4c9-f3c1cf88cf7f",
        "cursor": {
          "ref": "c968d86c-eade-4088-8504-5e9bf2f41a35",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d621765e-15a3-4cb0-9ead-3e0664ed9f0b"
        },
        "item": {
          "id": "f676423c-d676-448e-a4c9-f3c1cf88cf7f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c1e050f5-55d2-4b8c-a236-715498515a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d546cc5-06f1-4fc0-a15b-0d9db9312cfd",
        "cursor": {
          "ref": "435d14c0-2ee9-42a5-99e1-1dc3833f4d12",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7e750f78-a9b8-4d54-91f7-0a7ed0ff1722"
        },
        "item": {
          "id": "2d546cc5-06f1-4fc0-a15b-0d9db9312cfd",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "1d22e3f4-7f88-491f-9897-65d24f5e092e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0732ccad-291f-499e-81c0-77aa19966867",
        "cursor": {
          "ref": "e8bc0a29-150a-4543-af57-a72a24431fb2",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e6867f78-7dd4-4064-9159-30f538993023"
        },
        "item": {
          "id": "0732ccad-291f-499e-81c0-77aa19966867",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "67e5dad0-924d-493d-9479-f6e5e8e1df4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f2a7b0-0ce9-4d9d-b2d5-f410b93d6564",
        "cursor": {
          "ref": "b61827ef-5109-4486-9292-b61d7992a23c",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "3b9c98d5-0738-4f5b-bcf1-094eb26d963f"
        },
        "item": {
          "id": "10f2a7b0-0ce9-4d9d-b2d5-f410b93d6564",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d40dd5c3-8bd4-4cf6-afff-bf3dfbe4fdda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac20b3c-ffb5-40ed-9f80-873dcc8a86c7",
        "cursor": {
          "ref": "599eed2c-9b21-43db-85df-5801a0965bb7",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0d56eb42-5b18-4f2c-bb80-dca4253a8c7b"
        },
        "item": {
          "id": "dac20b3c-ffb5-40ed-9f80-873dcc8a86c7",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "d449e085-9da0-42c8-a763-b769e8b2a6e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd1fb772-8999-437e-bd33-27a145565a95",
        "cursor": {
          "ref": "0d8e6a32-0bb0-4f21-8517-28aa5523116a",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "03b446ca-ad27-46be-802f-eda0e68cd1ee"
        },
        "item": {
          "id": "fd1fb772-8999-437e-bd33-27a145565a95",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2096c315-78f7-40c0-adfa-660e0066b718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33dbb44a-f3af-42f8-9bd0-d28a73418e9c",
        "cursor": {
          "ref": "e314e7f5-7b82-46e9-af50-c6323994300a",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "0598a600-1b65-497a-b823-5788b17091de"
        },
        "item": {
          "id": "33dbb44a-f3af-42f8-9bd0-d28a73418e9c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ec0a0c03-7758-48ca-99dc-378dc593418e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "216f8b7c-6228-47ef-b645-3def3d47939e",
        "cursor": {
          "ref": "99d2f178-1592-4d84-8f93-d8933fb482cd",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "31fd9642-1d0e-45e9-8845-0445f0c198e2"
        },
        "item": {
          "id": "216f8b7c-6228-47ef-b645-3def3d47939e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "fdb89a3b-c37b-4a05-b316-6155e4d4248e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa4882e2-2e4e-4a54-b536-8c3f06423815",
        "cursor": {
          "ref": "aa513701-2669-4d39-bc25-9c7e0f1d3236",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6e685522-92a9-4de1-9eb8-15dbb918162e"
        },
        "item": {
          "id": "aa4882e2-2e4e-4a54-b536-8c3f06423815",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e3a6f761-949c-4dbd-a10a-a35f871a2cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "509aa1f2-049d-4a5b-835b-be702b847f74",
        "cursor": {
          "ref": "9c8a7ce3-47e7-42da-a767-7861b52b90dd",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f4123c80-bdf6-4424-a9b8-5d6337552db2"
        },
        "item": {
          "id": "509aa1f2-049d-4a5b-835b-be702b847f74",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "e2c0a09c-7db6-4f0d-bffe-656cae0bb350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de4931e-cf48-46d9-a40d-f8abb0e60ca4",
        "cursor": {
          "ref": "231cbade-1092-4e28-9c29-4a075643ed92",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "941a15ae-eff2-4d98-8952-a88f15530dcd"
        },
        "item": {
          "id": "6de4931e-cf48-46d9-a40d-f8abb0e60ca4",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "da4971e5-282c-41b3-88c7-622d87beadc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90efe7ae-9b3a-4db6-af15-eb5833c12f1e",
        "cursor": {
          "ref": "89c35152-0b8e-45c0-9ab7-6f90853e541c",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b5622d06-b444-4894-912f-7564807ff2b8"
        },
        "item": {
          "id": "90efe7ae-9b3a-4db6-af15-eb5833c12f1e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "68d5a191-399f-459f-980c-d1ed4bf3b17a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a24956d-1fcf-46ce-9a6e-8604c027f8d9",
        "cursor": {
          "ref": "3a4cb41d-8e79-4f71-8dcf-1f1952e1e73d",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6716b50a-9560-4f2c-a6a5-117f42a81b90"
        },
        "item": {
          "id": "6a24956d-1fcf-46ce-9a6e-8604c027f8d9",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "d8cc0d2c-8335-4c29-a6cd-82063f61432c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f049817b-4f2b-41b9-a0c8-90dae0b49882",
        "cursor": {
          "ref": "19626969-c4d8-4e0a-a488-07a35038dab8",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "3138e35e-07f2-4dd6-8233-1e34419c164a"
        },
        "item": {
          "id": "f049817b-4f2b-41b9-a0c8-90dae0b49882",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9584125b-2d96-43ce-9f24-1a2ed2e7db63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f66091-f655-4c57-b5ad-aa7671ac45b8",
        "cursor": {
          "ref": "e2f797e3-f853-4c96-866e-526c419d426a",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "14a351c4-7c86-46f3-9a45-1b06773ff481"
        },
        "item": {
          "id": "a9f66091-f655-4c57-b5ad-aa7671ac45b8",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9bbbd2d2-a05e-491e-bcc1-46386aad9a4a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 20,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559f82a8-2e73-4a1f-b052-c117165f4cfd",
        "cursor": {
          "ref": "7d24b3d0-872a-46ac-805b-b526db78d2f5",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "7ed49cfa-9eda-4cd1-bf11-5a72ea8e6d52"
        },
        "item": {
          "id": "559f82a8-2e73-4a1f-b052-c117165f4cfd",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f252d3b0-3e6b-474a-8b86-34c140f730ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23653529-5073-486c-beb2-9e361bfdf2a6",
        "cursor": {
          "ref": "922c9ba5-dc4e-4847-9638-05c2def23fd5",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0fc79db4-6075-4103-b50a-ed748786db10"
        },
        "item": {
          "id": "23653529-5073-486c-beb2-9e361bfdf2a6",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "457aebaa-044d-4a03-a689-b3a79ac3016c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f72b6c0f-2942-428c-857d-a50a3e2fd8cd",
        "cursor": {
          "ref": "6e7e8242-1cc1-4238-ac07-a57f23cde63b",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ca6f37ad-2569-46c0-a960-d5e3f9a45791"
        },
        "item": {
          "id": "f72b6c0f-2942-428c-857d-a50a3e2fd8cd",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "2a7bfe2c-56b6-4470-a68a-6c691a02810a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed47b6c-2c7b-423b-b5ef-37d4f8e32f66",
        "cursor": {
          "ref": "768efc8a-80bd-4b93-b199-ca27f38e3469",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3a37152b-cbc4-4402-be31-ee7acd87b7fc"
        },
        "item": {
          "id": "4ed47b6c-2c7b-423b-b5ef-37d4f8e32f66",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a6c286a5-a0a8-47b8-9bfd-f6d635f4213d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6e97e3-3626-49a2-88c1-9d434d9b74ef",
        "cursor": {
          "ref": "dae845aa-d238-4c96-a77d-f18094933d0d",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "302a8e94-3b19-4973-a9f2-8ef59e2a753a"
        },
        "item": {
          "id": "bb6e97e3-3626-49a2-88c1-9d434d9b74ef",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5ce63818-472c-4525-b72e-3cb9939e3503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe414289-9232-4f81-b858-847bfb328821",
        "cursor": {
          "ref": "5e089842-be93-49ce-9d5d-4c3fa3adcb57",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "994817c9-b03c-486b-a15c-5f278da237fa"
        },
        "item": {
          "id": "fe414289-9232-4f81-b858-847bfb328821",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "961fb0ab-1974-4e2a-9cc3-513227883ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2039236c-3ce3-4ed2-95e2-c3d4e0c8df02",
        "cursor": {
          "ref": "99e6135c-529f-4673-a002-d01b68010b0d",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "5f1b7189-226b-4897-80e6-1313205a8b44"
        },
        "item": {
          "id": "2039236c-3ce3-4ed2-95e2-c3d4e0c8df02",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c2a59c92-d849-45ae-a016-63960bb65b19",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 19,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7276889-de35-4176-a24c-0794d903c081",
        "cursor": {
          "ref": "ffcd6127-e352-4652-b765-335d83235e4f",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "77872310-f5ab-437f-8709-b180c4fce8cc"
        },
        "item": {
          "id": "d7276889-de35-4176-a24c-0794d903c081",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "596178e1-c73f-4afb-94ec-87c7cd5c7a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f4e9da1-3437-414b-a53e-1fd3787f7845",
        "cursor": {
          "ref": "b4151e4c-8de7-40e5-8b85-c93f97f8239c",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d9fe1c86-07a4-4c0b-9c75-8b99c6753087"
        },
        "item": {
          "id": "6f4e9da1-3437-414b-a53e-1fd3787f7845",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "7fa8a6e0-3816-4c53-866a-c7e472c1bb2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb5f9b8-d798-4c9d-9911-d1b14e2c3b62",
        "cursor": {
          "ref": "c9871d8d-239c-404e-be53-1b70f29d0d1d",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "1df77ebc-a648-457e-b226-70879b0e2dd1"
        },
        "item": {
          "id": "7cb5f9b8-d798-4c9d-9911-d1b14e2c3b62",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "6f44f2aa-8813-428b-b730-8ad9bdcc99ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b27c53a-578d-489d-92bd-fe71bcfe157e",
        "cursor": {
          "ref": "087cf029-4dcc-4340-827e-40e09885c4bd",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ec5a0103-0ac3-4553-ac43-ea6ee1b3f73f"
        },
        "item": {
          "id": "5b27c53a-578d-489d-92bd-fe71bcfe157e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e81ea244-b8d3-424b-8420-1b961debb65d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23bac7d-b540-476a-9f60-61e78511e771",
        "cursor": {
          "ref": "902b2503-5455-4a4e-9ab3-e06d4c24c6e4",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "9f312c15-4643-4641-b7b7-997e15a3f5a7"
        },
        "item": {
          "id": "b23bac7d-b540-476a-9f60-61e78511e771",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4667d92f-ad19-4093-93c3-f6aa932e18ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac1f6fcb-dcb4-45a7-b8c6-884e33f96852",
        "cursor": {
          "ref": "1d9e2889-4b05-4fe8-888d-4c912596cfa7",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "eca3f1b1-ed3a-4214-9b6a-f4f025b0d0f8"
        },
        "item": {
          "id": "ac1f6fcb-dcb4-45a7-b8c6-884e33f96852",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "22048949-c5f1-4b7e-a53a-8a365f55b5c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9032ff-dadc-4de6-9764-576dd6d27ba7",
        "cursor": {
          "ref": "193cca3d-fa50-42dc-b89a-abe9a9fbdef5",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "1091ebe7-20d7-44a3-9aeb-2c312fc6ee61"
        },
        "item": {
          "id": "ed9032ff-dadc-4de6-9764-576dd6d27ba7",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1856c308-d2e8-4747-980a-cbf058331a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca9477cc-d881-4768-a0dc-4bf8c2cdc5ee",
        "cursor": {
          "ref": "e673efcb-2b49-48a0-9c5a-3fee9150834f",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "564d12d9-03cb-4833-ae17-1b36913a46a0"
        },
        "item": {
          "id": "ca9477cc-d881-4768-a0dc-4bf8c2cdc5ee",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "fbf4acf5-5055-4abc-a8bc-d355a851d69a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4bb5a85-fa26-4aaa-a82e-c88e9974bfcc",
        "cursor": {
          "ref": "ea943c93-ce32-4335-ade5-a9fdd5b1e4a4",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "053a8209-8791-4041-8743-c51f4be7a64e"
        },
        "item": {
          "id": "e4bb5a85-fa26-4aaa-a82e-c88e9974bfcc",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c9c0ce50-332d-4d2c-a38f-33844ea4ad95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61890ca1-5aa6-4b81-aa4f-ee6ce595b03d",
        "cursor": {
          "ref": "4982cf62-b767-4bdf-8cfc-c962e678e0e4",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "94754b54-1f8e-4566-80ad-e660a9fc30c4"
        },
        "item": {
          "id": "61890ca1-5aa6-4b81-aa4f-ee6ce595b03d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "994cef89-16be-4489-b40f-ba5c3f4e87b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c7ec93f-1de9-4309-b6aa-7681c0f554f5",
        "cursor": {
          "ref": "d65dca0a-7e27-4257-ba55-14dfffcec4ea",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "2983fa15-5cd1-483c-9d89-60acbc2630b6"
        },
        "item": {
          "id": "7c7ec93f-1de9-4309-b6aa-7681c0f554f5",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "99a6c2e3-8689-496c-87e6-0bb0d616ae8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db819550-0e0d-49f4-83e2-4c1aa704536d",
        "cursor": {
          "ref": "bb0cc0bd-8fbd-4c98-a885-dc5b575a6bc8",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6c470af3-16f9-4b58-a306-9c3e8c542ba8"
        },
        "item": {
          "id": "db819550-0e0d-49f4-83e2-4c1aa704536d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "7797a6ae-dc74-438b-bf27-ce533e989f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee4a583-558e-42de-abc4-43133f2368cd",
        "cursor": {
          "ref": "ff7d9416-ef2c-48ee-a120-c58404a2b1f3",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "bb605ad5-a6b2-4cbd-b6dd-e183ca65e072"
        },
        "item": {
          "id": "eee4a583-558e-42de-abc4-43133f2368cd",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "fa463bc2-613d-4c73-b239-bd0e6b40df5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1901a3e1-c88b-484b-91d2-61f1b3904c53",
        "cursor": {
          "ref": "517c95c2-8711-495e-8c54-e62c553a4c6f",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "503b6b13-4c39-4acb-817f-b2b630506e5e"
        },
        "item": {
          "id": "1901a3e1-c88b-484b-91d2-61f1b3904c53",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ddb39e5c-5366-4f25-8180-0115494d1cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3364beb-edcb-4a61-9ff8-4c9fd3364959",
        "cursor": {
          "ref": "e6387194-916a-4071-b519-2d22dcaf11fd",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "37a882c5-9f3b-4877-b8ae-c314d40bb930"
        },
        "item": {
          "id": "f3364beb-edcb-4a61-9ff8-4c9fd3364959",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e8898837-7a35-4fc7-ba0b-bedd820b7f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a83b5b09-33f4-44d2-a32b-594f71284758",
        "cursor": {
          "ref": "e6e9e692-3ce4-4203-bda0-94e44f6b5be8",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "50533b60-729f-4acb-817f-59cddab05683"
        },
        "item": {
          "id": "a83b5b09-33f4-44d2-a32b-594f71284758",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "9d42c84b-b1dd-4073-a4ed-f61a23a1d039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a6a64ff-2793-484a-b728-d298b97fe4c2",
        "cursor": {
          "ref": "29c6814b-d247-4a88-8385-82f85f517e30",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "2f14a151-04a3-4725-8941-8d8cc2f78a23"
        },
        "item": {
          "id": "5a6a64ff-2793-484a-b728-d298b97fe4c2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e3921fbb-40eb-475a-8e60-d5635a163094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d593b8-ce86-4c07-b27b-099a517c7068",
        "cursor": {
          "ref": "298ab293-239e-4167-a1f7-f84e560ab7aa",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "64600a61-a3b1-442b-819f-6f7e5d4d2550"
        },
        "item": {
          "id": "16d593b8-ce86-4c07-b27b-099a517c7068",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7189a364-4b16-4b00-9b88-535d29d6ac9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d24437c-01e1-4368-a8e0-a6761ab8b2e4",
        "cursor": {
          "ref": "20ac2a01-a6eb-4df9-abcb-1e7fb74c0adb",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "434bbfcb-74bb-420e-a22f-50c1be40f9de"
        },
        "item": {
          "id": "9d24437c-01e1-4368-a8e0-a6761ab8b2e4",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "294641e2-49f0-4839-803e-cc44b8fd637e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb6f7e9-c420-4766-bdf3-a7da8f3b01e3",
        "cursor": {
          "ref": "596ab3c9-caea-4189-a255-6a9c00a7b7e5",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "7016e35a-0a8c-4898-aa79-0e9169c21355"
        },
        "item": {
          "id": "cbb6f7e9-c420-4766-bdf3-a7da8f3b01e3",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d98b7d32-b3d7-4169-a80c-e7c05dba5dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cbac22b-58fb-4003-a4a2-7d53abfafba8",
        "cursor": {
          "ref": "6c72e766-2861-4aec-8538-e48b346dbaf7",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ca73aa03-e444-4265-9a1d-2e86bb94984a"
        },
        "item": {
          "id": "4cbac22b-58fb-4003-a4a2-7d53abfafba8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "ab0d6880-2cf9-4d58-b3e7-9cd4a548ef98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37c1fab-ef0c-4244-9175-1aca4e0b314e",
        "cursor": {
          "ref": "c13beca4-bb56-4b88-85e2-0743d56e74b5",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0d6a2bcb-b167-4e45-8eac-00f9e22d9d1a"
        },
        "item": {
          "id": "d37c1fab-ef0c-4244-9175-1aca4e0b314e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "fa4ed6ac-8ac1-4aba-aaa3-dc3a16bc307d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a27da22f-8250-4a8a-b1f7-0cc5e9419608",
        "cursor": {
          "ref": "ce79a2d7-a14f-47f7-a1e1-f6a984e84402",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "34d85b31-c76c-46d3-885e-4a6da4128d1a"
        },
        "item": {
          "id": "a27da22f-8250-4a8a-b1f7-0cc5e9419608",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "f281f43d-4e62-4693-a73b-c0555bc4f8c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a6eb18-49cd-4c37-9c5d-3f8d3d1908ea",
        "cursor": {
          "ref": "0bd0b285-105f-47de-a63b-d334cf877658",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b24a0ba9-2d74-4cc9-8df8-7b61f067c207"
        },
        "item": {
          "id": "b1a6eb18-49cd-4c37-9c5d-3f8d3d1908ea",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "4d74621f-a735-44e8-9936-da369266fe39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c8e6fe-fb73-452b-b3d9-39a7582fcdbc",
        "cursor": {
          "ref": "06e6075c-4a2e-49af-bfbf-96befe7dfdb8",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "1141c60a-1b93-4480-ac52-c510bb1064b4"
        },
        "item": {
          "id": "d1c8e6fe-fb73-452b-b3d9-39a7582fcdbc",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3bd0b4f2-3833-49da-b649-da7bdad29203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f98a39fc-b323-4fbf-abd6-3a3931e90737",
        "cursor": {
          "ref": "4f005d25-195f-4ed5-9b87-8940a515a510",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "4131154b-c293-44c7-842a-bed140d047c5"
        },
        "item": {
          "id": "f98a39fc-b323-4fbf-abd6-3a3931e90737",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "caa25ee8-1a2e-424e-9043-c2ddbf8d3533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c19bb3f1-40be-464a-b274-085d4a34104a",
        "cursor": {
          "ref": "fdccb84e-cec3-44b5-baaf-33edb6e0e14f",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d36e6e89-1687-4f31-a2db-e906eb8fcfae"
        },
        "item": {
          "id": "c19bb3f1-40be-464a-b274-085d4a34104a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "bdbf5da9-b437-49be-b38e-f349fc2e2ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b72500-7a45-415f-a940-bd4cb9e78e82",
        "cursor": {
          "ref": "6476d7aa-1a5b-4cc3-90fc-c6f88705de34",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4c5eaa21-3f8c-4e2c-a525-eae8f88bdc8d"
        },
        "item": {
          "id": "23b72500-7a45-415f-a940-bd4cb9e78e82",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "da1d81ae-bea3-4348-929b-0b9d99dd2c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5adf5e6-8e09-478d-a602-530dbbccf541",
        "cursor": {
          "ref": "2eb42c12-ad1c-449d-bd3a-2579e390adf5",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "dc31a7d1-d1fe-4945-9ba4-fc57c566fec9"
        },
        "item": {
          "id": "e5adf5e6-8e09-478d-a602-530dbbccf541",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d97a66dd-58b6-420b-8fe1-c97b772811b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf0efeec-f319-4d7d-a04d-c960a26c856f",
        "cursor": {
          "ref": "6dfb6c27-a39f-4304-b098-76bb50336edd",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9b3e884e-fe87-4b19-b3e2-d52948c295ad"
        },
        "item": {
          "id": "cf0efeec-f319-4d7d-a04d-c960a26c856f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6caf63fe-b03d-437a-be6c-77e2d33c6d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac9a86a7-1a14-4759-be25-615caebd9724",
        "cursor": {
          "ref": "e13442a8-4df6-4dbf-94f7-c5a077d364c0",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3d0efa8f-f65b-42a4-8a60-a5a873dab369"
        },
        "item": {
          "id": "ac9a86a7-1a14-4759-be25-615caebd9724",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "42509114-934b-401e-be9b-6701239b3e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7a15ce-5d1e-4dbc-9032-2139cf6faa9e",
        "cursor": {
          "ref": "a0d4e5d3-e75a-4b79-bce2-068b4a90ab27",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "fa6298ad-3629-4b1a-9a7d-ccdc508bfa82"
        },
        "item": {
          "id": "5c7a15ce-5d1e-4dbc-9032-2139cf6faa9e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ad64e4e4-b2ec-4ef3-81cd-b22648b1e643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00dccd32-7d14-4cf3-bea4-dd31e7c66f97",
        "cursor": {
          "ref": "ccfd060e-5d0f-43a0-935d-c3c5a1fdbede",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "8dc802c8-8b67-4666-8576-2446b1aac385"
        },
        "item": {
          "id": "00dccd32-7d14-4cf3-bea4-dd31e7c66f97",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "9348a34d-6837-4c94-b95a-4af65a7e412a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53c8021-75e1-4a09-9921-32f30e7a1e2b",
        "cursor": {
          "ref": "a521b366-1be1-4a8b-99b8-083e2e50a7f1",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "5425200a-cc3d-4a26-9102-8f3580290a4d"
        },
        "item": {
          "id": "c53c8021-75e1-4a09-9921-32f30e7a1e2b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c200785d-a306-407a-8796-3982730d8ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eacae846-bc79-4c07-958e-7f214761752f",
        "cursor": {
          "ref": "4d9e852e-d2e4-4733-b823-4984a1106d60",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8d6fbfa1-c58f-478e-bba0-354afeba6ac7"
        },
        "item": {
          "id": "eacae846-bc79-4c07-958e-7f214761752f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "603e29d1-5758-47da-b3bd-a4b2ae40bd4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c66128e8-3520-4fc9-899c-ec618dff1349",
        "cursor": {
          "ref": "4ca129c7-b78d-491f-aa2f-9d4fc4743b72",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "311775ef-29e7-49ba-8e27-38830f1d4a03"
        },
        "item": {
          "id": "c66128e8-3520-4fc9-899c-ec618dff1349",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "bead8b0b-3777-4569-9362-851f34ca4df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e0d853f-6598-47cc-9a79-6f419c4a2310",
        "cursor": {
          "ref": "3725c339-1ff4-41da-9802-50c0ab028e39",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "118cc6cf-32e0-4973-bb66-eb56d04e47bc"
        },
        "item": {
          "id": "5e0d853f-6598-47cc-9a79-6f419c4a2310",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "8c596d0b-435d-4ac5-a4f5-572932b6c288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ddf12f-ae07-4ffb-8fc7-fb378acdcb53",
        "cursor": {
          "ref": "3bac75d4-c23c-4f3e-8d23-d19dc20998bd",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "144f9a2a-6b50-4739-a613-ec2aa599e18c"
        },
        "item": {
          "id": "89ddf12f-ae07-4ffb-8fc7-fb378acdcb53",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e3afbc28-6b3a-46a8-bbd1-e56e92606063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "745ba390-3156-4635-8313-5ee6468d6198",
        "cursor": {
          "ref": "b8d838ae-cc97-41ae-9a8c-5bfa437c0b8f",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "7a8b214e-c3d8-4a98-bdee-e298cd5caf76"
        },
        "item": {
          "id": "745ba390-3156-4635-8313-5ee6468d6198",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b0ada82d-3c47-4559-bc1b-3082b8987cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b751f4a7-caa2-4940-97bd-51c4c6ded0cb",
        "cursor": {
          "ref": "fb968b6f-c2ae-4704-b944-0c31d8d4bc9d",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "598213d0-0f53-4903-92c6-3456daf69160"
        },
        "item": {
          "id": "b751f4a7-caa2-4940-97bd-51c4c6ded0cb",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "2c0f51b3-20a3-4ea8-95ff-62335535f015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d50a94-62a8-40bd-88da-db6ce70da41f",
        "cursor": {
          "ref": "9e08a9bf-de6e-4f12-ae39-7131f39ebff1",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e9f54c2d-1f92-44bc-be5c-2b3996fca52c"
        },
        "item": {
          "id": "43d50a94-62a8-40bd-88da-db6ce70da41f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "5d72e61c-1759-4ed9-b7df-6e08c03cbd01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7623a46f-c969-4deb-bd37-17ffa7f5a73e",
        "cursor": {
          "ref": "7395b6e8-dcbc-49e7-b8b1-3f8e3aaff96d",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7bb84a94-eafa-4c16-af3c-9351b7605290"
        },
        "item": {
          "id": "7623a46f-c969-4deb-bd37-17ffa7f5a73e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a0a88fff-79c9-4cef-b763-e4d464f7f476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc3d4cd-603e-43e5-85af-9fd1fb55288b",
        "cursor": {
          "ref": "03ff5ee3-0fbc-42a9-999b-5be7fe295647",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c8684107-f17e-4d1b-ad9b-a21d7b316217"
        },
        "item": {
          "id": "4cc3d4cd-603e-43e5-85af-9fd1fb55288b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "5b1f5c97-eaf3-4d1c-9b8a-31c230921539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a074703d-33ad-4885-896c-cf5d518624c0",
        "cursor": {
          "ref": "d6748e5d-0085-43bc-988e-709d2724abfc",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b60b1241-2f7d-4b1a-989d-df528930ddcb"
        },
        "item": {
          "id": "a074703d-33ad-4885-896c-cf5d518624c0",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2477a84a-a63c-41e5-81ea-ea081b9ef989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97cd3ace-1cfe-4181-ad0f-072191a96d12",
        "cursor": {
          "ref": "24affd18-e899-4a08-a9c2-8e3167d07b52",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c0d20072-9d2b-40c4-a745-89b49b83cc5e"
        },
        "item": {
          "id": "97cd3ace-1cfe-4181-ad0f-072191a96d12",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1490ba9c-0d25-4d79-8da0-2a6f15b9564e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc95ae66-2fb0-46fe-b96f-9d26b15a87bd",
        "cursor": {
          "ref": "950e5d3a-232f-4ad6-a217-0a6442d563dc",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a41f13c4-d7e6-4c9d-8b06-e97d7a4d00e2"
        },
        "item": {
          "id": "cc95ae66-2fb0-46fe-b96f-9d26b15a87bd",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2b03db7c-7294-45b8-b49b-d2a5569a4c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d81ece-c1e6-4f62-8ff4-bded27c47490",
        "cursor": {
          "ref": "5126a5cf-bb84-4c22-8f08-c6345bd2fafa",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "bfbd3daa-0466-4e8a-bc96-21a491cf05cd"
        },
        "item": {
          "id": "09d81ece-c1e6-4f62-8ff4-bded27c47490",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "7ddcd940-46cd-4c5c-a7a6-1a163eed6259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e5c921-0e4f-494f-8f94-49cb80433345",
        "cursor": {
          "ref": "a9077bdd-f9f9-4a25-82d9-edd27054752d",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "1287fbb9-51fa-4608-925a-37a054258c26"
        },
        "item": {
          "id": "80e5c921-0e4f-494f-8f94-49cb80433345",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d3d3c82d-9267-412a-b8a9-9e3010513c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c66ec1cf-39c0-4b9b-881c-bd657fae6535",
        "cursor": {
          "ref": "313b6d9f-2fce-445a-9524-a77cd7c38197",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "68262da0-3d2d-436e-bd3c-49a07c7596bb"
        },
        "item": {
          "id": "c66ec1cf-39c0-4b9b-881c-bd657fae6535",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "39c24b40-7c21-42a1-b30e-0465e2bac91f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf07dbb4-6420-4f67-81e8-cacbcbf3e7c4",
        "cursor": {
          "ref": "a209e79d-850a-4357-afce-ee7bb02ac4aa",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5ccc1025-ea35-4062-ae81-1855457657ea"
        },
        "item": {
          "id": "cf07dbb4-6420-4f67-81e8-cacbcbf3e7c4",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "9b105513-1111-4cb1-9c62-17d2904f2e01",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c1d251d-cfd6-4c7e-a3dc-ddca0cd3052f",
        "cursor": {
          "ref": "3ea3a38d-6d73-4d65-8c87-17da1e0e3ec7",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "7a5345af-6eaf-44a0-ae49-28d46e1dbd53"
        },
        "item": {
          "id": "6c1d251d-cfd6-4c7e-a3dc-ddca0cd3052f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ea198371-1221-4db5-a0a1-921b288233b3",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c255f3-8718-4d28-b648-40f5ce4ff766",
        "cursor": {
          "ref": "0e8f0f7a-6697-469f-97fb-6aca03b56fda",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "937d2ad0-0ca0-4750-9f6d-45fdae93c8f1"
        },
        "item": {
          "id": "a3c255f3-8718-4d28-b648-40f5ce4ff766",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "0e9f1567-ea94-4d75-b40c-b706ca3765f8",
          "status": "Created",
          "code": 201,
          "responseTime": 48,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7d8e69-5e35-4055-addc-07d94ca53f2c",
        "cursor": {
          "ref": "53824503-e708-4f40-8fd5-535dee5baaeb",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "af17eb97-b5dc-4a86-9923-01921a68a777"
        },
        "item": {
          "id": "ae7d8e69-5e35-4055-addc-07d94ca53f2c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a0973a16-d482-4033-9694-cc3ea82d88ad",
          "status": "Created",
          "code": 201,
          "responseTime": 74,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "057fb8d8-55aa-4b4e-b66f-ae4b35a4c9e3",
        "cursor": {
          "ref": "587eefbf-7214-4ea2-8f95-f4fda944ff7d",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1d5ddb8c-a7b8-4fe1-a003-ba969e729d4b"
        },
        "item": {
          "id": "057fb8d8-55aa-4b4e-b66f-ae4b35a4c9e3",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0f6ab358-09a6-466f-8fdc-cfd3bbe57d38",
          "status": "Created",
          "code": 201,
          "responseTime": 27,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc449bd-76cf-469b-99b2-5bdaaa328efd",
        "cursor": {
          "ref": "c3986594-3158-4132-8aa2-c8085bab69ec",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "08f99b91-db92-4623-9b62-a7e45ae54914"
        },
        "item": {
          "id": "0fc449bd-76cf-469b-99b2-5bdaaa328efd",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "cee7f2e4-432f-4db3-a30b-087968e90de0",
          "status": "Created",
          "code": 201,
          "responseTime": 33,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d4eaecc-526b-400b-9cd8-8fb93efade00",
        "cursor": {
          "ref": "b9a14955-b07a-455f-a102-fe5387c5bf25",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "21c3dc3e-2249-42cd-9465-3166ba20771c"
        },
        "item": {
          "id": "4d4eaecc-526b-400b-9cd8-8fb93efade00",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d0391176-ab97-473c-b7ac-0c609e74f370",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df50c195-30e8-4538-b273-1cb69263be92",
        "cursor": {
          "ref": "94597262-5cfc-4a37-b1bd-22d80ef479ed",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "4c96122e-c08d-494c-9717-f057a563bcd7"
        },
        "item": {
          "id": "df50c195-30e8-4538-b273-1cb69263be92",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "839e0918-d73c-4e47-8aad-a9496e66bf08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a35695-16e2-4773-9d6a-b64d387b58b7",
        "cursor": {
          "ref": "d7872bb7-6999-4ba0-9c2c-647cf5c18c1e",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "36ac411f-cc56-4c24-b2f7-0fd0328e1680"
        },
        "item": {
          "id": "e8a35695-16e2-4773-9d6a-b64d387b58b7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d1f4e726-2fc1-472c-b81e-ce17e417b768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22136fb1-6032-4082-a3f9-6c3fcb4f880e",
        "cursor": {
          "ref": "7379593e-9119-4cba-8b86-c7ad527f6430",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2d18c4f2-cbfe-44d3-9e53-7c4ee789470e"
        },
        "item": {
          "id": "22136fb1-6032-4082-a3f9-6c3fcb4f880e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2dea90bf-6e75-4fe9-ac35-a4a73b460a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa9b190-a338-4948-bf8d-aebace813f12",
        "cursor": {
          "ref": "f0db99bc-0d97-4b69-9a80-d5fbc92f9e34",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f37fff2a-59a4-46d1-85e8-eef84a6a0195"
        },
        "item": {
          "id": "8fa9b190-a338-4948-bf8d-aebace813f12",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "159d68e3-7365-41f2-8113-a469fe772c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c84d44-8e66-48f1-99de-edec0409fb41",
        "cursor": {
          "ref": "8f6346bf-c959-48e9-a084-2ca083ef427e",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3c11afc4-3a38-40f7-8246-97c9dd9644b4"
        },
        "item": {
          "id": "96c84d44-8e66-48f1-99de-edec0409fb41",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e96bf621-fa32-49b8-8a4b-7d13a3cc801d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd223266-98c1-4147-abba-7821e53a5b6d",
        "cursor": {
          "ref": "e70ff8a1-97c4-4222-a4cf-ed565e9ac8ba",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "21939c99-8045-47bd-9125-b02d6fef4cf9"
        },
        "item": {
          "id": "fd223266-98c1-4147-abba-7821e53a5b6d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "503685a1-3bf9-4e9b-9dcd-2b391c43bcb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e893ffe-f110-4629-aaa4-3002bdd5e816",
        "cursor": {
          "ref": "576dc5a7-54ca-4ff0-a40d-74340db5ac5b",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "06eab28a-1123-47db-b897-b805fc74c4e7"
        },
        "item": {
          "id": "8e893ffe-f110-4629-aaa4-3002bdd5e816",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "73689505-95f3-4414-be34-586ee94db9cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83a5bfaf-f981-43a0-af98-eefd79fda335",
        "cursor": {
          "ref": "6a3e6849-5603-462e-a8e3-c2ec4d63d3aa",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e62a9c4a-a051-4f45-a73a-e34827801890"
        },
        "item": {
          "id": "83a5bfaf-f981-43a0-af98-eefd79fda335",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "29f4c6c3-40cc-4ca8-8311-e50329785253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f31133-4a12-427f-9936-cb2109b8bb29",
        "cursor": {
          "ref": "73925a0d-67a6-49ba-b0c7-21b3476c5025",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ceb1ae95-8c23-4e9b-840d-1fafab1fc52f"
        },
        "item": {
          "id": "97f31133-4a12-427f-9936-cb2109b8bb29",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d7e713f1-b8d1-4d8b-b995-7e2240ce334e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a337123-6e8f-4bba-b24b-711d4623b9d0",
        "cursor": {
          "ref": "fb119cdf-a360-477a-bc6b-fdef5835e02a",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "72436561-8abb-4de1-acd1-3ee0e015e08c"
        },
        "item": {
          "id": "9a337123-6e8f-4bba-b24b-711d4623b9d0",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3a599e4d-b897-4280-87c0-af84d383849c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c870543-1a4f-4a36-811a-af3fac36b68c",
        "cursor": {
          "ref": "1471b77d-12e4-44aa-8c78-24ef68ecc718",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "52919bbe-671c-49a3-a8ea-afd155e268a4"
        },
        "item": {
          "id": "3c870543-1a4f-4a36-811a-af3fac36b68c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "53aa4f12-f4fe-45b1-b1de-f700174f5bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a171b3-9014-46e4-b327-278d3f3c580e",
        "cursor": {
          "ref": "efbb2478-3ade-44f5-ab75-6b1070089c21",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "2aac514b-1450-40e4-a40e-4d6b2e1346a9"
        },
        "item": {
          "id": "a8a171b3-9014-46e4-b327-278d3f3c580e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d82792dd-a3b4-414f-afc3-f45c4e93de65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3c23fa-4410-429b-9c7e-09987edc5c2a",
        "cursor": {
          "ref": "7d77765a-1887-4a81-ac0b-02779ceba2ae",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "fac59848-6bd5-4b7e-8a6a-017525e895e5"
        },
        "item": {
          "id": "3e3c23fa-4410-429b-9c7e-09987edc5c2a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "62572cfa-8e87-4a7c-979f-8d9fc0e575c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c0b3bb-f88c-46c3-8d6d-d2fb04404e93",
        "cursor": {
          "ref": "4169b38d-3867-4360-b791-6270e43268dd",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "2172a381-d63d-4bb7-a110-c844ca0fa348"
        },
        "item": {
          "id": "71c0b3bb-f88c-46c3-8d6d-d2fb04404e93",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d673eb52-28d8-4ed9-bc35-fb182bb47723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a16a745e-3401-4ce2-b187-15465070aa03",
        "cursor": {
          "ref": "7b118745-7cd2-4346-8b45-fd78ba30f57e",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "01c1e2df-fab1-4c67-9a7b-ab1bb24314eb"
        },
        "item": {
          "id": "a16a745e-3401-4ce2-b187-15465070aa03",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0e1100b9-2f51-4378-bd79-6525da62b016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf78524-d09c-4d7e-9ad1-1173d0fdf10c",
        "cursor": {
          "ref": "12c67736-6efe-4921-b1b8-62651599a287",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "307b3e2e-45a2-48d0-bc22-f94b32b8ab6d"
        },
        "item": {
          "id": "7cf78524-d09c-4d7e-9ad1-1173d0fdf10c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5fde03d0-5840-4f87-a2da-1f982c3e6280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e24685-46ee-4daa-bcd9-88602f18d440",
        "cursor": {
          "ref": "f83103b1-78d2-440a-b51b-bb6efebd76a8",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d03bad23-2039-4083-8b4d-950db5ec051c"
        },
        "item": {
          "id": "42e24685-46ee-4daa-bcd9-88602f18d440",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a67ecca9-bdf1-47cb-b11c-99758b01e6d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f60f4f4-e52f-4cb8-8d8f-a5c9d02d5eea",
        "cursor": {
          "ref": "37aaa195-d368-47a7-9451-01d6015693e1",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "9eae9af7-2baf-4502-8b59-a5fb419fbd62"
        },
        "item": {
          "id": "6f60f4f4-e52f-4cb8-8d8f-a5c9d02d5eea",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2360535a-4406-4a62-9b3f-02412519803e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f0892e4-ce8d-42f8-bf9c-c44c5c24e256",
        "cursor": {
          "ref": "0353afb9-88fb-471b-90bd-258078b7f1f2",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d9b13023-77ce-4b6c-b66f-ab369f577c7b"
        },
        "item": {
          "id": "6f0892e4-ce8d-42f8-bf9c-c44c5c24e256",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "36e1a730-066a-4265-b4f5-b8807d9828f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf79e42f-2f8e-4ea7-8be3-b652db3a0a7a",
        "cursor": {
          "ref": "2de155fb-09c3-47e0-8081-3326ea5e8118",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2d4a95fc-78e0-4c3c-923a-9fe9b96ee4ad"
        },
        "item": {
          "id": "bf79e42f-2f8e-4ea7-8be3-b652db3a0a7a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f9b2c847-790e-4d2e-aa67-1772b1f3e0e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c03369f-0a67-4f1e-b6fa-ed0f290af138",
        "cursor": {
          "ref": "16dcff6c-2667-474d-a1ce-8ccdfb4c17b1",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "44bd3d70-a34f-423c-8b97-562a2517002c"
        },
        "item": {
          "id": "4c03369f-0a67-4f1e-b6fa-ed0f290af138",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "908bd8dc-8d99-4163-b432-f0299f425bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d82a949-6701-4357-bb7a-cd67c7c2c71c",
        "cursor": {
          "ref": "9bdfa850-550c-4f7a-83e9-cf68c523de7f",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "0a8f7031-8619-4b06-b82b-2df49c1c3363"
        },
        "item": {
          "id": "2d82a949-6701-4357-bb7a-cd67c7c2c71c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "34f2b23a-05f7-47bd-b88b-6c821c15d6ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c730c5-040f-42da-9bc8-7b7a58ee3091",
        "cursor": {
          "ref": "0fd9fd95-d0f2-400f-b10b-0fb906ca239b",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8ba0ead6-8a92-49ee-8b23-60ab7c91f760"
        },
        "item": {
          "id": "30c730c5-040f-42da-9bc8-7b7a58ee3091",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "11c0383f-6ce8-4d36-9ec0-58324e15ae37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fbcb3f8-8cab-4ee0-8890-799748a81bfb",
        "cursor": {
          "ref": "bbd4f6fa-81ce-4a5e-bc07-cdea0676c0ee",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "b516923b-5619-4319-beff-198346b85bf6"
        },
        "item": {
          "id": "7fbcb3f8-8cab-4ee0-8890-799748a81bfb",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "953d98c2-12aa-493a-b844-5a36ac22ea0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a370e3-45a7-42ec-a056-4f361703b62f",
        "cursor": {
          "ref": "644c36cf-cf3e-4473-ae13-f543598381b4",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "923fcf4e-b37e-46ef-9e27-b3e7ad699a71"
        },
        "item": {
          "id": "75a370e3-45a7-42ec-a056-4f361703b62f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d888b498-da2f-43fb-b3f7-df61413daad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5f4fd2-02ee-4e3a-9789-5a61c6d6cb57",
        "cursor": {
          "ref": "743590f1-2cee-4036-b573-163a7f7b905e",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "dcdb4806-69f5-420c-bb77-b397df3acc73"
        },
        "item": {
          "id": "9a5f4fd2-02ee-4e3a-9789-5a61c6d6cb57",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a2ccc990-1775-47f9-96aa-bdc29801526f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71237a21-553d-497b-b4df-15aa4bdf2f67",
        "cursor": {
          "ref": "70c11900-4916-427e-934e-39b124d4a177",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "eaa713b7-7fee-4bf3-869b-791d66a615e0"
        },
        "item": {
          "id": "71237a21-553d-497b-b4df-15aa4bdf2f67",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "cdab9c8c-d4e0-4ecf-814d-7cde1f372a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bfc59a9-4ad9-4a03-8f4f-1deb57ed5808",
        "cursor": {
          "ref": "6676ac86-af84-42f8-9532-8a60c6189086",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "7c19baf7-1e2b-4c12-a671-bed8ad2443c2"
        },
        "item": {
          "id": "0bfc59a9-4ad9-4a03-8f4f-1deb57ed5808",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "28865a66-d233-4d9d-a770-2b819397cf47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a143611-3070-44bf-9e59-3b33ba5ff402",
        "cursor": {
          "ref": "f1d4c024-8c99-47e5-b5d3-ad26fed4641d",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c2e80a02-2273-40d6-bc68-d571d1c581ae"
        },
        "item": {
          "id": "7a143611-3070-44bf-9e59-3b33ba5ff402",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b06354b3-ff6b-458c-87b2-75890b8eeab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "699dff72-bb5c-45c1-bfa8-e2e0b90a96e7",
        "cursor": {
          "ref": "077e4634-166a-43f4-8d13-0b625a6b4157",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "57d8979a-8fbe-4975-acaf-580a1b11f304"
        },
        "item": {
          "id": "699dff72-bb5c-45c1-bfa8-e2e0b90a96e7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a18c343f-249d-4187-abe6-155013903d45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b679961-5403-4ba8-a3fd-b4cbec286790",
        "cursor": {
          "ref": "7abad851-0689-4cab-a001-d3c82ed86a51",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "4eff9c17-101b-422b-8628-5093dbf5e440"
        },
        "item": {
          "id": "1b679961-5403-4ba8-a3fd-b4cbec286790",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f6176c78-7539-468f-bb93-f10e99974b50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65db76b7-0ff9-4de0-a694-3b8cb70c2511",
        "cursor": {
          "ref": "1c396ae6-f7d0-4862-aa75-51e8ad23392c",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4d6f3cf7-5361-4934-b0d6-c4a43cf83cb6"
        },
        "item": {
          "id": "65db76b7-0ff9-4de0-a694-3b8cb70c2511",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "d427ee24-ff98-4cef-9214-3a0f8137dcca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ac385d-4633-4de8-ae28-2224de71bb3b",
        "cursor": {
          "ref": "af604397-4a47-44e1-a20d-9a2221100771",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "2d55c47e-6af2-404d-9519-de988a5f79c6"
        },
        "item": {
          "id": "84ac385d-4633-4de8-ae28-2224de71bb3b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "197a3647-69dd-432c-9fe2-d49e86257475",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1acb8078-a3db-40b4-b98e-e52ba5c8a4ea",
        "cursor": {
          "ref": "3d855d6c-3f8b-4994-b74c-ccc5012f1cb6",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d3fa2233-56d3-44af-8b31-0a616691bba0"
        },
        "item": {
          "id": "1acb8078-a3db-40b4-b98e-e52ba5c8a4ea",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "be276dde-db52-494d-9d10-a7a4452c9ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89df2a53-1c17-4851-b7c5-5e0e363fc1a8",
        "cursor": {
          "ref": "d3711754-6f0a-4546-815e-6ac0611d34df",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5958d0cf-1fc1-4fad-9a6f-74f00d190ac9"
        },
        "item": {
          "id": "89df2a53-1c17-4851-b7c5-5e0e363fc1a8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "81091b32-0c9c-472b-9af3-219e51ca39be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5745370-e1e1-4861-98b8-254c3fba714a",
        "cursor": {
          "ref": "ec888e37-b809-439c-956e-b862604f87bf",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e48db2dc-fa1d-431f-beb7-943418cc646f"
        },
        "item": {
          "id": "e5745370-e1e1-4861-98b8-254c3fba714a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f32ebdb4-7c99-4797-8a4a-514fc30adc41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7859f76-7fb9-49df-b473-3013ebadcb5c",
        "cursor": {
          "ref": "9d76d09e-775b-46da-8d1a-8b3cf25aeaac",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3a1f5076-1a5d-44f6-9213-746600d56c5c"
        },
        "item": {
          "id": "b7859f76-7fb9-49df-b473-3013ebadcb5c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "34d47666-99b1-499c-bfed-fc0d99915b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3bcc00-3c6a-4162-9ee4-d71e9d82bdf9",
        "cursor": {
          "ref": "0bbd6e98-83b5-48e7-b068-cfc6e17d50d3",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "159f4db8-7013-4127-93bb-342dcea6e2af"
        },
        "item": {
          "id": "0e3bcc00-3c6a-4162-9ee4-d71e9d82bdf9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "598dd7e0-e3c2-42e7-8327-c5d4b5777125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74944347-bbf4-4487-ad34-d37450d549cc",
        "cursor": {
          "ref": "1bc89a47-0627-4caa-b5a0-6dc8c8a1a966",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6174a34c-c3d2-4598-a4aa-1e75c9b2495d"
        },
        "item": {
          "id": "74944347-bbf4-4487-ad34-d37450d549cc",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "fb100797-ccc3-4564-bce3-1624a15a2d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "066723d2-6ee0-44fd-b3ea-91dcb97e1bdf",
        "cursor": {
          "ref": "ee5cad09-e0a5-462b-94cc-6b0fde197ee5",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "fd4ceb39-5ef7-46fa-9492-73533397da98"
        },
        "item": {
          "id": "066723d2-6ee0-44fd-b3ea-91dcb97e1bdf",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c68b5eee-440c-4825-9272-a25b9ecb7a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef10618b-9f89-45d9-a507-2806e97eb642",
        "cursor": {
          "ref": "1cfb5d41-0723-4423-ab26-fb46e83ddc55",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "9ae75952-ddfb-40e7-94d8-aaf438feed18"
        },
        "item": {
          "id": "ef10618b-9f89-45d9-a507-2806e97eb642",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d0329756-d5e8-4003-91ca-cc540bfb00ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4d4d3c-b1f7-4d49-8a8f-745dd0b8738e",
        "cursor": {
          "ref": "39a3d100-3229-4c74-8f21-3c62b123da5e",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1360e51e-58dd-4cbe-95fd-252f3e72738c"
        },
        "item": {
          "id": "2b4d4d3c-b1f7-4d49-8a8f-745dd0b8738e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e9da350c-d961-41a7-8b65-4723dc6dd9d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd45b7c-33e4-45f2-a509-0da295253be0",
        "cursor": {
          "ref": "6dbfe46d-ed94-4a96-abc3-839b3a9bc0bf",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "93b77288-7f45-4b70-a2dd-fabe78d42074"
        },
        "item": {
          "id": "ccd45b7c-33e4-45f2-a509-0da295253be0",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b5e0bc97-2bd5-4424-bad9-afae46881f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5e6358-984e-4181-8477-1c7176766131",
        "cursor": {
          "ref": "1fe65848-8703-49e5-be88-d74f3f753df4",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "338b1a41-a448-44c1-b415-ec69caede205"
        },
        "item": {
          "id": "5e5e6358-984e-4181-8477-1c7176766131",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "88d604bd-69f7-4e8e-93ed-4dc8cbbbc907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55986532-3d73-4678-b1fb-8a6c63e00dea",
        "cursor": {
          "ref": "9831a072-aa1a-4fd3-9011-c1a9f06a1a18",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7ba3bb7d-bf11-42ac-b1cc-5c260a15a6c2"
        },
        "item": {
          "id": "55986532-3d73-4678-b1fb-8a6c63e00dea",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c50ca743-f135-40f3-ad8d-d37d49270568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a1eb869-c93e-41a9-adf7-935599c2330e",
        "cursor": {
          "ref": "4f428d39-7322-425c-9708-453e897e75c5",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "928e259e-a01d-4ff1-8ced-2a6e6f613adc"
        },
        "item": {
          "id": "2a1eb869-c93e-41a9-adf7-935599c2330e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f60037bb-24d2-4bd7-9c8c-86bbc64b8ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b389d62-1802-4b2e-a780-73362861965f",
        "cursor": {
          "ref": "58651d84-ce9b-431d-8e0f-a380a57320c2",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6ffceb3e-4577-4c9d-a7fe-ab36c4937266"
        },
        "item": {
          "id": "0b389d62-1802-4b2e-a780-73362861965f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f9d8aa5a-915e-49e0-8b71-999a206c404c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0687f7-8a47-4958-ae5b-ba90b2c3a2de",
        "cursor": {
          "ref": "f79012d1-6163-49c6-a74e-de36071e2308",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3cc34935-5c99-4d78-8f13-526d77b1133b"
        },
        "item": {
          "id": "9b0687f7-8a47-4958-ae5b-ba90b2c3a2de",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "589d06f4-75ce-429c-8c32-16671eb16568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414c6cb9-77ab-471d-9926-1eca57f19670",
        "cursor": {
          "ref": "7019fbee-676a-4b59-abbb-9f516c7fc043",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "3c7b44d2-0116-41c3-9314-406c7b53cb9d"
        },
        "item": {
          "id": "414c6cb9-77ab-471d-9926-1eca57f19670",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "53c0d229-eb5a-4569-999e-a8bbf4c2d752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef80fd54-5c9d-428f-a48f-a1097522e56a",
        "cursor": {
          "ref": "7dcb0593-7cf5-4a01-9249-782ce76da123",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "89254be7-1c9a-4041-b1b7-c8e81466443b"
        },
        "item": {
          "id": "ef80fd54-5c9d-428f-a48f-a1097522e56a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a6bd06ae-e3db-4f8e-8277-03b08dbb0b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ec72bd-a22d-423d-89aa-c820fad6c407",
        "cursor": {
          "ref": "8a3d538c-df18-45a6-8457-dda5e6aa5ce5",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "1937ffe9-5860-408a-8eab-40ee2080fe44"
        },
        "item": {
          "id": "70ec72bd-a22d-423d-89aa-c820fad6c407",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3caa5cf4-11f7-4736-825a-0dfeef7ba7c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "781715e1-0383-422a-ae09-93dec690ddc6",
        "cursor": {
          "ref": "b692fee3-984e-4108-893d-2227da9cfd5d",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "fc53485d-b47d-44d0-a300-81e4e3838d14"
        },
        "item": {
          "id": "781715e1-0383-422a-ae09-93dec690ddc6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6a10a7d9-7302-4afa-9beb-ddf88095f4c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "488ee3ea-c71f-408e-9c8d-dbdb5f5c2621",
        "cursor": {
          "ref": "9194fdc5-1ad6-48ca-8cf1-674d7b61bb3f",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "2b71b380-685c-44c8-b724-e125b88252aa"
        },
        "item": {
          "id": "488ee3ea-c71f-408e-9c8d-dbdb5f5c2621",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f44d8ce6-3835-4331-adcc-f23a36b495ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ce9e55-0566-4d6a-909e-c213225e574c",
        "cursor": {
          "ref": "b7de3334-9fc9-4483-b47b-ad340fbeec10",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "0d821c85-04ee-4daa-a8c2-1faf4f5ef4fe"
        },
        "item": {
          "id": "e1ce9e55-0566-4d6a-909e-c213225e574c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "66b3f389-ba16-4381-ac2b-0eb422a2db09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7abb2c3-78c7-4773-9081-4d4dc2d5610c",
        "cursor": {
          "ref": "c126fdd4-0f16-48c0-8434-dc23626f25a8",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "62c73e9f-3226-4ace-bdcb-9ea6f75c013f"
        },
        "item": {
          "id": "f7abb2c3-78c7-4773-9081-4d4dc2d5610c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "095609c9-81a6-4f6d-a93f-ecf0282ee40b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dacae898-a1dd-4f25-a772-b07b238c0bd5",
        "cursor": {
          "ref": "1b7e89c8-5f29-4279-aa76-93d6666d04ca",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "73451503-dc5a-4e13-b9c9-3868440dc547"
        },
        "item": {
          "id": "dacae898-a1dd-4f25-a772-b07b238c0bd5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7a4d68e1-04d6-4b0b-92a7-2cb144f3c1d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7c82a2-50e5-4648-bb6d-77953b380087",
        "cursor": {
          "ref": "6daef865-49d1-4c18-ab09-868499180e5b",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "2f8ff54a-cf84-47cc-a0b6-0881d14440cd"
        },
        "item": {
          "id": "7a7c82a2-50e5-4648-bb6d-77953b380087",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7f0f1325-ff4f-4dc5-8ed9-e1b641d5f184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe7effa-3adc-4d64-8bcc-15bb10f1eb74",
        "cursor": {
          "ref": "df7115a5-5992-411e-8f82-4759e61dad51",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "65d50565-3409-4877-b371-248c0afc55f2"
        },
        "item": {
          "id": "cbe7effa-3adc-4d64-8bcc-15bb10f1eb74",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0c5785de-affd-4d51-b8a0-46864c4031df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f8ecaa-a4b3-4574-a6f3-2b0277157239",
        "cursor": {
          "ref": "988d74b2-716b-416e-8f0f-ebd6fabb5bdb",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3e265aea-251e-4606-8096-6095c720be52"
        },
        "item": {
          "id": "26f8ecaa-a4b3-4574-a6f3-2b0277157239",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1a4c215c-bee6-4b55-9f67-984d5a588fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f66aadb-06da-4079-bfab-63b79ca6b1f5",
        "cursor": {
          "ref": "f2846535-a6e9-4163-a961-0f2bd76bd5f9",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "7af5b018-3446-4c03-8b54-bd7e60a70ce6"
        },
        "item": {
          "id": "6f66aadb-06da-4079-bfab-63b79ca6b1f5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "69bef96a-3404-426a-abdb-37b4d20dcdf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e0e97e-67a1-4b3a-b960-b8430b07cbb9",
        "cursor": {
          "ref": "d21a5eeb-4b6a-4742-abee-97eea3752b5b",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "b49376a8-0255-4e13-84cf-c68da0f636b5"
        },
        "item": {
          "id": "c4e0e97e-67a1-4b3a-b960-b8430b07cbb9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a8b48e7f-bc6e-496f-9a71-252a1f8b0528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e32ff34-8159-4b60-a244-7175395a52f3",
        "cursor": {
          "ref": "649bc714-4e3e-4cf4-a216-134275cfe30e",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "89fa6d4d-1c1b-4202-bdee-063b658eaee4"
        },
        "item": {
          "id": "2e32ff34-8159-4b60-a244-7175395a52f3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4e5013aa-4262-4e96-b5ae-7bf36057f931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb5eed0-e95a-4c1d-b4ac-6bc2a568d842",
        "cursor": {
          "ref": "5507d33c-509c-47c6-96ca-b95c8ce011dd",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "fc93cf8d-26b3-4082-92ab-8a382e03a1f5"
        },
        "item": {
          "id": "6fb5eed0-e95a-4c1d-b4ac-6bc2a568d842",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "279a97c9-1780-471b-a9c3-c1bd1807be4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb6983a-e304-4570-be76-4bc97763b6b2",
        "cursor": {
          "ref": "d6cf0a83-d8e8-4df4-8467-7da5997a4ea6",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "73771501-0b63-4fbd-8ae7-f8f6bf828d2a"
        },
        "item": {
          "id": "2fb6983a-e304-4570-be76-4bc97763b6b2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6a2748ee-69b0-4abf-b532-38ec2fc17565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150ffea8-c581-4b42-b5cb-c17599f510b0",
        "cursor": {
          "ref": "dec9fe52-1810-44bc-ba83-67f089360f4a",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "cca856b9-edce-4a71-9a38-04908c87fe9d"
        },
        "item": {
          "id": "150ffea8-c581-4b42-b5cb-c17599f510b0",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "1b9ee9fb-6243-4623-9ec5-e1c2bc3de077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34dbc635-2f84-4708-b437-1b67b41ba5d8",
        "cursor": {
          "ref": "6b831d82-7875-40e7-96e1-45d6f905aeda",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "6ec0c53b-6caa-4cf3-b8bf-a11e1a80d1e5"
        },
        "item": {
          "id": "34dbc635-2f84-4708-b437-1b67b41ba5d8",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "1c4ec48f-5dd1-4894-b29c-365fbc3131c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ca37a9-3d07-4cf9-a816-1a2bf61af315",
        "cursor": {
          "ref": "c28672bf-19f7-4c89-a5f9-53a419a7751a",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "8467eb34-a50e-4723-a1f7-d901a06cb577"
        },
        "item": {
          "id": "61ca37a9-3d07-4cf9-a816-1a2bf61af315",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "614bb525-eb7c-4f7b-8c2f-8ce5ef2439cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b72d31-3e21-4353-885e-a7f507c9587e",
        "cursor": {
          "ref": "237b3a3b-266d-4ea3-a7ef-6518cbb7b1e1",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "cce86978-e4fa-490b-a514-0b988e2e362c"
        },
        "item": {
          "id": "25b72d31-3e21-4353-885e-a7f507c9587e",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "2e11f631-22bc-4a30-a9bf-0a9d44d938f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5a8e14-8d00-48db-969d-ca13ad9f9845",
        "cursor": {
          "ref": "f4b43b80-9c85-4737-9ef9-f73ac240113f",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0af30b24-97b2-4e24-8016-c40f944a3715"
        },
        "item": {
          "id": "3b5a8e14-8d00-48db-969d-ca13ad9f9845",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "a3926911-94c5-40ee-8fec-b3cbbd27f55a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a1620f6-1af4-4867-ac0f-e56714bb2fba",
        "cursor": {
          "ref": "0e68baa6-91bc-4192-b221-7528ac4e6a0a",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "688eb741-f0cb-4d8c-be94-edca2efe8988"
        },
        "item": {
          "id": "3a1620f6-1af4-4867-ac0f-e56714bb2fba",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "47d5949e-c730-44d7-af29-6490cf5c6ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5544bdc1-f25a-49db-a88b-d240781d1523",
        "cursor": {
          "ref": "0fd8e9b5-7ea5-4d4b-a02e-81dda76f7d9a",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "7437fb31-80a0-4498-a5fb-64c666228cd4"
        },
        "item": {
          "id": "5544bdc1-f25a-49db-a88b-d240781d1523",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a7ccfd29-710c-4d7e-bbe9-574406b59198",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba232ec0-dd53-40c9-b5fe-5fefa128a5e0",
        "cursor": {
          "ref": "e7153072-f8e3-4cec-a555-3e5c91c8658c",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "bfcf46c5-f691-4b46-9d1f-674416144253"
        },
        "item": {
          "id": "ba232ec0-dd53-40c9-b5fe-5fefa128a5e0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "01123030-e2ab-426e-a66f-462f4103040d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767c260f-12f4-4c7b-9464-c4cd515eb110",
        "cursor": {
          "ref": "99ac4e02-b196-4da3-a437-a58ac51b2a0f",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "79813daa-a48d-4a4e-945b-4e28a524c64b"
        },
        "item": {
          "id": "767c260f-12f4-4c7b-9464-c4cd515eb110",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "87eab9c2-c786-4c81-97f5-f8d915550251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b33cbe-5032-4a6e-b908-7aa4e085a19f",
        "cursor": {
          "ref": "312b7259-16ae-4b46-ad00-372eb691f5cc",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "72558d01-9242-48da-ac97-eae67416ebd5"
        },
        "item": {
          "id": "09b33cbe-5032-4a6e-b908-7aa4e085a19f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "cb7fddb0-302e-4913-a28c-4dd6f6cb86d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dcc5f93-1740-4bd1-8ab6-c584ae237637",
        "cursor": {
          "ref": "ad27bd5c-fd6b-4b55-a7b1-f0da5c3039df",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "1aee0b6e-bdd3-47a2-b2bc-420b9cc8f719"
        },
        "item": {
          "id": "3dcc5f93-1740-4bd1-8ab6-c584ae237637",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "1988f813-a18d-452d-a7f7-37634184db17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1240579f-178f-42ac-9262-dcdcb31108cd",
        "cursor": {
          "ref": "7b41de52-5fcf-4bfe-9eb2-c906a39f9f4a",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "3c173bd7-ce1f-4547-b701-13d2183f5e09"
        },
        "item": {
          "id": "1240579f-178f-42ac-9262-dcdcb31108cd",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "40dc8548-40b5-44aa-8959-211de31bcc44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f061a0d-466e-4f5e-98fb-d9d1d9cbd05f",
        "cursor": {
          "ref": "a2b88110-6144-48fa-bc8c-b576b1f89023",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1c6cae38-2f6f-4287-baad-03e9aeabc374"
        },
        "item": {
          "id": "6f061a0d-466e-4f5e-98fb-d9d1d9cbd05f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "cdc88eed-3730-4773-81bc-23b8c0ad8640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15737aae-bb17-4f52-90eb-64f420488d1d",
        "cursor": {
          "ref": "a35b4c2b-9ae1-4e2f-b2cf-5607a10596a5",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "cd0c0efb-b78c-4513-9faa-8c5c887daaca"
        },
        "item": {
          "id": "15737aae-bb17-4f52-90eb-64f420488d1d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1b6d7182-06ab-4b22-9be7-91573849ea4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3dd81d7-b0b6-41a1-ba82-1939da8d650f",
        "cursor": {
          "ref": "087e8eb8-6a8a-42e2-be7c-7d8c5a62ab64",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f4d7539c-6f29-4cfb-9d46-1c7170363967"
        },
        "item": {
          "id": "a3dd81d7-b0b6-41a1-ba82-1939da8d650f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4380ac30-e003-4732-9df3-beead40ce39c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0caba091-adba-422c-bf9a-184a000eca05",
        "cursor": {
          "ref": "875715b7-f717-4ed3-8a44-bf676ad7c04a",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a28bec8c-41ad-454c-8937-5872a148cd2e"
        },
        "item": {
          "id": "0caba091-adba-422c-bf9a-184a000eca05",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "48138578-c8b2-4d13-b630-a124956f0997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9dd5318-e835-4840-8fa1-23a657ea65fb",
        "cursor": {
          "ref": "46bb62af-9301-49fa-88f4-a8d6e0bb49bc",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8b9498aa-f4bf-4ef2-a55f-f0d3390be774"
        },
        "item": {
          "id": "a9dd5318-e835-4840-8fa1-23a657ea65fb",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "131864af-6b23-4f26-9352-1bc7dd84030b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6299313f-edaf-4751-b3b1-7f773182d20f",
        "cursor": {
          "ref": "447aa2f9-8ee0-4c03-aadf-11650e08f5a3",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7835de2f-1c0a-4800-b230-a68b2f0533fd"
        },
        "item": {
          "id": "6299313f-edaf-4751-b3b1-7f773182d20f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e72ede8b-ce19-4546-9384-560200c12152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce24b548-dd4b-4d25-9c47-10b6e371b7a8",
        "cursor": {
          "ref": "69d1b4d8-9066-4b3d-befa-c98075c9e5dc",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b66ae2a6-6a30-47b7-948c-73a0da8b37a6"
        },
        "item": {
          "id": "ce24b548-dd4b-4d25-9c47-10b6e371b7a8",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "fb87350c-7c21-4f92-a538-75b903fb6db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "084f5b99-3dca-4936-8098-be1e8b5fd452",
        "cursor": {
          "ref": "e3812183-e30d-4fdf-9ec1-0da91dc92fad",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "40ddba40-f62a-4835-b9dd-e1f3b9833a01"
        },
        "item": {
          "id": "084f5b99-3dca-4936-8098-be1e8b5fd452",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "4b6edc14-f6a7-4bc1-9c40-d11f0d67e056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "248d6f41-864d-4ae5-8a31-494619b9f3a1",
        "cursor": {
          "ref": "4809a16e-42a1-46be-a59c-7e0f7a7b2543",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "7b9f23c3-a21a-4842-b2d3-6b1b6f91815c"
        },
        "item": {
          "id": "248d6f41-864d-4ae5-8a31-494619b9f3a1",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ca952cdf-83ae-4666-89c2-9e86c5581445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78147137-1ca5-4e85-a8bb-b066d3906d7e",
        "cursor": {
          "ref": "50f72f01-15be-4281-ae3b-a6f0f2360e24",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "9d4b1e98-3cc5-4bfd-b38e-50a0ae62c700"
        },
        "item": {
          "id": "78147137-1ca5-4e85-a8bb-b066d3906d7e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d936e9ae-fc89-46f3-b15d-85d2cef45143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e3769cc-b37a-48d8-8bc3-82e1c2dc3e31",
        "cursor": {
          "ref": "862586f1-b25c-4ec1-806a-bb92d51de11e",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "32aced5a-8b46-4427-89c3-72825ca2878a"
        },
        "item": {
          "id": "5e3769cc-b37a-48d8-8bc3-82e1c2dc3e31",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "7120310f-0fe4-4106-b409-7810d847c17b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0719b58-2d43-4611-9fe5-03d710536ed5",
        "cursor": {
          "ref": "91c9692a-76ff-49ca-8893-f26b2d78123d",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ec06ccad-7fc4-4e32-8013-f894f407de0b"
        },
        "item": {
          "id": "b0719b58-2d43-4611-9fe5-03d710536ed5",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f92e8b35-2889-4895-910b-02e63245522b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0bb8c7c-1574-43e6-9cd9-5adb5708d65c",
        "cursor": {
          "ref": "951f1ab7-20de-4963-b4de-bf1e2409113d",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "b75330b3-b738-46ef-9812-3b502582fa82"
        },
        "item": {
          "id": "a0bb8c7c-1574-43e6-9cd9-5adb5708d65c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9607c82e-5b48-46a5-88ff-452a2c987d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c76759-efd0-4a23-b6a7-0d0edec8c6d9",
        "cursor": {
          "ref": "9b4f9d62-9652-4450-92a8-54589ce45130",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "2bdb794a-e61a-4e44-a143-1f40565b116f"
        },
        "item": {
          "id": "45c76759-efd0-4a23-b6a7-0d0edec8c6d9",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "362d2976-7c91-4253-a417-9c6f914d17bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "447e570b-7d97-42e4-9260-9f1cd3eeb8ac",
        "cursor": {
          "ref": "12e0ea57-58d5-4afc-b877-7e1da81169a3",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8cb5fe0f-1279-4640-893b-b67673e0fcf1"
        },
        "item": {
          "id": "447e570b-7d97-42e4-9260-9f1cd3eeb8ac",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c4ae1ed5-2921-4076-9fc5-304ed9dad0c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeee12bc-dd9a-41c0-abba-d43676d0557b",
        "cursor": {
          "ref": "ed3646ab-430a-4db5-a0de-b16875829f56",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "7292b9a3-5e86-4682-91be-88d32e036d58"
        },
        "item": {
          "id": "aeee12bc-dd9a-41c0-abba-d43676d0557b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5ae749c9-b42c-44f6-a1e2-9ff2280eb9ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f623f5c-bfe7-45c5-bf4e-afe9a2f68d9d",
        "cursor": {
          "ref": "31b3c21c-4fc7-4656-a784-7c25f1185701",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "85f597ac-b263-470e-acb4-c55f0d1b7534"
        },
        "item": {
          "id": "0f623f5c-bfe7-45c5-bf4e-afe9a2f68d9d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "64989916-8c0d-4df2-8eed-9fb0d411beb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be47f0b2-c2f9-4c12-a930-230b31bbe512",
        "cursor": {
          "ref": "9e44ed61-9bfa-4c04-9860-400a9c9cef83",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "03398d9c-2ea0-4e4f-9eb5-1390c35ce143"
        },
        "item": {
          "id": "be47f0b2-c2f9-4c12-a930-230b31bbe512",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "659aed43-dacd-4456-8586-c5dc7dff826a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "978c0df1-5fa2-4491-a12a-d0ec0feb394a",
        "cursor": {
          "ref": "5f3079b0-5637-44a3-a6b9-bda460bd3ee1",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "44964fef-0f34-4421-aeb6-862eeb1f2560"
        },
        "item": {
          "id": "978c0df1-5fa2-4491-a12a-d0ec0feb394a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "9e07b6a3-e192-4084-a8ed-e01d871d56f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b25383a-5518-44af-bd90-cf03e6cd2d3e",
        "cursor": {
          "ref": "e76c329b-45e1-46c2-92f2-71a798b11eef",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8a53578b-998d-4b91-8487-8a9578428564"
        },
        "item": {
          "id": "6b25383a-5518-44af-bd90-cf03e6cd2d3e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c7a513af-77e0-48e9-b431-1046426d9fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d8299a-6cc0-466e-bd36-1b2f72bb041a",
        "cursor": {
          "ref": "8db3057e-a184-416b-b9cc-e4fe17ed89e9",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "94eefe11-b655-48af-ab01-b120ed8f8c94"
        },
        "item": {
          "id": "23d8299a-6cc0-466e-bd36-1b2f72bb041a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f9009f00-c5ac-4468-84bf-b0ede4a1693f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a40786a4-7a44-4cb4-bf06-9f0ec9cdab38",
        "cursor": {
          "ref": "15f5430b-b661-4f11-b176-d536d2dce345",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "07267189-169d-4eab-98a5-9255c9f6c693"
        },
        "item": {
          "id": "a40786a4-7a44-4cb4-bf06-9f0ec9cdab38",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "96a982ff-0d7b-4ded-a916-2837ff329a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a36a12-dcb4-4716-8bf0-ffb0c6559208",
        "cursor": {
          "ref": "e5deaad1-5dc2-4e2d-a28e-d51bafcb5248",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "aa0f72f0-2b7f-4903-b9a6-9e45bddf7e1b"
        },
        "item": {
          "id": "49a36a12-dcb4-4716-8bf0-ffb0c6559208",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "4ce1cdd8-0d35-48fe-b6bf-0a2fe652a87a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af31714c-c7da-46b3-9671-6ca4886a0a96",
        "cursor": {
          "ref": "a71a015a-9355-46f8-9c9c-267261c3fd1d",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "943a773b-a3cf-4c2d-9e2d-1e8499999af6"
        },
        "item": {
          "id": "af31714c-c7da-46b3-9671-6ca4886a0a96",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "2b19cea2-d6bd-4849-a6c1-fb88f1100111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b0ddce-f47a-4867-9e79-23a891634c94",
        "cursor": {
          "ref": "0cb5518f-e841-43a9-b99f-92c1eda796d6",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "cbf7c4dd-33f7-4497-87ea-d233d7fefbd9"
        },
        "item": {
          "id": "32b0ddce-f47a-4867-9e79-23a891634c94",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "6873e6b8-381b-4f79-9223-d7bf437a0ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f97d24d-43f1-45d9-98ae-ac1f63ba83c0",
        "cursor": {
          "ref": "94d4127b-bd5b-4cea-a79e-a56fa6e0270c",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f18c59ff-53a0-468d-b6e2-1551afbed47b"
        },
        "item": {
          "id": "1f97d24d-43f1-45d9-98ae-ac1f63ba83c0",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "629cc901-af8a-47b5-8561-21ebfbc1f75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "045b4e4f-b146-4e30-8651-4330e933fac1",
        "cursor": {
          "ref": "286d755f-f6a1-4479-ac31-6dfba732ce92",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b98ee284-fb6e-4bee-89d0-9b86ca1788e7"
        },
        "item": {
          "id": "045b4e4f-b146-4e30-8651-4330e933fac1",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "211e0cce-57ea-4830-974a-2ad08e67c690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7f6de9-4223-4072-82e4-4f20ffda8902",
        "cursor": {
          "ref": "1a100f06-1b90-4458-a871-85fe4bbbfe00",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "15ebb4ad-9f47-49ce-8d7f-662ccabaa0b4"
        },
        "item": {
          "id": "6a7f6de9-4223-4072-82e4-4f20ffda8902",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "23c781ee-3da4-4f8f-b2a3-ab0e75d9c84e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82991d45-46ed-41f7-b4a8-ceda923a29d9",
        "cursor": {
          "ref": "2de1ef60-ad9e-41cb-b783-d13e097eada6",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "37a22fcb-0375-4a30-9e1a-d6476861cfe7"
        },
        "item": {
          "id": "82991d45-46ed-41f7-b4a8-ceda923a29d9",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c740c27e-491d-4788-b4fd-d5bdbfd181f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c25d86b1-6bc5-4979-b930-b0af3b2e3581",
        "cursor": {
          "ref": "7b300b9f-7dfa-45d2-8e3c-97a213c68a7c",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "abfb41b9-e0ef-4bf7-b08a-19615ef3a6d1"
        },
        "item": {
          "id": "c25d86b1-6bc5-4979-b930-b0af3b2e3581",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ec71b4d8-66bc-42ab-aac0-384783ac0ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20fa74ac-4f9e-4ebb-92ae-8450884622bf",
        "cursor": {
          "ref": "b7c2aad6-326c-4cfd-aeb0-0df1a8cdddec",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "9db66dd0-b995-4913-bd73-5bf50024b689"
        },
        "item": {
          "id": "20fa74ac-4f9e-4ebb-92ae-8450884622bf",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9cdc1ff1-f161-40bc-adb0-5a8557ec4008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36816a7-d7d8-4e0e-952d-8cbee57dc844",
        "cursor": {
          "ref": "d1dbd465-4659-46e9-a4ed-221430276373",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5a0d6952-2276-4812-bcf0-c5948a53d48c"
        },
        "item": {
          "id": "e36816a7-d7d8-4e0e-952d-8cbee57dc844",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "13b57767-fc87-4fa9-8614-aa698696bd0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df3e4c7-5043-4c18-add2-318650d140ab",
        "cursor": {
          "ref": "3812b39f-aeee-4d33-a599-5e5e81a4ef24",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2da2d5d4-7944-442d-a920-7267b6fb24a4"
        },
        "item": {
          "id": "9df3e4c7-5043-4c18-add2-318650d140ab",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a42bd875-e6a3-4b73-9971-66e5cb375b11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a55f20aa-6ef5-4d96-8161-a2e2abc5cc2d",
        "cursor": {
          "ref": "2195d291-fd8b-4334-ace8-faf17f0d32e5",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "31b0ca35-e177-4088-ba30-043e54cae9c6"
        },
        "item": {
          "id": "a55f20aa-6ef5-4d96-8161-a2e2abc5cc2d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "e20f77e2-29c7-486a-97d1-8c597e37c4d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf28284-c2db-403d-8942-52211b1c922d",
        "cursor": {
          "ref": "10581e39-9864-47b7-8d72-bba4abcf6ec2",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "738a3e61-257b-499e-bebe-7ce5bd093a1d"
        },
        "item": {
          "id": "dbf28284-c2db-403d-8942-52211b1c922d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "966ecbb5-4b85-40cf-9b17-8bddcbab6f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c626f9dd-e0f3-4f0a-a8d2-84575e283fa2",
        "cursor": {
          "ref": "17ae4644-4625-477a-952c-e39b8dd76666",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "fe5397dc-1042-442f-a89b-5b6cddceab8b"
        },
        "item": {
          "id": "c626f9dd-e0f3-4f0a-a8d2-84575e283fa2",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7f47169d-23be-41ee-ae3c-49d48c2c0f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1899f8e3-ba21-48e2-92cd-a5a5a1bf44e8",
        "cursor": {
          "ref": "c97676d2-7118-4ced-a8b2-316146e532c1",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a08fb7c3-71f3-49d5-8206-dbaf9cda4639"
        },
        "item": {
          "id": "1899f8e3-ba21-48e2-92cd-a5a5a1bf44e8",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b83d5783-af4f-4898-9fa0-43537e286fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c8a98d1-1ed9-407e-a33a-77d30778adf9",
        "cursor": {
          "ref": "8259841f-dace-4946-913e-070b0c55cd98",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7f8c7154-cb10-4ef8-95a3-2b9ad4aa3b2e"
        },
        "item": {
          "id": "3c8a98d1-1ed9-407e-a33a-77d30778adf9",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "30b78473-b634-4a2f-a80e-8a2b73bfb5a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233dbd7f-8922-4777-8244-8fec866a4674",
        "cursor": {
          "ref": "f73141d8-d9de-4e85-886c-ba242043ca10",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "7d10fea5-199c-4b9a-957c-1ec02df95d4c"
        },
        "item": {
          "id": "233dbd7f-8922-4777-8244-8fec866a4674",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d4a889fb-e0d3-4da1-bce1-735fd30c800b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2c9c29-6c33-4688-b8ed-2d8ff07447ee",
        "cursor": {
          "ref": "d8b7b05b-821d-4171-8b95-2de891aa9e59",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "2857e2a5-5b58-4579-a012-1d4013634943"
        },
        "item": {
          "id": "aa2c9c29-6c33-4688-b8ed-2d8ff07447ee",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "55c7023f-9a5c-4919-99db-cd1a26c87fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0f467d-cebc-43af-afda-0349d88085b2",
        "cursor": {
          "ref": "b402ea81-ea6c-49a6-bee2-9334d6929305",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "04e3cc0c-91e6-429e-acbd-e0d17344a364"
        },
        "item": {
          "id": "4e0f467d-cebc-43af-afda-0349d88085b2",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "84809422-1920-49fe-aab6-29c664be568a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4309b760-e9ca-4a48-8ca9-e4048b39b0fa",
        "cursor": {
          "ref": "661a7c30-54ba-4b06-b192-985cc152722e",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "fd0c4375-0711-4236-849e-d5c7eb3d0fc2"
        },
        "item": {
          "id": "4309b760-e9ca-4a48-8ca9-e4048b39b0fa",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9e538386-b32a-4b77-bd12-86b03c812469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d363cb73-83af-4ffe-82f4-6f833b6677cf",
        "cursor": {
          "ref": "019a7a7b-db29-4b83-a492-4e15e0ceb507",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "598c3f24-2c07-4839-8b8c-a7fa277e230b"
        },
        "item": {
          "id": "d363cb73-83af-4ffe-82f4-6f833b6677cf",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "9edb710d-aaa5-443f-8ca2-a7bf6a704324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b38559e-711a-4d2a-9ed0-98ef9fafcb8e",
        "cursor": {
          "ref": "bde62183-d01a-41d0-b928-f58cab53abb5",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "fb293685-264c-4057-84d7-d35d7f4e94ff"
        },
        "item": {
          "id": "2b38559e-711a-4d2a-9ed0-98ef9fafcb8e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "51cdbee3-e6b7-48cd-a207-77c3d09c82d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88ff6e5-de3a-4998-92d3-bce4fed49d5a",
        "cursor": {
          "ref": "3284b6f4-00e6-4312-9651-264fc8a87654",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "5a79432e-6667-4b8d-a2ea-cade083317d2"
        },
        "item": {
          "id": "d88ff6e5-de3a-4998-92d3-bce4fed49d5a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f995e5c9-c568-4fce-8303-bcaa0595c66f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e75010ac-dbfc-4804-a7bd-038528f429a0",
        "cursor": {
          "ref": "b245c619-a31f-4ab0-8aac-2c507b476292",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a3186e6f-b816-4359-97b5-b8503d5b9084"
        },
        "item": {
          "id": "e75010ac-dbfc-4804-a7bd-038528f429a0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6a819d10-660b-4e7d-bc78-99b6f25f3552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e9e0ab-1b54-4c9a-b1bf-081693fa5073",
        "cursor": {
          "ref": "a099cdf0-3a11-4c5d-8b8d-c22714c6af12",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "cb720251-2cf2-4b89-8e27-72f766eafd20"
        },
        "item": {
          "id": "06e9e0ab-1b54-4c9a-b1bf-081693fa5073",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "479cdc2b-7bf6-4254-b5be-62676911a742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a55e5f0-323a-4349-a34d-1dc2e508f6e4",
        "cursor": {
          "ref": "0be8c84a-e37b-446f-bd94-6efa35fb5cb5",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "dbf08f0b-df05-42e1-b6a8-48c5e40d5670"
        },
        "item": {
          "id": "1a55e5f0-323a-4349-a34d-1dc2e508f6e4",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "cccb41c2-63b6-42f6-b35a-ba854bea8233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45eefd38-20eb-4c3f-afb0-2004e27674f4",
        "cursor": {
          "ref": "e0a89b3e-2208-4817-a58f-11400c59c4f4",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "65903081-1efa-49b8-81b7-3f50f4909532"
        },
        "item": {
          "id": "45eefd38-20eb-4c3f-afb0-2004e27674f4",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "7538c28b-d5ad-48ab-a15b-83a959cb6d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "754ad2fe-d194-4534-9f5b-cdf923913705",
        "cursor": {
          "ref": "04381791-f3ba-4094-bfad-65ef1bd0141b",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "0d86928f-b040-43a3-8b05-9f85fcc69109"
        },
        "item": {
          "id": "754ad2fe-d194-4534-9f5b-cdf923913705",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c66d7867-774c-4259-97ed-8c59eb93c621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2f38a7-5893-4344-8a4e-3e973ebe56e8",
        "cursor": {
          "ref": "3b8cecec-92d9-42b7-806b-39ee72188d1f",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "4ca1f1fe-7e6e-4d74-987a-c2f5f8339c71"
        },
        "item": {
          "id": "3f2f38a7-5893-4344-8a4e-3e973ebe56e8",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3bc2506b-7ed5-436f-af4d-3216e9087e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf532d9-8b68-4e97-aff4-6e1ead0e097e",
        "cursor": {
          "ref": "bdfdad00-f811-4ed1-b4aa-3ae8ce26e691",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "321470e3-3719-4c62-84b9-bff273043542"
        },
        "item": {
          "id": "cdf532d9-8b68-4e97-aff4-6e1ead0e097e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0b44db8a-8806-40ff-b4ef-cf1c7ce430b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee68141-4d1b-4882-8adb-556f70436897",
        "cursor": {
          "ref": "54153d6c-5bb9-4cca-8179-c3686260b32b",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d65c9b5c-a87c-4b24-bea3-030a80c05e42"
        },
        "item": {
          "id": "0ee68141-4d1b-4882-8adb-556f70436897",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "72d2e095-7bed-440f-b52c-d2b512c70607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d10ab75-74b8-478a-a7cc-b78286ee9484",
        "cursor": {
          "ref": "dbc90b8e-c776-4720-9cba-8dcaf0802ea5",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9e8e635a-f67f-43dd-91ee-df483d78c963"
        },
        "item": {
          "id": "0d10ab75-74b8-478a-a7cc-b78286ee9484",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "0455d0ca-bcae-42d9-908c-65c971a72875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8197ae3f-1b80-41f8-b247-2ca97b523b3e",
        "cursor": {
          "ref": "5872f221-26c8-4b0e-98aa-77c8460002f5",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "c25b521f-b329-44f1-b20b-e24ecf594118"
        },
        "item": {
          "id": "8197ae3f-1b80-41f8-b247-2ca97b523b3e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "80c44c1f-a740-4fc8-8bd5-b33d58f55893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a78bc6-b374-49d2-bdfb-bd439244c74d",
        "cursor": {
          "ref": "d95349b7-c613-4108-97de-a60e675111d6",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "254aa001-0cb0-417e-9110-665dd214136f"
        },
        "item": {
          "id": "25a78bc6-b374-49d2-bdfb-bd439244c74d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "75c49803-f1ff-42be-aa90-deb3d24be713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2281bddc-b0e5-45be-9156-4137971a5ab4",
        "cursor": {
          "ref": "20755278-748f-4df1-8b37-6e64f6b20b17",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3aaab2f5-e2cd-4f95-a070-32cd88d66591"
        },
        "item": {
          "id": "2281bddc-b0e5-45be-9156-4137971a5ab4",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "32c561e3-760f-4f03-bcf9-0288c82a6d44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8414cbb7-4247-4b46-a502-37de321cc651",
        "cursor": {
          "ref": "dec47cc7-0a39-41f7-97b7-4bb2a8df8d04",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ec90ebf2-9b15-4fa2-8aac-d3ca299a7cfd"
        },
        "item": {
          "id": "8414cbb7-4247-4b46-a502-37de321cc651",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "97ec2b78-36a6-4fc6-ab76-fac61d53242b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ca61b6-016b-4917-b877-ca8794a09c60",
        "cursor": {
          "ref": "2dd0a881-4e76-4cf4-be59-347f4d187228",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "894f4c2d-819e-432b-bd7f-6cb0b831de09"
        },
        "item": {
          "id": "52ca61b6-016b-4917-b877-ca8794a09c60",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8710816b-2663-4429-8850-f415a844f982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f104f5-fb39-415e-a494-71239cea83b5",
        "cursor": {
          "ref": "b2c33e65-39f4-414b-ab71-7f2f9c706e09",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "5cc893c5-33a6-4c30-9583-084dd8d6857c"
        },
        "item": {
          "id": "e4f104f5-fb39-415e-a494-71239cea83b5",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "08638c8e-395a-4e62-b78d-9fd0a46b768d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293bf205-0f5c-4332-87c1-b643c2917516",
        "cursor": {
          "ref": "dcc8f466-1066-4757-8b60-1d603feaa75e",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "6bb6b385-d8ab-413a-8335-aef135fa53b6"
        },
        "item": {
          "id": "293bf205-0f5c-4332-87c1-b643c2917516",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c3ed267d-79c1-4e8f-ac56-f2fa2dade9e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa8a26a-dc56-40cd-81e6-a4a418ff05bb",
        "cursor": {
          "ref": "2ac8410b-6b96-46de-9fea-208ff7bbeabc",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "61972414-698f-4f04-b2ec-a116e6ac2f3f"
        },
        "item": {
          "id": "1aa8a26a-dc56-40cd-81e6-a4a418ff05bb",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e42118b2-2195-4261-9d33-b1fe8c8e6a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e0f6b9-4275-40f6-9622-97cbba341f34",
        "cursor": {
          "ref": "fe4b2c32-ecd6-45e2-ab3d-b2ccb7272bc3",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3abe88ef-542d-4b78-9b45-d98aecd0f196"
        },
        "item": {
          "id": "04e0f6b9-4275-40f6-9622-97cbba341f34",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "cceafa17-a7e6-4630-b61f-ebbdc2b6601e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a102deba-4254-4811-b9b7-8d1db3687dd9",
        "cursor": {
          "ref": "13ad22aa-0042-463c-91f4-2097d9633710",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5b4a3c5c-42ec-40f4-9cb7-274bca56a5b6"
        },
        "item": {
          "id": "a102deba-4254-4811-b9b7-8d1db3687dd9",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "29a58632-b8ee-479c-add0-58d731e01298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24fbb425-b8fb-423d-acb3-9b37571523de",
        "cursor": {
          "ref": "6c9c4670-5255-43b3-9882-95bb1236caa3",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e5e64c5c-7232-4a83-b095-801bd690e13f"
        },
        "item": {
          "id": "24fbb425-b8fb-423d-acb3-9b37571523de",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "9c4c514e-d0ae-4dec-ac75-af570dc030ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d017a1a3-aed9-4cd4-9453-8959a259e5ef",
        "cursor": {
          "ref": "26f57b55-2ae0-442d-8fcb-8d2dcf3d5e81",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "18558d93-9af7-4fdf-a769-64c69c8d0c15"
        },
        "item": {
          "id": "d017a1a3-aed9-4cd4-9453-8959a259e5ef",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6f8e4b9f-41d6-420d-a408-cfa6ef595289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f8b355-08bd-4f10-8ea8-e7f7fa9aae79",
        "cursor": {
          "ref": "58a3a030-dbec-4497-9c36-4b066cc714e4",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "39e70f47-2bb0-48ce-8f2e-cede928e3dc2"
        },
        "item": {
          "id": "69f8b355-08bd-4f10-8ea8-e7f7fa9aae79",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b20a1271-65a3-46f8-bf76-6672eccfbd31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea689c46-4550-432a-835c-41b64ed87d81",
        "cursor": {
          "ref": "f8233bf7-468f-4a7a-b42b-3db40750bddc",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "069dfa58-810b-4e94-a8c5-f9d9b2299ef6"
        },
        "item": {
          "id": "ea689c46-4550-432a-835c-41b64ed87d81",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e537a61f-0e7f-4055-8438-3c3fa05a773f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd260ffa-f611-4adf-b357-cf1ea049bc9b",
        "cursor": {
          "ref": "43cec974-5458-46cd-b6b9-ce7a01f7d1a9",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "3faf20a4-6ed7-4c2a-a0b3-bfcb22f4361c"
        },
        "item": {
          "id": "bd260ffa-f611-4adf-b357-cf1ea049bc9b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "be011235-15be-4c6c-bc34-485eb0da375a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b51c8723-1ab9-453e-814b-d127549d22e8",
        "cursor": {
          "ref": "b5fb98f2-25e0-4419-b1f9-1c0d4e51143c",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "783d6b6f-0c8e-4a10-8834-fc8e45c3b0a7"
        },
        "item": {
          "id": "b51c8723-1ab9-453e-814b-d127549d22e8",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ffd0a46d-a70f-4f5f-bde8-3a64a82e529f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c177eef-8739-40e8-8706-ef531a9b59c8",
        "cursor": {
          "ref": "fde1e755-bd33-4225-b1a8-461e7573f746",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "7d65501b-45fb-4392-96ce-7ffc56ca9314"
        },
        "item": {
          "id": "2c177eef-8739-40e8-8706-ef531a9b59c8",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "4197d73e-e75f-4cb4-b2e6-7866a2620147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba07f57-a24a-4886-8128-f7de08017a71",
        "cursor": {
          "ref": "6598ba63-b1f9-4108-a0c7-1843fd09db1e",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "96c4609d-ca01-4470-ba92-1057f0afeefd"
        },
        "item": {
          "id": "0ba07f57-a24a-4886-8128-f7de08017a71",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "1885a421-ca8b-4ce7-aaa2-1b6cfb765678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3779689-6987-47ec-bb44-56b774c3aaea",
        "cursor": {
          "ref": "aa27c08c-cf0e-4ef1-9283-2ddf9b3219d7",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "04518fab-89a2-41df-86ef-a935f94d3ec6"
        },
        "item": {
          "id": "b3779689-6987-47ec-bb44-56b774c3aaea",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "49519ba2-f393-4712-9600-b895cf1f2f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f719371-ba97-404f-b223-62e98a737b71",
        "cursor": {
          "ref": "9a9ce8a8-c7d1-4e21-a072-f13f9eaccf1d",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "c5480da5-2d60-4a7c-9c99-d2bfe8104658"
        },
        "item": {
          "id": "6f719371-ba97-404f-b223-62e98a737b71",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "14a4709b-8c44-4db1-88d0-a93a943cbf30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3069be60-c280-420b-81bf-79db82a18e8b",
        "cursor": {
          "ref": "b92a436f-47a6-4cab-a29b-39b6ccf15838",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "52f8c409-aa6b-452e-b37e-96cdc2de1a45"
        },
        "item": {
          "id": "3069be60-c280-420b-81bf-79db82a18e8b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9f4b8234-4958-45c2-82af-227c01582a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d8f9cd-5ad9-426f-8bbf-99def431f739",
        "cursor": {
          "ref": "b4357a03-e293-45ce-b691-703a6feab9f5",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "2fedb92e-a7ee-4346-99c1-84302b66dba0"
        },
        "item": {
          "id": "39d8f9cd-5ad9-426f-8bbf-99def431f739",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "4fb42ad1-8068-480d-bd67-accf6e397a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d44edd7-8db6-4394-895d-81ea8ae993b0",
        "cursor": {
          "ref": "219d0b4f-a0ac-4b1d-95bd-2c7be04bc347",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "89ee48f2-416a-4418-b3bf-ca28b9b64cff"
        },
        "item": {
          "id": "8d44edd7-8db6-4394-895d-81ea8ae993b0",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e6a61d08-3536-4745-87b2-530aac9f56cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bbdfbae-1b4d-4074-8b33-c87d69c8e26a",
        "cursor": {
          "ref": "37b97562-dc4c-4a5f-b89d-0ad1d5a817d8",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "aedd3767-a47b-452d-8887-2c79723571a4"
        },
        "item": {
          "id": "9bbdfbae-1b4d-4074-8b33-c87d69c8e26a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d8390474-ffd4-417d-8f08-0072828cdb6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caeb2371-9874-4f05-b0d0-04492fa3da26",
        "cursor": {
          "ref": "c6426615-6d85-4546-961b-78e8bfd6f034",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "69ccd7da-13ee-4346-8d98-73d0020b05fd"
        },
        "item": {
          "id": "caeb2371-9874-4f05-b0d0-04492fa3da26",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "634a0422-8222-4ae3-88d1-9bda7a520285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af9ed86-ba88-46fb-9f4d-e1b981277198",
        "cursor": {
          "ref": "eb2ca1ae-97a5-470d-b21c-9dcc11b17f74",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "723558ce-b5a0-4697-af0c-3cb9a6946bb7"
        },
        "item": {
          "id": "2af9ed86-ba88-46fb-9f4d-e1b981277198",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "0acf8d03-80ff-4eca-9448-a3af446c4390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f5281f-e2f1-45eb-af0d-cfcd96c80127",
        "cursor": {
          "ref": "94b7c6fc-a467-43a5-ac87-7421d1baee6a",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "cf1536c8-a289-4599-8a67-613dcc94bbe2"
        },
        "item": {
          "id": "69f5281f-e2f1-45eb-af0d-cfcd96c80127",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f3aa1f33-0677-412b-9305-a4e17834333d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f330e482-c951-4135-8ada-6686cbe49baf",
        "cursor": {
          "ref": "3295857d-5cf2-48b2-83af-bbbd7d95ddc7",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "74368087-8bbc-4105-bfca-e52179a8ab2d"
        },
        "item": {
          "id": "f330e482-c951-4135-8ada-6686cbe49baf",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7fbf2edb-8517-441b-a00a-a98b759389cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d75c6839-9887-4b60-98b4-a49116705f29",
        "cursor": {
          "ref": "67fd7c32-d7cb-4a33-842a-fff879aed01d",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "b392d77a-c242-463e-9ea7-c59fee096f56"
        },
        "item": {
          "id": "d75c6839-9887-4b60-98b4-a49116705f29",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e7e281c9-8fe0-4c98-b066-c47041421121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439fee3e-f35c-48a7-b94d-38105c7fa106",
        "cursor": {
          "ref": "8f8bccfd-4578-4aae-9270-372a7d078d0e",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "b81dc0eb-1eef-4702-8bae-4b77c3fc1c39"
        },
        "item": {
          "id": "439fee3e-f35c-48a7-b94d-38105c7fa106",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "3493ef0c-6d39-4af6-9360-125034885eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00f62d4a-f8b1-4788-a4be-9220ead1f038",
        "cursor": {
          "ref": "12c8c0fa-baa0-40e6-a151-336995b72328",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "97a42cc4-09a0-4231-a5e7-d4a319eed73d"
        },
        "item": {
          "id": "00f62d4a-f8b1-4788-a4be-9220ead1f038",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "db1096a9-f406-4416-800e-c184566d064c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89678fac-ddfc-400b-b6a3-f9b629119fcf",
        "cursor": {
          "ref": "576381bd-0daf-4555-b6eb-58acff65b71d",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "73aad463-656b-40ed-a5c3-72eb559a28ab"
        },
        "item": {
          "id": "89678fac-ddfc-400b-b6a3-f9b629119fcf",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "dbdf0c10-5210-45eb-a56f-d41ba37f6afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe208f2-a0f2-47ee-9354-16dedaf86ef9",
        "cursor": {
          "ref": "ab846a53-e4cc-46d5-92ae-09412070fefd",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "d0755f0f-b678-404a-89f9-6ba9d9835290"
        },
        "item": {
          "id": "1fe208f2-a0f2-47ee-9354-16dedaf86ef9",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "54529394-9f1f-47de-9cff-0eeb504a25a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c7e06bb-101a-4983-ad17-ef3156d6acb9",
        "cursor": {
          "ref": "41c3a599-13d0-49d0-aa82-0ba5cec9b51e",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "c3c7ff3f-3f29-4cd4-ba0b-a9b5cec4c27c"
        },
        "item": {
          "id": "8c7e06bb-101a-4983-ad17-ef3156d6acb9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9723210b-2330-41eb-a20b-de6a8b2cef02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e684ab68-1809-47ee-a350-6f8068107748",
        "cursor": {
          "ref": "52db79b0-8dae-4041-af4f-7099b1e0e2f2",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "bd0d09f1-dd13-4812-a2ba-135b56f00ff2"
        },
        "item": {
          "id": "e684ab68-1809-47ee-a350-6f8068107748",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a1e33c12-d922-422f-a0be-8ddc1e8a4846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0932dfba-d567-41ff-99bb-3efcbdd24c80",
        "cursor": {
          "ref": "aa3ccfed-36dc-4b99-8f28-d0f122968d1f",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "30256e9c-4c67-4bf2-bcde-40ded398ad5e"
        },
        "item": {
          "id": "0932dfba-d567-41ff-99bb-3efcbdd24c80",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f09efa01-5a1b-4b03-9f8f-ff94692494e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c7e6a3-98ed-461c-85ec-1151d5411550",
        "cursor": {
          "ref": "ceb45b26-0821-409f-bdd8-c1dc210e9607",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "bbeb9860-cbbb-4bef-b4fc-6606b14ed92c"
        },
        "item": {
          "id": "e4c7e6a3-98ed-461c-85ec-1151d5411550",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e82e9103-8ea6-4e1c-a9b6-4ae68dcdf607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb8c704-0443-4dd8-bc28-f7e328353827",
        "cursor": {
          "ref": "b02369d8-082e-4b37-b69e-0845f6aac052",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "d4f72e80-8619-4680-8bca-baae1df51e02"
        },
        "item": {
          "id": "9fb8c704-0443-4dd8-bc28-f7e328353827",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "03a96348-1f90-403f-ab17-6941f6c18a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0689de6-b391-49f3-8b4c-f17a0f52a861",
        "cursor": {
          "ref": "6a9692d1-8fb0-421d-8e3b-2baf13caa338",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "ab2683db-d06c-48eb-8505-7e3ce1a89e0a"
        },
        "item": {
          "id": "e0689de6-b391-49f3-8b4c-f17a0f52a861",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "cdbb1549-5f91-4b12-8e6f-c3e61a2776f3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94f86e0-9af6-4e5b-b9b8-2be4ee92a3ce",
        "cursor": {
          "ref": "9d6f542d-2301-4686-8659-ad4ac5ef3ad9",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "b9f62904-662d-43e8-8b28-84030df5eba3"
        },
        "item": {
          "id": "c94f86e0-9af6-4e5b-b9b8-2be4ee92a3ce",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b8323b75-b200-4e3d-9a57-62b0bc5998b0",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "af13e998-02ac-405d-a2ba-7634fce258a1",
        "cursor": {
          "ref": "118af14f-aa7c-4107-9b43-d3035c90b44f",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "f583c84f-1c1c-4d7a-9ed0-b47e120fb376"
        },
        "item": {
          "id": "af13e998-02ac-405d-a2ba-7634fce258a1",
          "name": "credentials_verify"
        },
        "response": {
          "id": "74ffda17-8b26-4297-bc6d-de7dd33ffb6e",
          "status": "OK",
          "code": 200,
          "responseTime": 27,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "26fe3daf-9781-44bc-9ec6-20791abbe6cb",
        "cursor": {
          "ref": "39658b99-a446-4f2f-956b-c3f63f26b733",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "9ceb37f6-07c7-4dcf-98dd-5a655e0ebd90"
        },
        "item": {
          "id": "26fe3daf-9781-44bc-9ec6-20791abbe6cb",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "1197f85f-6a71-489d-a3e2-35ef7c32d958",
          "status": "OK",
          "code": 200,
          "responseTime": 25,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b98ead-bc92-4465-bee2-00c3c83aff8e",
        "cursor": {
          "ref": "1472941c-5d90-4785-ab36-e3a5e868319d",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e4ffdd9d-0912-4719-918f-aba41ca97f63"
        },
        "item": {
          "id": "52b98ead-bc92-4465-bee2-00c3c83aff8e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d08275ff-897e-4572-8f97-0e92d5da6b81",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b98ead-bc92-4465-bee2-00c3c83aff8e",
        "cursor": {
          "ref": "1472941c-5d90-4785-ab36-e3a5e868319d",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e4ffdd9d-0912-4719-918f-aba41ca97f63"
        },
        "item": {
          "id": "52b98ead-bc92-4465-bee2-00c3c83aff8e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d08275ff-897e-4572-8f97-0e92d5da6b81",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ef627e-79e9-4292-9e82-88fd4126d7d5",
        "cursor": {
          "ref": "09974bdd-4fc6-423d-8932-1df6dda1c42e",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2a9d5bc4-dfab-4348-9b8a-c130ffcc2ab3"
        },
        "item": {
          "id": "e9ef627e-79e9-4292-9e82-88fd4126d7d5",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "20f0f3a2-1d43-4b46-83e0-ccd819a99e79",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e9df1e-3c8d-40fb-912a-069823b6c80e",
        "cursor": {
          "ref": "3ae62cdb-3b06-48af-84cc-09cbcc05a933",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "ee7e3aae-52b4-4c2f-8647-8cdbcb966ad4"
        },
        "item": {
          "id": "44e9df1e-3c8d-40fb-912a-069823b6c80e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d789c052-9f3d-4530-8013-ba95230d4807",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}