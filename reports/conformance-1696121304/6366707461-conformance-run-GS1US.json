{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1b0397cd-9db2-4698-9604-f4d4aa1b88e4",
        "name": "Clear Cache",
        "item": [
          {
            "id": "2bf8a70b-1a96-4a57-b8ce-e99cb9689850",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "33921c6c-d900-4db8-9f42-1cf7d2acf27f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a38cf8b9-5394-4dd0-afb2-2acd0d91bde3"
                }
              }
            ]
          },
          {
            "id": "b2150cca-0570-4898-a737-c005f575e280",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a6ae8fb8-d8f6-4b24-a83d-0fbe423e1bd8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "75f8646c-bc88-485a-aa0f-243dfd30ddc9"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "38cb7f7d-ffc3-4f38-bae5-3056decea8b6",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "deb80011-6440-4bd2-80f3-7a541ba37e7f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a81f4235-32ec-4ecb-9adf-a185ceb84587",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9791b677-280b-4b0a-9f34-adfeb2770a46",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e33be61a-abcb-4008-8af2-5554c536c912"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cee67c3c-c131-4b28-9f0f-4d2f241cd742",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "903579ea-9b0f-4eb1-8a47-b5dc8c0d50c4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2dbe0737-bd67-4859-9e3c-64a1d5ad2695",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "09a40041-ef4d-4a42-b720-b2fea0ab2eee"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8555c1b4-de77-4d34-8405-bf8967bd0b09",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "04c91675-ef46-4f4d-9dab-ed8cb02878ce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e3c9edc0-d824-4465-8860-edc4e38515be",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0141fa42-a8d8-4542-8ab1-cb4a85b2b873"
            }
          }
        ]
      },
      {
        "id": "e3350247-29e9-4faa-8de4-a47d7e3ccd76",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "507293ef-cac3-4ffa-8bd0-a24014227cd8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "00134f87-18a8-4421-9cd1-2a12cfdf850b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "278cc185-70b4-4337-8fa0-9f04077ca6a8",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73972b6b-0def-4dc2-a3fd-ba8493ee4ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "55cde26e-4375-4778-aea6-3d39675ca607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "692a24b1-9ece-4e6a-b820-2eed4034e5e9",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b647b19-47db-4adc-bd28-2478cbaad0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "37f6cf7a-507f-4ded-a087-c978a38d4a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6221393-9989-40ce-8155-7fb5e100d083",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce657c2-5b4e-4ff6-af57-1b6cb79dfe84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c74bd48b-e492-4c19-a9b2-f09cb33b6774"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1ab4f9e4-ceda-4601-9b58-a3d76a85be27",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0d53bb5d-adcb-42a4-bfd0-1df4bbccc0ca",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce9bc5a4-cd41-480a-b782-9d08a91f2610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e6ccca5-8423-4ca5-b6f8-2e03f542a648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eec6c2b-4948-4212-8a78-5869c6fb7932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc064959-024f-4f3f-8eef-ac0e8615d61c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c9b0ee4d-4c5e-4906-a30b-0fd5263daccf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bea0a45f-f3e7-4fd3-b1d4-ae5720372bbe",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d075f64-3299-4d7e-ac02-8e2618aa3fa1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "76bc2d36-206d-4096-ae07-cb19ccc0d855"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "35bc7562-5076-47d6-a604-201d9e173789",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "28a8b994-14f5-45d5-9210-b07d116ad9c2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6c8a55d7-4af5-4c5c-a4d1-c4c714e69d20",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "de9e41b2-d9c6-45ab-979c-dddd08b0dc20"
            }
          }
        ]
      },
      {
        "id": "e814d830-8f43-4cc7-a780-1fbb06afd0de",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4eaee10f-1b85-4c60-b92b-8be4b172bfc2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ff40f03c-f66c-4ec3-8901-dadb8ff76c7a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7e619c4a-63fa-476e-a37c-d2be69447005",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "130c18f0-81f3-4143-9331-958ff09a58c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8be48a2c-f22a-4d46-8e71-aeb8bea95438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f1eef7-9688-4440-82f0-f00efe91744a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69415c16-96e3-402a-a6f3-5db3a0a2159c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f3b668-d1c7-42cb-9c8e-b150b156afc0",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ea3228-189f-421c-b6a9-3362b1adfbeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feb4f362-1b28-4653-8dd4-7e33114d26a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c959df-48a1-4995-9863-382a06724408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1bc7be25-56b7-4b7b-8e66-0b1f5df14151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b21cd35c-d0c1-414e-97ea-f459abd1bafa",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab3779c1-3009-48c4-8261-eb9515992d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a2269b5-0c2e-4727-9754-798e8569b40d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e18e568-45c3-40dc-8ca4-8b86e540ef1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c73348da-75e2-46dd-9d9d-c26bbb6db281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b65d1b4-639d-4388-bfb7-f4ef206b47a3",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf68ecd-aad0-4778-8c9a-4e1bbe258aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64aa3288-5ad0-45db-a049-67d68d8a2a69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2130b4b-3294-470b-b099-741df01d55de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12a50e44-097f-4cf7-a6bc-84f9bb0cf2b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86091572-e732-46c0-bc1e-5737b79e703b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da8ab89f-8f93-44ba-9d47-6e42e68321e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bae9368d-8e4c-4798-a4e8-c82b5ae2a688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "818e18a3-0782-4af2-b794-78f452696719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a59d7f6b-37f7-4ba6-9f70-3ccb06260810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a5039af-7bcf-43a1-bc01-f8fd8ae7e870",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b0614f-3020-4b47-af89-9bcfea759b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac249c59-23b9-458d-8336-bc1c2cee32aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1146f79e-aef6-4428-a386-532adf53742e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88b179eb-3c9b-4160-b621-22df334f23ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf6553c-6aa5-41ef-9add-ceae3139f4e8",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72775c95-193c-4c8c-b5ab-a10f4da55b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1065d821-f2b5-4cd2-99cf-b0d1b4a1619c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d93dc20-953e-479f-9a1b-5e2b981b8e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3329445-9594-4f2b-a3e1-7e56c787224c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad3c7b0-5ceb-48ec-97e0-093308eff542",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "572f4000-0368-4630-9eaf-5aab1ebd501e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e85672d-decc-4579-a0fd-e8c7b4bb878c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d0f650c-238f-4530-88a0-66dbe22d7f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a577caf-07a0-41b8-ae48-06ab5fdbd532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec8bd72d-ef7c-4355-b1a5-c0768d74cda4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da45d34-642f-4fd5-a1eb-b622ff5bfecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7c2df92-8c41-4bf6-bdb1-81bf72f994e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f635a386-07c4-42d8-acea-be8e19507c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c1c5d4e-a6ee-427d-bd11-8fe2c6ab35ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "179a89f1-ad66-44ab-89aa-addee5246884",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea307dd-37be-403b-959f-0061ba2f44c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8e9c7f9-bda7-4a21-bf01-8b91e32d856a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c335e8-ab17-4c9e-837a-c9e623b60093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42ae5b67-022e-4484-aa7d-6f89062c2113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475997b9-9b30-457c-b2bd-d838408c4aee",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d45a36d-4c5e-4bce-96ad-580518c6cb3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d376772a-06b4-4658-a049-2425a063f66b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcdaac35-ac3b-473d-8497-93515797b0ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "142572ba-d278-4dfa-a131-bcb1b37719e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc788f6-920d-4f6a-9efd-ef3c1dea90d5",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b555be-0df3-443c-a559-d610ae5e4c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ae1d580-4894-4af6-9de5-fca8acc4ff34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "539a65f4-b3f9-4f00-a740-f8993166c982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2353d486-76df-4aa5-8ca4-459d506c71b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac7699fa-2e97-4e42-a7e6-a3ba2443c97b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54900d21-ba45-4f0e-9fd6-ae58829cf4cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f47287f0-6ea8-4396-9a3a-0653ce2698af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "352ed0e6-f10e-4a4d-a511-f412f5707e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14753e2c-c26d-4f95-aadd-0093500188d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ec7bd0a-e4bb-4ec5-886c-f1029cb47230",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d150d866-f2cb-4565-9bd1-67fa6f958628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d71d79ee-c23f-417c-80ed-082d0d1b88ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cccee754-efe6-4afd-a560-e30849c05898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73cc6557-9596-41a4-9da7-0d34126d7ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "029c7556-1ca5-4a2a-85b5-e7642b213dea",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca677a34-36ba-46ff-8d28-390de4a8fb9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "841fbd6b-c084-4bb8-a9a4-e34af3ab4714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b52cf9d-1d41-4754-b045-bf17569ff43b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8c2cbd8-2f6e-46c1-9ff3-e2937ba1579a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5bb1b61-28ea-4e65-91ec-7173a28004a7",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db2a0adb-7092-4c90-a9da-d42a0ac64865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a62f9440-5137-4d08-9f12-693e90baa51b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f2c89eb-e690-4f14-a173-90c831b6bf97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b710908f-90dd-4807-bd80-77d3ed507e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf4b1e2-ec88-4f14-ac86-d893c3a571a8",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2488e8ac-1f08-4a80-8741-3dd094325aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b8aeb57-d7d1-456d-9871-2d3449a5f43d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "178df180-13c2-4935-bd57-cbd14da42de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d78da06f-fe25-4e28-8f9a-9f30d183ec1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "680d0072-460b-4fbb-96f4-0896c95aeaa1",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ac2917-7676-4b00-85a5-9aed16d3fe73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e3a5df6-f561-44bb-abe7-aca74b6d2b7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e4b18d-1e45-4333-aa00-40ec322e11e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa79dced-3a9f-41d9-8133-6ee3b5c6c869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23fd2746-0414-41b7-bd91-d0bc6a6e9309",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab3c972-0829-4c56-a800-e649705fc1fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac7967d4-94cb-4b9f-851d-03778374d5e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "971b2525-02b5-490d-bbd3-fa10be59d608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "54eb995d-30cd-48fc-b152-dced4fb0ec7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58a4ec17-2b19-4548-bff9-2b4a0a94cb0d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f420b6a-79d5-4217-8405-75aea4f97cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "443b8784-3eb7-4c9b-b644-ec06b1953489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1b3a17-8731-42d0-b31c-5496c7698497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b87f591f-ad9e-4e05-aa24-7f43d9e3f54e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e03d56cf-d94c-4385-8aaa-dfb00cc73c70",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d908cb60-3c15-4e21-9e9e-6d2b7e83276b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a35f58d7-4359-41a7-88e4-4f968d3da3e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b70243c-b43c-466d-8486-9664024ca12b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdfd63bc-09b2-4580-9b30-a801a8fdfa40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "232524bf-c1c8-4740-a41d-cdf786d7e3d3",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc64a2b-91be-4549-beb3-7deb386283e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8543228-7994-45e8-bf04-8bee4201c0d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c1140fe-55bc-4a20-b3e6-b96a571bb512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0d75783-ce3c-479c-b3be-08736e346624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa356b6-5f6e-429d-810c-8c7d21f34c66",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83430760-6f10-4c19-aae0-e28379edad82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dc7d6bb-d1c6-4596-a572-809790a47497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3dd99d9-54a5-4c23-baca-f03d1ee6a7cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9c2f0942-7256-49ad-aed5-0e017169ee06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e8f642-8556-4bb1-975e-94b03a7094d1",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94deb291-b089-4d91-81a1-acd169eef8f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cf4a506-9ff0-4019-b370-88a732978ab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31ce8cef-bd74-458b-a8ae-22137dd4373e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9a97c2c-511f-414c-9417-048834c70c38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6971e364-0a5e-4140-838e-9fe86a0ee841",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef41a1ce-8717-4165-a017-0b7209d7d8dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4e3b953-be49-4b91-b830-a640fdbaf53e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c39c2d-e0ae-4171-9995-61c2145470d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "73a13ad4-ab40-4536-85a6-f8226a834717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57279088-ab9b-4e90-95af-37e0b96853ee",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d05544bb-3276-4b5c-9f9a-5047eb3cc6a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e54940b-38f5-4adf-85f2-1eb2755edaf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a703ccf3-e2cf-410b-857e-301292764f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "49b96156-6f30-4e21-91fb-051951909d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46870ee8-7482-469e-9475-049d7399cf7d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bbd1a4b-df3a-40f4-bb91-dd8e1c6ecec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf94376c-c08d-4f5e-951c-c364fd846a5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5614689a-7143-4424-92cc-a82ba795732c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6e36ebc-8b15-4b4c-ab40-24a688021bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f87fb114-0b30-4e60-a7ec-dc4b71071ae7",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b775e9-7636-4667-8b62-557bf928e673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1d5923d-1707-4616-b931-53aee53d5c63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e494c2-f551-4915-bc0f-d0c515731589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdf3c42b-5e1a-4f0b-bfae-fa31ca9747fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1429a93a-a7bb-401a-b53d-2a8d7b13445d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "438db905-6307-4397-859b-5e927a288eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "508cdb16-79e2-4a30-9228-fb89f2598190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "204c88ac-3b41-430b-9f72-7198707a68f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdaa551f-8068-43c2-8d55-ace50ef18ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf1f0c2-e021-400d-9c0f-57520abc64a6",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17293aec-1796-4873-97fc-d1a4857123ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd0f8a4b-6bad-48c6-a85f-d5af14d27230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a7e05b5-d1b2-4f02-8ac7-98acff2ccb3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "275e12c1-cf58-43c2-b321-c3c23fb73f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d948dcc8-bf09-44e9-bc4c-d624aeafc529",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a22aa41b-44ec-49ad-8ad8-dd47e760df96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93fa50d0-2baf-4b51-9273-f6ba06f23ab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "493bb660-9765-4e04-91be-83087bf47ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f937d867-ecdb-493c-94a3-0a2241a9beee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91080cd-e44c-482c-bbc2-97799355d050",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b77462d-9862-4e9b-bf3f-1c7e6721d028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e40391b-db01-4064-9426-9eeac77ec56d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38dabc88-d3a5-44b8-b599-711b50a80b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "963be459-6e75-4573-978f-29edbde9815a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f28d77-7764-4e81-81fd-3650e2f327d3",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76eb2517-3088-4fd7-8c60-3167b0efb742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89208a10-08f2-4fb8-9c67-e2931382b0f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc09132-b7ef-4fd5-b674-7fab1982d242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "446f4735-473a-4ece-9585-a2c9fecf041c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dfd75c6-8986-46e5-bc1f-63b5b51dfd7a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e7a768-5396-4d14-8ab4-4ae287e3061c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4498dbb7-16fe-4ea2-a737-b40695e8a4b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4581538a-3ac7-4f25-8f3d-bf1eda1922fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8570e72-4396-42d8-bb0a-be98626eb1f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "839ebc46-655b-4fe5-8d8f-b28c70c67d02",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff6d553-20b2-4225-9ec4-17a64542e212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2faa6f2c-5922-44f6-abc9-cc31a44570b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2952331-7cab-48ca-92c7-007c4c96e64e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ecbe3cc0-f9b2-46a6-a1e3-a8d2357b7fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "054eb2e0-4c37-4655-adb1-03485a0d425e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd9a54d-b465-4791-8d66-6fa7c6701b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "735a246f-3e18-4f29-95e3-4e0f5ea35dfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8112567-ad30-4678-9aeb-a16b59c3afd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "46667197-5aa7-4d61-afb3-0dcb68882fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "345bee5c-d5b1-48a5-9daa-49057653a71c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc57b2d-fcfa-41fd-8a60-a073d42f59f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45c682ba-96b8-4d1d-b657-6a558246cf74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca09a44a-d550-4f4e-a1e0-a4830cfa04cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "226d47b5-de00-4610-aeeb-79f094c22e77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "defb7e48-4b72-463c-b088-432a361c9e9c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc70805-e3e8-4432-9fbc-e844ca633829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e346d750-fbcb-4116-bc01-055dd698fabe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d643aed-30ac-4603-928c-c1962b3f7027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "340c9676-cbe3-43ab-b932-787608067b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f191dfb3-9409-4cad-98c5-03d6b36a00b6",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "256a6d80-521f-4cb2-9072-fe713b176328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40f2227a-f0ec-4886-9493-5090561d8e71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a0b651-a3a5-4578-ab0d-d5e067370939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "83a471a1-de8a-46f5-a932-5c60ab3aa743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fe69d37-916a-45b7-ad12-4e0c8518a44e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "354106cb-714d-4e8b-83ab-6877d477fd08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b98079b5-a63d-4c55-afd3-8d7963fa9839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa462f4a-c860-44f1-88f2-e2afa1adf367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fdc8dcfb-1541-45f8-aceb-ab7a8e6672d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab00394-8709-4ac5-b7dc-744bd8dec760",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d50cb89-4c64-4b94-b2f7-a3b8aca4ac8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b79c6197-d2ae-44b8-bee4-c3e673d860ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12bb4ffe-70f8-403a-95e3-fd77b9dadd2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e7d1500-3bf3-4ddf-900e-61c8f9b55f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91114be3-c18d-42a4-9870-1141c002ea84",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d20db49-2235-4220-a5c9-c0f37b6d9364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18e3fe11-427a-4633-ba37-42d8bd644c3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec20932-b2e1-4c72-a3c3-cd71f62c3aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9b501845-9fcf-4db7-a2bb-4d2e42b4adcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c5199ce-cb52-4871-a96d-3ff5b5e7ca69",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9fdb4d0-3598-4819-b7e7-3b4b8ba85ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4858c9b-75e3-4d88-8cef-17e41a06e542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfe9ee31-a4b4-4be3-9aca-ee301dd59918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a923e9e-6212-4b2c-9df6-c7e9079c13d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e403ef3-ac2d-45cf-87cf-2a9c87e1f19d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f761986a-1d5f-4aa9-8efa-c7e356479caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b432819d-0e50-4d9d-81b1-fc35a503a2e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "455920b3-5005-4d03-9a53-d3ad558d3823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d0d9b9e-41d6-40be-aa30-9af892dbea28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6994160f-42cf-4356-87e3-1249c3ac1771",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f445a62-88c2-4486-a55e-f57a3e8875a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdeb8fe9-4996-4ef1-9152-38f2aabca26f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b9400c3-d867-46e9-8357-d045a55296f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e67a5f5-a4b6-42fb-afe6-7cebc0403671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a3e7a9c-121f-4c97-a810-a00a6485660f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d223c4ed-110e-47b4-a3e3-3ea90233a8c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07fc7421-5dfa-459f-8ae9-a0e2f2c773d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2355372-1b0d-4d6e-a746-543285820015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c63d0911-afce-401f-802f-cacea9759fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba4c967-8aaf-4789-863f-29535fe2943f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d23038-0240-4815-a9d2-b64cd89e16a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6f114a6-13c1-47ae-8075-0bdcbc7cf795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc35c29-e8e2-4c2b-b43e-fa4dc6010583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "961e2766-4130-49cf-8fc4-cce2dea8b03c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6980f90c-d7cc-414a-8255-4a6167d83421",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "add6c5b5-e44c-4dda-aca2-9867ab3e0220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04187944-6809-4dc2-8c20-bee2418e21ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c1527d-42e5-40d1-8b73-1cbeb4f16040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "db5f0053-0422-4932-aec7-2deb0605a509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ce9bae-bbcc-48bd-abbc-c3f01d2f4c08",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5224ae9-e6f3-40c1-977c-8faa9748408d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db11e46d-7c22-4567-a959-b95c664afbec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4290cc2-4482-4ccf-9fe7-708ff1461c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd63c584-85ae-4d44-befa-acd7afdc1a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d81492fb-f9e4-4f3d-b75e-ae46e2fcd6fa",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e57f73f-9b3c-457f-a9ec-7d93b746ed2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d270169-a52c-4415-b063-f96f9f93e0eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "615f1413-fb15-4751-8548-191c53bac2bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fddbf732-af9f-4118-b0ed-67b930e31c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f24f572-e3e5-43c3-8edb-3be4193f76eb",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0170a9c3-9584-4722-93c7-b3412dc15e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b48920e-d419-4265-a709-886905580b27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba9a10c-92f4-4fc6-9937-01de111c5bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ea38921-2d81-46b0-95f6-429ab4af3a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d86d146-ad2f-4d47-9462-86930d8f3c49",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe4e2f1-cc28-4cf3-857e-ce71a64fc78f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3be448b0-57e7-4436-be16-cb712a1a9512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d71f7b5-840d-4122-a11b-c80e8dd76173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "51c9041d-4f80-4977-9fbf-458b84f6172d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00f243b9-b7cd-4724-adaf-f6f601eaaa7a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4688f52-2529-46f1-888e-1acedbc4c40b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32d3e0de-b38a-4ba5-a124-e5e2b3394c78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11edbd6-9efb-47aa-adb4-f54760ff9e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1253bd5c-c5e4-4a59-81af-83b8f07a6ce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42bbcc3e-15e9-45e7-957f-1eca59ec00ed",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37202ef3-5847-4326-8f30-b391fc976d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ef72ce8-8ab0-432f-b383-ca0e440e4056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ea9347a-02b6-4e06-bf75-75c60027ef7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "02b2753a-f676-4f0a-8903-e62c2608ce89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7ce800b-b108-4ca5-95f5-1eaf438d82c8",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f4c0f33-fafb-4a31-a8cf-dc63b4181b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34d11632-d8e9-473b-9d06-2832486bc27b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "979c455d-4e93-4ce0-96ca-75c7a4552a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ccd1e8c-9d05-4b5d-a50e-d46dab6bc3e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b3af962-df76-4d83-88f9-785ce269919e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d717dfbf-6a6a-4efd-a468-17a3086b071b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0ae21f0-7b1e-4f75-8d3a-bf6a27fa42a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ca1124-e210-420f-a9b3-73c16d81f300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6dc9fae2-d61a-4fcf-9e9e-fa02b6820dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d7c7ba-b0a5-4b15-ab86-8ff5811e177f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a028e2d-413c-4b39-9c56-a53d1c81a2e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f44ac6f-f7ee-4ef4-a298-1d357a57c7ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4405ecf8-07ff-4827-8a3e-eeceead0499c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e29c299c-51ed-4e43-bf06-fb192a3541c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6af2fd5-77a0-4b94-b724-ce7a04b1233c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34f31e48-f7ab-463e-b115-71ea91de7292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11871970-07d8-4ee0-994d-c7fe8d8803eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde31d14-60da-42cd-bed1-8d7f87d6253a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6fc12b1c-b493-4911-9721-34260e875eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10897845-8609-4407-b8b8-4514f808fef2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ccf4f46-81d7-425c-8475-656f9def8a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10dbfec3-8f9a-4769-bf94-44784e93151a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ed8c35-a461-4090-b17e-12e50382d0ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6e014bb-79b3-41bd-bba9-fe305423777c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "000f4b2b-43c8-43c6-bde9-e4d618f46d9b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14626bd-6155-45d3-a4d8-f5106acb42c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4295d02-3bcf-404b-95f2-b6ca771a21c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa24e44-b0b3-4cd2-a58f-1b0146d06c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "27d151cb-0e8a-4395-98ef-ddb14c966241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc6bb7e0-70d7-4e1e-861a-0dd04c38e2d5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "898cbea7-6f77-4e9d-a6a5-8ac6d41b768f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "448e0eb0-4f8f-418a-aef2-ed7b36ca2423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb92dab-36cc-4313-968d-20045136bd6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9aa4466-61e5-491b-85ba-df2dc3f9b8e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8782e3a-717c-4190-807e-1a37b3b9dbe7",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d74dfc-a371-4410-974c-57285f73aeb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd5ac8f1-1322-47b4-9583-214d1999dc72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005b380f-456f-4e40-90ba-f21b1ffaa2b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b502a472-c096-4416-a726-cadfba6af53b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51133eba-3c73-4069-9eaf-afb0f1c6b116",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd03a7d-3a47-4a8e-a6db-936d3ab3d6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ffc6072-dc5f-48e8-a73b-68890654ea09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c7d1fe-23d1-4c9e-afe9-90a1c2ae7f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "12c23546-3ce3-42e7-828d-1c5607856df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb308fe-ff06-4edb-8539-395fe14163d6",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f2f5b73-0f2f-43b4-ae5d-4d2d72106b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1656bd2b-efa5-4fa5-9a16-4a67946318e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4b77d7-251a-4ce1-8eb5-59a9b060bc24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f66c8749-ae22-4039-a778-1f753a3ca1aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "684e7eba-c7ee-487a-98be-1e6fca28c6b7",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0baeaa6e-07cc-4521-8f13-75f231a87f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "325ef2a8-cfb8-4495-b42f-655722e25f29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e4f4224-706c-41ad-a919-a1359e8556f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4a585f1-6304-49da-9ada-20751eb7f46e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d32a77ed-fe5d-4bdd-824b-6500be4eb633",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0e4db3-28e2-4b6c-b015-182082aefae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9552b2ca-7030-4938-920f-52501d3c8a01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78792b89-54c8-4f54-917d-e366271aa855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a20f9b9-51d1-4940-b6a4-bff302ad23d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf02615-a86a-49bc-b44c-f996b139abc5",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf6d87b-b7cf-4d5c-b6e7-36f539fead35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "871becce-edd3-47bc-9120-82199a87efd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b7a9f5-d091-4ecf-be18-b5f29b3e5e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0c753cfb-1383-4c9c-b7d6-f192f6e62dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c405bb68-b4d4-48b7-840c-bb447f788393",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a543d7-6334-4adf-9193-790ba7009af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6537a772-849d-4613-ada1-c787e5cd88d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6797d94-805a-4053-b2c3-83157c72ed50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "274c6601-8fb7-4682-a1fe-f43d5d3e44da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611b1e0b-44d2-46d4-b6aa-e1d0b57256d0",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa70f34a-a1fc-460f-9ded-c76ca0111bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "116df4f3-e2d4-4946-91fb-870c544738cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b655960-a974-4123-87e2-caf3f98f6f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "455562ac-f6e1-4ae5-98f0-8dcdf5b76f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3240b00-4423-4978-8783-1111902b6b35",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d34014f-d5e6-41bd-b4dd-9ebb75e905dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1218490a-439f-4a80-890a-ab1d05c9ea58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1cade16-04ed-418f-9da5-6bb1831ecf91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "02b5fc1e-685f-4691-b67c-d53a2dbe1819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c8358e-48d2-412c-b4df-abbbb968bfb3",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbabf8fe-3d1c-4f63-b285-6141ef605ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c53a133d-78be-4738-b8a4-61ae427429cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06671d37-014f-499f-aed4-a7a68ee43f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ecbf00b-518c-4519-9578-83d115667da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad51887-3817-487e-a1cb-2656afe29d35",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf544621-76dc-4d79-9d12-806915a1e126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a2f4f8d-d793-4f9e-a884-279cce37432f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee75d49-3b88-4edb-a068-cdaac0403992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2f247a0-a88a-4b1a-9006-b12c63fc085a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c21e4389-2adc-43bc-baca-f377dd9207b3",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74499400-2a70-40f1-b98f-10d17e4fd866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4979a9a1-21a9-4899-a8d2-d9169408fc27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0238bbe2-141d-44c7-9cee-c64e56bbc3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ca9c8b9-9c9d-4337-9127-0d352e3f36da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "117c09cf-4285-4a89-9efe-02e8ac95f863",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8067eb1b-7154-4d39-bfa3-b8ec641c470d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c43f48d-0654-44d9-b688-ec86a3f1a741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba5003c-f057-4cfc-b579-f005a233cac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eb0697b2-cbfa-4012-a26c-b73e2e4bc5ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6223ce3-0ac4-4b5f-b4dc-962d2a9b7d41",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a03e8e-6782-4100-a7e4-5e96e776a507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2448139-b4bf-414b-b935-799708136064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10976ccd-fc91-4134-8559-3ad48154e171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "edf2d582-2bd3-480f-aa6f-a312a5fc8813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "940d66ff-a80b-4464-a30b-971cfa4b5d7b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b764110-f4d6-4166-b489-c49441670daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b69d029-0fb2-4730-a61f-9250ec6ffe9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d4a0af4-7c7f-446c-8e04-450211e8e4de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9258583b-9012-4f3e-bdb2-42361b1b0a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "603e421c-3d85-42a3-b445-73900ba50bf8",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa0bd88-f1a6-4e00-a2a3-9fee2e0da87a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb21ad6d-b6c6-4008-9132-ace3c713b937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6911609-2f8a-4bc7-86bd-faffc192043c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bf75969-5092-4940-aba6-1f12a5795f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce2e60a-9b57-4c90-a8d7-5dd972210528",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d449029-2c88-4f67-bdd6-a22b2dc88faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ea67361-0541-4fc9-8209-09ae05bdc2f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4269d1a0-1dd1-4850-9871-65edfe2cd8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca988792-1e8b-4975-95ef-4f8f9b578925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ae05ae-9406-4e83-84a9-7b4515b27ab9",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a710f2e1-b356-4d9d-b17a-60a7bc01ce81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "275f4033-6050-4d82-a2f1-66149ce53911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad0a037f-7493-4981-b951-d7c980a6b904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a9cf9d1-ebdd-42df-ab7f-8299f8303109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e74d5c-8ab8-4940-a7e5-97238996358e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f5399e2-9a38-4804-9fee-25af588f511f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c1d78a6-dba6-4e2d-8e6e-e62926af8e61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2c3011-37c5-46cb-a9a0-68671faaf78b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f11eadfb-e3b8-4f65-93e3-33a84d0073d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43798a4c-4b4c-4f76-a053-8ca828c61467",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "128a800f-91a4-4fec-b967-6fe028861b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2deb7f8c-538a-4957-8aff-b32e3cd24b59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "510ba584-a228-4f96-95cb-3ea51b0ae561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "35c2453a-0798-49d1-9422-879f75e8a3e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43473193-1585-41bd-9665-24451dc1bc41",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd99504d-a42b-4bda-9d9d-8068f9220019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b84945c-8a9f-4bce-87d4-aae8888616b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "586a5458-e8cd-4355-8355-1197c4121724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "de32b4b8-640a-499a-9194-3114a8bb9bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4016fd4-38a6-4081-a653-55d39b5f7b4f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c173595-75cc-4eb9-91b9-f6a657e7cbf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d09ce42-8fe8-4d9f-8fef-a22f7cfd1a4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49959017-5833-4230-acda-22d1e218f4fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a02c984e-1b2c-4629-b114-41bf56b97c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b061a371-36bf-45fe-b9c3-53400ab223d7",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5301078c-37c3-40c3-aaca-1b2f3fe3cf03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7b4394b-ff22-439c-8cf9-5d0b1a8e9fca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77303fb4-3313-4010-baad-dd5a2fea8946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5740f37-0a7a-4a22-9f83-3d962bd82e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b164a27f-fdc3-4310-bb44-07eb0cb81db1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93623b55-fa0d-4cd2-a743-fa426c2ecf77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e44ed0f9-d83f-49e7-ab6d-564ff5f8b00b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8585c244-6721-4c8b-808c-06c3a92fba55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9e1fe7f9-2cb1-471f-b9ac-ca03ac1ce3e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9badb9c-d002-4366-8522-dcd1ab08abea",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e32121f-d6f1-4abd-aa4c-514c166d1bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63f3071c-0f12-48c3-b8db-ea25f013c9fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9168766c-bdea-482f-9668-bfa2d0950e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8581ef5d-9cc4-4dd0-b229-17aba9f80235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8f57ac8-82a7-4c3d-83c1-2985f62cdd2a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5123ece6-8ec5-4063-81be-c9dfc66d523f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fa3cb74-d770-4774-934d-42e385acca14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "269862f3-7d92-4f57-add9-0fcf7180adcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c26d054-54e9-4504-9ec7-d7616fdf907d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ccb7efa-79b4-47c9-b515-d494804ab8d2",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d63d8fce-5d8f-4ebd-9223-0d9698ca9140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a01cf896-1967-4a87-bc9a-8abf2ab48542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49cc0b23-7d61-4149-baf9-75c35944f912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4eb6b9eb-cbe9-4870-8750-6416584152ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ac778a-2c4b-49d6-b683-42bf2e63fb0d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "512668af-5d54-4182-aa92-d518eb35243e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05ca0d1c-88d0-487d-b6a7-67c61a455f2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ed8b39-eca2-4f49-95e2-d158b10f81d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3da85743-baa0-481c-be57-482ddfb7f72f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc84329c-7730-439e-8708-6712b451a67e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "034e951b-176a-44c6-be54-7eb92de1b775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e7903e6-e97a-4dae-87b8-60537c5824bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a0cf6b-f4d7-478b-96d0-2401bfe0d379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e19b283-8430-4e7f-8696-22769d492049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3e7bd3-26fb-46fc-a4b5-4e171fa816de",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c94fab0e-cc95-4357-b633-53cc524ff3f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7482876f-029f-4c18-a1ad-3aed297dd4d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8c7ec1-c732-4b16-b1ad-68743658a115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d29ac192-f67c-4950-b481-c84619fcd746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7fdf5fe-a5b0-4edc-b17b-139b931eced0",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7afe90ef-164e-42a5-8304-4fa39961d0c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8d27faaf-9855-4cdb-aac0-44bd85b2f4bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21be9f48-12e8-497c-a197-42b43923852d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "febdbc44-e7f0-47c6-8b56-262406dc061e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5d25b12f-8603-446c-bfed-29434ba8f30b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ec674cc0-6e7d-4e2e-a3e8-f6ae58e02de7",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1037cf91-6126-442d-bba9-b58bd489036c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11875dda-37a4-4430-9b63-a523a0304f03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3df9289-ff64-44e2-ba2e-1ccee0cd52da",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e608806-0b79-4969-9723-801baa8ae965"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f469c03f-c464-48f9-9f2b-e07ac96bcc6a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ad2c7b6-6e06-495f-ac58-789470b63070"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d06f2ce5-c547-4385-bd89-2e4448a704e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2e98a34-f968-4ad0-9cea-b714f5aaff96"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7f01331e-0738-43f3-bf6d-ab22db85043f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d170fe98-7756-43f6-8a84-939d8ea7252f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2fee6fb7-053d-47d7-9ed0-bebb862b24bd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3809ded5-47a7-4227-95b9-27d8210a3b36"
                }
              }
            ]
          },
          {
            "id": "aae9cd5f-80b3-4e5e-9535-f9c51676212e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a4690570-f968-472a-a9c6-5ebc06b29e43",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ee1994a-11a1-4399-bf16-e94aed7d1437",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1490f888-1abe-4c04-b83b-23e21cb792c3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e338a147-9b4d-4884-b12e-422e516aabda",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d21083b6-e439-497b-8bc8-8107d4bfcc28"
                    }
                  }
                ]
              },
              {
                "id": "00002eb9-9750-4ce2-85a7-50bfec2e152b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "15f34f8a-4443-40f3-9b1b-9fa28872e11d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3454f063-8b8c-4388-ab13-3aa259e2ae09"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6de0fbdf-1bc1-4fdc-b0c9-2ebf8ec6ea97",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0e6a6517-36ba-4437-8b53-30c8e3e2d2a8"
                    }
                  }
                ]
              },
              {
                "id": "e3f868a8-d2c8-4c6e-bb83-61a3d0af287c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c186f363-35a9-4a40-9c12-7a593271c716",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ef90b994-e92e-446d-9e22-2d9564bece7b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "12a01aac-79d9-4504-94d2-c3cc921646c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "88cce9a1-2bbe-4b43-bf6f-5241a3aae9e1"
                    }
                  }
                ]
              },
              {
                "id": "c8b0b9b4-c977-4c2d-aefe-7399b00bac6b",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "17fdcbcc-57d2-4c91-8735-9c5de179aa7d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f0fd915b-be82-43a8-bb70-ae712d50a8af"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a706e022-1046-4d15-875f-eeae6d08410b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "6b4db9bc-c9b8-4314-a758-8782ea761c59"
                    }
                  }
                ]
              },
              {
                "id": "7e85dde0-70ae-4774-9df7-2ebfcaf9205a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c70ab8be-bc95-4815-9a35-89b29ddfa200",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bda42817-ff93-464c-b449-32054761ffa7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9410b91d-f45a-46ee-99ea-197fd730b77c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "64e3b9b5-61de-46ff-b0da-96ad1ce270ec"
                    }
                  }
                ]
              },
              {
                "id": "06b28ab0-3ac2-4bf4-8c8f-a47ded2b6cf3",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "90ee51c3-53de-46b3-8b44-6a7418777c06",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2fe69ed9-892f-4b93-89f0-5acf517c3494"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0dab1b29-669d-4429-a5d9-d948d5d005b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "781e62a2-8cd7-46fc-b68b-88d7618a70fe"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0a05d3e3-8969-48ed-97fb-c90910f3ef58",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "628ee03d-5a4a-4f38-ac5f-dfb875c3e40e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "771db142-609c-4f83-a5a1-da20a89d05d7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ad47d83b-85f2-4eda-9c44-8f1a10b8f828"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "863c80b5-6a3c-496d-83e1-099d16e7a35f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8759bb45-9cac-4f19-a198-d399886399dc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "132991b9-1385-42c8-9764-3a8bfeb069a9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0b932f50-90c3-4634-84e7-5b6b4f1dcc8a"
            }
          }
        ]
      },
      {
        "id": "0f225072-e108-43d5-9ca0-e20d1b89c41e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "466a4f72-e5f1-436e-b3a4-6c1b53a74b63",
            "name": "Negative Testing",
            "item": [
              {
                "id": "38765fc1-37f5-4484-b2ce-e237f6b9eab2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "685a8ed1-2677-49cf-a367-3399255c2222",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0588f4e6-7e09-40e4-971f-efbff631d062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4094fd82-62a7-4041-9d29-8ed84b305707"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e3d7536-1bec-4064-bece-3ef3fb9ffdc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b6cd8f0-ec6a-48b5-8177-db625c23d9dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ca5db7-46d0-403b-b0c2-b134cac16e67",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c8e3da0-7dac-42d3-88ad-50a3c90daa54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b9293ff-7b2e-4fc7-938d-4d3581aef77b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "859b8f31-1125-4ef3-8283-fea2e3186aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf278621-7272-4e52-a2b8-c2d4e86da628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cad0e65-d327-4d8e-aa70-451595d978a6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f4b69d4-5cff-4461-991c-f6792738d5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3e027f0-8a52-42db-9f9b-873bd4fdb8e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ba1d3c-87fd-4ca7-905d-a4d810122df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "40c14f94-9c8d-493c-84cb-1a84736ab76b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0384f2c6-08c5-4f04-9e28-8e5e357ee047",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e765cad-753e-4a8f-84f3-61c891c79d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc1f0533-aa5e-4f1e-9191-1038370b498c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f2f1a15-466d-475f-9926-02a12b86c521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "19efa30f-f3f8-4083-96da-93588f5dc091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59bc9b04-d280-46e3-8a1a-f7f8809f71e5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1ab950-33c4-4139-8c93-ec46ea6a8546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "654496cd-5434-41f4-81d4-68cd91386753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65df5b0e-b264-4b48-b86a-fb1708569ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "49f0454a-496e-466c-9814-94cb6046fe85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d0ac86-e6ba-4912-bb2b-d2bd819fc091",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f29513ab-43e5-4c6c-a583-5f3f99df8d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdf1ed2d-e76d-48f8-a8c9-c11e1f6745d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d792da-5897-4940-b4dc-5e9d6f82231e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2893090b-ff8c-4412-8903-c8b7e3aa5c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1582ade-1aa2-4e4c-867e-1f06883d4a1a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "278c0344-fe86-462a-9f74-f563b9d513f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6fa9252-62b5-4e16-9903-0784a2d6d7ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4489fad7-f8b6-43af-9188-0207edc68d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "60beb15b-a09e-448d-9464-15ded22e9e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9621f6e-9604-4d60-85c9-39e491d3d42b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "215d06e2-8802-485d-aeb4-aba3053aace5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd31c64a-5518-42e8-ab0f-7a8ff7b28417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c892a5-4563-4ea0-a0fa-b2a5683b3a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "15daa814-4aa0-4ac1-bf1e-085b89fc11b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "970fd994-2bd1-404f-8597-02a5fa0ae1f9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3887eb23-1b09-4990-8dba-da7b89d98dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7824c3e8-20d6-41d2-bfba-b39ff9a1d34c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cffd40d-c7ec-4c14-a77f-19082afa4bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2223beb-496e-4d15-b710-d6bbe21d149c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58bcac83-c372-420a-9638-13e701d0609d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b63407f8-d9d6-4604-bcc3-19f5c78080ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6412c165-7d08-4823-990f-897746fa21e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c00d062b-adae-428b-a725-bbfcb2a438f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee06b228-ed4a-4abf-a647-6e6f7db60a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ec2374-8810-4822-aa0a-fa421bd8d91c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14244585-2752-48bd-b2f3-43214d5d45fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53bc14d2-ae16-438e-928f-ad5257e7be91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bbff1b0-59e4-4e15-b305-3204db4b1242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "bf6c4041-97b6-4bbc-8175-ef2e5f6f18e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf5c191-0f8b-48bb-9679-4cc1410c34db",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26339d8e-0d0d-4382-91ca-101db722007f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e64565c-5cdf-4460-bcc9-99c4b467ef99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c9a75a7-5e64-4ccb-a241-a6524e635d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "56136024-80ae-4dfc-9d9a-9dd9dc117d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65618848-8d27-495a-ba39-74ab33ebe15d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e3b4c1-5b49-4312-a5bb-91ac0e29fda1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29a3ce91-037a-48fe-8ceb-496e67c0f1a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f0b8e9-47f8-46d5-b5a2-0ea68b49ec3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6951141e-b143-4a00-afcf-d6a2681ae040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "728884f3-4778-48bc-8b75-87bc01ae9220",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a44e8c-0963-4578-ae82-651c1d9aa651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef363a79-a907-4332-bd64-fd4495c23baf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e05cda-53cd-4abf-b1a8-06ae727cc3fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "63d19d52-fc04-40b0-a6dd-c0e08b7b4c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e7860c-d07b-40f5-a3e0-c752a1560313",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "652cc7fc-11e5-4cea-a242-f9eb9ae93b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1d99a88-9216-4fe1-88b1-7fa9c13131fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a54fbfe-72f6-4010-8fa4-5c6521fd1d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "315a5c42-44e2-46f5-be8e-f69d00434c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a57b061-cdc1-405b-bdfd-5f8629c64df1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ae5d5f7-117f-45d1-8019-1a0eeccb0171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4badab9-8c01-4789-8079-5a0db39d4a7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d163f6-da23-49eb-bfcc-c298cd6156ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc773ac6-8df6-4d77-84d6-eafeb5927d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d29bb67e-6fcb-4493-b721-50cbd7d15145",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37254795-1ca3-43a3-b4d5-aa4c6bf596f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c58a2d6c-03e1-4d25-8adc-e6b28b32f909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "169e6909-5ec4-486c-9ffc-da60605b8ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dadf160-eaf8-4c9b-a5cc-2cbdd67fc2f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eadac39-d3a7-4c0f-85cf-976495ea0154",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "363b2cd1-bae5-4283-bbe4-7714a545aa9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c545cb6-d098-4daf-868a-96ec7ec5e718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1648ec-557c-481f-a0d0-296283cf3070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7b3fb82-4e71-44a1-86cf-8dea93c21fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567e43bd-cba9-4727-99c0-610fae5e9094",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "407a5360-2346-485f-93dc-aa246b1a59d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abb9fdf4-4dcd-457f-a186-073650c44369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266743a4-8d06-4dbe-9b37-43b7f9c0013b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d51c67e-c0d5-461a-a7a9-4b27ae7beec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "514ced2c-d97f-47da-a59a-45136c0a84e0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd0b944-a659-4d53-b92e-afbad2618a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c865c3d2-3e9c-488a-af46-f41f628bf74e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c58291a-d271-4b6d-afb9-fa31457fd86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86bd944a-003c-485a-8ed4-7937923fcd2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ababb08-411f-48c6-861e-a46246bc6b67",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2323345b-ae99-4811-b071-0005936e8453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbf37105-7dd8-4168-9ffa-c1caa1ca1658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a197507c-6ea1-42ee-8ab6-9c3190fe0e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcc0aad0-5911-4894-8e9a-7e66106f4874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa33fd9-54ff-45fa-ba10-0a27506afb85",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d8dcaf-d811-4369-98c4-e783afb1b9f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39a0eed9-6c27-471e-8e6f-8399237b2207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29a5936-5df3-4e19-be00-978d4ef98ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8f580ff-d725-40db-b133-543eb56b027a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c008db8-6e06-4f7d-a0ed-ac1f59e12145",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "141a5c7c-e4fa-451c-82ff-e7e94230e894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da10f69f-2933-40d5-97f8-b20f8afcae96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e10f272-ece1-42b0-8e7f-21ddb8a04b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ee201b6-3271-465d-a6b3-cdd4b8c0583a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0476f5c1-3b1f-498d-9a7b-2020272a4c3e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd68b201-f0ad-42a1-968b-8e2c7f05c1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ba7d25d-ab4b-4d2f-8796-d200a230e590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449e1fa1-8ff5-4ee9-84b2-37928b4f2805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fcc64a7-e9c4-4a50-8d5a-c4a9936e148f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb2395c5-49e0-4c39-90be-f4aca30d7cd4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a893de-1e40-4e9c-a751-55cb901d744f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46421075-f9e0-4150-864f-3728beac6622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b22892-27a7-4044-b1c3-e750f10a4a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da2469ae-c105-47df-8659-3ea4fc3d9498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d0ce97f-96c7-4f93-ba08-8d5a520ab006",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5490ceca-7ca8-4ad5-a0f9-fd2287471627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7205de7-505d-4577-be21-684f69afa126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab933460-ffce-4458-97d8-fc6a2279ee6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "721ea139-cd48-42b6-a052-15206e108a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef481e8-7a96-4313-a391-2671ccb1d1e0",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69cf1231-574b-49cd-b2e8-17edfa980e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5305770-1aa9-4bcc-bd2b-36e00068897d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afdcbf2e-91dc-430e-a915-a07e345aa633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39d89adc-1c72-483c-a315-1803939b20f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07a4a51-fefb-4ace-bb8a-d7162dff38f7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0ef50d-bbb1-42ca-91b0-cc150a9c7e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "168db436-54bc-4566-98f5-19ebb3448514"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d18d793-d4c1-4003-9026-24e6ac65cc87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f607b49-d270-4e11-b830-cf8248f1518c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c322b62a-0451-44fd-b337-88a685c2e574",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d70018-ab6e-433b-9fa7-50b971d151aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7fe16cd-033b-4be1-8532-c1bc85045c3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf3ccc4-5f2a-45e7-8ae8-056989e5a360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "abef0bf9-958c-4a67-ada5-f74d729bc0b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da77ff71-a06b-45c1-b77f-3093a53fb1c0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f9ea18b-17d9-4636-bf34-158c817d0e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d19b5b02-a049-4d3b-829b-63cb125659b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7d48a4-88e8-4d79-9709-c68443e0baff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d1e4f77-4313-41ee-a7a5-a91ab7b7e022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d928fb1a-7f07-47e1-8b2c-02b60765d387",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64a6884-dcc7-486c-8646-28d62cb3c21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d704e61-99ad-45cb-adab-019482e433e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b1a17c9-59c7-49fc-b4ce-f73111b8f9ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "adc8b04d-32a2-4919-9943-0f7d50bdf4f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cddb1273-7931-452e-b2bd-3fc6930325fb",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7889201c-29d0-41dd-b714-d8e0584964d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bc1621d-658d-4fea-83b5-f5f56a7e7a31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd90be3a-8710-4473-826e-998a513b3f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbfa771a-7839-4a09-8ebf-9d5a75e5e881"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c88b6d81-1e3d-4bbc-82d7-67ee55a9730b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "891a4cc9-3896-4772-91e7-cd5841a6433f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a26cb53-2326-41eb-95d1-3e036e7b4a0b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "69765eff-9e52-49e3-8e0f-9eb0e5c37ed2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9a5006-bea5-42bb-9aee-2e302b6a0eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d07702db-662b-4616-b20e-802a1aeee149"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68cf0377-097e-451e-8e4c-586fae35e787",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c79f4ce1-8d5b-4f3c-a436-510fdc2df2f7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "956140db-0141-413d-beba-d24356b548a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7b70f8b-fe6e-4c4f-ac35-eb6e0c353e13"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "568b1360-18c0-428e-9032-dbc138f432be",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2d891187-f17f-4d8a-8af6-c73a72d209dc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8339d0b3-817b-4708-a35c-ca831ea2c01a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ca9b9f5a-419a-45c7-9e74-e0e640f85889"
            }
          }
        ]
      },
      {
        "id": "636cf884-1765-458a-8b03-0665140b304f",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "6ee4c071-a4e1-4c26-a17d-6b962c0e3d0a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aa8a9b14-eda4-4207-8188-689e4ceb1bac",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3aa14fc3-8ec2-4b3a-96ac-aace453f500c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4fe4ce-a668-4164-b787-47f8d1732ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e46d3f56-0947-4337-92ab-fa155f43f5be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ebbe043-c292-4269-93bf-b386d74b262c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "628b4fc3-ec0d-44f4-9819-a77899e967a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc0b275-772b-4c44-af76-c67e29f9cae5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e78434d-4c76-4b8c-952e-b3e6d575f652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65cac8b7-6ee6-47e4-9473-3c8d5b26eef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e0c1a1-7510-4a31-84a5-9aa2988f670d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "438c431c-0038-4185-8cbf-107e0bf49b30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "823243e4-687d-4fdf-857d-3d7af4652acf",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cbc1ab3-a21b-4031-97e6-d1eca047b52b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d51e8d02-bb4f-4b2d-8763-4715bde775a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57004a4b-ec89-4e41-b207-dc644692724c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c899139-c1fd-48d1-b6b2-6de9732f5d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e951cc2-abf4-4854-b1fb-cb30b592665d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba872b4c-3b92-4e86-8fe0-61e03cc24d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cff0a2ff-cd3b-4a62-978c-82fdff74e103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25b623e-1dc5-4159-8a69-ec09988c997a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "375e1ff2-3ab5-47c2-8150-608b467dafa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbf81ff0-468c-4444-b3fa-37a96980bd1b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11429541-6530-49f4-a32c-78e93596ac4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88ec2225-be87-47b0-a24c-4a99f9e68048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c5944a-d722-4c40-a62d-2b4df9a15151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6efe3c09-b455-4af0-86ea-275f8adadb4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22e2c87b-b531-457e-bff4-3e92134b358d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a6afe5-792c-4e61-a17a-56d329e28cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b97b833-eaab-4e1d-81a3-069ce38979d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a714dc3-8d41-4447-be4b-967995b3b78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e7bd893-ced9-4106-a992-f1d2b0743790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e64b3526-a00c-456d-80a2-b2dbcfbe1f11",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3028189-1ed1-4e22-a082-0d1b6fb2cfe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e43478e4-6a19-4a52-883b-0624e0532b87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4004b644-907b-4b19-bd90-4ebd9fa58229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "41db42e4-e4b5-4f9d-9ac1-098b4c87af5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e70a3fc-cf89-466e-90c4-858f751fe63a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "183c99ee-936c-4ba7-b57a-2980d4d41273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20f712dc-e1fd-49ee-83d0-82aa3e13b2c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce1875fb-06a3-4fc7-b635-4169fbe6b786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "16a08c09-b7de-45ee-9d21-02c935a8efa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e17680-8ff7-44e5-b8ea-e9ea239519ad",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d53f6f47-d1c8-4a02-8670-c27df7612095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89df9783-07b3-43f3-afcb-b1adc658aed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48562400-d0af-4a04-8cb7-23e88526e2f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "05077a6d-0405-4b0c-85ef-9ce7192ea1f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20e4de3f-1749-45a6-b051-4b65faba90cb",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce5c568-8acc-415f-a7c5-874f05956b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b16f2074-935b-4849-8beb-36857598b3c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc010314-0f83-4c7e-9094-f72d631867f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fe69e4e-8641-46a0-9bf1-49b55d83a1f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "351ab04e-caa8-4497-86f6-9217d99abe40",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b68a8ba8-8d80-49e6-b55f-25d11b259c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dece885-8448-4a36-bd67-9e869561574f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "119f8664-0c50-412f-b723-16265941673e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9a799f37-e47e-45de-8920-1bb540346666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec2f6465-4a74-4070-b2d3-4dbb8496c690",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5fb0028-2f4c-45d7-8999-44ca82fc40dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01b2ae9b-1037-4188-8771-7617aa9c25d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1f09aa-fbef-4892-98dd-6452a568be38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9fec4c1a-2f3d-487b-8886-809911054eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc22afbe-a24a-4ae7-b2a7-80e69c2a9069",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12706527-69a5-443b-a192-a753b53945ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67830a84-ccd3-4781-8f90-042b99895dff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c731f8d-40cb-4341-b89d-8b4355ac07ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cef1621-8bf5-4ed9-b866-2040c75da9d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7fbd53-cad2-4150-a06b-14efe58cad87",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ea2640-3b67-4a48-adc7-62bc46a5f9f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6503b1e1-1094-44a5-9507-0a3555a84f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f17a1255-567f-454b-91e6-eb44fa6fcbcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d803d578-df07-4951-aa74-0d7b03de3dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57acb6cc-d0d8-45bc-b170-92622cf65b95",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e6641a1-4898-4933-b178-193848934026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4ee8079-06cf-4ad2-a343-f367907c486b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61533881-7130-45d8-b6f2-82b12cb2ba26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "042ad2d5-3f15-4d31-bedb-1e081f22ac81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c7c9995-06a0-4814-9bb0-18a09730e241",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ab3c3d-f5db-4adb-b201-a84de8f9e9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9829c483-b6b7-48d0-9305-fad6e1c9e09d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7113079-f21d-46ce-af16-4f128252adf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee565f53-cb91-4750-b723-f27b0d184a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7faf4b59-acea-48d8-b56a-27fc019a1ea4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c0a9f25-14fe-4c1a-894e-6712e12e9a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7ed255d-f509-4cfb-b87d-b5f76d8d4346"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bff7978-c7f9-4f0c-8330-b31733a124d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d326573-5ba7-4676-9e29-c6d95d6cc235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9b1b968-b2d0-4716-af15-6497c45a2e60",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b149210-5a7f-4c09-8c61-f0e34c24987f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "455f064e-7b2f-4e89-9d4e-c1a917fb9de9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "109bd383-64fe-4967-88d5-2efe17d04dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e59a8c31-ed50-4191-b9e6-c88e243863f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d2aeb24-d419-4191-acb0-5fa8933f40f7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e71698-fb42-4997-9254-46cb2c1e20e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4937dbf5-5736-4fdf-8d05-66d6a95d8cc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8463da17-f527-42bc-aa10-a47d395ea440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91170c09-cedf-4952-8ed4-09f5a13f8e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a76faa4-a46d-4957-aa33-9a33ca80e837",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be586d82-7221-4551-89b6-b7afc65b2736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17fb4776-bef0-48cd-bedd-3691471e3f1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56854552-235e-432f-b19a-14ad3d55d5c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "120a7668-389b-4ded-aba5-079ecaeb152e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "432b0f1d-aa82-4fe4-9246-41d8d9a07ed8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12706045-6284-40b8-b206-2fb97ecd1bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f900db36-594b-479c-8f9f-933d9bd453f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50820bfc-5223-4dca-8e9a-83e8a3919c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9b95f59-2167-411d-9820-910f3a1ecb1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999a6f7f-73bc-4374-86cb-d9e7479d6a30",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f84a1356-9131-4412-b77d-0550a1a59d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a64b0ab-5b0b-4bed-a457-e8b1fac11c0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ea1be1-ba23-446e-8fdf-ba885fa02052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9be356f9-7a7f-421a-b01e-26090a512e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d873590-557b-44fa-8bb1-87cc23324eee",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "880bc440-0c30-4fc0-991c-c1fa8f735b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2460b32-ec4a-4c57-af06-80f8c6bd9cf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e795b2-1bc6-4e01-bf99-38a430e61bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6591395-0aee-44ba-b448-003a7a8b5603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7178a6b0-a639-41c1-8b3b-b7c044a07863",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "280bd5d4-76a7-4d2a-a086-def03293d636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4afc9f25-ca72-4fc9-8574-ad5f2f327cfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74040902-4bc8-4ad8-8eae-1278bd566ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba2c6e93-6a06-48ff-9ebc-205494d506a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27ce2f2e-1ace-4ab9-9e35-ebe8bc05c7dd",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b26ecf-a267-4abc-87ff-ec7197688b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30006674-d122-4dd9-b720-d416590060a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d9b84f-ecd2-4699-b1b5-de9634f15eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0f1e27c-7f2f-4ffc-9611-ea78f983a5ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b83c3cc-e613-4571-bcb9-116bc7244dcb",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ca3dcf-8196-4209-98fc-d206be3336f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e8cf5e2-38d7-42eb-9189-3ac4d3cb5f2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b54397-394c-4395-a0ff-e41b845790f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3334e7d8-d5dc-4c31-a2ec-4f5c3f3d215f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1afc32a-a188-4d8b-9177-7ab49bb850d5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ca1c73-f43f-4275-a3ee-5c166c7f9865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c6ac68d-fa3a-4207-adc6-623549a582a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00012d54-d0aa-4427-950a-f14dcf93a37b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcde2bf6-78fa-4b4b-b678-679ea7640bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f029902-2768-48b3-9c2d-6a07240074d6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0f7d0c-780a-41cd-ad9e-1398bddf3402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04654e0a-4a9a-4709-a27b-f69dfa80e2a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20b866d-e3c4-4ebf-8f98-d2f21c978cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3036621-ef5f-481a-859a-3c085e65ff1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a7db44-07c2-4a61-8315-a33a47a13d10",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ac5d4c-ef26-48eb-aa09-ed2fcab3da71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dda13bc0-dc08-426a-ae27-914ffb52615f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f64e80c-d613-4924-8550-3ea04018a640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff4d05d0-e66c-4293-81cc-f8a840ca9738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230fd67e-5f9c-40db-a16f-69747fbe10a8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "212f09de-f36f-4f40-94e1-115b684fd57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7784033-c17c-432f-9691-c4eec1075d79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05741728-f422-4ff4-a8b2-a38ff7b7b126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "555bdc55-f03e-441f-a3c2-5974baffe3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6330bdc-6d0e-4a57-b2d0-5530ef8b9319",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c42228-6d92-4aef-8274-8113bc7f4411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cc2d932-a40e-41e2-a3e1-8cd9621a73bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f267cdc7-7bdf-409a-ae72-f6630793fd3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "436f782f-77c5-49c0-b582-bff14fd53e60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd35cc8-09b3-471b-a506-242e7c9ff796",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86949844-3342-44ad-a8f3-6253bdc8e5e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c65ccfec-ddbb-4990-b05d-310c1e5d0d3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b216b36-d7e0-4359-8cfd-7d50e3f41554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f041666-b465-45bd-85c0-ff493370a963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca225653-d658-4dd5-849e-19c68708f56b",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "201a980c-1d16-4fdb-975d-ffd08fb8ac19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11cbc037-108b-4afc-bdb8-6698c82504f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4fcf068-f17c-49fa-8827-31cee7d180f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "103a986c-e544-461b-970e-4dabbaddff39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9bd048f-e576-4a7d-8b57-54b4bd4ada52",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33383e55-0091-4825-b7ae-6e1ae5706014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91464b55-8a47-4ab6-9678-33532a42888f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f74c9f5a-ea0a-414d-865a-902c87a4998a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30605bec-6ea3-4c7f-beab-7bcb89f69238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "517361b3-fea4-4121-b131-e63f276cb716",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1a7155-cc8f-4cd9-880d-158202266a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4be33a6f-4df1-48da-b67a-de6c5690ba05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf1c25d-f8af-4a29-a42a-ba59129c2e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ee0e6fb-3700-4ff5-8e9d-4397137d9375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6535a88a-092a-4086-805e-04bad0d5a5d3",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf031e87-81b0-49f9-acfb-67c0a4b47792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03bc5036-6124-4bdf-bf50-46d8b6fbe205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "414a8a40-f3ce-4829-9611-3101ee8b546a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac817835-5d83-4e0f-90d1-b75977956b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3893279-778f-4776-bcc9-23a646ca7f4d",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "287dd263-f168-4d6a-a4cb-3d37fa6d3d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "549a18d7-4202-4c8b-a660-fdb376f2191f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5c83990-7304-4840-80a7-b6780e189196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a37e334c-61a3-4c7f-aacc-9c124176cfbe"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "af5459ce-473e-410a-a206-3e0ed91908f2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3cc34e2e-0a49-4564-a1aa-7ef88dd3f246",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e54e3639-f486-4b91-8e56-770b6e38f3c7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f1148863-12cf-408c-be4b-824eac56168f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94b7758-d353-4975-91f4-3737b59ab85f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c0e6077b-a7ea-4771-9e70-31c67f806c8e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ed58e0a-cb99-429f-b827-fbc2be637eda",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31846322-3356-4089-81ea-6cea73e9d432"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8747356-d6fe-4548-ba52-52520f707e07",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b8605cc-4c05-4171-8aeb-b22dd16f6a11"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7b7a396c-6abe-448a-99af-031683a4289e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "525a4865-cc17-420a-a456-1d35406ea36a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "10683da1-74e8-4a98-a560-435a7d061f06",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7fdd83a2-ecb7-4f41-88d0-05dde8266177"
            }
          }
        ]
      },
      {
        "id": "3f861f12-bd08-4056-9d81-9583a483f2be",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "256e1f0a-d7e1-403b-bfd9-45bb61161511",
            "name": "Negative Testing",
            "item": [
              {
                "id": "053fc7e5-621f-46db-8c81-3ccefb1c9986",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a5942ae6-3bbc-4470-84cd-ef957ff9fb04",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb2eac8-7cb3-4a97-b3e5-14da261bab56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3649b72a-391a-4275-9dfe-4b902875e563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe44b770-e6d3-43c7-8532-e108aa4f3e70",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8029e4c4-730d-474c-a6c9-20a9934cd939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29787575-0c11-454e-ac58-061bab7ac690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f2d7c0b-64a4-4c9a-a1ae-a9d56be6ad0c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10328a3d-16c1-4b6d-8eb8-3751cead966f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b700c506-726b-4eeb-b62e-3ab307ecc72b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bab4980-df9b-4335-b098-21f620d3636e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c9eb15f-f582-4518-8f6c-38346f046108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3360b52c-7a2a-4b44-866a-893129532c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc4034b4-c29d-4232-9bd5-79c3699abcc4",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd73f7ff-24e3-41fd-89c7-c3444ce20c27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1705f198-2c86-4015-86f5-5d20ca8f4151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd7cefb-0e85-4ee7-aa29-944a6e9a9a49",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9265f94-a954-4feb-a24a-665230779dba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ce0cbf7-68c0-4c42-b8ee-6a372d564888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cace0f1-2cc2-4e47-ae75-0ea9c841a3e6",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b924765d-5300-4d64-88eb-295c0ededcf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87f46cad-f0b8-40f4-8474-554736531d11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d733bfbc-b4af-4abd-bc10-dd8ef2fd1d41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c9da543-64e6-412c-8d5f-bf44fff0f00c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf52f6f-71ae-4aea-b019-abf881e30d18",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef1fed9a-3bb0-40df-9e64-751322e51504",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0edb9176-2418-4877-9e21-19bd11b8dd94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dafb7c28-10b5-4512-ba6e-4bfff19c7b2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1368b00-4c07-4ace-ad87-a8b0ddbfed8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d1db2b0-1e42-4fd3-a007-2a644e710e01",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63d3ead8-94a2-44be-aa67-43be1913b107",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c248c144-34d6-4319-a61c-aff511b5752c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7611ef8e-a14a-45b2-b5a9-54bdfe2a02cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad3f8d2a-d48b-49d9-a18b-e82a2ccf6392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1fb126e-63b5-4046-a3b0-db718ec08bef",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4499c5fe-bf4a-4058-b454-768c7052f694",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22eac26d-fd1e-4163-86b7-78f4bad6455a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f572d9e-62b0-4a64-92be-de0aea8f7d11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf4d6d62-769b-47d9-a779-45d8e80d5548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c779906b-a877-47e5-8c27-a2204b54497a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d78e0c-1b35-4bd2-96af-f9d490782c42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd5b822c-4992-40a1-9afc-544446a8a0fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a97fdedb-ff85-4922-966f-576cc1969bd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20e25118-53c3-4ea0-bb9d-969bb52f247d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7464ab70-e879-4c03-9f17-0a1a87888b8f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c0ff8b1-e52b-4225-ad3b-8c983d515767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "606a3fc7-a2aa-4657-9956-9ae173768bc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3908cb0-e1da-41ba-b1ea-d1d820c5dd48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba58b6db-9586-48f6-ae57-60906baf3183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd974fc2-90ab-4bb0-b5fe-ed699ca7e56d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5b07af5-8284-4f90-afca-997bd466088a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63eab559-ea9c-44da-a9cf-11d8f3555944"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac16e06-173f-41da-92d1-1ef3512f380d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e93f1ef4-77b0-4563-8d93-f4e1e0a38de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2355f568-92a5-4f39-a02a-d113a2cbc977",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef479400-164f-466e-bd50-c3ab0e76c113",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a1b4b38-14bb-4c5e-861c-73690d7f9b54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc4d66c8-5f41-4240-b547-8660ad94f36b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbbe74d0-05f6-454d-85c9-d5f3651df09d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b750be7c-0688-45b7-ab77-cc6ac289f53f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "256f1c84-df10-4085-9ceb-9800708f07d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "876ae3cb-545d-4a2d-976a-ab6d0f4ac946"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1649abfe-d3c7-4193-b361-e41dd4616cd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "098c22b6-87cb-4629-89f1-1f4c2e42f0fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e54281f-3795-4ce0-a55f-8df30d65ac20",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf63d04-bec1-4861-bb42-f8c2f3aaa21c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23e47aa1-232b-4d7f-9b01-5fa48f45b66d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6def12f0-c52f-4720-b155-415f3bc3f148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "422a83d2-e937-4a67-8b3c-eb577987efb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b115fcac-9736-409f-8650-0387796ee400",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f58d2f-712c-4783-aa63-a6e33d20ff2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b74625d-fb6c-4276-ad81-6880f2d4d546"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c653a1fd-c85e-435d-a584-6c5e2f799461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e53968e7-b915-4eb0-b2fa-11bd0ff85392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784bb8ee-700f-4878-80be-841843d34245",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9addcfb-16e0-4a9a-9094-f65ed6ef3e6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c01cf285-ae2c-42b4-a5d9-951ec3f44302"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bed3728-55ae-44d9-8862-ad6bbd897d4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c78aae9-c84e-47cb-b531-4375016a0388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc7323d-ede3-423a-904a-7229929a2850",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe8f600-e13b-491e-95c2-74f310ec23ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "833c5c88-4b8c-4631-b518-51db9f3eace4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cfb9abe-7066-41ea-8324-718259b9cad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee0eafa5-f060-44cc-a6cf-9aa07fd8b9e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06cf5fc5-4929-4b9e-a31e-2d8f9060c7aa",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e965e5-b17f-4c85-b4d6-82dd46b660f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7e9ce52-fc8f-427b-9f24-fe294edb6acb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "281654c7-1f8a-4259-9194-019f165ec72e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f57a1c5b-3a4c-463c-a79d-ec721a5a76f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe1d06f-1898-4a5a-b601-3691cbf74f5a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f49a5e45-b064-4e00-b70f-4b59dfd2baee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6767c8a8-8989-4b38-bf39-f8a3a480a404"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4abb5320-1340-425b-9f0c-7e04b374e7e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35024d63-671a-432f-9963-38a11235249f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a034f9bb-3a33-4503-be72-aec72a25c402",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "604b35ee-0404-4baf-9b10-0e0615b872c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "241341e9-3190-4f2d-8a57-488ab142e643"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb700301-0e49-4793-8d8e-361c115faabe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99b14e7c-7f5c-4927-8653-cabf863c56ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65760f1b-7398-4fca-ab46-685dc5da8108",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ed3658-6d49-4b41-b805-b5718ff2b516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64c750a6-4b27-433d-b2bd-3c61d3d4bd6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78674053-29e0-4de5-82ad-620fefd031da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18684cef-6cea-44a1-8415-595e6215d63e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "334f4377-1a19-478b-93fb-14ee2884e47d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070bef98-7a89-4bdf-b5f3-352f7e86d264",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7adb6afc-b5bf-4981-8a66-3329763fcd00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1353a7-7c92-45bd-9cac-21995b22d0ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57492000-80ab-406b-b3ff-b1bee7105cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e1798d9-2f44-4838-9af7-79ca7c2b7a09",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e236bb-8044-43ee-96a3-22a3e2dd0523",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21921cd7-4509-4711-b281-e153293eacbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc09cbd9-524d-453c-a615-750cbb5408eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7191db71-4a79-43b8-b1db-e79749f17d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9081ce2c-1d67-4a3a-8924-c74250063334",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb0d034b-2cc5-490f-8de7-3275ebd7bd6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cf08552-e4e1-4497-b662-4b0afa667469"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3579fa4-2d5d-4b56-b400-e1b386edee4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cb8ec6f-139c-42dc-aee8-5acb973c4ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb37f43d-3d68-4cdf-8d96-b580d1c5b42c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8e1a8d-2b59-427a-b915-5746b8febcd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c59126b8-2892-4cd5-948a-ded1ad45f669"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9880e00-471a-49b0-af68-dbdcbc5d9040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d94e9a6-0491-44b1-93b2-3435a19694bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d91a69a-89ce-49fe-a097-04698d8ad2a3",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b66f535-667f-4867-a2f5-cf244f1de429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9df96a43-f0a7-454c-9df9-dd50aaee7864"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01aec06-b53f-4d21-83e6-efb899f4ea3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc9753e0-9c77-4b06-b400-20de4914e8c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "199dae5b-77c5-4ddf-a368-105759b97470",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbcdb0f6-adf3-4cc5-8d87-d805dc95cba3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78aaea76-0e88-4f53-a1cd-308803e24bb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5caa75-87a6-4114-8323-47b2aa21f274",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27480c83-ee9c-46a5-a2f6-a56bebbaa7db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e113ede-f387-4648-8291-ab4512dccb8b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88126305-559d-4751-a5dc-0260f507a4b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57002eb3-4c1f-44ac-936a-9ea9bd77eeeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1b06ef-9575-44f0-b7be-e5c02937b859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d6e56dc-fb48-4dfb-826b-ef83543b70cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f059b00c-dc4e-4168-a1e8-c746cd6d2d0b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52bd3f9e-23c9-46c4-b0a3-aefacb9bdeee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bdac6be-79f5-4e0a-9b93-6607f02ee9fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22e94ef-ac79-414f-9b65-9a52f2cbb6ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2ad2654-cb92-4fac-8bb8-d1a8529ae2fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c0eabc-37c7-4494-bb95-3e262f52ca54",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "221beb53-f5b6-4213-b2df-2935848dea79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e543ddf-0a81-45af-b9fa-16cb3c2fd0ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "541da50e-4626-4211-993a-b86cc976ff12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfd66fd9-4d6a-49b8-b87e-6cc48f79b244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff3f11d-93fc-442b-a543-6fc2f93bb45d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab98f3cf-8f09-467a-9df5-21c4bab97489",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc09c34d-f0dd-4476-82fe-ba5b9928a7c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0791f198-695a-4788-9331-feabb8bf6138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c76fc3d-d6f1-4a5a-8041-8054688cfbc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d176b655-299d-47fb-bfed-de8015a253c4",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee70b3f3-03e2-410c-96fa-cff9a7a297fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43bee65d-0d49-4847-8a36-f3cb20074626"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee1ab97-636c-42df-90db-10d884165deb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fb39594-05be-46ae-b281-95dffcc852b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0189f23f-3db8-4102-a178-9d7debb10990",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "831621f7-f38f-43a0-85f7-1b80d0b82bdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfe72049-7458-4b71-b3f4-9fedc3f94e21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e82cda2-f22f-4d6d-afd9-4cfe04e73102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36b2ec2f-8542-4d36-9ed0-3f4de9b16f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b0b71d1-3eda-4c20-98e0-1abac1e96fc1",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d55941-5312-4f31-87d5-f3f9af249a44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afe2636a-d7f8-47f4-ad99-49dc3eb97e0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce3f0ac-4470-4619-9452-0d113450c3a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2611793-6ff1-42a2-ba7f-42d53a14f2b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22e56ab0-836a-4ab6-8917-8fde168bf3fb",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "537a2208-f972-46b7-b115-2a4cfc0d1ae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffe7088b-e12b-4b1a-915f-eb7bfa0c9f12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b42ea942-1d50-4112-befb-314f07c7b13e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3396d187-8470-422f-b6ca-5e23aa4daace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74878f19-532e-44c3-9ccd-4dcaa665631f",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "150efaa3-45da-4d33-bf29-a404258afc0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c261ae02-9a68-41b8-99d4-fd475be70721"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d60156b4-017b-46d0-9efa-6b5c10c4a557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08010e10-d774-440f-a7a5-f672c61a900a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a00ac2-e71a-4ab4-86eb-e8b637d01eec",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43db6030-03bc-4e99-ada3-f7d2b47761ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab652dda-0ec7-40af-9dd0-d74f86bd9297"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf6ddd9-e01c-4a6c-9c2d-1a8495b00032",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3a9fdec-e876-4366-bd9b-11224b7362ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c70368-4fff-4ee0-9254-9550a0670c41",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcdfcc33-f519-4124-9735-988cdd1cca87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cdc3061-5900-4195-9e8c-55cba9767a7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "193975a0-f460-48b5-a2ba-47336cd712bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18da5d71-fa9b-4b6a-a421-9955b449c9ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e51cd931-c792-4e00-a3fb-0275fd4b99f9",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2d71de-b60d-427e-9d4c-340e388c3889",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6390f507-0fc4-4fc0-a09e-64c60e03b524"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f41cf36-44a8-4fd5-9201-acf3ae07be0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9994036-68c0-41dc-b7ea-a74053862351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dcb7561-2538-4969-9c16-ffd4f7589b81",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd4df59-51c4-424e-a4ce-c392d91aad50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "806a17f2-9bbc-460c-8a8d-9607506f553f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef42113c-baa2-49e4-8d5a-bc0d729cab2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "349080d9-3e94-40ec-8625-59f86d0b163e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "742b5e68-d373-4b0e-b0b1-97eb86fb9ea6",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a401ad-ff17-4cfe-b662-b501b11491bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a935697-0978-4608-bb0f-9362eab82075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0748bf5a-319a-4b69-a814-2c857d3763b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d761239-d463-411d-8286-fe40c8073494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230a538e-f075-4edb-9a66-26d89a141572",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0543ec16-3a02-437b-a554-c9f425c12d9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e1c7777-2a54-4f6e-b984-25e0bca64731"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5da646d-73a9-4b1c-a00c-0efdadffaf8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54c6ab9a-ab99-4742-9ca9-12729c2e3f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ea300f5-9cd4-453e-b9fc-738ce97e6dae",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f24de64-9bb9-4335-92ec-5d9ed5406a58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f019798c-4efb-40a3-ba85-6e3ff28feda4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "529b10a8-7813-42ef-98cb-b55fe3eb3c44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fac62ba-05f5-4f9a-a942-3d49632d6d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cde08fd-f16f-421a-85d2-83ca7d033f79",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a634a5dd-fa2d-4a89-9253-edd2b9d7d4a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39d1ce3a-7276-4541-8854-7b96455d63e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "103ac358-4134-4e6e-85cb-7855bc7a7eb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbbcedf7-66b4-4ef4-9a45-ee2593cfae31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec2050e-2d41-4b8d-b26a-631724acc54f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da5369bb-9f4c-4779-ad66-d19abef36757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61cbb5e8-a945-4bdd-adaf-ba86011e700c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c656354e-afce-4389-b086-4aca13fcf1fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f82c42c7-c685-4a4f-b850-3e164520f7af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe16edc-c98f-4dd3-bb14-03c7e7fcc00e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f57cd1-2036-4033-858e-b47df788052f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f480a5c1-a950-463e-ae7e-4b2343511686"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9886fea5-fd6a-4715-beac-2a8af68cd241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "911d0cb2-964c-4464-a895-ff6502f83a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b24550d-4964-46a3-a20e-66f54b6de37e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b4099a-f5ec-4d4a-abde-4968b3bf9ced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90d37c71-ae93-4972-9261-89ea52d48808"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1208d1ae-4c8c-4e40-aa52-7465afbd3d72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f108204-47ac-4fbd-b766-497fe478d5f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0142ccd-f28a-4484-a4bf-1add1166c549",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c95dd630-d8b5-437e-910c-ce203812f346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ea345c4-ed8b-474d-9dbc-5cf086d7b14b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8037849-c110-4451-b185-bfeec1748044",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d1888aa-97a4-4eb7-967b-bddbd9f0c2ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb35b02-145a-40b6-9fe6-0ab6f5672144",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1340556-622a-4eb8-a26f-1b7db2d121b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6b70cc1-4241-49cc-870a-d837a057be88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97252e60-68ae-42b2-bec7-72cec1142c12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dac995ff-3013-4d75-842b-937c2d675451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c48a553-da2b-490e-8241-a38ec0804a84",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ce6847-67d8-432b-9898-8e6644c22035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73170396-bdc6-4d84-89e9-e3e7b4e55d3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7566b8-3370-485d-93b7-4c472c9b8a1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20782926-f7f4-4cf1-9664-93f14d6c2bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e64d89c-8969-4961-9fa5-745722c561ab",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7931d40-da1d-49a8-b995-cca037173002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e71e73e-cf83-4c87-ab8f-1b4d6959bb6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06de63a4-00ca-4817-b5da-0516d82a4dfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "677ebce5-c816-4be0-92e7-9161f577b7b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "912bfea6-99e0-4786-b314-be956f3f5b4c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3fe7852-23fe-4bb9-8df7-7bc35cbe1d65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aca03629-7cd6-4381-b103-9af78d708d70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c12f788-7f8b-43c1-9520-404861f89cd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "828006ce-954a-4ba1-95f8-b9f7f53cd95f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034b2bba-80e3-4f1c-82ae-37b99c79a7ee",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd807330-7529-4a9e-8a65-9dd0c10ab7db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "473f0bcc-3804-451a-a0aa-a665a528e87d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c009cc-de7d-40f5-bdff-ab3acb762241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c175de6d-54e5-49df-a449-460981a2c3dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81bfdf96-d3f0-4402-a2bf-805fe0c4421c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25d94ed-df54-428e-b66b-4f95b2fc208e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec799c95-c9b3-4061-8639-9555edfd6999"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75b90670-24fe-4e4d-b702-6cf4168cdd93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "447b5019-190a-48ee-97e7-6bf917961876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8ec16f-8df3-456e-b699-1b4a82fd15be",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda95c61-7d57-4271-8b6a-da8aa15d8e5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8028a0a6-cc81-45c4-af1d-a726b87beadf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ba6399-2e87-47e1-998e-ef8634d7cda5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f762dc6a-a576-467b-83cd-baaf0114fe63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef6adf6-f33b-4039-be9b-e2881b945b9b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb6578d-cc2a-4ff5-b829-6d574bbf067f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b0a9655-a0fb-472e-bc5d-4c6f050dbe69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a51ba3-3c2e-4251-8533-d7b9ebfc31dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f86aad45-ed1b-4fea-8a0e-9ecd0fd3891e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "631a8499-ec34-4a1f-b7d4-65cbf65d45ca",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30dfb9c3-9876-40d4-9271-bd0a75a0d558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07e27256-dc93-403b-9d01-1723aa1588b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba3e1df-8965-49d1-9e63-90b574ff276d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3769846-410a-49fb-aeb6-8c48157abbc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f866ff-813f-4cd6-8899-5e53ca8bc912",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "031e990b-4be1-4d46-ba10-830ba8ce78c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07e3743a-4cb4-45a6-a9e0-758f86c1f17b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "027eaa4c-8377-4e64-81c5-5157d2fe3aff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e687b333-3cc4-4127-8da4-3612525942ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b48810-827a-4aa1-b0df-dbca9b6b7b15",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d10db017-612a-4e3e-a16b-1ee5f6c80f89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b374b02-155e-4d78-9b5d-c8516515e62e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62b696f9-371a-4e25-bc9b-5d3e9d7cd590",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "006e695c-91f5-477d-a694-c7a29cdbe52e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee10b53f-1e3b-4925-9f3f-c14951c58bb8",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26456855-c6fd-4b0f-a7fc-118d18378888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "338f3140-5a7b-4b4e-bcba-6112da15ed36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab335ac-7750-4a53-97c6-fa7f64a165c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93dcb204-5577-415e-9783-20a4b199821c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e8b31c-9b20-4528-a667-7d2c14fe387a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2fcaa9c-0b23-46f5-9d92-7bce1a49a187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05835ea5-064f-4441-9207-2db5dc3e81fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6294602-5baf-4a1f-becf-8258e1171539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54dbc3fc-bdfc-487d-8255-1eedd8263eaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b631003-5f9a-4b5d-afd1-c92082993ce5",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c69f1f5-e81e-439c-90d8-91f3a31e16e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e106f366-bdd4-40d8-9620-c66d55b20b8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a9bf3a-87f7-4dd5-a862-5db861114707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d52534b-a698-4654-895e-4e57874db823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80edfce4-8074-4457-b603-35eae44cc726",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3a8837-cf49-4894-a10c-f4ddff2240e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ed6ce5f-dbb7-48d6-bb91-c7611f91801a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d98a426-c55d-4891-889f-d7ee4f0822d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2b0159b-dfe2-4cbb-9f4a-d21747ed3e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68aeb34a-b104-415e-af5e-21aeb3e25b1a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de51241-6d71-468b-95d8-f9c29babea35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8428f3d0-c65a-4cb2-8f6d-aec54c5d6418"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff3af30f-172e-4f08-a687-85b69491d346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd04135a-4069-42b6-b099-b725ebc8736d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfea1f93-50a4-4ff4-bb75-8230cb98509d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e1b26c8-5103-48fd-89df-be92eecdbee2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aacb657f-e090-445b-ab3f-c55037514b18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1db5796-859b-449a-ae4c-223bc76dbaa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "844ed5fc-fb2e-4092-b47e-44435d47f7b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534fb2e4-cd83-4fd8-ac0e-eef7dc61457a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "208cd7f9-aa32-428c-8b05-38e616fc98b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "110edae3-a7fd-4397-95d5-27ecbea2391f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec68cc37-4541-41b1-a50a-a452a1afbe76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a13f05e-e675-4315-8f55-699158184bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10875089-a49a-44b2-8725-0d51cccced3d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56e5059-5680-4bc9-a758-74ef67f96f06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae50fa70-9b9f-4297-ac89-e79ca165e46e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae99f53-a872-45b0-b37a-09733abd2053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d7b2c50-7c4c-48fa-85de-055dd5efa9ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ceaab6-0d2a-4fcc-8b60-089af4acb29b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "547cafcb-a2fa-42cc-922f-e027fe1163a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40c70dec-9b5c-4359-ac56-3a49d3907acb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf8a7dd8-9fe4-40e9-9cde-bcf11b47fc00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c4b8e4e-ae55-4845-97df-47f84f7e7bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31c5ceae-1169-4643-a350-4398c938d28a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb18cadb-ff1e-40dc-9b52-84aba8f4f90d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8f9775a-c414-4397-9ba8-6df65d4dd123"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9422b1b8-4410-4807-bac4-2ab29ae29db8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09a37e2c-69f0-40dc-a23b-7df52427faf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c796de8f-f54b-4765-939b-ed7730afc5b1",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d18a0d-1167-452c-b60d-59f9b4cc29a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60bd4358-045a-45c4-8951-22b483e5bede"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eefe17e-f5ad-431b-b348-47263215fb1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa31e946-ca59-40d2-ba3b-eb97e7c994f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99918569-2da3-44f5-a9b1-257f84389af9",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c516d48-23a6-4a73-89c5-a488e8b7d45c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3e17d2c-0877-4beb-b801-fe934dfb147e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dfa6285-a194-4ba9-8c65-b37f725c7569",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f0bf232-fa65-446f-b546-6bb0ff569a87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9726c71c-0cbd-4203-ac95-b573db523fdb",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11965ba4-f7b7-4538-bf7e-b12923786afd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3258e07f-0c6e-4280-aeb1-67f4ecbae183"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe7ab08-5e39-4eb0-b29b-47ca71dd956c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "122ebcbd-e8f5-4fe3-b4a8-a40028a0ef62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54758cb7-458e-4f19-8f72-9dea74772e2f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5771913-31f6-40ac-9acd-0b0c3994b0f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c69bb5a-1700-4247-bcbc-6709a7213b90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "146d1b52-91b3-4c7f-8049-d25f2d02f70e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98533c25-2c4d-4b53-aed4-2d1d944ab0b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d846f59a-4fd8-462d-92ef-9be078d715b5",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dabf258-0647-4f11-b9c9-56e6dc778b42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ff334ea-e4b5-481f-9aaa-9427ad7489d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b7cc9e-02f7-4c56-ad65-da3c5be232dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db6f91a6-4d9f-4338-b193-0a3c2a8bd2a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1ba3b44-7a62-490f-bc19-088f4f259d44",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b9adad6-fb8a-4488-8245-fd473f602831",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1ed4790-12dc-48ca-8f21-8975f1cfba14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "775b5c83-fe91-42b3-9856-4288e09744e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4baa28c4-5f3d-46d0-9dd2-81fee5e1b7ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f374d22-3b6d-4614-9ac1-63df94fa19ed",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e8565fa-52d0-4d4b-be60-f6c689ad977f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcad96f6-71eb-49b7-8341-14009c706c56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "031617c1-4676-42d4-a3c7-05ecfaaf421a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e997e31-97b1-4727-9ede-02f43a574499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ba5b802-4097-4126-b1b3-e14b7e0a8ffa",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d66d9e4-91f4-493a-a7d7-db404fa99e3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "043c01a7-b322-4ba1-9e58-f8bfd6dc1744"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36aae751-2de5-4a6c-a229-1419303e4086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33639adf-3e23-4e0a-b40d-5f88b20fa89f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348f972f-2cad-487f-b2b2-e5ae9ab38e88",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8470aab-9f66-4adc-9019-b02248a338ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88466e83-45a2-4783-8f90-b5d52f381252"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b0dde57-2ca9-4c81-8fd5-3a28434a1e63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a475fc2-b4ac-4957-92fb-debfe9543d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97256db7-3124-4abe-91b5-e11a768d4c13",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f235d609-8cfd-4a0b-a6d4-adf53556704b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f7ec634-1623-40e8-8307-2fef029ed036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c961ad0e-ebcf-4071-b897-a3067b90362e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1971489-b432-4261-b3b1-ebe9f14125fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba822442-0adc-48c2-a576-bec3b690a7d5",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d6a383f-b58f-49d0-95ec-1de6c5984d69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f502574-36da-4be1-bbcd-d10febdee2bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a3cbc3-256e-4a7d-b208-04732b7cc5bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99e69c94-1962-4ce8-9305-27262a3caf21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "046f767e-ffa7-4be5-b8f2-07fef57bcf18",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f055ac93-0296-403c-97bb-7161701fd844",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "593e2d5a-e214-4c01-b2a4-d1033a33c1bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b923fc-caf7-479f-85f8-60e0ea82415a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a05da41c-211b-4aa2-b7f3-aa1d9743e557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab5d967b-1d15-4455-9586-deba12fa382d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de9b52c-eb80-486c-bc93-c3259e0bb875",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbcd1d5e-9a47-4076-8171-b88f73be79aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3335be2e-8acc-4a4f-bbfc-3ea38b41e428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e89c741b-54cc-4fbe-8511-3f36c74db013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a21fc46-50e2-44d2-902f-1476d12dead6",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91bcd062-b18d-4763-86bd-c516950b39ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cc5143d-f7f5-4042-aa56-ac00baa31878"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f77ffe9a-2ea8-42c8-a33c-e9a0d1e8a211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18e8ce4d-5e8a-4574-bcc4-fba49754aa66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fbd5453-601c-4e5f-be5b-1a5e2f549b6d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99837e20-de12-43c8-a228-56acd9b7a980",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "483bff3b-66af-4af5-85a7-201e61b7543b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92227e9f-1ebd-41ea-8da5-ad313d084437",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37cdd0a7-d284-4332-9dbd-9dbedbc7bd96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8129c5d-53c1-4685-a167-744732313801",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d230a4a-5db4-40ab-9bef-dff803797ed3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02c7684d-cfac-4e50-af79-02b999bf2aff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a500641b-58ca-4a31-8139-326e88795309",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b295b245-0b2a-458e-9926-7539dc82d282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d57c2c2-de73-4589-ba8b-bd774fccc4e4",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca1c9fa8-cea8-4c3d-a982-2bfd6a6ddd55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe18a5a7-a040-42d1-9823-385cedd7f08b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "450ca094-babf-451b-a718-ec9144abb8ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffc53d22-08fb-41f0-8dab-b4e4ee2ed598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9dff76-d120-4a01-a96b-f8c3f7bd3580",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2dc54c4-4975-4215-b618-78d1a57f1f06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6da5da2-0525-4245-a796-7d595ecffa23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "754c9bf1-23a8-4a2f-80ef-f617034a5b8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00811754-f670-4cf5-8c0b-4f7be81dcb2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c5fe79-eecf-4b72-9ada-4940b5bbb2c4",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0fad719-c472-4889-81a3-bcfdafb3f87b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de5f969b-2b49-4655-b6c8-a206c24804bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5680c2-bdde-4da6-92be-466c1e3a8edb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c5af266-a5db-4309-b5da-12613e09245a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7419ec71-4018-4621-99f2-70fa5c2e7558",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed8ee79-5678-4849-b015-0739867a0e57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cad6228f-24b4-467d-875a-a68c90fa9141"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e536b4c2-171a-4a87-8ec7-13f4d7625754",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2c8eb8b-a371-4b21-b309-d17dc0150f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66206b8b-c547-4a4f-b6ae-583f9fe3c6a7",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8bad8eb-1830-4c9f-a8ba-2dbec01a28e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14eb5e0f-6842-44f4-841f-0086a47f5eb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40432a78-5fcb-48e6-aa1e-076a6805a187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46551e53-c836-476f-8625-4d90e1649f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf5d022-aba3-4325-9b71-965522551bfc",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe9d209-f42f-4ee8-a564-4493df0ba1c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ecfeaf8-2333-4696-8da6-a66422bec9e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d8018f-08ad-45a0-867e-fce2f4c0dc3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a244558-a9fd-4ff3-8db8-c3104dddb29b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f2d942-9b2e-418a-8dc8-f16a4cb675c1",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b6f0c4-37f3-47de-ad29-fa876e8c2319",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c3831b9-051c-4d3d-891b-f7eec2572de6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2dabfcb-97ec-481f-8093-f9281077bccc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0a9b6a8-9040-46e8-8b2d-1cd237f75e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d5c3fbd-4ef8-475c-8504-58a8ffd7fee1",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba44e3ba-3561-436d-a69a-2926a53bb66d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b59a0b29-b15e-4972-a459-258fb0e76962"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4817809f-601d-4f5f-80fe-6f5a7b35cd5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c84fcb62-375d-4656-8330-436144244f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6210b19e-ab41-4424-98d9-d5e781d4d9fa",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cbecd04-b7e9-4938-ae6f-f9abc112602f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e004f862-238a-4a29-94b9-6b8e2b2ecf1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3aee490-05ce-4db8-a0f5-76a3e420d251",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3222982-2522-4961-a246-b9cfd5f3bb59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bbd3425-b4c4-4636-b5c3-e6ec02e206a3",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b725a345-1e7b-42d7-a3ff-d19d06ae557a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e013d23f-6120-4c94-8b50-e3aef4959acb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "377a9dd8-7e04-488d-bef7-3f4d84e20164",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e091c04-3ca6-4ec7-8cde-b3052a492f97"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34b80d30-c9cb-4751-b4fb-366309dd8343",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b3db302-e026-44b2-92a7-39b458abdbbc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "14fa1f12-808c-4a24-b928-f9a25c625e0e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "41391771-8703-492c-9610-46e24c6af83d"
                    }
                  }
                ]
              },
              {
                "id": "dca116bb-0b21-4a67-9cbf-2816ba93cb41",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6001dee2-d008-42bf-a8b3-e8771263824e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8deeb854-31d2-4610-acff-7175e87cae2f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0de06134-7cbc-44fa-9490-d05f3a729f0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e01407-e3a8-4265-a37e-591c6527e29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "147a827c-a713-4de7-9832-ce5be8c7b802"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "172e8d32-afc9-47d2-97ad-e88c1f35354d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eac42ae4-325f-47df-a937-9c6f3965a033"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "30b3417a-3b3d-493e-9df7-0f7caef9684d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a820b84-d351-4db1-8135-e205e8cf5c2a"
                    }
                  }
                ]
              },
              {
                "id": "df870cd6-ee2b-4706-99f4-ee1992d0d845",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "73de63c9-0cab-416c-b938-dabcb4926263",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf5f74b-bd8d-4c0c-9c9f-1bfafd4fd6b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "05622700-31df-4a03-b49e-291275eb7109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f326a5fb-8b12-4777-983d-33146cd0e6c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60d65a97-d38c-4867-808c-19c2f91fe620"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "56821244-cf59-481f-92d0-ec625ca2e31f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "70c9098a-3e17-4577-967e-1286f98d882d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "87a62ef2-5584-4b34-a8ae-0359da932b03",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0a7bbdb1-9a2c-49cc-b864-3a79a8603bac"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31653084-1ffc-49ad-ae92-961b8142af49",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e41ffe2-cbc9-46eb-b6b3-426f9068e58d"
                    }
                  }
                ]
              },
              {
                "id": "1a3f450d-f3ae-4778-8837-65a3ddeb6cb6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7358e07f-c8ee-49db-aacf-80f580f060da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1ee60380-ab49-4444-84c6-a2baa68eb5cc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fabcd0d2-4366-44bc-875a-0642b9ccbf7c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30a37c82-ed33-431c-97e9-718a88a7bab1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e6249c50-8150-4f7a-a005-ff7eb6730187",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6b504342-846a-4dd3-8877-a29b92f2d601"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ddae572-927d-4a31-ae1d-bc10568619a1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5076917f-2f2c-4a03-971a-04febc867d89"
            }
          }
        ]
      },
      {
        "id": "47c1dadf-1e96-4f90-9569-831ea1531674",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "38fe8cba-b5ed-4da8-b8ab-c87377fa5364",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eb43f0be-7892-4975-acfc-32762fbdcea4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4f04a86e-d197-4b78-a9ea-418dab25b3ee",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2945c2f-c167-48a0-a541-247248d52d89",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "fdfda87b-6047-4d13-9dcf-9136b443fd2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e7bae3-1b98-4c0d-86b5-7eec6a47db15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ce60226b-84f2-4daa-a45f-e897c443806f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "86284188-ac9d-4338-a04a-cf60cf2e3b2e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab86c0aa-6cbc-4d13-95bf-c4042e63cc90"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef9d7542-4cb0-4b5d-8c31-d96f1b9f6131",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84b6555b-972f-488b-b9d1-ad82a124abec"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b59cd74-9cdd-422d-b2bd-b35800799667",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a5d3a600-29ee-4f30-9547-552c32102b8f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0de64bee-def6-4514-a5dc-d5e0ed9ce371",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3cf6593f-b3e3-496a-ac5c-c4d5295df833"
            }
          }
        ]
      },
      {
        "id": "f42200f8-333c-427b-8ce1-64ed4d8ee9ec",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "87a7f602-13f6-43be-bbee-31fff703a00e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "98e7137a-e2ab-4cce-a3af-68882077fd80",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9c278b2b-9db6-40f3-a5e0-337f26550ba5",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cecb7e14-8d03-48f6-bfef-5637b4a98d01",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb6c8f67-3ba3-441f-933d-90b2a0bde15f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d27061-f6ef-40c0-b6f5-c25ed7d7f2a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e544657-50f3-4527-b85f-2c1ab65788f2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c89023d6-047c-4d97-8940-dbe4f192be47",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5cd954a-63e4-4ddc-af83-c178381b4a4f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d932faa-fe3e-4ee1-99c4-48d059355821",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d93c4655-d9ee-4b51-b68b-5f8f717cfc3b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "904dc306-0c89-447d-864e-9d25283bd4f9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "40476297-6aa5-4682-be51-5fcab346e182"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "573dbbed-24ae-419b-81d8-fb4e9c080f79",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "42a479d1-928c-4723-b7d4-b7c32dd7dabf"
            }
          }
        ]
      },
      {
        "id": "9eb42c57-0552-4152-9107-b51937a33f9e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "92cdba85-e983-4272-8d2c-4b63c9af62e0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0a0e30c0-da7d-4c47-8b3d-e3fdbe47a41f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "67f0ea29-e6ee-4d4c-b2b2-aa06beefbad2",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0996218-0ad0-4ae0-9076-777eaddd8011",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea96fcbc-ec15-4884-a1b9-c4f4a3c4155d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b20753e8-7ad3-4577-97a1-bc97ab7d74d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fc96b17c-f7b4-4da8-8489-9a0f39e26b34"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "32510089-0b0a-40fd-be37-6ee92cde5d8b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "458617a5-ad67-4fa2-9672-c5741916b0c5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6bd6ccfa-acd6-4685-9ab5-5f7479c94d4c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8635ebe-d77d-4dd8-aa2a-164814094e21"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bc5506eb-4d6d-4540-8da7-df4256e63f2a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8c267981-626c-41a1-bce3-72714325aa11"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "75893c07-9064-4efa-bfe9-6da84c77877e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "19329e2b-6729-4c16-ac8f-f877e42ac63d"
            }
          }
        ]
      },
      {
        "id": "0ad798fa-cb00-4dca-838f-4be127576f2c",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "90947c1a-1dbf-49c6-88a6-7b0f4c22bcd0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3bbd5f57-fd9d-4756-b84b-325f296add89",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "33168ba2-8cd5-4498-88e0-30794edf123e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "24606cf1-c11e-4342-b5ea-9900d1e8e7dc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5507be7d-afb8-4e81-8b24-c17048003324",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 179.31338028169012,
      "responseMin": 16,
      "responseMax": 6061,
      "responseSd": 567.5232858322319,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1696120713625,
      "completed": 1696120779159
    },
    "executions": [
      {
        "id": "2bf8a70b-1a96-4a57-b8ce-e99cb9689850",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ad95865b-d5d7-40f8-ae84-53baf450ed90",
          "httpRequestId": "9287dfbe-a004-4c3d-a51a-f8e04398d785"
        },
        "item": {
          "id": "2bf8a70b-1a96-4a57-b8ce-e99cb9689850",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ffad4590-a5c6-46e1-91e1-99792635c687",
          "status": "OK",
          "code": 200,
          "responseTime": 113,
          "responseSize": 0
        }
      },
      {
        "id": "b2150cca-0570-4898-a737-c005f575e280",
        "cursor": {
          "ref": "dc8374ce-6304-409a-bb57-928f2174145b",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e1ada781-16cc-43d3-a499-ceb8dfc07759"
        },
        "item": {
          "id": "b2150cca-0570-4898-a737-c005f575e280",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7c42c617-deab-4564-93cd-c3edf34ef787",
          "status": "OK",
          "code": 200,
          "responseTime": 16,
          "responseSize": 0
        }
      },
      {
        "id": "a81f4235-32ec-4ecb-9adf-a185ceb84587",
        "cursor": {
          "ref": "694e6c28-bb59-4155-9a72-f04de0c8265d",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c7e95a95-8dcc-40c1-8731-2c6f1b633d40"
        },
        "item": {
          "id": "a81f4235-32ec-4ecb-9adf-a185ceb84587",
          "name": "did_json"
        },
        "response": {
          "id": "731ed65f-571b-4c2e-aace-cded26b5a3bb",
          "status": "OK",
          "code": 200,
          "responseTime": 260,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "278cc185-70b4-4337-8fa0-9f04077ca6a8",
        "cursor": {
          "ref": "7fced94c-8549-4f83-a7d5-93172af9c5e2",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "aa529a67-b07b-43dc-9186-b4c0fd423b94"
        },
        "item": {
          "id": "278cc185-70b4-4337-8fa0-9f04077ca6a8",
          "name": "did:invalid"
        },
        "response": {
          "id": "c422000f-20f4-4410-8151-03c7a71d32ce",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1730,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "278cc185-70b4-4337-8fa0-9f04077ca6a8",
        "cursor": {
          "ref": "7fced94c-8549-4f83-a7d5-93172af9c5e2",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "aa529a67-b07b-43dc-9186-b4c0fd423b94"
        },
        "item": {
          "id": "278cc185-70b4-4337-8fa0-9f04077ca6a8",
          "name": "did:invalid"
        },
        "response": {
          "id": "c422000f-20f4-4410-8151-03c7a71d32ce",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1730,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "692a24b1-9ece-4e6a-b820-2eed4034e5e9",
        "cursor": {
          "ref": "5b22817b-cff1-4e3e-89a0-84fc19943ed1",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f1cc6af6-83a1-4a7a-b5e9-984c3d384c84"
        },
        "item": {
          "id": "692a24b1-9ece-4e6a-b820-2eed4034e5e9",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "80344575-7e93-4b70-ab04-f9850d511ab1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 79,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6221393-9989-40ce-8155-7fb5e100d083",
        "cursor": {
          "ref": "ae56acbb-dd2c-438c-8ba6-917100f0d536",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "dee4c9db-6f4b-4cea-ac34-dbbb9585be7d"
        },
        "item": {
          "id": "f6221393-9989-40ce-8155-7fb5e100d083",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "8d75485b-b433-4e0c-842d-3299d3d7ed4c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 573,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d53bb5d-adcb-42a4-bfd0-1df4bbccc0ca",
        "cursor": {
          "ref": "56c34ffa-627c-486e-baec-e5a16499371f",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "050746e7-360e-4c4e-818e-9f3a881adc1b"
        },
        "item": {
          "id": "0d53bb5d-adcb-42a4-bfd0-1df4bbccc0ca",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1c3fc9bb-f1c8-42d4-8a65-b8e56d62bda2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 359,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea0a45f-f3e7-4fd3-b1d4-ae5720372bbe",
        "cursor": {
          "ref": "f4f87a5d-c33f-4c43-8d9c-109d74847b79",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e1c6ec6e-799f-4268-9e60-722d95f4bc07"
        },
        "item": {
          "id": "bea0a45f-f3e7-4fd3-b1d4-ae5720372bbe",
          "name": "identifiers"
        },
        "response": {
          "id": "9d3adf2f-174e-4b50-8a31-104b7e9637a3",
          "status": "OK",
          "code": 200,
          "responseTime": 89,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e619c4a-63fa-476e-a37c-d2be69447005",
        "cursor": {
          "ref": "eaf9a3af-cc17-483d-8c09-7fffb8008401",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7f8974d0-338a-4d44-8449-b83db4ea128b"
        },
        "item": {
          "id": "7e619c4a-63fa-476e-a37c-d2be69447005",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "bcde54da-67b7-4236-ba02-ae1aa6d035bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f3b668-d1c7-42cb-9c8e-b150b156afc0",
        "cursor": {
          "ref": "5550edaa-1a9e-4261-8b42-f50bd708a567",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6bd10fc1-a116-4807-a09c-1a22e853995e"
        },
        "item": {
          "id": "b1f3b668-d1c7-42cb-9c8e-b150b156afc0",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "0ec2a547-ec3f-4e7f-a36c-b9582ba81a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 952,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b21cd35c-d0c1-414e-97ea-f459abd1bafa",
        "cursor": {
          "ref": "dfc49288-cabf-4ae3-a22b-7b50ee4cf338",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b6b27b8f-1176-4067-bf20-7334be29bda7"
        },
        "item": {
          "id": "b21cd35c-d0c1-414e-97ea-f459abd1bafa",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "336b0d12-ad74-4969-8260-506137833d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b65d1b4-639d-4388-bfb7-f4ef206b47a3",
        "cursor": {
          "ref": "21e37c7c-0078-4477-841e-8b3717a0f65f",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "65fa891a-1e39-47d6-919d-6cf3b809642b"
        },
        "item": {
          "id": "9b65d1b4-639d-4388-bfb7-f4ef206b47a3",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e66675a8-deac-42ca-b96c-e0b943b6dab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86091572-e732-46c0-bc1e-5737b79e703b",
        "cursor": {
          "ref": "7a8c2ddc-75ac-4e43-baa0-29cae5581b2f",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "716068a9-b642-42fa-b904-283223848ad1"
        },
        "item": {
          "id": "86091572-e732-46c0-bc1e-5737b79e703b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "85d2a916-f20b-4049-97dd-a7ea08468a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5039af-7bcf-43a1-bc01-f8fd8ae7e870",
        "cursor": {
          "ref": "1ef86d6d-3ddd-4608-8054-dd037509cfbf",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "cbb1583c-8d42-4478-b2b9-7437e523f4ee"
        },
        "item": {
          "id": "2a5039af-7bcf-43a1-bc01-f8fd8ae7e870",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "fc5cc442-2580-4ec2-991a-77c6f5d066c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf6553c-6aa5-41ef-9add-ceae3139f4e8",
        "cursor": {
          "ref": "a46b599e-ce01-43ce-a65a-eeb648e07ad7",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "741dbd16-c6b4-4ffc-a526-5479c7d75b3f"
        },
        "item": {
          "id": "fdf6553c-6aa5-41ef-9add-ceae3139f4e8",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f86c3195-b92a-4ddb-8a54-36af748e806c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad3c7b0-5ceb-48ec-97e0-093308eff542",
        "cursor": {
          "ref": "f56ef7ea-c211-4f19-a2e3-9e69885a3090",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "50cee085-5394-4620-ab83-9233a0b78715"
        },
        "item": {
          "id": "9ad3c7b0-5ceb-48ec-97e0-093308eff542",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "4fa7aae8-0f0a-409c-b123-e34c2c621f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec8bd72d-ef7c-4355-b1a5-c0768d74cda4",
        "cursor": {
          "ref": "627730a5-14c2-4d8d-b2f8-e414e22f74b2",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "cbfc82e2-7160-4f44-869d-0b5dc0eb219e"
        },
        "item": {
          "id": "ec8bd72d-ef7c-4355-b1a5-c0768d74cda4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "98f4d356-aaf7-4eaa-8ddf-09268c855270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "179a89f1-ad66-44ab-89aa-addee5246884",
        "cursor": {
          "ref": "7e98f395-770a-411d-9353-e3a1ec46adc0",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7d007500-22b3-45c6-b73d-1168af523f29"
        },
        "item": {
          "id": "179a89f1-ad66-44ab-89aa-addee5246884",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4aee2cbe-3d27-4961-968b-9ccbf751433d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475997b9-9b30-457c-b2bd-d838408c4aee",
        "cursor": {
          "ref": "a81a2a4a-91e6-426a-856a-10385b89cbb9",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "dbd9912e-21d1-47c9-9067-18c1f747c4b0"
        },
        "item": {
          "id": "475997b9-9b30-457c-b2bd-d838408c4aee",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d8a1e39a-4c56-4308-8ab9-2d108d7832db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc788f6-920d-4f6a-9efd-ef3c1dea90d5",
        "cursor": {
          "ref": "4ee7d9b6-12fc-4197-8975-e552fe798ba3",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8bf4a754-ebd1-4478-8a9b-bf4a72e2de80"
        },
        "item": {
          "id": "8dc788f6-920d-4f6a-9efd-ef3c1dea90d5",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2856e5a4-b8c7-40ea-bd85-5cd7fdc0b00f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac7699fa-2e97-4e42-a7e6-a3ba2443c97b",
        "cursor": {
          "ref": "568f0602-e5c0-4425-a7e1-657feb3a4f42",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1c4c9ce9-9e58-463c-b231-6fdb0bf4542a"
        },
        "item": {
          "id": "ac7699fa-2e97-4e42-a7e6-a3ba2443c97b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "bc5b083e-3ca2-4c82-a26a-525d8ca6af14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec7bd0a-e4bb-4ec5-886c-f1029cb47230",
        "cursor": {
          "ref": "2e3e03c7-3332-4659-ba4e-2abe96b1867d",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3786ba5a-0d11-4145-9d9e-bdd3e1ce31f1"
        },
        "item": {
          "id": "7ec7bd0a-e4bb-4ec5-886c-f1029cb47230",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "34995e62-1f9d-4040-9e95-9a2ba76f4a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "029c7556-1ca5-4a2a-85b5-e7642b213dea",
        "cursor": {
          "ref": "39215958-1ad8-43f0-9402-df0d2ba76275",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "34da8203-2003-4a08-beb3-accda96d5f2f"
        },
        "item": {
          "id": "029c7556-1ca5-4a2a-85b5-e7642b213dea",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "2f9b929e-5c12-4f74-92ce-0e57b136b69d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5bb1b61-28ea-4e65-91ec-7173a28004a7",
        "cursor": {
          "ref": "89540849-8404-4680-adfb-722356b15f9b",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b8c5fa6f-b601-45b7-889f-16c5939aab08"
        },
        "item": {
          "id": "f5bb1b61-28ea-4e65-91ec-7173a28004a7",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "be9b0b51-492f-48e8-8c53-35004a8ac6dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf4b1e2-ec88-4f14-ac86-d893c3a571a8",
        "cursor": {
          "ref": "ed2c6186-ac6b-446d-b62c-b24d6d89f80c",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "fdafe52c-52d8-4ccc-bb08-d6d8c64eac8e"
        },
        "item": {
          "id": "dcf4b1e2-ec88-4f14-ac86-d893c3a571a8",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "3e8ff621-bb9d-4298-8d5b-6db3fe8eaa4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "680d0072-460b-4fbb-96f4-0896c95aeaa1",
        "cursor": {
          "ref": "0a78ad3d-9a7d-4c6e-9c59-b10a39363eaa",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ee57e211-4082-4023-a08b-4debc6a1bc3d"
        },
        "item": {
          "id": "680d0072-460b-4fbb-96f4-0896c95aeaa1",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f5fca6fb-ecbd-468e-9f5c-c4354b03fdf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23fd2746-0414-41b7-bd91-d0bc6a6e9309",
        "cursor": {
          "ref": "ada81215-4edc-4d59-9a0b-b0a63f0a0c87",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e027d5ef-015a-4651-83c0-17dca4f8fda9"
        },
        "item": {
          "id": "23fd2746-0414-41b7-bd91-d0bc6a6e9309",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "faad5468-7fe9-480d-a252-735b6f7057d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58a4ec17-2b19-4548-bff9-2b4a0a94cb0d",
        "cursor": {
          "ref": "2b5e0226-6970-47dc-bf11-8c822b804e1a",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "eb101117-f1af-4c8a-a30f-25c12122432c"
        },
        "item": {
          "id": "58a4ec17-2b19-4548-bff9-2b4a0a94cb0d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "08df93dd-b76d-4d68-9828-dbdbd9e1210d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e03d56cf-d94c-4385-8aaa-dfb00cc73c70",
        "cursor": {
          "ref": "d95f0bf0-ed91-493b-b1cb-81901c4763f9",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "2486e46b-684d-4a6e-83af-f85baea782f8"
        },
        "item": {
          "id": "e03d56cf-d94c-4385-8aaa-dfb00cc73c70",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a0d35a46-b5c6-4e0d-8987-c92d6d075f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "232524bf-c1c8-4740-a41d-cdf786d7e3d3",
        "cursor": {
          "ref": "ba6d47bf-3255-4445-9de6-88edc83d8d06",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "b380067e-f351-4dac-87a1-7039291cfd5d"
        },
        "item": {
          "id": "232524bf-c1c8-4740-a41d-cdf786d7e3d3",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d9ae18e8-b254-4a61-a637-22ce56e9aab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa356b6-5f6e-429d-810c-8c7d21f34c66",
        "cursor": {
          "ref": "8ee4bf45-85a3-4792-82ec-b10fba12faff",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "78de24af-ed28-4193-8bcd-8bb4922522d9"
        },
        "item": {
          "id": "7fa356b6-5f6e-429d-810c-8c7d21f34c66",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "22434871-e744-4a19-8948-733617bc66c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e8f642-8556-4bb1-975e-94b03a7094d1",
        "cursor": {
          "ref": "a9147761-e421-493b-8fed-9c46fdea1434",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "fb88564b-44d1-422c-ac77-bcf9771c97c5"
        },
        "item": {
          "id": "c1e8f642-8556-4bb1-975e-94b03a7094d1",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6b614704-cb20-4058-9b81-8cc5edcdfebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6971e364-0a5e-4140-838e-9fe86a0ee841",
        "cursor": {
          "ref": "739a43f9-a759-45af-b86d-03a040858437",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "156f6322-f8c6-4405-9330-8c2bf95ca8ba"
        },
        "item": {
          "id": "6971e364-0a5e-4140-838e-9fe86a0ee841",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "06cf393e-b4dc-4078-b401-bc9966591193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57279088-ab9b-4e90-95af-37e0b96853ee",
        "cursor": {
          "ref": "af50dcdc-b497-4217-bf04-75acde30582a",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "9c4b9dcb-d799-4e5f-aeb4-eb920e6b4642"
        },
        "item": {
          "id": "57279088-ab9b-4e90-95af-37e0b96853ee",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "45288efa-4bad-4d93-be60-48753c0cbb18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46870ee8-7482-469e-9475-049d7399cf7d",
        "cursor": {
          "ref": "16475164-dead-411d-88a8-ddb57cf7c516",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "082476ce-dfdb-4608-a9e2-8b762dcaace5"
        },
        "item": {
          "id": "46870ee8-7482-469e-9475-049d7399cf7d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "cd2ffdf6-a537-4856-a4d5-a7cec6ec316b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87fb114-0b30-4e60-a7ec-dc4b71071ae7",
        "cursor": {
          "ref": "380ac570-b431-4f34-8134-43e1ab0a2f52",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1b70f7e0-f0be-4bf8-9688-f254940afc02"
        },
        "item": {
          "id": "f87fb114-0b30-4e60-a7ec-dc4b71071ae7",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a4e9bafa-8997-48ac-84a1-7bc0080a77ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1429a93a-a7bb-401a-b53d-2a8d7b13445d",
        "cursor": {
          "ref": "310e03f4-5915-408a-97cf-0d62d4bf87aa",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7d1827f5-0cb5-4c1e-a6d0-d48f0e05c4ec"
        },
        "item": {
          "id": "1429a93a-a7bb-401a-b53d-2a8d7b13445d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2c79609c-7728-4344-abfe-c965540ae8f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf1f0c2-e021-400d-9c0f-57520abc64a6",
        "cursor": {
          "ref": "61f4404f-45d5-45c9-a935-8c4ae03f8f4c",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "320f37a4-79b0-4609-bcc0-ad648c84394b"
        },
        "item": {
          "id": "3cf1f0c2-e021-400d-9c0f-57520abc64a6",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f4db4a5f-a28a-4234-93fe-48b0cd190060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d948dcc8-bf09-44e9-bc4c-d624aeafc529",
        "cursor": {
          "ref": "ed868928-5e06-4197-8641-d2689a797426",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d6891242-e849-42d7-a320-b8b039899d49"
        },
        "item": {
          "id": "d948dcc8-bf09-44e9-bc4c-d624aeafc529",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f3214e51-a168-43be-ae5c-4fa52987440a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91080cd-e44c-482c-bbc2-97799355d050",
        "cursor": {
          "ref": "c47aef90-5556-4f96-866d-fbc743d83382",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7b04f995-3a39-428f-874d-6f50843d17f7"
        },
        "item": {
          "id": "a91080cd-e44c-482c-bbc2-97799355d050",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "5a848d54-75c6-444b-a93a-a1cb8cacc83b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f28d77-7764-4e81-81fd-3650e2f327d3",
        "cursor": {
          "ref": "1dcdca70-0049-4ca1-8af1-1dba12ccb3df",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0ed61db8-6a30-4e66-a58e-c1c87477babd"
        },
        "item": {
          "id": "40f28d77-7764-4e81-81fd-3650e2f327d3",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "3afe53aa-e10a-4b60-b070-c1b97b497c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dfd75c6-8986-46e5-bc1f-63b5b51dfd7a",
        "cursor": {
          "ref": "928c0445-8acb-487e-95e9-a46f07bb8b7d",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6bb79de0-e7d5-41b1-9e08-95669c16c171"
        },
        "item": {
          "id": "2dfd75c6-8986-46e5-bc1f-63b5b51dfd7a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "50438604-c8e6-4112-b8f7-b9652597d253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "839ebc46-655b-4fe5-8d8f-b28c70c67d02",
        "cursor": {
          "ref": "effefa0b-759e-4be0-ad5c-90515558336f",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e01a343f-9533-4dcc-8f1d-b0f8dbfce61e"
        },
        "item": {
          "id": "839ebc46-655b-4fe5-8d8f-b28c70c67d02",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "735da2f5-3c3b-4a50-bcb1-aac5b70073db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "054eb2e0-4c37-4655-adb1-03485a0d425e",
        "cursor": {
          "ref": "88494f9e-f640-41a8-aabb-4449f14bd5b6",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "419a690a-1099-44c2-95ed-e36aa7f648da"
        },
        "item": {
          "id": "054eb2e0-4c37-4655-adb1-03485a0d425e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "13a51296-996d-450c-a6d6-fe69251e2598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "345bee5c-d5b1-48a5-9daa-49057653a71c",
        "cursor": {
          "ref": "4cd2fef0-809d-4620-998f-fcbe277b65d1",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "6f3803dc-eff8-4b33-b6e1-35d111556b1a"
        },
        "item": {
          "id": "345bee5c-d5b1-48a5-9daa-49057653a71c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "dec0cac2-b3c7-4abf-ae8f-9e2d5aa17eda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "defb7e48-4b72-463c-b088-432a361c9e9c",
        "cursor": {
          "ref": "befb6cd4-a36b-4b56-a49d-bb1156837bef",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8881d42f-589a-44ff-9e7a-e6b63b87d136"
        },
        "item": {
          "id": "defb7e48-4b72-463c-b088-432a361c9e9c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "20021460-585d-4dfa-a970-d669f3c6c0d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f191dfb3-9409-4cad-98c5-03d6b36a00b6",
        "cursor": {
          "ref": "7c5afc44-c1f0-4a2d-8113-5a79b1b5feb8",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "fb78969b-4711-44d3-9d96-cd0aae14da02"
        },
        "item": {
          "id": "f191dfb3-9409-4cad-98c5-03d6b36a00b6",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d8c297e9-ab41-4dca-bb64-f000ac358fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe69d37-916a-45b7-ad12-4e0c8518a44e",
        "cursor": {
          "ref": "7142621d-3f6b-4511-aa88-8a402e2e2411",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "7b38c81b-f628-4caa-b666-3f1fd211640d"
        },
        "item": {
          "id": "9fe69d37-916a-45b7-ad12-4e0c8518a44e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "818c5291-f965-40d1-ae61-c507128cad9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab00394-8709-4ac5-b7dc-744bd8dec760",
        "cursor": {
          "ref": "dead06f3-25b8-4acf-b00e-7b983d1fdd98",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ec98a570-f257-47e9-947d-099096bc1798"
        },
        "item": {
          "id": "3ab00394-8709-4ac5-b7dc-744bd8dec760",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "3ec60b8b-4c7e-4588-bc75-8cacc86807b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91114be3-c18d-42a4-9870-1141c002ea84",
        "cursor": {
          "ref": "56361165-99cf-4566-b3b4-76813127b704",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "07c4aef7-29da-4774-8f3c-d95cfdf0c38f"
        },
        "item": {
          "id": "91114be3-c18d-42a4-9870-1141c002ea84",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "5e97f4e3-4a91-4c66-9227-070f37b9e823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5199ce-cb52-4871-a96d-3ff5b5e7ca69",
        "cursor": {
          "ref": "16cd356e-da9a-4986-bc3e-08f36d814416",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "dde48964-45df-4d32-9c8f-ff9a65ac7e62"
        },
        "item": {
          "id": "3c5199ce-cb52-4871-a96d-3ff5b5e7ca69",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "8525a2dc-e2a3-4290-aea7-20b52daf5160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e403ef3-ac2d-45cf-87cf-2a9c87e1f19d",
        "cursor": {
          "ref": "705d1573-1795-439e-a118-920b91d8ea1c",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "47ed41cc-46d3-4e6b-b8e3-530bafcaf5f9"
        },
        "item": {
          "id": "5e403ef3-ac2d-45cf-87cf-2a9c87e1f19d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "bed6082b-691f-4a31-a2b0-9151f71fdfa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6994160f-42cf-4356-87e3-1249c3ac1771",
        "cursor": {
          "ref": "fd55aa2a-9c96-4442-8db6-a052e53e0744",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "9c9e451c-f6ab-41d8-a6f0-9ef4b1279849"
        },
        "item": {
          "id": "6994160f-42cf-4356-87e3-1249c3ac1771",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "167cb0bf-007c-41d6-a834-e3598d14b294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a3e7a9c-121f-4c97-a810-a00a6485660f",
        "cursor": {
          "ref": "9b8aecbb-5e50-49ac-9c7e-34feda33ec3c",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6fd63984-75e5-4ad3-9eb1-31c7d1629e7a"
        },
        "item": {
          "id": "9a3e7a9c-121f-4c97-a810-a00a6485660f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c8eef82d-e77c-40ef-8eb9-c15cee76e480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba4c967-8aaf-4789-863f-29535fe2943f",
        "cursor": {
          "ref": "9fa438cc-4f69-42fb-a830-f82c70d2b1ba",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "5b0d2465-e3ca-41ed-9daf-67b0cdf4a993"
        },
        "item": {
          "id": "7ba4c967-8aaf-4789-863f-29535fe2943f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ceeb7d4b-a760-4524-94b8-1348b30e4a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6980f90c-d7cc-414a-8255-4a6167d83421",
        "cursor": {
          "ref": "f2cf6cef-3d1a-49aa-95bd-0f3da17f2485",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "fae0fdd5-a6f2-4748-8f2f-c74bd145cdc4"
        },
        "item": {
          "id": "6980f90c-d7cc-414a-8255-4a6167d83421",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0149cd29-5a45-4a75-8c6c-2e013dd3d06b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ce9bae-bbcc-48bd-abbc-c3f01d2f4c08",
        "cursor": {
          "ref": "b6e32c73-41f6-40df-948e-e1c9d4fc1fa9",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a8d7d429-d504-4e9c-86bd-c36a005e3d51"
        },
        "item": {
          "id": "84ce9bae-bbcc-48bd-abbc-c3f01d2f4c08",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2496ee91-683d-4d62-be74-3a0881887649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d81492fb-f9e4-4f3d-b75e-ae46e2fcd6fa",
        "cursor": {
          "ref": "b564ac13-fb5e-4c20-9c66-f1d105804ce3",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2e16d8c8-741d-40da-a7b7-6671dea04010"
        },
        "item": {
          "id": "d81492fb-f9e4-4f3d-b75e-ae46e2fcd6fa",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "69220a28-9e2c-4c06-a6d6-431bdcc900ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f24f572-e3e5-43c3-8edb-3be4193f76eb",
        "cursor": {
          "ref": "4f996be3-e5b0-45b2-b905-becc44e61a47",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "cb6d019f-468e-4409-adae-b9f2e6059c6b"
        },
        "item": {
          "id": "5f24f572-e3e5-43c3-8edb-3be4193f76eb",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "23cb105d-ccbc-466b-9aec-807d0c1d9407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d86d146-ad2f-4d47-9462-86930d8f3c49",
        "cursor": {
          "ref": "d170cef4-a451-48ea-b12e-b79821270b1e",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c3d6e738-ba86-4803-8f17-8a01566043f7"
        },
        "item": {
          "id": "2d86d146-ad2f-4d47-9462-86930d8f3c49",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "da51d725-d788-4768-b13a-fc1597ae7e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00f243b9-b7cd-4724-adaf-f6f601eaaa7a",
        "cursor": {
          "ref": "c820b3e2-3b95-4d98-859e-b5c56320efda",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "546b9fd8-3f66-4c12-9aa9-6dba7bececde"
        },
        "item": {
          "id": "00f243b9-b7cd-4724-adaf-f6f601eaaa7a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "fcf591b8-83a4-444a-bf8a-c62dadb98fd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42bbcc3e-15e9-45e7-957f-1eca59ec00ed",
        "cursor": {
          "ref": "2ff3d87f-2c4b-4ff1-aebf-58c8f7171115",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8d9eac04-17e6-4e1d-b5b6-98327558ab5c"
        },
        "item": {
          "id": "42bbcc3e-15e9-45e7-957f-1eca59ec00ed",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "aaf79f7c-2906-4fe4-837c-ca352618bd00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ce800b-b108-4ca5-95f5-1eaf438d82c8",
        "cursor": {
          "ref": "fa788699-3a66-433e-a5ee-e3963ba9fc43",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6b7bce87-0a34-40e4-9431-6766e061bb91"
        },
        "item": {
          "id": "a7ce800b-b108-4ca5-95f5-1eaf438d82c8",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "88742dbb-efd9-4b6e-af1e-7dc47c288a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b3af962-df76-4d83-88f9-785ce269919e",
        "cursor": {
          "ref": "bddf2fd8-67a3-4e2a-9496-4e3bed7167fb",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8fc57031-605f-4393-bc29-6a4ca3fd0abe"
        },
        "item": {
          "id": "4b3af962-df76-4d83-88f9-785ce269919e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "92a35a1d-bd1f-4807-8cb1-994642eae769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d7c7ba-b0a5-4b15-ab86-8ff5811e177f",
        "cursor": {
          "ref": "82fb910a-1d7f-4e32-a900-45f71312fcf4",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "79b7ad01-20e2-4b71-9c30-78244a3e576b"
        },
        "item": {
          "id": "07d7c7ba-b0a5-4b15-ab86-8ff5811e177f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "be477fc6-6dbc-4431-899b-812f18738502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6af2fd5-77a0-4b94-b724-ce7a04b1233c",
        "cursor": {
          "ref": "4e1ff799-5288-4922-b8f1-a0129156bea7",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ff4b7ad3-2c4e-4dc3-a06f-1b867e6f4855"
        },
        "item": {
          "id": "e6af2fd5-77a0-4b94-b724-ce7a04b1233c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "a2c50661-a57b-4478-b7b7-805dbaafbdc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10897845-8609-4407-b8b8-4514f808fef2",
        "cursor": {
          "ref": "9568a8f5-45e0-4940-9865-906342c1ce34",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "fe3e6d49-fe00-4505-9f9e-96765ae58a25"
        },
        "item": {
          "id": "10897845-8609-4407-b8b8-4514f808fef2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "ccefffb5-a796-4ee3-890c-9833a7d78801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "000f4b2b-43c8-43c6-bde9-e4d618f46d9b",
        "cursor": {
          "ref": "7367bea7-645c-4bcf-bdd6-b9d870d33ee4",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "5815efa4-5ad8-4399-a673-db9eff050393"
        },
        "item": {
          "id": "000f4b2b-43c8-43c6-bde9-e4d618f46d9b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a4ee7ba5-1cf3-4e9a-9066-167a1375af1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc6bb7e0-70d7-4e1e-861a-0dd04c38e2d5",
        "cursor": {
          "ref": "bdaac554-dab3-40e8-a723-6877982cdf14",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d794c0eb-5a2d-4151-81b8-4f158d29c582"
        },
        "item": {
          "id": "bc6bb7e0-70d7-4e1e-861a-0dd04c38e2d5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "51105a98-e163-49ce-8f81-d6ea573c4bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8782e3a-717c-4190-807e-1a37b3b9dbe7",
        "cursor": {
          "ref": "9bf7bca8-4819-42a5-beaa-e3862a01ad8d",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "96271744-2a58-465d-81b9-5d375f559321"
        },
        "item": {
          "id": "f8782e3a-717c-4190-807e-1a37b3b9dbe7",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ab22f862-1940-407e-bbda-2984f427eb42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51133eba-3c73-4069-9eaf-afb0f1c6b116",
        "cursor": {
          "ref": "2abd29eb-b49d-461e-8b0f-540c1ae67177",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "8f9916fb-6f87-4b06-85f6-e112bfad71d3"
        },
        "item": {
          "id": "51133eba-3c73-4069-9eaf-afb0f1c6b116",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a5ddea27-f789-4eab-a969-6b5182ff1a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb308fe-ff06-4edb-8539-395fe14163d6",
        "cursor": {
          "ref": "a313d321-6b0d-457d-881b-b7afe94b76b0",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ea4cae8a-dca7-4d97-a9cc-6d645b687b0c"
        },
        "item": {
          "id": "1bb308fe-ff06-4edb-8539-395fe14163d6",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "44736446-2e19-4498-9339-429f4d7f0843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "684e7eba-c7ee-487a-98be-1e6fca28c6b7",
        "cursor": {
          "ref": "be60c799-525a-48a6-818a-c8102758ca22",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9191ed57-7428-4f4b-875d-6658f02d9b9d"
        },
        "item": {
          "id": "684e7eba-c7ee-487a-98be-1e6fca28c6b7",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0bbb559b-3b7d-4a58-b48e-3a08fafcb6d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d32a77ed-fe5d-4bdd-824b-6500be4eb633",
        "cursor": {
          "ref": "15302f00-b273-4019-9eda-0117fc52558b",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "9573105f-91d8-4aa5-9401-eef0e390308f"
        },
        "item": {
          "id": "d32a77ed-fe5d-4bdd-824b-6500be4eb633",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "201ce0b3-98f7-4495-b572-49ac3a3470df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf02615-a86a-49bc-b44c-f996b139abc5",
        "cursor": {
          "ref": "9de80e47-e324-4035-8373-8855b1c2e8dd",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "46ae3d04-1b00-4a26-8785-273a57b23eca"
        },
        "item": {
          "id": "bcf02615-a86a-49bc-b44c-f996b139abc5",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "6ee1a49d-97dc-442b-b78a-b9c89d7e4df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c405bb68-b4d4-48b7-840c-bb447f788393",
        "cursor": {
          "ref": "3793bfaf-b712-492f-8bb7-393cd3703239",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8b4b7a08-22c9-4a94-8307-4b53df2de287"
        },
        "item": {
          "id": "c405bb68-b4d4-48b7-840c-bb447f788393",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "7ed7fa7b-b18f-40b9-88c2-d7fd5db66467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611b1e0b-44d2-46d4-b6aa-e1d0b57256d0",
        "cursor": {
          "ref": "5b78131d-7228-4ebe-9aad-1ce5a189b582",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "762f3ab9-401a-4ecd-a433-c3043770bc3d"
        },
        "item": {
          "id": "611b1e0b-44d2-46d4-b6aa-e1d0b57256d0",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "281d0231-95e1-4820-beb2-3295773f8659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3240b00-4423-4978-8783-1111902b6b35",
        "cursor": {
          "ref": "c461788d-de1c-4ae0-9a6f-3e3eb1942167",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0fe41b3a-b057-42af-9479-eefcbd7352ac"
        },
        "item": {
          "id": "a3240b00-4423-4978-8783-1111902b6b35",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "73d7a5ed-54ac-43af-8a5c-e402bd0ac531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c8358e-48d2-412c-b4df-abbbb968bfb3",
        "cursor": {
          "ref": "26306054-4280-4fd5-8f38-966ef3176eaf",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "420f626d-3c55-4c20-8f4c-e2f3e20b0183"
        },
        "item": {
          "id": "99c8358e-48d2-412c-b4df-abbbb968bfb3",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d178d29f-1cdc-4112-828d-dffe5c7c3e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad51887-3817-487e-a1cb-2656afe29d35",
        "cursor": {
          "ref": "2b689ff3-6e9f-45a3-a111-53f8cf3e0eba",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f2ea519f-c651-4b2f-ac00-dd85e578e151"
        },
        "item": {
          "id": "cad51887-3817-487e-a1cb-2656afe29d35",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "eee8a9ac-c728-4467-8486-6c985830a4e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21e4389-2adc-43bc-baca-f377dd9207b3",
        "cursor": {
          "ref": "d359d7a9-fb1b-4094-81a1-1efcd9765db7",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f455467b-7af3-4f13-93b9-44d682886e0b"
        },
        "item": {
          "id": "c21e4389-2adc-43bc-baca-f377dd9207b3",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "4a032c14-a727-4be1-9e74-b652b738f85d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "117c09cf-4285-4a89-9efe-02e8ac95f863",
        "cursor": {
          "ref": "596b9868-e01d-480a-8d0b-9829a1f7a1a9",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "7fbfa32b-1dfb-4bb4-b780-fac257fd9325"
        },
        "item": {
          "id": "117c09cf-4285-4a89-9efe-02e8ac95f863",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "66691060-5f33-4816-b369-71cb7648b314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6223ce3-0ac4-4b5f-b4dc-962d2a9b7d41",
        "cursor": {
          "ref": "31a1836b-2f1d-4493-8b5f-5fae081eccec",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "65882af6-8c7a-4d7b-8eb3-c32b952a7462"
        },
        "item": {
          "id": "e6223ce3-0ac4-4b5f-b4dc-962d2a9b7d41",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6d3b85c3-449c-4567-90d6-77b7d87cb91c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "940d66ff-a80b-4464-a30b-971cfa4b5d7b",
        "cursor": {
          "ref": "32c19f3d-ea7c-45a6-b1ed-690c3805b641",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "23193004-3f48-4bab-9a89-135be72a12e9"
        },
        "item": {
          "id": "940d66ff-a80b-4464-a30b-971cfa4b5d7b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "200fde32-1b86-4f10-894a-8b7e992a10d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "603e421c-3d85-42a3-b445-73900ba50bf8",
        "cursor": {
          "ref": "189365af-a571-47b9-9498-a98279951935",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "bc379420-bd67-47c6-a840-d03e10ac3837"
        },
        "item": {
          "id": "603e421c-3d85-42a3-b445-73900ba50bf8",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "beb61c21-6449-4850-afb0-27da23101326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce2e60a-9b57-4c90-a8d7-5dd972210528",
        "cursor": {
          "ref": "94409ec8-05ab-40fb-a14b-7ed1dd6b944e",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "3c2d7427-70cc-4717-ba3e-252787acdba3"
        },
        "item": {
          "id": "7ce2e60a-9b57-4c90-a8d7-5dd972210528",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "210cadfb-b4d5-45d5-8990-0ef230705dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ae05ae-9406-4e83-84a9-7b4515b27ab9",
        "cursor": {
          "ref": "0e8b623f-fd78-4611-9329-3f6ff394fa6d",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0201c23a-298b-4c06-a78b-0b17a9f8c528"
        },
        "item": {
          "id": "32ae05ae-9406-4e83-84a9-7b4515b27ab9",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "37da5c7e-e2e3-43ef-952a-2e92a1b06497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e74d5c-8ab8-4940-a7e5-97238996358e",
        "cursor": {
          "ref": "17868f7e-0199-4773-8cc1-689223894554",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8fedf1c2-681c-493c-b522-a2b35fae86ab"
        },
        "item": {
          "id": "11e74d5c-8ab8-4940-a7e5-97238996358e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "57ad5750-8dd9-4209-a7b7-518a308284c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43798a4c-4b4c-4f76-a053-8ca828c61467",
        "cursor": {
          "ref": "98e767bd-0f2b-4cae-aecb-06cf99bf9afc",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b4640059-8f8d-4dea-9337-86d9a3b7f48b"
        },
        "item": {
          "id": "43798a4c-4b4c-4f76-a053-8ca828c61467",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "fdadf012-ecd7-4a96-93d5-d39b41fd7892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43473193-1585-41bd-9665-24451dc1bc41",
        "cursor": {
          "ref": "eb952ade-a13d-448d-908b-ec93370d1afa",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "cc99fafb-9758-4764-9348-5aaf8668afac"
        },
        "item": {
          "id": "43473193-1585-41bd-9665-24451dc1bc41",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c5c9f570-fa9c-4830-95d8-bea377b735bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4016fd4-38a6-4081-a653-55d39b5f7b4f",
        "cursor": {
          "ref": "0c6d3c68-4b19-43a4-898f-2c92ffebd60a",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "12589a4d-e2ac-4710-a8d9-ee99349dbc9f"
        },
        "item": {
          "id": "c4016fd4-38a6-4081-a653-55d39b5f7b4f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e60ad5ac-14c1-4e17-bab4-6104d53e22f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b061a371-36bf-45fe-b9c3-53400ab223d7",
        "cursor": {
          "ref": "a1e4036f-e264-494a-a304-ac10450d5714",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "bf8c409e-3320-44b5-a8ca-a97706023e17"
        },
        "item": {
          "id": "b061a371-36bf-45fe-b9c3-53400ab223d7",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "649a204a-cdef-4089-850e-598112af1d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b164a27f-fdc3-4310-bb44-07eb0cb81db1",
        "cursor": {
          "ref": "00aa00d9-8894-43b9-bb85-534d4736741f",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "238ee28c-372b-416d-b8e9-72d5fe358fde"
        },
        "item": {
          "id": "b164a27f-fdc3-4310-bb44-07eb0cb81db1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c318da3c-3e0b-4382-81c4-77642badb442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9badb9c-d002-4366-8522-dcd1ab08abea",
        "cursor": {
          "ref": "e56d489d-e224-4a5c-9829-7f9a56630b38",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9dd25e34-f02f-4ba5-9ea0-dc08a413e670"
        },
        "item": {
          "id": "f9badb9c-d002-4366-8522-dcd1ab08abea",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "778a7ed9-c19b-4f09-9171-129ed6996774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8f57ac8-82a7-4c3d-83c1-2985f62cdd2a",
        "cursor": {
          "ref": "dc53ef02-6db0-4016-96af-3ba1cbfb5511",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "20556266-d505-4a4b-8b36-e326be531fe5"
        },
        "item": {
          "id": "e8f57ac8-82a7-4c3d-83c1-2985f62cdd2a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "3738ba05-2d61-476b-a911-5ca7b671a771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ccb7efa-79b4-47c9-b515-d494804ab8d2",
        "cursor": {
          "ref": "3657e070-7da9-45e4-9f92-2fc89ff8f37e",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "df8e96ab-6aae-4eb3-92d3-5f59eb4c7b56"
        },
        "item": {
          "id": "0ccb7efa-79b4-47c9-b515-d494804ab8d2",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e1383032-b1e5-4c9b-a75b-6223bf6225ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ac778a-2c4b-49d6-b683-42bf2e63fb0d",
        "cursor": {
          "ref": "de105091-22fd-41ce-a989-90b497650dbe",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "287abd25-830e-4be8-989f-1d2894b32659"
        },
        "item": {
          "id": "37ac778a-2c4b-49d6-b683-42bf2e63fb0d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "c12513b1-425e-4fbf-923a-c4e162fe0d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc84329c-7730-439e-8708-6712b451a67e",
        "cursor": {
          "ref": "d78dd6cb-3c46-41ed-bfb6-ebfcdeed6adf",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e665214f-715c-4ef1-be92-284026396307"
        },
        "item": {
          "id": "fc84329c-7730-439e-8708-6712b451a67e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ffd87142-b008-4be8-8e91-c4aa381adc15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3e7bd3-26fb-46fc-a4b5-4e171fa816de",
        "cursor": {
          "ref": "0801baf0-6a23-475d-bd8a-cf27ce0384f2",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a2dedea7-075f-4eaf-86e8-e41056cee6c4"
        },
        "item": {
          "id": "ac3e7bd3-26fb-46fc-a4b5-4e171fa816de",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "cb5a8ab3-aaaf-400e-bb22-b4a88544c86c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7fdf5fe-a5b0-4edc-b17b-139b931eced0",
        "cursor": {
          "ref": "8f26e612-d3d4-4858-8ca7-ab6488a14ee3",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "3975b664-e41f-4d83-83b7-1164fb564938"
        },
        "item": {
          "id": "f7fdf5fe-a5b0-4edc-b17b-139b931eced0",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b7fc6e63-d4de-4bc0-b0a5-723f57221227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec674cc0-6e7d-4e2e-a3e8-f6ae58e02de7",
        "cursor": {
          "ref": "f7029797-d9f7-4acf-9122-2124746dec24",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "8b9f166c-d1a6-4084-ba4b-12c4cf5c7198"
        },
        "item": {
          "id": "ec674cc0-6e7d-4e2e-a3e8-f6ae58e02de7",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "ce1362f1-2911-4ce9-81f1-1780449686fe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4690570-f968-472a-a9c6-5ebc06b29e43",
        "cursor": {
          "ref": "007c43d2-64f7-450d-ba24-6675f8240697",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "0260494b-8933-48d7-baa2-f1308cc8d88f"
        },
        "item": {
          "id": "a4690570-f968-472a-a9c6-5ebc06b29e43",
          "name": "credentials_issue"
        },
        "response": {
          "id": "49f91fe2-4444-4e6f-b355-7fcba59669fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1712,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "00002eb9-9750-4ce2-85a7-50bfec2e152b",
        "cursor": {
          "ref": "f852ff84-2111-41f6-bb82-eaf71d3ad776",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "84a6ba66-0fa4-472e-a56b-e2196e172319"
        },
        "item": {
          "id": "00002eb9-9750-4ce2-85a7-50bfec2e152b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "7062f73d-60fa-4200-906d-ebbb7f34cbdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 205,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "e3f868a8-d2c8-4c6e-bb83-61a3d0af287c",
        "cursor": {
          "ref": "7136f0b3-ae08-4bc1-afed-acd482faae90",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "95fa3a35-31d1-4ae5-b4ff-89845b2b1765"
        },
        "item": {
          "id": "e3f868a8-d2c8-4c6e-bb83-61a3d0af287c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d95bfdde-e28f-4fff-8600-f7b701c52da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 998,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "c8b0b9b4-c977-4c2d-aefe-7399b00bac6b",
        "cursor": {
          "ref": "5926d778-8904-4026-8ff8-23bd1f5ae0b6",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9a3230e8-5c9e-4a15-805b-2213426fe304"
        },
        "item": {
          "id": "c8b0b9b4-c977-4c2d-aefe-7399b00bac6b",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0c6b912e-15c4-4831-9925-52a4b275e7b1",
          "status": "Created",
          "code": 201,
          "responseTime": 5348,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e85dde0-70ae-4774-9df7-2ebfcaf9205a",
        "cursor": {
          "ref": "af4c40dd-cf0b-459a-ab8e-a113b72d8660",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "19a2de76-4790-4813-ae5a-0063487b4cf0"
        },
        "item": {
          "id": "7e85dde0-70ae-4774-9df7-2ebfcaf9205a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "605ac423-551c-443c-9288-77bfe222c8a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "06b28ab0-3ac2-4bf4-8c8f-a47ded2b6cf3",
        "cursor": {
          "ref": "da2ea192-0890-43df-9544-0edf9ac8f769",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "96f67ced-4aa3-4f5b-b036-119913bef1e9"
        },
        "item": {
          "id": "06b28ab0-3ac2-4bf4-8c8f-a47ded2b6cf3",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "21caa613-9507-4f74-a564-f2e467983887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "685a8ed1-2677-49cf-a367-3399255c2222",
        "cursor": {
          "ref": "904170d3-fdc6-42f4-b6dc-d84ca782bb7e",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "17212d2c-c495-4f6c-a134-87f88c9bc16f"
        },
        "item": {
          "id": "685a8ed1-2677-49cf-a367-3399255c2222",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "996d3503-03b2-4481-b414-8d9a902094a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ca5db7-46d0-403b-b0c2-b134cac16e67",
        "cursor": {
          "ref": "754a7731-4057-4619-bbff-1e98048a6d7d",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "40c0c99f-2cf6-4a55-814e-d8603db107d0"
        },
        "item": {
          "id": "95ca5db7-46d0-403b-b0c2-b134cac16e67",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "28be8c6a-3db9-4e33-8271-65212caf3113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cad0e65-d327-4d8e-aa70-451595d978a6",
        "cursor": {
          "ref": "909aaf60-ac11-4ac9-a199-3d5bbe1bf5a5",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6fdfb279-fe8d-4300-9b49-22b709a4df61"
        },
        "item": {
          "id": "9cad0e65-d327-4d8e-aa70-451595d978a6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f2f94327-70a6-43b6-96c8-0d256c8070a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0384f2c6-08c5-4f04-9e28-8e5e357ee047",
        "cursor": {
          "ref": "251d698a-e14a-41f5-ac2d-86b2584bb247",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e716f0d7-c5cd-43e3-bae7-6d6af97caa14"
        },
        "item": {
          "id": "0384f2c6-08c5-4f04-9e28-8e5e357ee047",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0aee30a1-1641-4629-825b-21f32cef2f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59bc9b04-d280-46e3-8a1a-f7f8809f71e5",
        "cursor": {
          "ref": "10d4067d-cfdc-4e95-b9ae-87ade003d1d7",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "1135f9b7-ded6-4c00-ad70-d164c406a8ae"
        },
        "item": {
          "id": "59bc9b04-d280-46e3-8a1a-f7f8809f71e5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8c68900b-8829-461c-994f-5422b9bf1cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d0ac86-e6ba-4912-bb2b-d2bd819fc091",
        "cursor": {
          "ref": "5636527a-0b88-455a-a034-89946998a7ad",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e64574ca-b511-4e2b-a57a-b17b915e6bd0"
        },
        "item": {
          "id": "71d0ac86-e6ba-4912-bb2b-d2bd819fc091",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "90b950b8-e561-4bc1-9a34-c4fecbdfddb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1582ade-1aa2-4e4c-867e-1f06883d4a1a",
        "cursor": {
          "ref": "49fd9f32-7c08-4281-8d4c-c78bc17224e1",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0fc2fb1f-2af1-44c7-a71f-fbb60137a0e4"
        },
        "item": {
          "id": "b1582ade-1aa2-4e4c-867e-1f06883d4a1a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b9488e45-a42b-49e4-925b-def8596eb000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9621f6e-9604-4d60-85c9-39e491d3d42b",
        "cursor": {
          "ref": "c27377a2-6fe6-4f3d-ab5a-6c006749ddfe",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "80e6cf81-f923-4f26-92e6-640c6fe021a9"
        },
        "item": {
          "id": "f9621f6e-9604-4d60-85c9-39e491d3d42b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9ec7acd0-32cc-4582-8d05-36e0d45cba38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "970fd994-2bd1-404f-8597-02a5fa0ae1f9",
        "cursor": {
          "ref": "922bfa10-07f3-4ab4-9a85-afcf72f3e7ab",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "dad2c0c9-5e40-4086-9b59-b9b90eb6ad6f"
        },
        "item": {
          "id": "970fd994-2bd1-404f-8597-02a5fa0ae1f9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2111ad69-52bb-4995-b215-7364ccb4d9f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58bcac83-c372-420a-9638-13e701d0609d",
        "cursor": {
          "ref": "30b030a7-4c84-447b-8da4-b4b640bb2d3b",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "28617bf9-efdc-4011-859b-b7e9f295cb59"
        },
        "item": {
          "id": "58bcac83-c372-420a-9638-13e701d0609d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "20040622-8aaf-4904-9b9a-d81d7d25322d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ec2374-8810-4822-aa0a-fa421bd8d91c",
        "cursor": {
          "ref": "581c66a7-ef72-46bd-a05b-50f341d8d1b5",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a145d62e-fbc3-4ffc-bb97-6f164e84ad01"
        },
        "item": {
          "id": "a8ec2374-8810-4822-aa0a-fa421bd8d91c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "bbdd4de7-0b65-4012-addc-9ec7b2b28361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf5c191-0f8b-48bb-9679-4cc1410c34db",
        "cursor": {
          "ref": "31eb583a-c543-4ef0-84e6-b7e83883716e",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "75d69521-4424-4fd9-a249-2a8e873830b7"
        },
        "item": {
          "id": "2cf5c191-0f8b-48bb-9679-4cc1410c34db",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3eaf0fed-b8f2-498d-bdc2-6d21d00b1408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65618848-8d27-495a-ba39-74ab33ebe15d",
        "cursor": {
          "ref": "bab09fe4-96b5-43dd-ab18-bc8c8f9f45d3",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "449582ba-b7a9-4e77-a7fd-f1e5b559493f"
        },
        "item": {
          "id": "65618848-8d27-495a-ba39-74ab33ebe15d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9a3f7a60-78d7-481e-a93d-07940bab2e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1076,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "728884f3-4778-48bc-8b75-87bc01ae9220",
        "cursor": {
          "ref": "00886df4-4fb0-4bc4-b9e5-95a9bfb06d40",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d76280bb-aad9-46c1-8129-7fea9c14193b"
        },
        "item": {
          "id": "728884f3-4778-48bc-8b75-87bc01ae9220",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9bc43680-8530-4ff9-9d30-683f92e3a0a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 972,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e7860c-d07b-40f5-a3e0-c752a1560313",
        "cursor": {
          "ref": "732aec2b-0c56-4471-8a65-5d0a666e1969",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "8fd6eff1-a5d5-4030-96db-914c5f171662"
        },
        "item": {
          "id": "47e7860c-d07b-40f5-a3e0-c752a1560313",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b74ab97c-25e5-4ab7-929f-a81fe344edcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 986,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a57b061-cdc1-405b-bdfd-5f8629c64df1",
        "cursor": {
          "ref": "636d56a8-48c8-4778-b913-edebc457c903",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "eb8d59de-b9b2-48cd-a253-b10c8d141d01"
        },
        "item": {
          "id": "0a57b061-cdc1-405b-bdfd-5f8629c64df1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "62a8baab-8f7d-4982-a60a-97c429eed186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 988,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d29bb67e-6fcb-4493-b721-50cbd7d15145",
        "cursor": {
          "ref": "5f20ac60-1cbb-4eae-839c-a3aa01c42eeb",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b6184ee1-1595-443e-a086-160b9bba3f4a"
        },
        "item": {
          "id": "d29bb67e-6fcb-4493-b721-50cbd7d15145",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "01531b04-6062-4742-98f2-15fc4050dbe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eadac39-d3a7-4c0f-85cf-976495ea0154",
        "cursor": {
          "ref": "1f9b3a98-e329-4bd2-9928-22c13146348b",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "00909d1d-6892-4cde-91da-8efcc4c65785"
        },
        "item": {
          "id": "6eadac39-d3a7-4c0f-85cf-976495ea0154",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "209bbc90-122d-4f43-8b57-d9f313bde752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567e43bd-cba9-4727-99c0-610fae5e9094",
        "cursor": {
          "ref": "208d865b-a5a2-46ea-8c7a-eff635babb7e",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "2dc87399-2d3c-4691-a77a-e167f814c75d"
        },
        "item": {
          "id": "567e43bd-cba9-4727-99c0-610fae5e9094",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9a3145dd-5d93-433c-89ec-b32636a06a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 139,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "514ced2c-d97f-47da-a59a-45136c0a84e0",
        "cursor": {
          "ref": "b5a0a33b-9d5c-49aa-a229-488489821440",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "87dad60d-bb31-4452-bde5-a8a9e182ae47"
        },
        "item": {
          "id": "514ced2c-d97f-47da-a59a-45136c0a84e0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c738fff4-f431-45c0-afed-49db888eee3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ababb08-411f-48c6-861e-a46246bc6b67",
        "cursor": {
          "ref": "c9e5ef0b-0ecd-4a7d-a319-eef33a749dee",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "51727f93-d0c9-45de-85ed-c31e3a7219d0"
        },
        "item": {
          "id": "0ababb08-411f-48c6-861e-a46246bc6b67",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c0660e28-674c-4534-8ae8-5db3f707570e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa33fd9-54ff-45fa-ba10-0a27506afb85",
        "cursor": {
          "ref": "505d54a9-181b-4c8e-9d6b-6007b53d4b10",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "1170d5f7-59af-420e-bae4-5bc32d0ad124"
        },
        "item": {
          "id": "8fa33fd9-54ff-45fa-ba10-0a27506afb85",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "790e12bb-1fc8-4822-acf1-3bb27eea7d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c008db8-6e06-4f7d-a0ed-ac1f59e12145",
        "cursor": {
          "ref": "7449b84c-d1f1-47ab-b6e0-b65cea0fb3ea",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "0dbc9034-b90f-4884-b44a-3d3ca7c6e2f1"
        },
        "item": {
          "id": "5c008db8-6e06-4f7d-a0ed-ac1f59e12145",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d5f59875-bc14-4f56-84f7-42208e8ba1a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0476f5c1-3b1f-498d-9a7b-2020272a4c3e",
        "cursor": {
          "ref": "18972824-82e6-473f-83f7-7c131116d1ec",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "7438e05d-d440-432c-8d6a-b220a9ee3cb0"
        },
        "item": {
          "id": "0476f5c1-3b1f-498d-9a7b-2020272a4c3e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a06dd0ff-c8de-4e6c-9d14-4a889b7b6451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb2395c5-49e0-4c39-90be-f4aca30d7cd4",
        "cursor": {
          "ref": "812277bb-9f5b-4422-a83d-6ab09d3bcea0",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "887e8006-95c9-4716-9eb5-4f0cc2ccf1e6"
        },
        "item": {
          "id": "fb2395c5-49e0-4c39-90be-f4aca30d7cd4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5c8ddcbc-da1a-4911-a08d-7caf1708cd48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d0ce97f-96c7-4f93-ba08-8d5a520ab006",
        "cursor": {
          "ref": "d2a93f1c-62e5-42a5-9982-66daa02c6a36",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "13079425-3f35-4132-ad99-7d03e4d50d70"
        },
        "item": {
          "id": "7d0ce97f-96c7-4f93-ba08-8d5a520ab006",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "78c7022b-3734-4ff9-905b-e29de15b40f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef481e8-7a96-4313-a391-2671ccb1d1e0",
        "cursor": {
          "ref": "f6f6b333-ac25-4fcd-b80e-bb641f44d624",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "7e01f767-7757-458f-b9ee-547a95e30aea"
        },
        "item": {
          "id": "eef481e8-7a96-4313-a391-2671ccb1d1e0",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4098d98d-7b1c-4553-bd03-08432e98180b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07a4a51-fefb-4ace-bb8a-d7162dff38f7",
        "cursor": {
          "ref": "36467138-28d5-401b-adb1-6000a410adff",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "7ea344c0-3b1c-402d-9cd3-9c4a3cbeb1ab"
        },
        "item": {
          "id": "e07a4a51-fefb-4ace-bb8a-d7162dff38f7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c6ad0ef7-f430-40fd-a5b9-bd7a0eada496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c322b62a-0451-44fd-b337-88a685c2e574",
        "cursor": {
          "ref": "fe7c95ba-c9ad-4bf5-b023-076d320323fc",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d8e12db3-c2ca-4a6b-aaf0-7df3c06e79f7"
        },
        "item": {
          "id": "c322b62a-0451-44fd-b337-88a685c2e574",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4d886b34-1d3a-4b98-8b48-b8e4cf13a4bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da77ff71-a06b-45c1-b77f-3093a53fb1c0",
        "cursor": {
          "ref": "5c16ab6b-0724-4bb0-b00a-b2ff91c213cf",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "677bee25-10a1-4f67-ae79-54d5a469e66f"
        },
        "item": {
          "id": "da77ff71-a06b-45c1-b77f-3093a53fb1c0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5616ff12-b33c-4f7e-86bb-d2fae7c9dc88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d928fb1a-7f07-47e1-8b2c-02b60765d387",
        "cursor": {
          "ref": "4fface44-8dda-4443-95fb-17cd34067650",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "4b496ffd-f7e3-4700-86cd-1e3e15fea05f"
        },
        "item": {
          "id": "d928fb1a-7f07-47e1-8b2c-02b60765d387",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4de65151-49f8-4d25-9748-24e47d1903c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cddb1273-7931-452e-b2bd-3fc6930325fb",
        "cursor": {
          "ref": "85659c3e-d066-4358-a0c5-08aadf99d5d5",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "3dc0bdc6-a615-4e3b-82f8-e758ef973ffa"
        },
        "item": {
          "id": "cddb1273-7931-452e-b2bd-3fc6930325fb",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "9c6558e4-c1b4-4b6a-9d1d-50cd1a013ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "891a4cc9-3896-4772-91e7-cd5841a6433f",
        "cursor": {
          "ref": "5331b76e-f655-4ce5-8a80-12a1df48d2bb",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "211ab13e-13d3-4c32-8d47-bbc8dbc9a217"
        },
        "item": {
          "id": "891a4cc9-3896-4772-91e7-cd5841a6433f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8358310b-796c-4701-b8b9-64a933f68e69",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa14fc3-8ec2-4b3a-96ac-aace453f500c",
        "cursor": {
          "ref": "6265f6b3-c40c-4da7-9e50-5cd2538ece98",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "0256af4f-34f8-4362-b7c4-acbf85fa117e"
        },
        "item": {
          "id": "3aa14fc3-8ec2-4b3a-96ac-aace453f500c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a102b8fe-b9e9-4494-aea6-56bc776a87ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc0b275-772b-4c44-af76-c67e29f9cae5",
        "cursor": {
          "ref": "41730c95-1826-47fb-86c6-5a42736be455",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "eb92b10e-8a0b-4e4d-a6aa-b353e9a7e1b3"
        },
        "item": {
          "id": "2dc0b275-772b-4c44-af76-c67e29f9cae5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7390db00-d997-4d08-9b51-4e973bdfd4eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823243e4-687d-4fdf-857d-3d7af4652acf",
        "cursor": {
          "ref": "f551c3d0-2008-40b4-b9b2-6d096f695d1e",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "4002c823-f0b3-4ac2-9cdb-03953b0f4864"
        },
        "item": {
          "id": "823243e4-687d-4fdf-857d-3d7af4652acf",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4e92de97-a740-4f6f-b13f-41f1f6d4561a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e951cc2-abf4-4854-b1fb-cb30b592665d",
        "cursor": {
          "ref": "fce0c3cc-ee93-47b8-98c1-6b9aab19627d",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2ea9f0b3-1dd6-4c77-ad4a-baabc60a37e8"
        },
        "item": {
          "id": "4e951cc2-abf4-4854-b1fb-cb30b592665d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "cea65e5d-43b3-42d9-8d9e-b70ee9dd4e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbf81ff0-468c-4444-b3fa-37a96980bd1b",
        "cursor": {
          "ref": "cb53a83d-8d1f-4bb9-9c85-062b7a9e111a",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "25c6c691-8496-4195-8927-087230480224"
        },
        "item": {
          "id": "cbf81ff0-468c-4444-b3fa-37a96980bd1b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8f97083c-6ddb-4bfd-bb23-8987eb2de877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22e2c87b-b531-457e-bff4-3e92134b358d",
        "cursor": {
          "ref": "6142c8f3-872f-401c-b747-327d9e2260e4",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "bc1bb5a6-557e-4104-935d-168b65ce832a"
        },
        "item": {
          "id": "22e2c87b-b531-457e-bff4-3e92134b358d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "997a9699-2658-4a6d-a9e4-50cdaddfc4e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e64b3526-a00c-456d-80a2-b2dbcfbe1f11",
        "cursor": {
          "ref": "b1d0cd03-21e0-491a-8d1e-944d73be8b9b",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c75dbe4c-c66d-4e3a-b182-388c13523ad3"
        },
        "item": {
          "id": "e64b3526-a00c-456d-80a2-b2dbcfbe1f11",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5f56ce90-0a15-4b1a-8f87-20d96e916460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e70a3fc-cf89-466e-90c4-858f751fe63a",
        "cursor": {
          "ref": "ba173c90-1aa0-47f7-8188-a3c696e51e7e",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "425b528e-6a48-4b19-a6fc-f0a69d06a296"
        },
        "item": {
          "id": "9e70a3fc-cf89-466e-90c4-858f751fe63a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ea1692a4-862a-48b7-9c7c-81743b264360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e17680-8ff7-44e5-b8ea-e9ea239519ad",
        "cursor": {
          "ref": "17961ae8-d998-42f5-897d-4be31c3abf14",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4da8d2a1-fa4d-47f9-a2cc-a81b09c35b48"
        },
        "item": {
          "id": "b2e17680-8ff7-44e5-b8ea-e9ea239519ad",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6fc34471-37e2-45e3-b929-eb1194e0bc0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e4de3f-1749-45a6-b051-4b65faba90cb",
        "cursor": {
          "ref": "3b03448d-00e9-40c2-a22f-e9a674d6a12e",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a1d99c04-6861-43e8-a4f1-32c6cbd70c39"
        },
        "item": {
          "id": "20e4de3f-1749-45a6-b051-4b65faba90cb",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "52107d51-3ab4-45ab-948b-1799c02b9b46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "351ab04e-caa8-4497-86f6-9217d99abe40",
        "cursor": {
          "ref": "c0ca0dcf-582e-4c62-9093-77ee5a5d233f",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f17706e0-644d-4fa8-a089-6e651cc03b82"
        },
        "item": {
          "id": "351ab04e-caa8-4497-86f6-9217d99abe40",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "cd03be9b-3e4b-4272-a54e-7d000f423b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec2f6465-4a74-4070-b2d3-4dbb8496c690",
        "cursor": {
          "ref": "9840d073-cc8f-45ba-b29d-02268792960b",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b9c02d89-a7e6-44f8-9273-91f6dffdab5a"
        },
        "item": {
          "id": "ec2f6465-4a74-4070-b2d3-4dbb8496c690",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3d01fdd6-e076-4e4b-805d-6b2361053b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc22afbe-a24a-4ae7-b2a7-80e69c2a9069",
        "cursor": {
          "ref": "4ec23e89-453d-43cf-8614-6c58cc705ed2",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e3a012ee-a9f3-4b87-aa53-a2e497998fa8"
        },
        "item": {
          "id": "cc22afbe-a24a-4ae7-b2a7-80e69c2a9069",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "009ede49-e472-40fa-9ee1-b04c9f220ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7fbd53-cad2-4150-a06b-14efe58cad87",
        "cursor": {
          "ref": "8fb07b36-6caf-4cd6-9d6a-0d9e4e3d33ce",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c26190e6-f3e7-4734-aaac-e2acbc270e8e"
        },
        "item": {
          "id": "0e7fbd53-cad2-4150-a06b-14efe58cad87",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d0e64e64-5964-45a4-8e27-3f3c483bdc30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57acb6cc-d0d8-45bc-b170-92622cf65b95",
        "cursor": {
          "ref": "e6966bf5-79f7-4035-814c-ec1d743d5574",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9ec7abf4-ae13-4beb-94a1-db9f47d92cde"
        },
        "item": {
          "id": "57acb6cc-d0d8-45bc-b170-92622cf65b95",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5d014db0-78cd-4479-b535-028c443e3c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c7c9995-06a0-4814-9bb0-18a09730e241",
        "cursor": {
          "ref": "79460d21-4c1d-4418-8470-e3c864b97cfc",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f73daff1-90d1-4a84-8563-7dbd9f984aa3"
        },
        "item": {
          "id": "4c7c9995-06a0-4814-9bb0-18a09730e241",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "66324d2e-80b0-465a-a77e-d64bf2ea5718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7faf4b59-acea-48d8-b56a-27fc019a1ea4",
        "cursor": {
          "ref": "e50f8429-7e65-4143-8a09-e273be2e3f06",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f28cfadb-eed4-42e3-b0ea-67fa8a09e434"
        },
        "item": {
          "id": "7faf4b59-acea-48d8-b56a-27fc019a1ea4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c2ed323f-1ba6-4094-9f76-9f9620be4793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b1b968-b2d0-4716-af15-6497c45a2e60",
        "cursor": {
          "ref": "f2efc627-8a57-427a-a5d4-b175f41af3b4",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "460cde57-2aae-493e-a601-60bfb6208f61"
        },
        "item": {
          "id": "f9b1b968-b2d0-4716-af15-6497c45a2e60",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2338d436-d31f-4bee-8fd5-cadaf7c0add8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d2aeb24-d419-4191-acb0-5fa8933f40f7",
        "cursor": {
          "ref": "2ab2a570-9327-4fd6-8f87-f29de76f2cda",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "9fa60d75-acaa-41b3-b9cf-d903c8f7ab27"
        },
        "item": {
          "id": "9d2aeb24-d419-4191-acb0-5fa8933f40f7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "cf7bf901-9975-406d-a742-62c94b6a22cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a76faa4-a46d-4957-aa33-9a33ca80e837",
        "cursor": {
          "ref": "c1aa16ea-c0b7-4c70-8681-ac446161a7a3",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "cabc533a-f2ac-48f4-8f8e-a2886a635e92"
        },
        "item": {
          "id": "6a76faa4-a46d-4957-aa33-9a33ca80e837",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0f9c62da-50cc-4ba9-94c8-b6f74a95b974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "432b0f1d-aa82-4fe4-9246-41d8d9a07ed8",
        "cursor": {
          "ref": "6e2ffec4-81ea-401d-8414-0bae94c0495d",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "730fba2f-6634-4132-9f97-a5c3aa675eb8"
        },
        "item": {
          "id": "432b0f1d-aa82-4fe4-9246-41d8d9a07ed8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e7bdaa51-6539-4f79-880e-e14eb5f2221e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999a6f7f-73bc-4374-86cb-d9e7479d6a30",
        "cursor": {
          "ref": "b998f881-1b58-4c1b-a06a-62c6cec91e12",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "715ff51e-bdc7-4328-877c-fe094a75d96b"
        },
        "item": {
          "id": "999a6f7f-73bc-4374-86cb-d9e7479d6a30",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "15a62a1c-48fc-471f-9966-f68b5f853b51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d873590-557b-44fa-8bb1-87cc23324eee",
        "cursor": {
          "ref": "1d9f921e-e0a8-4bf3-9979-3c5c18c54a23",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7db3d5cb-0558-4dde-a630-3503704c41d9"
        },
        "item": {
          "id": "8d873590-557b-44fa-8bb1-87cc23324eee",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9a1af9b9-106c-4df9-a443-d04c5b282de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7178a6b0-a639-41c1-8b3b-b7c044a07863",
        "cursor": {
          "ref": "7cef2be6-1af1-45e1-9c62-96dda897c082",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "bf7b751b-a33c-49d5-907c-3471024f49fd"
        },
        "item": {
          "id": "7178a6b0-a639-41c1-8b3b-b7c044a07863",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9be126a0-a230-495b-94eb-a73c6365d1a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ce2f2e-1ace-4ab9-9e35-ebe8bc05c7dd",
        "cursor": {
          "ref": "319e2c8f-8e4e-48d4-b228-1ebf272639ed",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e987e889-fa57-4f12-8757-9116e68b765f"
        },
        "item": {
          "id": "27ce2f2e-1ace-4ab9-9e35-ebe8bc05c7dd",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b259fc67-c6cc-4df3-a37d-32bb435f28db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b83c3cc-e613-4571-bcb9-116bc7244dcb",
        "cursor": {
          "ref": "ed465d4c-ff36-4291-bad5-4ceca597698e",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "15831976-cb65-4fd0-ab1a-b24a772a422d"
        },
        "item": {
          "id": "5b83c3cc-e613-4571-bcb9-116bc7244dcb",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "cd50ae84-672c-46f1-99b2-3bb73811762f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1afc32a-a188-4d8b-9177-7ab49bb850d5",
        "cursor": {
          "ref": "b9071815-1a12-4ec1-af3e-1648f55cc915",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "8fed6144-ad2e-41cc-903d-c22feca603c3"
        },
        "item": {
          "id": "d1afc32a-a188-4d8b-9177-7ab49bb850d5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e5ed5eb9-9eec-432b-b0de-a3c98af47ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f029902-2768-48b3-9c2d-6a07240074d6",
        "cursor": {
          "ref": "4149d0c4-803f-4c5d-88e7-46aa53afc21e",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "6e6aa749-5710-4c98-82a3-ccabeca8cddb"
        },
        "item": {
          "id": "8f029902-2768-48b3-9c2d-6a07240074d6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "06e27ac0-e014-484d-8dea-6aa70ad005c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a7db44-07c2-4a61-8315-a33a47a13d10",
        "cursor": {
          "ref": "79c24cb3-38de-4ef2-984b-8b1fcdabfd2e",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "225b1b96-fef7-45dd-a5b9-05461f623169"
        },
        "item": {
          "id": "02a7db44-07c2-4a61-8315-a33a47a13d10",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "767b254d-21cf-4645-90e3-7b0374f130d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230fd67e-5f9c-40db-a16f-69747fbe10a8",
        "cursor": {
          "ref": "f4bbe19c-502c-4405-90ca-dfba495030d1",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "cd027d22-5c34-4387-8352-12f21f59ff96"
        },
        "item": {
          "id": "230fd67e-5f9c-40db-a16f-69747fbe10a8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f2f8a2a8-1355-49e6-ab65-c2351a94aaeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6330bdc-6d0e-4a57-b2d0-5530ef8b9319",
        "cursor": {
          "ref": "be6bffda-812d-4de2-8a7c-42ae053218ab",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "1c5d902e-c0fa-431f-8ae0-84a3d0753f18"
        },
        "item": {
          "id": "d6330bdc-6d0e-4a57-b2d0-5530ef8b9319",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c8e7ba5f-7b7d-42da-bc26-11f00520d3d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd35cc8-09b3-471b-a506-242e7c9ff796",
        "cursor": {
          "ref": "52ceb295-db61-4150-a742-e9e9bf88c732",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d096476d-9f4b-4f4e-a9a1-b27f03def6d5"
        },
        "item": {
          "id": "0cd35cc8-09b3-471b-a506-242e7c9ff796",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e8a4e56d-69d0-4a35-ac19-d787e443c7a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca225653-d658-4dd5-849e-19c68708f56b",
        "cursor": {
          "ref": "86e9c1e6-a583-41b6-a760-8f2d0fea13b5",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "be03ae22-c055-48be-a981-1b314503cc06"
        },
        "item": {
          "id": "ca225653-d658-4dd5-849e-19c68708f56b",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "687f5b9d-bbc3-493c-aa5f-acc143f1921b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9bd048f-e576-4a7d-8b57-54b4bd4ada52",
        "cursor": {
          "ref": "8dad190c-1c0d-444b-8813-9fe6579620c1",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ec80841a-b53f-48b6-a02b-b55ba5189cae"
        },
        "item": {
          "id": "c9bd048f-e576-4a7d-8b57-54b4bd4ada52",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "8d43cf53-fccf-47ab-8257-e388b942f92c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "517361b3-fea4-4121-b131-e63f276cb716",
        "cursor": {
          "ref": "e22a53d2-7754-4743-ae88-d0ca95682bbd",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "7812b54f-e6cd-4046-bb9a-fad96c02f778"
        },
        "item": {
          "id": "517361b3-fea4-4121-b131-e63f276cb716",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "6780ac90-5c1e-471d-9a0a-04ad7c7f9631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6535a88a-092a-4086-805e-04bad0d5a5d3",
        "cursor": {
          "ref": "af1e5ec9-6b27-44aa-b759-fe2470d14ff2",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "7c332894-6036-4679-ba57-e5ab2882f54a"
        },
        "item": {
          "id": "6535a88a-092a-4086-805e-04bad0d5a5d3",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f7344eb7-6f66-4b3c-81bd-6745d45e7757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3893279-778f-4776-bcc9-23a646ca7f4d",
        "cursor": {
          "ref": "56581f62-ecec-4843-ae90-9b8cafa34aa1",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a03cf0e5-b595-4957-a9d0-29869275cdbe"
        },
        "item": {
          "id": "f3893279-778f-4776-bcc9-23a646ca7f4d",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "cf6186de-eb3e-46ce-b6e9-d654b3c6e230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cc34e2e-0a49-4564-a1aa-7ef88dd3f246",
        "cursor": {
          "ref": "642cbebd-47ff-4752-bbd0-5c5528133d5c",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c9c23696-9c67-4e51-8318-522192235459"
        },
        "item": {
          "id": "3cc34e2e-0a49-4564-a1aa-7ef88dd3f246",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "09ad4de4-371e-48a7-96be-7a7eccde5b4a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5942ae6-3bbc-4470-84cd-ef957ff9fb04",
        "cursor": {
          "ref": "8f7bc6bb-f362-4f87-adbc-dfc0fe715ff2",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "6f542dda-4d62-4e0f-bad7-8124197f442a"
        },
        "item": {
          "id": "a5942ae6-3bbc-4470-84cd-ef957ff9fb04",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "1d52e533-82b5-495c-9118-960257d3aebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1015,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe44b770-e6d3-43c7-8532-e108aa4f3e70",
        "cursor": {
          "ref": "44494bda-469a-4ac7-a122-4d62d204acce",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "76713c41-4508-4575-9c3d-48905be21dbc"
        },
        "item": {
          "id": "fe44b770-e6d3-43c7-8532-e108aa4f3e70",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "7f8d33ec-c6ac-4183-89d1-566ea6c3a752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 967,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f2d7c0b-64a4-4c9a-a1ae-a9d56be6ad0c",
        "cursor": {
          "ref": "db17d0ae-a6e7-40a4-839c-e13967b33b9b",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3307cff4-ee3b-48ed-b9a4-9eec62e520f4"
        },
        "item": {
          "id": "5f2d7c0b-64a4-4c9a-a1ae-a9d56be6ad0c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b01cdfd2-f0b0-4bbd-b566-0fa33534db04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1011,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bab4980-df9b-4335-b098-21f620d3636e",
        "cursor": {
          "ref": "df043a0c-15ec-4093-839c-90cedded54a6",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "da1feefd-f405-4e93-b623-a57cd49a020e"
        },
        "item": {
          "id": "6bab4980-df9b-4335-b098-21f620d3636e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "1f207809-053f-4001-893e-e846f7d62141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 977,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc4034b4-c29d-4232-9bd5-79c3699abcc4",
        "cursor": {
          "ref": "f30b8fda-98ae-4b29-9633-9fa70cbe0052",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "71652a8d-96b6-41aa-957b-516e1d54ac8e"
        },
        "item": {
          "id": "fc4034b4-c29d-4232-9bd5-79c3699abcc4",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0853010b-779b-497f-9dcd-5b273b91bb80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd7cefb-0e85-4ee7-aa29-944a6e9a9a49",
        "cursor": {
          "ref": "5b538a65-f9cc-4b1a-a7cf-3d50a036cb09",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c2ab0551-ec50-4340-9325-350e3251a905"
        },
        "item": {
          "id": "edd7cefb-0e85-4ee7-aa29-944a6e9a9a49",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b79ebc09-fc2e-4a20-833a-0c1c7a05316b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cace0f1-2cc2-4e47-ae75-0ea9c841a3e6",
        "cursor": {
          "ref": "eff2667c-79f9-4c7f-b811-6e61fe5d3b3a",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d036be32-d68a-4c69-bb10-497f8df2314b"
        },
        "item": {
          "id": "7cace0f1-2cc2-4e47-ae75-0ea9c841a3e6",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0b93af49-1b6b-4077-bfb8-f7e90d0851b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf52f6f-71ae-4aea-b019-abf881e30d18",
        "cursor": {
          "ref": "5f90f2b0-cbff-4d0a-8b08-17caf5d6df49",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2f8ac450-9aa8-4fcb-977d-d71c818c146f"
        },
        "item": {
          "id": "ddf52f6f-71ae-4aea-b019-abf881e30d18",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "af1e6b86-91e8-4440-a5c7-32c832573e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1db2b0-1e42-4fd3-a007-2a644e710e01",
        "cursor": {
          "ref": "dc3b33db-bc9d-4e0c-9161-6634af6ba84e",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6ab830a7-0be0-46ae-bd9d-27475ba18566"
        },
        "item": {
          "id": "3d1db2b0-1e42-4fd3-a007-2a644e710e01",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1212f436-f1a7-420c-a1cd-c22fb3f0ba13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 159,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1fb126e-63b5-4046-a3b0-db718ec08bef",
        "cursor": {
          "ref": "241647ec-95de-4041-bec3-5fe49bacd906",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "cb291c32-5c44-4d61-9aa2-9ebe175e5814"
        },
        "item": {
          "id": "b1fb126e-63b5-4046-a3b0-db718ec08bef",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "2d90a6aa-cf23-4f8b-85df-1a3e2ecf4cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c779906b-a877-47e5-8c27-a2204b54497a",
        "cursor": {
          "ref": "a8f39aef-f4fd-47b3-89ef-f90e7d98e156",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e76576ab-a9c1-4706-8ca3-c0da6c3499bf"
        },
        "item": {
          "id": "c779906b-a877-47e5-8c27-a2204b54497a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8f96f283-28c0-40c4-a1b8-c0a89ce3c70a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7464ab70-e879-4c03-9f17-0a1a87888b8f",
        "cursor": {
          "ref": "503cbc55-2eba-46dc-88db-a2edfdc9a439",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "52f404cf-f704-4311-988d-a0349da84105"
        },
        "item": {
          "id": "7464ab70-e879-4c03-9f17-0a1a87888b8f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "cacc0de1-c62a-4e5f-8c47-6fd40677c4b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd974fc2-90ab-4bb0-b5fe-ed699ca7e56d",
        "cursor": {
          "ref": "e7ae13d3-bea1-4f5a-aa5d-6b0b8a6a2807",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "29ee5f60-57e8-41ed-90af-80dba0abd54d"
        },
        "item": {
          "id": "fd974fc2-90ab-4bb0-b5fe-ed699ca7e56d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "102ce1da-fe9f-4306-b8e7-aee6f1150233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2355f568-92a5-4f39-a02a-d113a2cbc977",
        "cursor": {
          "ref": "cc248aad-72a2-4041-ba2f-9d421570679f",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c88742fa-b91c-462c-888f-9d7ab18d1c5f"
        },
        "item": {
          "id": "2355f568-92a5-4f39-a02a-d113a2cbc977",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "604a76a1-186c-4fad-b1ee-d4c875ce29f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b750be7c-0688-45b7-ab77-cc6ac289f53f",
        "cursor": {
          "ref": "13dc5444-d578-477a-9608-0a3f831a409c",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "4824a716-44d8-4f50-90a9-68349d7b2b7c"
        },
        "item": {
          "id": "b750be7c-0688-45b7-ab77-cc6ac289f53f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "127e6c8b-c435-4025-a2e3-62751ccae297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e54281f-3795-4ce0-a55f-8df30d65ac20",
        "cursor": {
          "ref": "c07abc34-4916-43d6-a13b-fa61b25ba04c",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "6166f79a-3e32-4aa7-b303-a320097bc78d"
        },
        "item": {
          "id": "9e54281f-3795-4ce0-a55f-8df30d65ac20",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e0c00e68-4561-46bf-ae50-52765f810e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b115fcac-9736-409f-8650-0387796ee400",
        "cursor": {
          "ref": "2f4f08f1-0a32-406b-813b-8bdaa911ddbd",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "0507f417-8ea5-4ede-b826-89967ed1ca17"
        },
        "item": {
          "id": "b115fcac-9736-409f-8650-0387796ee400",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c1f54a61-e6f5-4cac-8fae-71267673460f",
          "status": "OK",
          "code": 200,
          "responseTime": 101,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "784bb8ee-700f-4878-80be-841843d34245",
        "cursor": {
          "ref": "4d3f0afa-5623-4ff8-a4e1-f70e3a3730f7",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "551dc851-2e19-4ab0-8b1e-b13934790fde"
        },
        "item": {
          "id": "784bb8ee-700f-4878-80be-841843d34245",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "53619c5a-a7c6-4468-8e3d-e36367955a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc7323d-ede3-423a-904a-7229929a2850",
        "cursor": {
          "ref": "66d3e963-3707-427d-acfe-2feef6673a99",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "5483f0c1-bf93-4723-b4cc-1e88646d5141"
        },
        "item": {
          "id": "bfc7323d-ede3-423a-904a-7229929a2850",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "99d927a2-c607-44cc-bf3c-c321dd5ecd53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06cf5fc5-4929-4b9e-a31e-2d8f9060c7aa",
        "cursor": {
          "ref": "76141a0b-b33f-4052-85f9-63f1ca1fd406",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "eb8ea34e-c825-4b15-b587-f16d99005526"
        },
        "item": {
          "id": "06cf5fc5-4929-4b9e-a31e-2d8f9060c7aa",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "cca9e223-e500-44e6-b902-01cc96ac867d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe1d06f-1898-4a5a-b601-3691cbf74f5a",
        "cursor": {
          "ref": "da05bb41-ce09-4a34-b921-b6e0047bafd9",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "7a3daea9-394a-4232-a16e-43bcdecbfb59"
        },
        "item": {
          "id": "cfe1d06f-1898-4a5a-b601-3691cbf74f5a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "844f059b-242b-45ee-aa2b-cf44323e0661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a034f9bb-3a33-4503-be72-aec72a25c402",
        "cursor": {
          "ref": "5be7762e-6238-43d3-819c-30bfa4f8e3b4",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "5993e431-1ffa-423e-a4d1-d15cb1d173c5"
        },
        "item": {
          "id": "a034f9bb-3a33-4503-be72-aec72a25c402",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b9019656-fc2c-4d51-a568-28efaa1cd33d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65760f1b-7398-4fca-ab46-685dc5da8108",
        "cursor": {
          "ref": "946e59ad-3148-4bf7-860b-b1bc92250ab9",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5c9a971f-c4e3-4136-8540-a6eb5b6344e4"
        },
        "item": {
          "id": "65760f1b-7398-4fca-ab46-685dc5da8108",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "df852874-fe56-41f6-b8ef-f45768e6b51f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "334f4377-1a19-478b-93fb-14ee2884e47d",
        "cursor": {
          "ref": "8f7021da-c86a-41d5-a32d-004d5cd856ab",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8dbf3d6c-5b4f-4204-ae6a-ed81b85ed387"
        },
        "item": {
          "id": "334f4377-1a19-478b-93fb-14ee2884e47d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c6a2a04c-7d90-469a-b89d-1cf73ddd9846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1798d9-2f44-4838-9af7-79ca7c2b7a09",
        "cursor": {
          "ref": "f7946874-5c69-43e8-aa3a-37cb207cdcf7",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "0734cd3f-d026-493a-95f2-da9778838d3c"
        },
        "item": {
          "id": "0e1798d9-2f44-4838-9af7-79ca7c2b7a09",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d247b791-e12a-4e6a-a6d4-0ae4088dbd0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9081ce2c-1d67-4a3a-8924-c74250063334",
        "cursor": {
          "ref": "78b0b351-24e0-42b6-8de8-a8aa851e3cc3",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e6323527-0f9a-4158-b070-3dffb4fc6329"
        },
        "item": {
          "id": "9081ce2c-1d67-4a3a-8924-c74250063334",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "14fde6da-9700-47a4-a06a-391b4350cf4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb37f43d-3d68-4cdf-8d96-b580d1c5b42c",
        "cursor": {
          "ref": "76870ac8-3ffd-4725-b5b3-9c2dd6196cfe",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d26bf519-e8ef-4115-96f0-71dd90bc868d"
        },
        "item": {
          "id": "fb37f43d-3d68-4cdf-8d96-b580d1c5b42c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "28916c26-b385-4067-b727-31aac7648993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d91a69a-89ce-49fe-a097-04698d8ad2a3",
        "cursor": {
          "ref": "cb0fa1c6-791f-40eb-b7a0-ce2c4be1b652",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "26b4bee4-ff6d-446b-bff6-e892d752ef93"
        },
        "item": {
          "id": "3d91a69a-89ce-49fe-a097-04698d8ad2a3",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "fc64f078-cd0a-46d0-9ca0-318014731c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "199dae5b-77c5-4ddf-a368-105759b97470",
        "cursor": {
          "ref": "705499f9-98b8-4f24-873e-24f9cd2656a2",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "74e9ac71-4ae8-490b-b270-267fe54906ab"
        },
        "item": {
          "id": "199dae5b-77c5-4ddf-a368-105759b97470",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "fff45431-172c-42e2-8367-7683fb719558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e113ede-f387-4648-8291-ab4512dccb8b",
        "cursor": {
          "ref": "aca84429-fe30-4779-b701-1adaac316383",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "5a90083d-9bbb-4558-95ac-191e9c53bbe9"
        },
        "item": {
          "id": "3e113ede-f387-4648-8291-ab4512dccb8b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a8dc6d00-851e-497d-b0ae-aa45320d6fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f059b00c-dc4e-4168-a1e8-c746cd6d2d0b",
        "cursor": {
          "ref": "c4250bf0-3371-4ad3-a7c6-c68f15079a46",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "eee9ea6a-3e75-4446-a83e-4a8299bbe93f"
        },
        "item": {
          "id": "f059b00c-dc4e-4168-a1e8-c746cd6d2d0b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "615af808-57bf-45f4-ae8b-614b31428439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c0eabc-37c7-4494-bb95-3e262f52ca54",
        "cursor": {
          "ref": "f202c3a9-084c-4d08-beaf-2fb521d77a0b",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "03f7ac67-cd6a-447f-aeb7-fc7736ba5437"
        },
        "item": {
          "id": "08c0eabc-37c7-4494-bb95-3e262f52ca54",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0c9856a8-e0c2-4d06-ae57-dcda719b8584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff3f11d-93fc-442b-a543-6fc2f93bb45d",
        "cursor": {
          "ref": "1fb351fa-1107-4aab-9e68-4c827d7ba301",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3ffcc39a-85a0-4633-9a65-f0e8e4afc6c4"
        },
        "item": {
          "id": "bff3f11d-93fc-442b-a543-6fc2f93bb45d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "1b27d5f7-ede5-48c1-85c9-00b889a612e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d176b655-299d-47fb-bfed-de8015a253c4",
        "cursor": {
          "ref": "89127c8a-9362-4598-b5d7-9bd9e0f5c1f7",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "455ac256-6d28-4954-bde6-df87e20fc0fa"
        },
        "item": {
          "id": "d176b655-299d-47fb-bfed-de8015a253c4",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a9b256ca-01f4-4f42-81df-92db37b29755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0189f23f-3db8-4102-a178-9d7debb10990",
        "cursor": {
          "ref": "bfdd33a7-f182-4149-89d8-15ba31896aed",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "73130499-0d11-4986-89fe-83851a18b2b4"
        },
        "item": {
          "id": "0189f23f-3db8-4102-a178-9d7debb10990",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "2f0b9763-96ce-4fdd-a6d4-6d960986d313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b0b71d1-3eda-4c20-98e0-1abac1e96fc1",
        "cursor": {
          "ref": "c1901f41-7bd9-4d12-a617-9bd1d156665c",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "05914b6e-e77a-489d-afe0-16a355ac291d"
        },
        "item": {
          "id": "6b0b71d1-3eda-4c20-98e0-1abac1e96fc1",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4e545e48-d6a2-4e4e-89f3-0c410674ba40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22e56ab0-836a-4ab6-8917-8fde168bf3fb",
        "cursor": {
          "ref": "9e362612-32a5-46ef-a21c-8d10e17588b2",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "7d1480f2-8c97-4b72-94ca-70766ff9e8c2"
        },
        "item": {
          "id": "22e56ab0-836a-4ab6-8917-8fde168bf3fb",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "304382f6-86a0-4d23-a1aa-03ce26537d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74878f19-532e-44c3-9ccd-4dcaa665631f",
        "cursor": {
          "ref": "b15275c5-09ca-4777-9b99-1eb473fb15bf",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f6ee2642-7746-432a-87a4-a3e7e3f3f388"
        },
        "item": {
          "id": "74878f19-532e-44c3-9ccd-4dcaa665631f",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "11cac67d-8b8f-4d03-a3f5-0d0b2b165ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a00ac2-e71a-4ab4-86eb-e8b637d01eec",
        "cursor": {
          "ref": "2377c4b6-819b-4f24-b86f-88d91df72d4b",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7ab5a4c7-702b-47de-a8ff-0e54b36afce5"
        },
        "item": {
          "id": "46a00ac2-e71a-4ab4-86eb-e8b637d01eec",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "853db376-df99-4a28-936b-c697a52a8cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c70368-4fff-4ee0-9254-9550a0670c41",
        "cursor": {
          "ref": "e933d91e-f6c2-4551-83bd-786e2aeeac8b",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "429b85ae-67bf-41fd-8262-ab7a868eba8a"
        },
        "item": {
          "id": "87c70368-4fff-4ee0-9254-9550a0670c41",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "25bee065-9154-41d6-a53c-db90ab4a3130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e51cd931-c792-4e00-a3fb-0275fd4b99f9",
        "cursor": {
          "ref": "70ea0443-2fa8-42d9-b1ad-d80d5935a7c9",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "19f20e7a-2413-449c-88a6-b8991f062796"
        },
        "item": {
          "id": "e51cd931-c792-4e00-a3fb-0275fd4b99f9",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c139e99d-49f0-4ae0-bebd-fbcfd7da7c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dcb7561-2538-4969-9c16-ffd4f7589b81",
        "cursor": {
          "ref": "250b03a3-4341-4fff-88e8-819ca5cd6f36",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "45fcf290-5c6c-4458-a6ed-7eefeca469c6"
        },
        "item": {
          "id": "0dcb7561-2538-4969-9c16-ffd4f7589b81",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "97b4abe3-57b2-40a3-b85d-c4606cecd50e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "742b5e68-d373-4b0e-b0b1-97eb86fb9ea6",
        "cursor": {
          "ref": "40e88cf9-2840-4d4a-8158-9ce30223e55b",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a351eb31-5d83-409f-8793-ae2618ec9834"
        },
        "item": {
          "id": "742b5e68-d373-4b0e-b0b1-97eb86fb9ea6",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1ccc5040-c5be-4d3b-a18e-f11b4468aab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230a538e-f075-4edb-9a66-26d89a141572",
        "cursor": {
          "ref": "168cc606-065e-47d1-abc5-afbfc51d580b",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "3994b966-b78d-4cea-bf34-903dc003e3f8"
        },
        "item": {
          "id": "230a538e-f075-4edb-9a66-26d89a141572",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "0bb0fb18-c748-4408-877e-8f2ff25e6caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea300f5-9cd4-453e-b9fc-738ce97e6dae",
        "cursor": {
          "ref": "533ad651-e78f-4924-b807-fc6d8397b600",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "f62c733a-b606-4c24-98c5-f2007dc66860"
        },
        "item": {
          "id": "9ea300f5-9cd4-453e-b9fc-738ce97e6dae",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b368ef8f-fe85-4e61-956b-90ffc4210704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cde08fd-f16f-421a-85d2-83ca7d033f79",
        "cursor": {
          "ref": "5481c56a-c55f-4bc2-9803-eea9afbcb869",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "15540d4f-f196-41a2-ba7f-11e76f24cc31"
        },
        "item": {
          "id": "8cde08fd-f16f-421a-85d2-83ca7d033f79",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ea54c020-6ff1-4d33-ac2c-e9227aa88a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec2050e-2d41-4b8d-b26a-631724acc54f",
        "cursor": {
          "ref": "afd96343-e860-4e3d-b0a5-c15f95b2bd5f",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "578dfa8d-76e0-4493-9fdb-cca63befd16e"
        },
        "item": {
          "id": "dec2050e-2d41-4b8d-b26a-631724acc54f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "eedb9306-3273-4300-9eba-139db90a219b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe16edc-c98f-4dd3-bb14-03c7e7fcc00e",
        "cursor": {
          "ref": "0d5934ee-6b95-4487-8619-95384a62dbf7",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f27b8d79-a156-4ff5-9236-9f41f6cc4568"
        },
        "item": {
          "id": "3fe16edc-c98f-4dd3-bb14-03c7e7fcc00e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "9297e23e-66be-46e4-85e8-3830fbd32fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b24550d-4964-46a3-a20e-66f54b6de37e",
        "cursor": {
          "ref": "922cb839-3c3e-4255-a1a0-96d5455270c8",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9efdbb9f-1b8c-49c4-9a90-a30f29320df1"
        },
        "item": {
          "id": "4b24550d-4964-46a3-a20e-66f54b6de37e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f8fd288c-0131-46c2-947f-9bf8ce052c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0142ccd-f28a-4484-a4bf-1add1166c549",
        "cursor": {
          "ref": "aa3e338f-fccb-47bb-8cbd-cc960e773783",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d5fa55d7-1601-43b6-bfd4-3c31726f05e4"
        },
        "item": {
          "id": "f0142ccd-f28a-4484-a4bf-1add1166c549",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "78221421-00b2-4d3f-9087-8396c96e8e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb35b02-145a-40b6-9fe6-0ab6f5672144",
        "cursor": {
          "ref": "02c5cb47-fe71-49f3-80cf-f9cf0d47ab80",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e7857ceb-fd63-4469-bc90-1f9c1fb3bc77"
        },
        "item": {
          "id": "efb35b02-145a-40b6-9fe6-0ab6f5672144",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "596d95fd-e59f-4164-aaac-edb769ea320b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c48a553-da2b-490e-8241-a38ec0804a84",
        "cursor": {
          "ref": "7a56b894-d91b-40d0-be06-0cbae3642d89",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8df6decd-df3a-41db-959f-94a56eccdf0d"
        },
        "item": {
          "id": "2c48a553-da2b-490e-8241-a38ec0804a84",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2d275cd6-e942-4279-b392-c8abf4bd48ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e64d89c-8969-4961-9fa5-745722c561ab",
        "cursor": {
          "ref": "1f5e090a-2173-43a5-8335-123e9fdc3c41",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "df80e734-e51b-400b-85f9-5cbf7383e824"
        },
        "item": {
          "id": "1e64d89c-8969-4961-9fa5-745722c561ab",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "dc221371-b8e5-42c2-b3f1-ed1014f1e429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912bfea6-99e0-4786-b314-be956f3f5b4c",
        "cursor": {
          "ref": "d36f68fa-e112-4419-a229-005a5569e201",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e65c53fd-67d9-458c-9f0e-1f7f444de199"
        },
        "item": {
          "id": "912bfea6-99e0-4786-b314-be956f3f5b4c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5035ce10-8e70-499c-9a74-17ac0a88ceb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034b2bba-80e3-4f1c-82ae-37b99c79a7ee",
        "cursor": {
          "ref": "1ed6ffdb-2343-4a63-9e10-841812d5b607",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "fe0d0775-4a8b-4c4d-8ef0-0ffc13b6ee51"
        },
        "item": {
          "id": "034b2bba-80e3-4f1c-82ae-37b99c79a7ee",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a7ffc5d6-c829-495e-b16b-f71b6e8cd11b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81bfdf96-d3f0-4402-a2bf-805fe0c4421c",
        "cursor": {
          "ref": "e94e5a36-4f01-455e-a793-9d236dceb498",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "8211d4b6-8463-421a-bc45-abfd657d3bcd"
        },
        "item": {
          "id": "81bfdf96-d3f0-4402-a2bf-805fe0c4421c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "8c583d81-67e3-44de-9675-068bd7297bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1015,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8ec16f-8df3-456e-b699-1b4a82fd15be",
        "cursor": {
          "ref": "670adc02-a68d-4345-8599-e708aa7a6008",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "fe6056a4-e533-45d3-8280-56accad24ac8"
        },
        "item": {
          "id": "ba8ec16f-8df3-456e-b699-1b4a82fd15be",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b4d8761f-dadc-4ec5-aeb2-1fb32fea4aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 963,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef6adf6-f33b-4039-be9b-e2881b945b9b",
        "cursor": {
          "ref": "b57b6b7b-7736-43c4-a408-4ad78f719149",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "eb75700b-ebcf-45c2-be6c-a3b0eb263503"
        },
        "item": {
          "id": "5ef6adf6-f33b-4039-be9b-e2881b945b9b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e585f9db-7cec-4bff-a4f6-788b230740b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 998,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631a8499-ec34-4a1f-b7d4-65cbf65d45ca",
        "cursor": {
          "ref": "6a07a9a7-6636-4929-9f67-238fbf6cd00a",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "49444a17-8a33-424b-95e3-9c8df6106bb3"
        },
        "item": {
          "id": "631a8499-ec34-4a1f-b7d4-65cbf65d45ca",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "9a15f8fd-35e3-400e-a1f1-7f4f1b8c0cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 797,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f866ff-813f-4cd6-8899-5e53ca8bc912",
        "cursor": {
          "ref": "9d3d5465-7fe8-439e-b68c-bfe9a1cf950a",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ffb3153a-1715-4370-95d0-8aa411c74a1d"
        },
        "item": {
          "id": "27f866ff-813f-4cd6-8899-5e53ca8bc912",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b06fa802-6665-4127-a1fc-6f125e2a4474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b48810-827a-4aa1-b0df-dbca9b6b7b15",
        "cursor": {
          "ref": "04698426-f11f-4ead-a362-fa51a2a7c964",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "df701b61-2829-4ec0-a76f-a66dc0154e68"
        },
        "item": {
          "id": "86b48810-827a-4aa1-b0df-dbca9b6b7b15",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a0ab2dba-5811-4c97-a57b-2424a88f6d2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 143,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee10b53f-1e3b-4925-9f3f-c14951c58bb8",
        "cursor": {
          "ref": "9d795ef6-3512-4786-a09a-e064b4b33ad3",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d4401b42-217f-4d9e-a2ac-87ab718814ad"
        },
        "item": {
          "id": "ee10b53f-1e3b-4925-9f3f-c14951c58bb8",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4652d1ef-211d-47d4-b249-5ea6dfd70bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e8b31c-9b20-4528-a667-7d2c14fe387a",
        "cursor": {
          "ref": "44dd6eee-fb4f-45a6-90c8-fb21b3aa5bbd",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a07f02e8-9cb7-4d13-a725-1ab703b78d25"
        },
        "item": {
          "id": "64e8b31c-9b20-4528-a667-7d2c14fe387a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c748d6e5-f120-4320-9c11-7be4de88e977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b631003-5f9a-4b5d-afd1-c92082993ce5",
        "cursor": {
          "ref": "2a33b334-62b4-48af-bdbc-dcaefb8c9ef4",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "31234410-26ca-48af-8316-a841298c3f6d"
        },
        "item": {
          "id": "0b631003-5f9a-4b5d-afd1-c92082993ce5",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2e1fa4ea-8acd-41b8-9473-154efc425246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80edfce4-8074-4457-b603-35eae44cc726",
        "cursor": {
          "ref": "cefe04ac-b0d9-4d8f-a957-4391f79391a7",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0a864a6b-2bc5-4d3e-bcd6-6b0a695ebcc9"
        },
        "item": {
          "id": "80edfce4-8074-4457-b603-35eae44cc726",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "aa269aba-e05f-4278-9953-21dbf34e56a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68aeb34a-b104-415e-af5e-21aeb3e25b1a",
        "cursor": {
          "ref": "63072124-0f3f-4c2b-b4b6-48f8ba9bf716",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c42d2a80-a118-412a-919c-e45fb7077051"
        },
        "item": {
          "id": "68aeb34a-b104-415e-af5e-21aeb3e25b1a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "de69d46d-4c5d-4335-bff5-e3c6fa8f4f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfea1f93-50a4-4ff4-bb75-8230cb98509d",
        "cursor": {
          "ref": "a290fe24-8944-473b-be47-61abbbf3891b",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0de9a972-7c35-4ed3-b760-19aa4e1ff484"
        },
        "item": {
          "id": "bfea1f93-50a4-4ff4-bb75-8230cb98509d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a4215434-2e8c-4c9a-993d-3c447c4bdcc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534fb2e4-cd83-4fd8-ac0e-eef7dc61457a",
        "cursor": {
          "ref": "480c0392-4282-47ec-a34b-98fcf0a83631",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5293e8fa-46ae-4feb-a925-64f97e148d5b"
        },
        "item": {
          "id": "534fb2e4-cd83-4fd8-ac0e-eef7dc61457a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "cb44b1ad-a653-41eb-8a9f-b70b6219225b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10875089-a49a-44b2-8725-0d51cccced3d",
        "cursor": {
          "ref": "29e5a9dd-03d4-4d4e-b345-44e8bd0c7580",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "95dad61b-b008-49e2-a439-389d624025cb"
        },
        "item": {
          "id": "10875089-a49a-44b2-8725-0d51cccced3d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "33614fef-8d2a-455d-9455-85f45a7863c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ceaab6-0d2a-4fcc-8b60-089af4acb29b",
        "cursor": {
          "ref": "b4ad5b3c-0b41-4e77-a93a-aead0acc5af0",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1b43342f-a606-4723-bdfb-e6d417827c6b"
        },
        "item": {
          "id": "78ceaab6-0d2a-4fcc-8b60-089af4acb29b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c82f5f47-fbc2-49a1-8cde-aa6fa37290f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c5ceae-1169-4643-a350-4398c938d28a",
        "cursor": {
          "ref": "0bd10df8-cf7f-405a-8a9d-5be008c0c8d9",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "6b43f0d2-b564-4bfc-ad83-0551799be577"
        },
        "item": {
          "id": "31c5ceae-1169-4643-a350-4398c938d28a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "73f5d4e5-0448-46c3-bc03-5ca23b1f6f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c796de8f-f54b-4765-939b-ed7730afc5b1",
        "cursor": {
          "ref": "ea5e14fe-bb2a-4b92-9617-83a24ffbf1b8",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3122eed8-1d30-48d2-b515-51da96783928"
        },
        "item": {
          "id": "c796de8f-f54b-4765-939b-ed7730afc5b1",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "6e113c78-ccf7-4b46-8e85-1792109eab34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99918569-2da3-44f5-a9b1-257f84389af9",
        "cursor": {
          "ref": "08189148-fb54-4ed7-99ed-c2ba66268329",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "72616a16-aaa7-44f3-8e67-253874367e06"
        },
        "item": {
          "id": "99918569-2da3-44f5-a9b1-257f84389af9",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c975efd9-76ff-490e-9cbd-2ffcdd1c5e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9726c71c-0cbd-4203-ac95-b573db523fdb",
        "cursor": {
          "ref": "2840cb0c-75f8-4a1e-b1fe-6789317f7b5c",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "5250c210-2e5d-490f-b0da-028cf6507cc4"
        },
        "item": {
          "id": "9726c71c-0cbd-4203-ac95-b573db523fdb",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f620e508-d6be-4ccb-b15e-54ae2bb3e1aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54758cb7-458e-4f19-8f72-9dea74772e2f",
        "cursor": {
          "ref": "dff885bf-0fe9-4797-bf3e-8d9e31af9a44",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "b1a26f93-68f9-4248-8674-b15846cbd382"
        },
        "item": {
          "id": "54758cb7-458e-4f19-8f72-9dea74772e2f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "914d11cb-5680-41e6-9687-3b7201c78324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d846f59a-4fd8-462d-92ef-9be078d715b5",
        "cursor": {
          "ref": "a5b9a0a5-97f6-4029-8d27-ffc0752b53ea",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "ee400761-ecde-4d7a-b7bc-9d159c95be9c"
        },
        "item": {
          "id": "d846f59a-4fd8-462d-92ef-9be078d715b5",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d8be5d85-8595-446f-9a38-ef1cc516c278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1ba3b44-7a62-490f-bc19-088f4f259d44",
        "cursor": {
          "ref": "3fe2e672-3286-42c6-bf36-ac544aab1d5a",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "321329db-0585-4776-bab4-91f0f366efc2"
        },
        "item": {
          "id": "c1ba3b44-7a62-490f-bc19-088f4f259d44",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "13fda7e5-4338-4686-85e0-ac2a04e6fede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f374d22-3b6d-4614-9ac1-63df94fa19ed",
        "cursor": {
          "ref": "8da7c48e-5edc-41d9-9901-a25cd16bac1c",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "2eaa318b-09fc-46b0-8094-6ddb5a395bf1"
        },
        "item": {
          "id": "5f374d22-3b6d-4614-9ac1-63df94fa19ed",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d1e04516-2bd8-4968-a42c-aa06e3769e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba5b802-4097-4126-b1b3-e14b7e0a8ffa",
        "cursor": {
          "ref": "381acb69-d7e8-48ec-88a0-c1d0feea014b",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "142e2285-206d-47de-beeb-f87bc6bfc7c4"
        },
        "item": {
          "id": "0ba5b802-4097-4126-b1b3-e14b7e0a8ffa",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9bca6872-ae17-473a-880b-987982056d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348f972f-2cad-487f-b2b2-e5ae9ab38e88",
        "cursor": {
          "ref": "f32389fb-f63a-4f53-9543-3964e0865e1e",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "b2d5050f-20e6-4dba-979e-7af43dfdc9da"
        },
        "item": {
          "id": "348f972f-2cad-487f-b2b2-e5ae9ab38e88",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c2b59f50-b271-46ce-9770-dbaa8002a6fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97256db7-3124-4abe-91b5-e11a768d4c13",
        "cursor": {
          "ref": "25e31df0-7cae-48b2-b1af-3e72d9732ffc",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "295e2b67-a55a-4396-ae37-d2399b54097e"
        },
        "item": {
          "id": "97256db7-3124-4abe-91b5-e11a768d4c13",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f4bc0345-84a6-4917-a1de-e72dadff1709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba822442-0adc-48c2-a576-bec3b690a7d5",
        "cursor": {
          "ref": "26a9a6a0-31c4-4bbd-acb4-f9357bed99ab",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "184a323f-0661-43f3-8d66-18449b95440e"
        },
        "item": {
          "id": "ba822442-0adc-48c2-a576-bec3b690a7d5",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "50beaf38-7346-41a1-a46a-a5677ea80f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "046f767e-ffa7-4be5-b8f2-07fef57bcf18",
        "cursor": {
          "ref": "712a02f6-36f7-4467-a47b-af39971256eb",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "28fcee9d-6f78-4608-b42d-ba787bf6114a"
        },
        "item": {
          "id": "046f767e-ffa7-4be5-b8f2-07fef57bcf18",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e995f16e-eed1-49a0-b72c-dfa631e9342f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5d967b-1d15-4455-9586-deba12fa382d",
        "cursor": {
          "ref": "a9dc55ca-fa89-49b1-b2d1-03e92755ef94",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "0ec6e496-fb8c-4b63-a629-0949355a9b6a"
        },
        "item": {
          "id": "ab5d967b-1d15-4455-9586-deba12fa382d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b30a4562-3ab1-453c-a2e0-cc31fe412f67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a21fc46-50e2-44d2-902f-1476d12dead6",
        "cursor": {
          "ref": "e5a5d148-8866-41e7-8a53-470d49013bd1",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "6a6e4d58-2d69-4d3e-8fe5-596240a10d03"
        },
        "item": {
          "id": "1a21fc46-50e2-44d2-902f-1476d12dead6",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4df2e55f-5c5e-4c13-8c8d-1ba26f59029e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fbd5453-601c-4e5f-be5b-1a5e2f549b6d",
        "cursor": {
          "ref": "ac78963b-1a89-46d5-93d7-859959aa0adb",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "822e197a-c44d-4d12-9e91-122f57e1282b"
        },
        "item": {
          "id": "9fbd5453-601c-4e5f-be5b-1a5e2f549b6d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7e025b41-40e9-433b-8dcb-7e595a811965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8129c5d-53c1-4685-a167-744732313801",
        "cursor": {
          "ref": "76f1f74c-620b-4b35-8931-144e485f1a61",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "e3768f3b-c725-4892-a443-a3542bac3167"
        },
        "item": {
          "id": "d8129c5d-53c1-4685-a167-744732313801",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "9885e188-b091-45be-804d-5c152f324914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d57c2c2-de73-4589-ba8b-bd774fccc4e4",
        "cursor": {
          "ref": "b0dbd2dc-ff85-4336-8174-1eda5053f921",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "c0d73095-c286-44a9-bf07-613b2c840f3d"
        },
        "item": {
          "id": "1d57c2c2-de73-4589-ba8b-bd774fccc4e4",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e4fc7c81-ccde-4f84-bbad-2324f251adde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9dff76-d120-4a01-a96b-f8c3f7bd3580",
        "cursor": {
          "ref": "3d66979a-a557-4d35-aa0e-083b74290595",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "97cc611b-4b86-42e1-b766-8210b0f16ab1"
        },
        "item": {
          "id": "6a9dff76-d120-4a01-a96b-f8c3f7bd3580",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b4545f0a-433a-46a4-b1cc-6f785666ee1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c5fe79-eecf-4b72-9ada-4940b5bbb2c4",
        "cursor": {
          "ref": "9b958ea8-d96b-4145-8108-8d75617c0e45",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "5beebc2d-3396-4a53-8b8d-bf2896bae0e3"
        },
        "item": {
          "id": "82c5fe79-eecf-4b72-9ada-4940b5bbb2c4",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "604e19d0-4abe-451c-9148-90268465df58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7419ec71-4018-4621-99f2-70fa5c2e7558",
        "cursor": {
          "ref": "5bdcf737-e121-4351-95a6-cbfd642930f0",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "2a55d3cf-fa94-42c1-953a-678efc813717"
        },
        "item": {
          "id": "7419ec71-4018-4621-99f2-70fa5c2e7558",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0f3a004b-5535-486d-a4eb-b72fc54e0507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66206b8b-c547-4a4f-b6ae-583f9fe3c6a7",
        "cursor": {
          "ref": "f89bfae0-eb80-493a-89c0-5e7542fe4681",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "9937b5a9-e20c-47cc-b17b-c4753ab6a83d"
        },
        "item": {
          "id": "66206b8b-c547-4a4f-b6ae-583f9fe3c6a7",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d7c56315-f4b7-4dba-b185-36276deab6af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf5d022-aba3-4325-9b71-965522551bfc",
        "cursor": {
          "ref": "b6f8fd1a-ef57-4057-aefb-713e0de4c7ad",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "5e2918a5-250b-41d2-b28b-cc21ea50ec56"
        },
        "item": {
          "id": "1bf5d022-aba3-4325-9b71-965522551bfc",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "dfed22bc-7806-46bb-8abe-bdc620e138de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f2d942-9b2e-418a-8dc8-f16a4cb675c1",
        "cursor": {
          "ref": "1c20f3bc-5d33-461f-873c-1e2546bf57ae",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "9a5ea508-b1a8-4891-affc-05e6dee80235"
        },
        "item": {
          "id": "04f2d942-9b2e-418a-8dc8-f16a4cb675c1",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "28cd9c73-8bea-4eb4-9427-f37b4b292b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d5c3fbd-4ef8-475c-8504-58a8ffd7fee1",
        "cursor": {
          "ref": "f27f3ce4-b4c6-40d7-9ab0-e508bd99237b",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "b27f30f3-343f-49b1-b725-759d7d69dad4"
        },
        "item": {
          "id": "8d5c3fbd-4ef8-475c-8504-58a8ffd7fee1",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "1db8cf17-ae62-445c-a0df-81c4e2f3ca69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6210b19e-ab41-4424-98d9-d5e781d4d9fa",
        "cursor": {
          "ref": "5a66ee44-adb5-48b1-93d6-df1ae37477bd",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "5ecbcf3f-b551-489a-afbe-22f46f49f400"
        },
        "item": {
          "id": "6210b19e-ab41-4424-98d9-d5e781d4d9fa",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "2cdbc2b0-5606-4d48-848a-5e0ccf5d1a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 180,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bbd3425-b4c4-4636-b5c3-e6ec02e206a3",
        "cursor": {
          "ref": "6055a076-674d-404f-82cf-05fde495a2e5",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "846f60a0-5cdf-47d0-8233-45fe44afa698"
        },
        "item": {
          "id": "7bbd3425-b4c4-4636-b5c3-e6ec02e206a3",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6c48302a-b612-4577-92e5-1904b8ed88a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6001dee2-d008-42bf-a8b3-e8771263824e",
        "cursor": {
          "ref": "9b514fac-9faa-47cd-846c-0569c83e2ca7",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "4549fb90-e2d2-4a62-8dc7-66a8b6cbc5d3"
        },
        "item": {
          "id": "6001dee2-d008-42bf-a8b3-e8771263824e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "db0ca8a5-ba54-48e0-9bed-0f0b92081f15",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73de63c9-0cab-416c-b938-dabcb4926263",
        "cursor": {
          "ref": "d1fb4464-3c5d-40d7-bf4b-c3772f641070",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "d2b0405f-1eae-42e6-91fe-01cdcffa800b"
        },
        "item": {
          "id": "73de63c9-0cab-416c-b938-dabcb4926263",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "cd4d8d56-62cb-4dcb-ad2d-ccc4f3923792",
          "status": "OK",
          "code": 200,
          "responseTime": 76,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c9098a-3e17-4577-967e-1286f98d882d",
        "cursor": {
          "ref": "de4d169e-a1b9-416a-9a32-f268321af194",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "382ce8d1-3693-46a5-abf8-7fe4f64572b0"
        },
        "item": {
          "id": "70c9098a-3e17-4577-967e-1286f98d882d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "42f2cc4a-76df-4272-8e6f-a3ab07dd2714",
          "status": "OK",
          "code": 200,
          "responseTime": 3554,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a3f450d-f3ae-4778-8837-65a3ddeb6cb6",
        "cursor": {
          "ref": "3489963c-6061-4880-a636-7dce84e879f6",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "d078cdb1-d12e-4e24-844c-970355956f02"
        },
        "item": {
          "id": "1a3f450d-f3ae-4778-8837-65a3ddeb6cb6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "4c85f6f3-256e-42b8-be31-fc9cf6a93d36",
          "status": "OK",
          "code": 200,
          "responseTime": 6061,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f04a86e-d197-4b78-a9ea-418dab25b3ee",
        "cursor": {
          "ref": "20e713cc-7160-445f-8f9d-2978cd80e256",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "5fee846b-da16-4883-bca3-1b3db2ccabf9"
        },
        "item": {
          "id": "4f04a86e-d197-4b78-a9ea-418dab25b3ee",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5d35a8dd-5e8b-4f58-a8e8-75fbe245bead",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f04a86e-d197-4b78-a9ea-418dab25b3ee",
        "cursor": {
          "ref": "20e713cc-7160-445f-8f9d-2978cd80e256",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "5fee846b-da16-4883-bca3-1b3db2ccabf9"
        },
        "item": {
          "id": "4f04a86e-d197-4b78-a9ea-418dab25b3ee",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5d35a8dd-5e8b-4f58-a8e8-75fbe245bead",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c278b2b-9db6-40f3-a5e0-337f26550ba5",
        "cursor": {
          "ref": "5bf5b36e-7a11-4fb9-b01b-d30cd4de9fdf",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "c77d0f32-510a-4579-9ac8-a3d5019f90a4"
        },
        "item": {
          "id": "9c278b2b-9db6-40f3-a5e0-337f26550ba5",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "4c4312d0-37ea-4103-8ef8-47fcd0cc4b58",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f0ea29-e6ee-4d4c-b2b2-aa06beefbad2",
        "cursor": {
          "ref": "8910bf49-28c4-441b-a28d-5f053b1e33a1",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "30ff626b-6c04-4e24-8b0c-382fc3c2081a"
        },
        "item": {
          "id": "67f0ea29-e6ee-4d4c-b2b2-aa06beefbad2",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "837b2878-a06a-4c9f-89de-b0ddf65a9f31",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}