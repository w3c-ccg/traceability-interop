{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c04a9885-cf5e-4eba-91a1-6d41f1e842b2",
        "name": "Clear Cache",
        "item": [
          {
            "id": "52576806-4abe-46e3-98ac-abb1423fccc7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4596b031-04a3-4fd7-86a0-8f605b8dc011",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6f651599-eee6-4291-8ab3-0fd5e6f98a15"
                }
              }
            ]
          },
          {
            "id": "43fffd06-dd6b-4432-a327-484633bc9399",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a761cba6-d5e5-449b-a5b8-0940602ea6d8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5c645833-e812-4cd0-84ca-8a0c3b0a9817"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2cc87890-76bb-423d-b120-5293c47020ad",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "606aa31c-87ce-4063-a98c-4b7d924c5986",
            "name": "Positive Testing",
            "item": [
              {
                "id": "06fcfea3-b000-4aac-bc30-4d08d5211dbf",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0cf8b00c-d5a1-44d4-aff0-57a54a6500e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8337f4ce-d7c6-418f-ba18-ae06f3eacff6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4cafed7e-d273-4bfd-aa7e-09d59e96b2c2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e860fde7-ca5e-4119-bab6-f51e6ab235e3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2990ac70-bf9a-4675-af5c-61fe710774d0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4082fd59-225b-44fb-af1e-de0c4fb1bc49"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e5fce390-5a4e-45d7-945b-0ad1d65bd4f9",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f121957e-42eb-4dda-ac4e-0274f359ef6a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ca3cc937-5da4-459f-9926-4b14bd72bba4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0793e709-ae78-40f3-b37f-3f255b8274c1"
            }
          }
        ]
      },
      {
        "id": "830f1627-5985-4da2-a0e0-ec72dd97cea1",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "4996b58b-bd56-456e-bbec-0609f42b2a4d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "635b81c6-0533-41a1-8924-f5468bcbbd9c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1affa0c9-1249-477f-afb0-fe51af76e461",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2720676-4e84-4818-9962-76340087c9de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f21f5d5-8c79-46d0-85e4-754f4fc29bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd12aac-0ef9-45d7-b1bf-2740aebd6d73",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33aff5e3-c568-4274-a54e-a5c4747020c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0f9a1ca-d560-4ef4-b752-b2d51dcd722d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc426bd-5bac-49d8-98c4-e6bc87a68cf3",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d053e61-d5bc-4958-b5d9-0937ed275042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fc59542c-4bb7-4ca6-986c-fbc81a3f55c3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f19f8acb-6d75-43dc-a6ac-cec324102be5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2cf5eef7-1c0c-45c3-9d31-d71cb0b8ff0e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f108206-09d7-463d-9e0e-743330c0b19e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f04abe8-f312-4f25-a84d-23635950e6de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94104316-82da-4820-985e-756c93ff3707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f6d8244-25a1-41ca-8ec9-1558bc4d2125"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c98d914f-e833-43ce-994c-9c83cbf2392b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c922a2f9-a85d-42db-8a9e-4b9e1954c424",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "267116bb-59a2-438e-9c3d-8fcfa0deb23a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "301f1891-fa26-4222-83ea-fdbc080af245"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b44aa4de-a8ac-4a94-a175-afa274217dc6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "78a095e8-1663-42a0-8271-de4a0835aa52"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c86918ce-1821-46ca-b54e-ace71f9fd9c2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e3e52d12-e01c-4d9d-ab65-f640774ca81c"
            }
          }
        ]
      },
      {
        "id": "2637e767-ca0f-47fc-a4ba-abf1b1e312ab",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1510d006-6cc3-4bd4-a23d-d5ecc3a823e7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "352bfd5e-ee30-4afc-a236-76d9f87e9a18",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d9d4bdf3-7afe-4416-917c-b53e67ddf177",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acdb29df-0434-4733-8116-29bd038be316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3772aa5f-eb17-4962-84ad-30e3dd5ce552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f5aa87-8d77-4012-a14c-78a27df4c785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c58d3ac4-4ab9-4444-bc8f-d4e2247448aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e00c7ee4-9187-48d0-b857-edea8a650377",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9618e290-6ace-4d28-8784-6e6f121f1b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d50bb1f-4fcd-44c3-865f-279a681ce3d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f9de687-8b0e-45ab-a10e-502a261841c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b29ff20-8eee-415f-8af2-2a45b91cf4ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d3adda-ac39-4dbd-aa03-dfca6b696669",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b7f3fc-fafd-4589-b206-2667f6db956b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9370d71-4055-4008-bf6b-529ef5b982c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc28c937-4da2-4da0-95ee-7513fd34830e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a21b46e-862f-440b-9f39-f9f0b03ae49f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b7d36c9-98c1-4315-912e-467bd67cdff3",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6024c3bc-3427-454d-b4c4-397f4a0f4b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4c0f114-e29d-4361-9c20-d3d20a505e33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a6631ec-bcde-4929-b906-da014cb7c32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff9d4834-01ff-4732-8bf3-5bafd11c7f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "046a6246-5362-4493-a83a-e5f35fe515f0",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeeeae11-4a02-4ff1-8779-7d9118e97268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2e022b6-ef77-4b94-8343-3f9ad3418e27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4771c559-f4fc-4c1d-abb9-d8d67629556d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd1d48b0-b806-4dd8-b5c8-79e442916f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd23e98-d971-40db-8ad6-8177995dcdf8",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba1bfea-3c7a-45d6-97e4-0938480a60a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba6812ac-0793-42d5-b27e-0d707772ba31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "351f7cc8-6d48-4814-bb48-1040ea44d1f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "15062223-0fc0-461d-b051-3e4868409c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f4609e0-3800-4ecb-9619-ac75c36fbac1",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa926cf-c812-4722-909b-d75b215100c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f12693d8-32cb-41a6-85f1-787c74451cb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab1be854-1d55-47e1-aba2-ccd4f2ffeed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2476023-afa7-497c-99e0-f1d3a9e5c81f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a12077a9-6802-4889-93a5-913e2bde4bc3",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1d1a73-e9b9-4998-8b98-d4e4090e1db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "def1d821-481d-4a36-8d9f-270a56ceb27a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ebac3ee-5722-4cb0-93e1-573b710689c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "546b9557-5540-4dd2-8cb7-520cd2b66bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aa25abd-a1f0-4334-8e6a-5fad3213facc",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b7eb926-193d-4691-addd-25269fefdfec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4233087f-10bd-48fc-a4b2-df893f252931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3413669f-40cd-4b73-973c-a4825e0a4596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "214c79a2-0f59-41ef-89bf-b94cdddbf8d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2251ca6b-73ff-4236-ac20-759feede64c2",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41644628-baaf-4dc1-8d60-712981c58f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69c2bdb0-3867-4165-8aeb-ce63f7bedd99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6b7f07-11f3-43aa-b695-fa7ba45817ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f622df91-1616-4b70-bd06-0a716defb1ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f98143b-19e9-4bef-b945-7e05e0990966",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cce82c8-80a6-420b-a44d-8ef579d890d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e202653-aa72-4633-b439-e720912c49ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d076c9ef-c92c-4160-841b-36e00abe2ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "112cd23d-6cef-47d0-954e-8f4befb14bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed642680-c72f-4af8-bf3e-46829c4fa60e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f627be-ce8c-467b-9792-14a70dc5252d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea8b893-0905-41cc-b499-64270bf6f251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f125d0a5-cc5b-4c1b-93d3-a10049fd98e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d285b0dc-80e2-453f-a56a-3ff778e956d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e6d9e8c-1cbe-4ae6-b855-0f6d5e163c0f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "241c93ac-41b9-4fda-bfd5-1f847202e1d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62d1a69e-5a45-467a-ba45-9a48f2301afe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd42f858-83d0-4bc7-9978-6cdeb857d518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7cb7062a-2c2b-4c53-bc30-2cb040588b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2382dc1a-5105-4d48-9f86-cb70984a4215",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6870e7-5890-4f82-8634-0f5da765578b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aefd3ba2-2e47-4d71-846d-cbcbefc35656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c450b987-ab8c-4eb5-a45e-4565b7980e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de2e24eb-b9b6-4a20-9b43-733acbd18f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6684195-0376-466d-a594-40b0e3ff49b8",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a9685e-e2a3-48ef-8aa9-256c9d788cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4b6ad98-191a-4bae-9134-8b9c3685adab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a462be-d993-4768-b961-bd7ef02c428d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68a7d263-3839-4b50-9860-79d7211b654c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29373d12-185e-489c-9a55-cc23649feb29",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08db0a85-60f1-4a42-85a0-0b5b9c135c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76f0d906-df9c-40bb-9687-d4b7e63fed0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd3724b-4c35-48dd-87c3-35270ae9b3d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d959c4f7-73c7-4aa0-862b-d5a37d5c18f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d230b4-0a6f-43f5-b7c6-03bf262b71cc",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f27c28f-3e2e-4c74-bdd6-d7cecf2d950b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ca3c18b-30df-4095-96b1-1957d6e9c67c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd70cbf4-5bec-4d86-a412-0e71fa26bfa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9a9a3b9-acd3-49d5-9c16-edcb6c8d5f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "427aa1e3-3196-444f-b97d-afe698967df1",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c31c054b-2e35-4c67-acfb-79c03c33c00a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54c4d59a-fd82-4f63-a068-1469186ab65f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "643e6501-9cc8-4ff0-8cf8-fc16d3662ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "804eaee1-6344-4679-bb46-8cb6e7904afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38773d2-cc85-40c9-ac8a-2a0a7b8eebfe",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac3d47b-04fb-439f-8903-a040c1bc6e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2310270c-56e2-4f70-8bfa-6743a3cdff80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd670e1-ce44-4688-bc28-9328cf9700da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c075104-10bd-40fe-b567-45b686525483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a5ce783-19a8-416e-9d2f-d3215923d74e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2889e43-d7e4-4310-ac43-2c7046921313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5db32823-f028-4917-970f-3ee144c7b950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d1a644-6df1-4b19-aeeb-d54fbe2c45c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e7717f6-7bfd-45b6-809b-d38c8892cfdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e7783b3-6261-454a-8e1a-e76cd949a885",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aae8d24-03bb-48b3-99f3-75e2e787a378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "413df55f-683c-463b-a264-3feeb6c555b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1633d130-a2fd-460a-a1cb-69d2fda29e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "035a0028-7c99-42a7-ad6c-4b3e65cb5d5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d08aa7-3c63-4cf2-a3aa-f391d710b8ba",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bad285e5-7961-43ab-a8d8-fd780cb9cf63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e33b663-a108-45a0-844a-615d1f94fcc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa0b352-bf3f-4553-92ee-95d3a5df319f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7347bdd-2fbb-4c55-93ab-a141abbc3484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b3966d3-dad8-4003-b468-119b3eb984f5",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b60382-8ca3-48c9-bbc8-279825d2cf95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05424446-d2f8-46c9-ac9b-5380a06d832c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "683046ce-687e-4db4-8330-b4956fbcb486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a29ad828-d338-499e-87b8-7c1db03e3bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bfe3a88-72a9-41c0-ae29-b49406911615",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da833575-4b07-42f4-8659-2afe080f454c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2a339c2-191e-448b-a492-3d3f7727de7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2427344-87f5-4213-961f-158b9ac3a6cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "28fec7c7-3a38-4474-b2bf-acf9e8065e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a65b9b-22ce-4d43-8279-4805dcc3b499",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4c0ab1-4cae-47f9-8351-5e26e56250f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7649ade-4dcc-4bb5-ba60-dfa5c62e5e91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3ad2a2-2a99-4ea7-85f4-e380d2d5427d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bf8ae3a-de08-46cf-a311-13c555b1b8ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef0213b5-40ed-4d00-bb43-c90e61b8b10c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "302d15a4-3813-4ca6-886b-6ca5e6a92dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10d810b1-3b91-41b3-8a25-c3b24a5d7f8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "479b720d-09b2-4d3f-942f-b0dbb30fa866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "43ea119d-7efb-4d02-893e-4aed82a0791a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e578da-e2ff-42f1-8b04-12d56da04e2a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4037e69b-bb19-4539-b1b2-63fa3dfe0e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b77c7ef4-4b69-4f9a-808f-e7594df0aa01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a56cbe5c-5574-465a-8aab-79702f4a85b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f9f5318-d86c-4fae-9860-d99c11b2f0ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8668e49-4671-469f-ac15-ae6f3e91ef99",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3877dc29-f91e-46c7-8387-edd28c798429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "068fc9b1-c964-48f5-9214-a03fecce97d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fcceaad-9c18-4056-9bc4-ec727587c070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b1ab405-83cd-4579-b026-16c1861d8145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa5f9be-f5cc-43f8-98bd-302378fb691b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c385749c-1516-4eba-9d5e-6ba3af785c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50d8f4b1-2e23-455c-98c5-6cd4ad8cb12c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4581445d-be73-4353-8506-c44e3312dec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bed64cd-ac9f-490a-8584-6b00f4277292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d32c1ec-2fc9-4efe-9dc6-4aae6b63a0d2",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d35dd4-ffd4-494c-9680-5299eb9bd17b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37354a72-855c-449e-8a0d-0f20a9f15d80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b30d77d-778c-461a-af36-6f3109e9116d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f824f33-97db-44c7-8a6d-1fc46bfc603c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60bd451-973d-4a16-86bf-366d2a854e6a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d05e87-4604-4f98-bd51-45211ffcb20f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f06a6b33-228c-4477-9533-2b22a156dc18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ec2ce4-7919-4fac-8c74-4d0e0dc0f61a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "80e0eea0-0a32-47cc-ac36-bfaa960a4201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b31ad5a0-26e7-4326-8901-19270240ce63",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "612d934f-f09a-4cf9-9d4e-f88e130b7ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "342d6741-61d4-4427-b4e7-50ff3b836a7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "003b7d91-997c-454e-8179-948f30ec7a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6294337-3f66-409c-b8f6-1988e0c4cabe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "320a89ea-37f5-4d31-9222-827844233b25",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6478945-608b-4e2b-8625-c080941278b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c02a0765-f5f7-4f2b-9850-78cfa7846922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4106e746-6c6c-4a02-bd49-7059364cd33e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "06744fb5-f9bf-403a-8e56-b02cb71c2c47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2515713-7268-4cd6-a549-c6271d9cc7b7",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac500f3-fec7-4df0-93c1-373a2dcdf45a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d86b0229-e400-41b2-ac2a-5dc1faa3fbd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "227c23c7-cac3-4d2c-be45-548098cf4bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff3cd0c7-06cf-405e-b0d2-15cb0f99382a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af0a4d2a-8e9b-42c9-991c-b692225dccac",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad524c6-8c1c-4022-8355-e347980b7eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90703c9f-f971-42cc-9733-5e50afe7806e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c2d2deb-fa6d-4a18-8ffb-1593f34f6319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "4824cee4-3b21-42a6-85de-f5812564de2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309991a7-6efc-49c5-872d-fa1267b4b430",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "073bc4d5-d524-4293-b395-25540dc8a76f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "59b899e4-5ca0-4849-9c4a-b3d5aa22afd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b6a4d7-779e-44d0-8b5d-0bb10e8f6301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ab2ab034-57b1-405f-9356-4297e433fdc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e16ba8a-5117-4a15-b335-1b0e4e0bb451",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64bb5f2a-cd12-4f71-8174-145a59b5b04b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26ecea42-f2c1-483a-917f-5509a179e03d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6947b4c-1e56-4f91-b57e-edbdbd4908e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ed644f5-c69e-47a7-ab47-69904738be4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e14ea5-37f4-42e8-8ce8-b48f7d4db243",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c66ef59-ff29-4da0-8cbe-c3729b3fd20d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9a25794-e04f-4c17-a13b-f4a465dee2c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ffbb2a-b08a-4dd4-b612-d071d388df0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "59fa3f36-73f2-441b-a32e-2dad15f80399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb47761-72a6-49fc-8b8b-58ede50e1b7c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2680c6ee-27f9-4821-aa6c-5ddd5b0c9e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04094a61-4335-40fe-8b4d-8b97b13d67b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "494f2742-c732-498a-ac53-40037818a815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d66f8fd-9d57-4064-bc91-3cfaf63e7d26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a241d3a-b28c-4b76-8445-95a037003423",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed69af07-5b3f-4942-a8d7-096aeafdb0cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fadc049-67c7-4ca0-8f72-7c9820246048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ea17ba-359c-4095-a0f4-159c5b372430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "eba8f2d0-1f84-43e8-8edb-f698e2fffb64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a85650c1-ad26-4f40-91f5-2a147634324c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb038bf-2e5e-4240-96ae-0c4c9c6e0dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c490f4a-5f6f-44a3-9f73-4ed9e139e569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ede9bc5-345c-4ccd-b032-a8a603d99f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9db6bd0a-8112-4890-ab47-8caf60701ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5488e86c-43cc-4b42-a12c-42f49fae4ab7",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4812655-585f-4ab5-9d1a-3f7afd78549d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d56d1048-ab93-46cc-aca7-865804cb7bcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632c06d0-86b5-4ea9-b05b-75a813869382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a2095b1c-9433-48eb-a606-3aeda9e58440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32aec98e-eb38-4f46-a33f-8dab1e273e2b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7ca613-24ff-47c4-8635-c99ddfcf83ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b680d3e-6384-4346-95ee-c49577ea97f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8046bf88-63b2-47dd-8458-64cfec029342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "22d8a9c7-f7c2-495e-bee4-c58dd8aeaf40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38318d53-9d66-4dd9-9278-10757338c199",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb44b3d8-ba31-4c84-a9bd-a70cc949f803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3b694c6-2f32-4700-91a5-757762737e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fde8546-ebcc-4e18-b85b-4a1020a41783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a723f5ab-3d53-4408-9436-d8e89e7488d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "040b530e-b491-43b3-94bb-c6a2993029a1",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc34696c-3ee9-4243-bfac-cb173f5721bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a52167b-3c92-44de-81d6-2038c95053e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d4e617f-3577-493d-a10b-7915b369bb58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a085dad6-c50e-4534-b4a0-bc1c162a968a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "273bb26e-8ec0-45f6-a60c-e3466f3b37ec",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05104a7d-c760-4962-b9b1-0c580b479fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d8f353c-4833-4327-b85d-a41b1a85c911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b835428-6bd1-4cb4-b611-d832cf83a485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6641b518-1a2a-49bc-b1ee-fa64de573173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b9851f-dfc0-4878-839b-34ca92574a28",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46b1bf4-3d5b-45e3-893f-c098ad6d8675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4508d483-315f-498f-82b6-c0781e2a5cb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "636e7a3f-71e4-4048-9975-18d15dd04a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f33d1183-b202-49e2-8c99-4212e5cbc397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a1ee9ab-805f-40b7-8a96-5f8ebb255074",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e9ddf1-c4b4-46d1-847a-9e23f108c20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72e55f9d-bfa1-4f9f-bedf-5465d8c04d5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "091e0c9c-4b27-4881-afc1-927fca55ee84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "413fc7b0-1ca9-42fd-84de-542733fbdced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ac1182-1070-45e0-94ac-e5a4513dcad4",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a41e002-e427-42dc-b56f-c348495263ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "125d0d86-8cf7-4592-8ffe-452c35b2ae4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a43cf21a-9f35-4e52-9e87-6308cbcd5f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "96ef4f59-70fc-4294-ae83-0870495a20fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602aaa3a-0723-4b22-9f98-901003904bc9",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc94cd8-5b6f-4488-9583-f350fd2adf49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f7d0862-ca2a-4f7a-9dd6-e544e52700b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5705bf-d04b-40cd-818c-b679fecd8163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "94c07b78-fc6b-4b43-aea7-02f00c2a918f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f850670-f542-4827-9beb-5bf8c8e69d74",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2deea4c6-6172-4607-9810-85312c5cbb6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96d91d9a-4a38-4c7c-8d09-aadeb39d51bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86229d0f-1414-49f2-aafe-5d600de5bfc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "77ee3d5c-f2ac-4df0-aa93-d013ce7df2b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e1a248a-6e8d-4ad7-8d65-9a211e1bf278",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6113a53-331d-46f9-ac4f-c352a6647e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35ad4794-65c9-4e71-a8ca-9664af728438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b1fb10-c083-440d-89b1-b15b6b4d3ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1e57a50-07b5-49ee-86cd-6847dbeabc9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e36034a-e530-4ec7-b9ed-7126cc6be1e9",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1855234-2707-45af-b832-14d252f5e46f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e7359fe-bb11-4278-bdd5-f13d366e775f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02b447fd-1c02-490a-bca5-a9f0bd27b44e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc63a011-ebb7-4ca7-b21b-13c5356db998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f074e99-32cb-4e6a-b34a-30fb4e9f6394",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07491b00-405e-4fed-8e62-631bfc574ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b284809-01e4-43f2-932e-09b6588712f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d52803fb-a346-4ab2-80ff-5fed79774e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "59563137-da11-4d14-b454-a01678002b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0db2812-c71d-4407-9b66-f1a881da97dd",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa74e880-c2e3-477c-863d-9ea3788c188b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "519e17d0-7174-4377-9557-c3f7eb035e39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eae6bf2-9193-4c18-b30e-4864ac017fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b9c7af5-ae98-47f2-8c02-cf4194a38b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e98aa8d-3714-4539-a4bf-240ed3cf27e0",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4b0914-872d-4529-bd37-56ca4eafc3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1db79079-1bba-4340-9091-6e672e3d520a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "471d7e65-9fc9-40e8-baf9-a9e954f4b3ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "9b76e883-2b3f-4fd2-9841-c87450a0df91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edca7e3f-7bf1-4e82-a18f-b09240188b9d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d67a0fc-9a7f-4088-91ad-9ceb11a87807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0c58846-9b17-41b7-9d07-1787f95f2957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da63c98-b952-492d-adf0-82ecbcd8a0d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1209449e-596a-46ed-bf59-bac1ec277be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a84b9d5-2e68-4606-9b8e-0c003b5c7ec8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4adf8292-e2fe-47e1-b273-4251bc91a1d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4365bb9d-3a3b-46ca-9620-b3e0c28d374b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09de192b-7077-4a86-be67-0bc1cefbc3a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc9e9b2a-1736-48c8-8396-4936ab3634f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d412ad0-8466-44a4-9a0a-bc456e942847",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "891bedaa-10b8-4352-878a-8f0e29f761a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ee8d672-b44a-402a-a939-5d6a874695c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2696b918-0e9b-4395-99a5-92602fdd2e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7328cd3-4c18-4d73-a07a-1b1af9ef110b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c95202-918c-4f28-8f8a-86a9df9feb48",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "892a7e86-016d-4b14-a075-86cd6ef26597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f18708b-c9f5-453a-9e79-4640160a3dd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "465b1898-426d-4edb-809b-cde11d3d3612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "03f9ceaf-1acb-4ecf-90dd-3ca2a9f1f2ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f3a06e-16ef-4344-9ae0-92cfd1b0716b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b5cade7-dee7-4a50-a46c-4b7cdadbbc34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4d7d05b-07f3-4612-90e9-fdf09e8009fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8455817-db8b-4084-b7de-0f236b955992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7f7d7ae-4f1d-46a6-989c-45eb6621687c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e88b466-5696-4c61-9d38-05e6452f075a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1df61a6-9c41-4dbd-8a7f-88824ba94fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "000d5825-db80-4902-ae96-5d49f3be3417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84427f16-efd3-45ce-892d-5eb2d963b6b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a43d4c16-0447-4cb6-be94-1f278f8f53ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b21b759-2dc1-4e11-816c-cf801c0417c2",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea93ff74-418b-416b-bd7c-3166813d6dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "202bc653-021e-4a3e-856f-ca4e84a6b9d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d5e181-e457-4a8c-a4ce-870f1e7c6155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa199c70-085a-41a4-af2d-7e680f468e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31581eca-3b77-4f90-9158-b3fdd59518d1",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f763612c-a9a7-41c1-8cbc-91aa0b7ea252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf4fa2ef-3636-455e-8d62-3c8e15dcc871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a39c066-a677-4d1d-b676-b5f375225ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1baa8c16-af59-4e01-a5eb-f81676d035e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da09a309-c506-4307-a1c5-43148397a2f7",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c32e33-3a32-4eba-9f70-37ae264bbbea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f6d2336-44c8-4646-b9ed-d545209e3692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea44649c-0a25-486d-87a2-cff319f5f6dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5524d010-7175-4f82-892d-a9012c530f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b84ee361-7e68-48e9-86f8-b2ad6e3d93b2",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "011b8208-1d12-4ee3-999b-92fe30f62e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04d5bb59-3e92-4774-a5e2-1613d3b53383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9835c8b3-4e3f-42b1-8590-78ce495197f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "53e160f2-84b0-454c-8095-af9e552a5232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91710fe6-2435-41a6-bd85-3999cf70c0da",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e9a1b5-1458-4bf1-90f8-c466118b1c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94a61d63-2e0e-4914-9b4b-d7110f895866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e002a5-4712-4e63-94a3-0097a1504a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "676f873c-8afe-479a-b38e-7114c576fc83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c35f6470-94a5-4d71-b82f-16cc636b9ee8",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e5ab45-b955-48f1-9766-273f1c0a2957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1acd7879-d7b5-4826-b261-3360b88db190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92841dac-2086-44eb-b0ff-534c34064390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b5cc545-9d4c-44c2-ab0b-d7976ec703fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c0a380e-d0d9-4294-b521-8ff079e87615",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df57b74-894f-4a78-a91a-0b9501b0c9f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb21410d-c9c9-4268-bcde-245de47b9446"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c37170f2-7bae-459e-a7ce-63b1293b6081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb26eefe-8d0d-4bd7-8f7e-b3b9e5628cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c59d70-92f4-4129-9127-181e9db5e9fd",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b5d8a7-6769-4757-9145-cbb7336d7384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e238e703-4a25-44b0-9953-9e26c559e703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d2e7298-3adf-426a-9351-cbed3c3da6f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c33e6f4a-4c9d-4722-92d5-a09187075c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e502a54-de25-4d26-83ab-d3e2e8c63018",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ab3be5-8af4-4456-ac02-be6ce6fad14a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e2f6ba5-8cc3-4657-b88d-616b49d7b3b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad845a47-d983-4232-9a21-96ca72481390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab6646e3-9003-4675-8eec-95d8407a231e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c48a01-3d32-44f4-bdeb-cd35324fcba2",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12c00ab-e220-48e6-9e4d-78e1e723d55e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "230af789-7580-4fa5-a681-b2d7cdc3d399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "582e02c6-d5f9-409d-9361-bfb204ba8695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1ab78c8-b8ad-48d5-9feb-772981f28c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "075b0124-a090-4be6-b661-4106210a4777",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35943cdc-959d-424a-866d-b7cd7136da5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb5634a1-2971-4e25-98ed-1176bfb8f606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67810862-341f-4d1b-a2f9-b3d6f02aab97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "015f1a19-98c8-4d2f-969a-88adb6014210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "280a1148-3db7-4e8e-990f-29ccaa170d9f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c213a68-0210-4563-96c2-cd52a6202f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49102e32-b757-4314-aa54-9f218fad0bcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec08598-a56b-487f-8db1-16fc65b9831a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bfae591b-9fa7-42ba-997c-4380656bae03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b676c030-08a3-4993-bdfc-21e3daa45e94",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f829a32-fe5a-4ef2-ae57-f98d57e11159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2259e60e-8147-4fc9-9fb9-aec62a47a0ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31ab6a70-ae35-4608-8d84-25168dc32aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "48e78872-d441-45a5-b506-2e5d0b3a426e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa83700b-abe6-4d01-baee-14d3961c1388",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a24809-77c8-471f-ad15-39f111e8583d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36688265-c5b0-468f-955d-d07e00509334"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4552e06-3a08-4985-b42e-2875e722a3e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "995872b4-3c90-4dff-8a5b-7b6644bcd8aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16ceff5-c1f9-4a82-9c7d-1590a1cce830",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "853193e1-837b-4374-901c-e5e4e7feeade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "360b4b89-9b8c-43bf-bbdd-cf8575a7f060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0711c86e-7a74-413a-b239-d06de4b29f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b793676-5346-4d58-95c8-44dcc3234876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d8259dc-43aa-4174-9926-7f0c0ef0be46",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8854d9-c2e7-461e-8227-e6eaba27c0df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc028df3-8c79-4901-84ac-f6c39982e859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e0adf95-1ecb-46bb-b196-b207009734b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "425f06f7-f339-469e-9a38-c5a764dc66de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6157659-a953-48e9-8fcf-44c8051b3348",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c39397e-4641-4eaa-89a3-853457e10010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b110959b-5512-4c47-9f7a-c059172d7a79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb43b4c-6ed9-4041-a504-4fed0f0f3ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0d91a14-98d5-4351-bf82-81f4baefa5ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a058c9-b5dd-4cbc-a75e-b4859dc66c7d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f13c8d-0106-4931-b6d6-0005d383ab16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae04acb9-f3aa-4b57-b9e9-7d1fd67d1e68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0726b2c9-4b3a-4384-b42f-5bdfea284dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b8e24a49-7a46-4e7d-b30e-123f2304ac39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf6a4c0-f724-4b3c-8b67-84e1320c2cb9",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f69ed99-ab9f-4647-9f3c-f4b3b0576ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12bc3538-d5e3-48e0-981a-b5504fdeae36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4823877b-61e0-4c17-bde4-3f1e49fdb507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e753af93-6d2e-42ee-b329-ee5d998545ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d1e0ca4-176a-4ff1-be56-4620eebd8412",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abec2bef-dc66-4290-805c-336853c7448b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2df3752-d440-4821-85a7-a5635719824f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f9df76-f3c3-4567-85c7-d077780a5b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "76269b60-9e20-4a98-bb7c-3ad5e43dd0e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e3a1385-a0b6-469a-9dcb-acbffec754a5",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a90db34-da62-4447-b3ac-4a30685d8cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9833d7b-3073-42e4-a2c9-7c831459aecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4163ff9a-c2ff-43a8-88ab-500db8bb8cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e4d0412-31d2-4433-bded-3fb82e8bcde2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfc90fd7-0406-4545-8124-8eb99c3466c7",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "412911e1-4a95-471d-8160-24574df19a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dbb3ef8-624c-41d0-8814-ddf7781335ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e86714a0-fb97-4773-8ebd-d39dffe5788c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c477c4c-0491-4e50-827d-73ed1ddc2510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443050ed-0276-4aea-b52c-ce7ced3b4f1b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f5da939-2a11-4d49-ae53-bf4de1034fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b28e45c1-4c13-4b6c-ad4e-9238703b70ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b288cd45-8d0d-4b1b-b845-bb2c8647dc49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "661da375-3379-498d-a84b-e3be976a21ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b532663-ed21-435c-8f55-8f55ed754b86",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a5bb844-fc8b-40e4-98d0-551042b2eb65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a40d04ed-6ab9-43f0-8b96-7b58610227ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "147b87c8-e766-4ebc-8407-0f3bebff765c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff2062c5-ca04-4c83-9182-5300d256c63f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c7c1274-4ba3-4164-81b8-483498709f39",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9037dfd-8427-41c8-b1e1-0dab65a67229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e01e05f4-25ac-40a6-a7dd-12eaba5e5168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5379f52d-d085-4bc3-b62e-d9284c7bb14b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "36243a55-a8f1-4260-8a37-5ce30cd74b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654810b3-f83c-421c-9018-afc493bd4a08",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d43ae8-a199-4d45-b3e2-bde3355a3c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0196b0db-c532-4fab-a4a3-c979a9ee7a43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5577ecc4-fb8c-496f-8d1b-329ca58bfbd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d315310c-1412-4d2c-b69b-72e12f70933f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f33d6123-5bee-43b4-8159-a2cba807b77b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5abe186-68d5-4544-866c-655f05a9ded2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f457cea5-5a65-4674-a73f-7da44ca0e577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19868b99-d77d-467e-a358-11d43e279019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8d932cd-d52c-4f3a-939c-f8a7d11d4796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed3db52a-647d-4abe-877e-d16832ad6bbc",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d3dc7fa-276d-4f91-a4a5-30171955b7d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f99085d-e137-4016-9f3c-4f52647b826f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b676c12-3928-4e76-85bd-7ec6d096f3e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d6bbe30-efe3-4d15-b074-91eab207a4dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8cb255c-d341-4e23-a890-67fb8ec235e4",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e838e4a0-1b84-42b0-83f8-b7362849d699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "217d5229-9407-49e6-b0b0-acb0cf7423ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f27c969-8ddf-437b-b116-05e43bb19650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "606e7f48-82c6-4856-bdef-165d57ca6278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd0db63f-9b95-4a52-925a-e84ecd7bac47",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "759d1ff2-4b8e-4a5d-bef4-9b7a795b9c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0ec9559a-eddb-4fbe-b434-ec15cf2620ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbbf78bb-553a-4434-89ec-f2ee7ea38a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d316f993-2bc5-4953-b58e-d9bddfcd97e2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0eb65167-40f8-4059-b5a8-cc9c487d73f2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ceea9058-8811-46f7-b96b-e5ef3b630f24",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da015dda-f081-4e15-ae62-acde35063c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b5555f0b-2964-4592-9193-cb7afa4f4f74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2951ca97-2bfe-4451-a6ee-205ab854bb67",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ea05da6-560a-42e6-9644-14f857efe0d8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "932de50f-4a26-49de-9623-7c1d7de50783",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4fed4c1-1cff-458b-986c-9eb212e853ec"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e70a7942-4986-4501-869c-fdfaef8c38b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "803035c6-6900-4ef4-86d6-d19031ea7a39"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3ef042dd-0a06-4669-93d6-9a4cfaee1a57",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f067adb5-74a4-4101-9b9a-9551ce457ddd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "672de496-9d8f-4cf3-aabd-e7ef53d28ed4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "27e12657-5527-4c14-a5ad-827f9533dc3b"
                }
              }
            ]
          },
          {
            "id": "835c8777-5d7c-4201-9827-266d8aa615c2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4cfd8030-42f5-4805-a800-7dab766a89cc",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "cceddf78-8fc0-4d5d-abbb-a54ea209394d",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a94b9db-8cc5-4267-89fb-900c78c0b74a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "474e9c3b-5a82-4771-9247-18125cc747fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaaf1660-388c-4088-be5e-639f5410ada1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79ad56d2-618a-44b6-b8d7-0c945a436569"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ac5bf3be-628b-4e65-9d5b-72cc93e19d16",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "015f004c-ed74-4c52-a05f-a1294d3d4300",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "671a9aa5-6606-4f8d-8aa8-0ecfedc535a9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "947d6d03-871c-4ad6-b0c6-e4d0e6cc86d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "05f4c50f-1fc5-4322-b993-856b4a0adc98"
                    }
                  }
                ]
              },
              {
                "id": "dd27a587-dffc-4b26-b847-0f7d21628098",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce054d87-ba92-4e90-b8b2-cf901c8ee4d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a9f72d33-f2f8-42df-9f02-f6797b770f9a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a122df4-be90-4292-ac57-0c6a46b4bacc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "befa4d14-42a7-4e10-a410-194fbd7a518b"
                    }
                  }
                ]
              },
              {
                "id": "7178547e-f47a-46f7-a29b-22f3ac09ec09",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "07bcca6a-ccc8-48f4-936c-88f4641a47b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9d0ed5c0-4b68-417d-a165-52cfe77fe948"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "74cf7445-1d54-4400-83b4-4b06ea49db2f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5911b3c8-d008-4311-8cae-142c574a1756"
                    }
                  }
                ]
              },
              {
                "id": "b2fe782b-b41c-4aea-936b-aa159648faec",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d516c72-5e59-473d-a6ca-5eecbe4094c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "41c938fd-f1c5-43dc-97ce-fafc590a0eb1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "89f5c175-3f41-43ed-a855-592f8a665107",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "9dc5183e-811d-4dfc-ad90-a35ea136dc5e"
                    }
                  }
                ]
              },
              {
                "id": "fb6ca036-1ef8-4def-8b19-511cbeccf959",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1381d061-3065-4aa6-8da3-0604f0bbae8c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8927b25c-c04b-4cb8-975e-8360eb2c8774"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94a8aee2-2dd1-4780-86c9-c87ecd0e1987",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d4fb707f-8d7b-4559-832d-e184484359cc"
                    }
                  }
                ]
              },
              {
                "id": "df096b68-acba-4ef5-8bc4-5abff2a14d07",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4fcd322-9e2c-4379-845c-1fff2da0ab39",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "262ba27f-11d3-487e-b9d3-8578aecc522d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15cbd495-e6b5-4053-b6e4-a96f347caf1c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1ce71df6-5c59-4744-9390-601ae69ab158"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "18f326ef-1755-4f5b-9d8c-7ba61278e98c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2bdba6aa-11e7-4d20-b23f-7dd4e406bd8e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c4ad67ca-59bf-4fbc-a348-a9041f89c3c4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e81f0e45-1797-483e-8896-ff13894bff2a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "83489963-62cc-404d-b408-ca55b252e75e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "47ac8630-6039-4318-a6d7-647c8c9804cc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5707ce41-7ed1-4e72-a376-e66b0b030b86",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "87195e10-5cb2-46a2-a3c1-005b2cabd124"
            }
          }
        ]
      },
      {
        "id": "e03bab0a-558a-4572-8152-1bdece662495",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "39c40203-5a76-4212-ae03-0672cb7bcb80",
            "name": "Negative Testing",
            "item": [
              {
                "id": "252cbf80-641c-4599-95ea-42dfe5b19ad9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "813e2332-b988-4a4a-972c-9b21adafd63f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ee996e-2527-4001-9e10-241b579239c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ac00f6c-7097-45f8-91db-b4c789b3001e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54fdd174-6c74-4c7e-a42b-1a9a6445cd02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "24f6b870-dc09-42e6-a0cc-dec44b10f91e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da3577b-b53a-49d6-b2e5-ced5e8f01c66",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8658594b-34c8-4152-833e-a3522e559a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "314843d2-8ad9-4b44-8b6f-3dead92054b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c7e3f58-6c32-4b83-9ecb-d9ac568ea7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bd43703-8b75-4e6b-96a7-16e45c65ecba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5a4bfd-d31d-4ff3-9e8d-cc2ad8613be2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b991075-1f39-449a-9f77-e96da35902bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6774ae5a-a6ec-4e7c-9d71-458fbe203636"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb271e53-d4d0-4e68-8a97-1fb5591454c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "19e93bcf-0cd3-4c7a-80e0-dbdaa5a83484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd29f6a-68ef-46d7-9c46-6e4b9d587fdf",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b36c9c04-1499-447b-984a-160a12ee96fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b82f5fd-706b-4638-ac32-b43695e00ab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f92b74b4-d3d5-492b-b8d9-813ee278df6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b4f6363-fd82-4072-9ab8-3721b355de66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae7aedf5-2a37-4a70-acb8-1394039778bf",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b233a6b-0b11-44c4-b0c3-4cd2f5382b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c8b5da0-aa01-4b11-9d37-5fd714d87d58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1689f77-2c31-4b2f-91ff-62641585132d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "58f23a55-512f-46f1-9106-8240fc3f0109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5afaee0-1791-4e9e-b2a5-7202ccc33e6f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5db4c19-32b5-4f03-abe9-09748b5e281a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d78d0c8-09da-46f6-8b89-ed2687760967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e5b785-4f36-47f1-889a-d3484c6ef3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ab2bd60-6fc1-403d-8887-195256717710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ab1177-86b2-44cf-9ef4-cd9d7c6e5f36",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e7a3151-2fa5-47dc-8cb0-52eb73dbe504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5ce2177-acfa-429f-a44a-85b2a1b2cc3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb4d8bc-2578-43c3-b153-00c07e00f56c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa8aacb2-28c2-4abf-90ea-13eae01d3cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb86e6d2-e239-449c-b27c-e067478dc000",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b6bd6c-2365-47f9-9d26-518c05d37fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "361c464e-3b62-4596-9ae6-ad902e92355a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae16ccc-08e9-443a-9ee5-8fb8470e8156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37c16329-2c82-4b1b-b8c1-64b786cc8ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "359e1b6e-1580-4249-8a25-8011f87ad2c9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c4920c2-0178-4e87-83da-eb599a928794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79c611b9-9c8c-4fda-b48e-ec43e3ce00d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98100ad1-ac0e-4153-9c7d-12327451c3e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf82964a-a2e4-4d14-a251-3bdaa7438569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4dcf713-0f50-4430-9c5a-4636803ad3ad",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd2144c-2507-4bd2-862b-77e027522eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0212b416-e021-4b76-9550-b46b069a917e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51549380-767d-47c7-a73d-fb1dfedc1dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3c32efa-16b0-4de0-8c36-76a6002c53e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792e3d08-f89a-42fe-be8d-070441ffbee6",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf775c0-e70d-4a60-9e4d-a198f6ab5330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a22e94f2-6a09-4408-9e37-206030aee263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ded438-868d-42af-a7ed-672e550c299a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d5f1cd49-9025-48a3-842b-d24dcaf34c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a2255a-f5e1-49d8-b3ab-1040e99c8f66",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "368fddc9-4106-4b7f-80c8-b8786dd03cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11b4f884-5a57-4ec1-82c2-d4a6dae3db8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f89986-3078-41b7-9379-3f6a76ce4fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3e2bd357-140c-4125-aa52-b6a7cf8afd86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665446f8-1ce6-4ce5-a4d4-100da264f714",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a29c265-05ab-4b5f-9d6d-4baacddb23b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18b07ef3-3095-4a9c-af5b-7fa0a4574387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adebf833-4d95-4113-a8b1-7f50dfa34591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1d01f94-094e-43df-8b14-1650e70dc8f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "629cef71-1b7a-455d-833b-dce7979f5833",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c142cae8-7a23-4d6b-ac87-7265fcb08453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eb579e2-2ba8-401d-b820-fa05c5a69814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c3d4eb3-0871-42e3-85c5-644a63676323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbf37f2c-7b0f-4eea-b20b-98af20bd7db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "370806fa-b79b-4d19-bfed-66c3aaa0369b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c477018-3971-4f22-9fdd-60ea3da32967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5afc5215-6cdb-46f0-a6b6-df7dbe326e94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5b23b5-17c8-437f-8b7a-9540dbeb3d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8608fd6-9cc6-452d-adad-e89d8572c017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f7c2049-0fd1-4b78-8939-c04e8dcf4f6f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ccb6ac4-bde5-46a2-91a9-8c0bb1406068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ba03250-29a9-4f1e-b0b9-c183b1b7eeef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "175c64d9-2b96-41ad-941f-7b43b05be8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd5e9ba9-c1fb-4425-b33c-54ab2b0242d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db452494-8b84-4564-b78f-2873b41c8039",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb3c4fc0-c507-4fc2-bb56-477a6b380fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c454aa7b-198c-4646-a86f-1903d1ef1c09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab6d7b89-19e2-42eb-a468-ee7712c7bcdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2788950-6823-40d2-b6df-e984f84f87c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80657f07-9106-4392-9263-ac6240005d0c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d01c086c-d521-44d7-a680-c4b48cb6ba69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77ddc6be-81b2-4bd6-a8f5-17092287ac9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ff8e45-9e5f-4232-a35a-a5f6b9af6e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b809835-3c62-4a78-a95d-28c4118ba3fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b62a8e4-8685-4f03-9d68-eb440c10f7c0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dcdee21-2327-48ea-b760-1f01b9221710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33a53665-122b-46e2-a414-58d90ab22073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7efdaa91-32a5-4f86-9160-552773ac245d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f1d74a2-accd-4e5e-9ca1-942620a0d5b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "596a2545-a023-4ae3-b460-cbc19321d86d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb76394d-4ac1-4f9d-987a-93021fb1daf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9020613c-c413-4163-9ed0-72f9027396d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f889758-b9ca-401e-aa79-0fcf4317da3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e61d50a4-1894-4e9a-b2ae-21a39cd59bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e590c070-0354-48ea-b159-dd96eee14186",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7844d64e-dd99-4ae0-b305-e95aeeda94d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f8a6b97-052e-4067-b96e-d12aea810069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f75c4d-7ea0-45f7-8e28-a1a36f5a3eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a525deb5-dcfa-4ee7-a7be-095c9c04ee39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f56fd8b-db86-4773-9607-064bfa703b22",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "381208a2-1663-4944-8f1e-a0be72683cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "020e38e4-05b6-4e3e-a160-23972201c117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed96295-4cde-4871-b1ff-0d7eb7e212a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "207d3cc6-50eb-4786-8d0a-8c0ed467069e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "930f4b25-25d4-49ba-884e-fa1d935533e7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad50644-8770-4181-966e-fde8bfaf2938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5ebc01d-b57c-4557-b1a5-94c157074033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df09de8-275d-43cc-b7bf-a2d67e2fa0bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bae99c1e-1886-4bd7-96c9-fa87a27bfa72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "444a9a14-5832-435b-8541-4accbdb569e5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea1841c6-fb59-4868-86aa-7194800f9e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a92b787-27fa-4e70-882b-d611dfbf7744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bdc630e-d8d9-4119-92fa-08b5a936a433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3250df6c-f58c-4cdb-8c93-f1e0e802512f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa0102b-4642-4d3b-9b75-d575dbb21551",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1549ef-bd25-410d-af79-bd3c92fce645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53edf9ba-b5b1-43da-ab02-d34c1fd14cf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d26e77c2-3b3c-4273-979e-aabb19a8fe41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4c0b1b0-dca8-40b3-b9f4-f089639dfd8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ba0456-02d4-480e-874e-601837dca6c6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88933c9a-aa0b-4f2d-836a-acf4fac6e5f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76926c97-f3ed-4da6-82e8-ff83b498fbd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b6bd6d4-418d-4d2a-8938-ab4d56ebfd95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39916d1b-82b5-4394-9f13-d425186e9733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7643dba-a85a-439b-b10f-5538aa15d9f3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "550a8c33-ccf4-495a-a4fc-fe8780521104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d159937-8041-4137-8990-73befe5a2970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d6cc32a-c406-4544-b6b6-c59816e738c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5175ecb5-d2bb-4837-adf0-6d8274d45f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c73b35-308d-40e2-86db-1d24e41b812c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f54926f-e77b-4c92-8b28-3bfd18ec67c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "887fb6c6-a876-4913-be54-412e38c890c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b50d245-c2ab-4138-9929-0a2974775da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee9cd3fb-5654-4258-8ac2-724a41eab098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2790370-faf2-4e9f-b1b2-c6e3f325223b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5891749e-dfe3-4ee3-a9de-e1bea5739815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f13fc230-c485-4cd4-9823-c3880ef4bd1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04083daf-b2bd-48ff-8b0d-c7b8cc6e6b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0fbe40d-bd94-46da-a790-bfe34f9e1372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5c8deb-41d0-44d0-ba9d-737929d0c0a2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc69f4a-b13b-469d-83ec-0a10b38f3202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4979ae0a-65ce-4733-add9-aa9806c71f6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "025d59a8-ad48-4933-9126-f693eb2e0a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97e8e100-9f40-4580-9055-0a18410229c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2b436a2-4301-4a6e-984a-3c471ea39bf1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56032c20-c878-432f-9a27-f489f2043a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41856368-c18d-4926-baf4-6474c39fce7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21bc5038-f227-40ed-80b5-db3d8c233983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98027d6a-3ba1-4a15-8eca-3fb9d1a6f391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b139920d-7bc9-4194-afd4-297296346fd4",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f49615-0e4f-4720-b567-6efacc37a2f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be2ea3b5-adb9-49ce-9758-53866fd7c9ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0595eff2-9824-4332-80a0-0db5e2a2faa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30b11d4a-6ac0-4c26-b098-5cb482f051c3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "664092b2-2fb2-494b-a950-1fb508e6a0e8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "979ff56f-a2a8-4390-a739-422e72991305",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3887cb4-ae40-49b1-9240-4225e36b84f2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "79428ac4-9395-491a-9a2a-8148d7923bbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "659f53cd-6e41-43aa-916d-4e76a7655e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dbb9a75e-0328-4ce7-a239-d482864c4100"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc3c2588-cff7-4ecb-a4c8-1846ce15b2ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "811e8b35-5a03-4994-a29f-4631102cda2f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4fa514a-72ea-4d67-99be-56fb870ef6ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f3ce2dd-0e23-4620-96cb-a0a4013a3b44"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a2152be3-cbf9-4faa-b594-fd12ad20aeac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "df6b3052-7308-48ac-9f7c-45079c9d72d5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "49605a85-4e2e-474f-a3b3-f8b03cc6c680",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1111a819-d725-420e-b2cb-a82e91e34059"
            }
          }
        ]
      },
      {
        "id": "abdcc5e5-e09b-477c-9fdb-da9b2d728868",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "43bc1391-908c-481c-9ea6-27abd0919351",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0c677124-ddce-45e6-99a8-3ce4a74f491a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "279c804f-32bf-442b-929f-cc94c06c82d7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d602579-091c-488c-977f-3e725d9fea39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e994cfd4-ab23-4515-abf7-a7188e48912f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb85e3b6-cad0-4ba9-afd0-6197a839ddc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d051803d-6efc-4bd7-a655-e7b33a0936a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ba3541-b349-402b-8332-b89ecf27033b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28aba290-85e0-4281-86b5-b4fbdb17d67e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65181ca8-ac5b-4ace-a2aa-5780441fbe49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c42725f-04f7-40ff-b996-b2f91bf2607c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ec15928-d9e8-4035-a590-af1f9162898d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb926ada-9a22-4aa8-9483-10c2540fd45d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50936392-f277-466a-bdc7-25de25b269bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a509434e-d0d7-49f1-ad37-e76811097dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4df9053-04f8-400d-a553-dec2cc019889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "49bb593b-8017-4cce-86a0-e93ca9e54060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd9d996-e719-4034-9e55-0695ef33c240",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7c1547-8983-46c6-87f4-e680141f2475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb72a610-4231-4bb6-bba5-255b87ff7002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a474f5e4-67d0-4205-9d96-706f4ea12e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f9c12ef-c217-4a3f-a456-9dfa1949c344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a39faa5b-cc41-4279-b61f-8776beb33641",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da08863-43fd-47df-84d0-bf5a05343e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a6923d2-f32c-4cce-873d-95b4ec6f79de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "078f02bd-1d60-4762-82a9-18bf693b4984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c279e8c-26d6-4a68-9f47-8aee4c31dd1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b287d8-82de-4807-8f80-4e0e72f6386d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "519b96a0-7482-4f03-b4b9-3b5c095ed7fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d76ddf46-33ad-46be-9c0e-32052cad08d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a073da14-2ad2-4c52-bb70-39b80606f8b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f615b48-59fd-46da-b302-c7251835be82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce2bd4f-8cf5-4bbd-9aba-137b2eae39a6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b2cc538-eae9-4652-ace0-e5286136f918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "997f23f3-69d6-4843-870f-7e4b70cc2fcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5d940c-33b0-450a-8a3c-52e651e3828b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4142b5fa-cb89-417b-8060-70606cab658b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1ab844-cdce-420a-b938-c1780175cd5d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a7e7c8-a334-4686-b14f-da869a56514c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2874e29b-5b95-4c30-90ef-353c1a53007a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f62c39d9-88a7-4257-a88a-44631e368784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "68b45156-5ef4-4b8d-b865-c0bfee3d2822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0e2f53-e48e-48f9-acfa-ec710e43f8b9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c6e105d-7952-4072-89e9-b928bf756176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "243bb4c8-5f21-44aa-96b2-5f4037635c41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5121beba-f75c-478e-aa6a-0bcf08c56eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "28c9dfc8-852e-44dd-ac6d-60ffaeed61c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf4604e3-41a2-4ceb-9cb8-685058a761cb",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "087b282b-131b-4ca1-a23a-bb894966d602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "154c9e07-4102-4a82-ac82-96f0a81aeac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec7dd20-838a-4c80-bed0-86d2a01f9526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "844683fe-0923-4743-84de-f9bc188713d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2acf7544-b6fe-4282-94b4-85e6685d7365",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e64231-d96d-47bb-be38-9940f001b289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fae0627-b56d-48cc-bd1b-491c3d75f0fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7941d829-e674-42c5-824a-48bed4c9db60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "12f91e81-2b2a-44e1-9015-e2f48a813829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4c09a3-18a3-4f96-8d58-35fc940d35da",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc93695c-401d-4f1a-8d4c-54500cbde117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65541091-ec06-4414-8715-19891961064a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f1c58d-0a37-4d72-918e-17a3339631c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0fcae0e3-b35c-4cc8-ada6-2728e8f1a22b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff2d4fa5-ba0c-454f-94de-caf7a5e4d8a6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35100405-ef65-42cb-933a-165358eaf1a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bce60022-b2bf-4235-a67a-b6170b84f1d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47629e75-217e-4768-a14c-bb747b723505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5f22844-cc1a-48a1-8e21-9c145a10f9a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d80c9f32-344a-4bd4-a8d0-4c3a09021e83",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43c79a9-63b8-4cde-97a0-686300c54a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cd5626e-8ab6-4778-b963-0d7ca603ceb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c482e2d-57ed-43dc-8e9d-1bc98b30d7e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "33a19726-3672-44de-8a98-21704089aa52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8eba26-e5f4-409c-ad2a-835bb85a0daf",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a880733-3aa4-4014-93a5-4bd28c3b585f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9949c34-ac3e-44f2-876a-681dd0d6a0ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a549a9e-b3f2-4733-ac7b-83ab2fd5530e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "79b0ff37-0af2-482d-b752-89becf4d4ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "959e0f0d-a390-4da5-b3f8-8b881d3e5aae",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b360c699-dd80-4e7b-a1cf-df48c94fd879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "076bc734-c5fe-4d65-8919-64da66a8e26b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "265a327f-5a7b-4459-bd93-eafe41fb6ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "01782399-f182-496d-9beb-ab37ac362785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b86e5c57-d91a-4077-a968-336953067d23",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6812635-6f35-4163-a8bc-314038c6ed3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c40e3de3-cbb5-4d0d-ae48-c35d327a18ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c8ade22-d513-4bb4-8bcf-8d0243c45bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2efdb101-52e0-4031-b10c-3d7a89405316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c6f1db0-cb4b-4c03-98f2-73389e6ac801",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40d5a9b7-23b1-41ac-b94c-5b25dabdac85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16dbcd1c-7243-40e4-8032-e37543b335e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b77be05-3a7d-472a-bf65-6e94426427b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "16c012fe-de9e-4219-a462-33abf351e91b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "120f22b8-c4c1-47e4-a4f8-37bf6ba7b767",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd09bd0-53fb-4459-b987-808c3455ad61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "273619da-f840-4764-a935-266c9394a590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41347944-0868-4434-b2aa-3e2fd5fa25aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e81971c2-541b-4ab2-921c-4fcac68615d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f79bb930-8707-4851-8335-cb7093ce46d6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b39cd5-abb0-4438-bec7-c3d340050eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6963c11a-ffed-4c01-b05c-5332f6a0c876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed2e277-6390-41ec-a961-c220e23fe131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46012213-13c5-48f6-b046-fba946cb7a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6542cd1-d496-40b2-aceb-e370789dcafe",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5446445b-a34f-43ea-b481-d12300506a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab4b0848-5703-4662-aae0-66cd1ac7d830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d1c4f7-6d2e-4319-ae6f-9e55c2c1c2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82691066-2010-4f5c-be10-47ffcfaf2d33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc1cc532-b8e6-4631-857f-12f6e7400e7f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05d6ce08-adb2-468c-99de-56465aabda08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "856726ca-a02a-40d6-9c0f-2bb298a76d51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8645b831-f995-46db-8b46-26839e1b6ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c18ccd09-e093-4b6f-a868-78314eaa42a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa9ac8f-9ae5-43f5-8bab-863006bceb86",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b1f6dd-1681-43d6-852a-292e39b5b5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a53e8c3c-54dc-4c4e-9455-860b9b594546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c7bc3eb-e565-4a24-afce-3fc4646844e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b8b2d5b-f347-46af-8dbc-8e12ca8bd6c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b12b83e-ea58-462e-8fc0-93b379bdaf1e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eccce829-3042-47ae-adda-b7b1fcc8183e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1c92a84-d09f-493d-b188-e6a3ac2d136b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f49bb72a-c0fd-45b2-90d6-0d085968e7f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "964aa339-7748-4795-9f11-8f85e4a4934a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea33372-de14-41cb-b8b2-5df70e146389",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f844d631-65d9-4dd7-a7a0-8ac6276cf276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ec3a09d-37f4-418e-884f-d2aeae6bfd5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a21e03b-fd57-4fbe-ac81-2ce8c5386e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9207493a-3973-4553-bc43-0b92c4fae362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67322f2a-5eb9-4e84-8378-16c56df1db1f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b778e6b0-71a0-48dd-b4e8-eec4919de68e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcb69281-1650-488e-b61b-b4f65f978a62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3bfc79c-c8c7-4643-82aa-aaed5549c00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45331e9f-3d9c-488b-b89d-048018948d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a4725fa-55c0-4099-b56b-e16bd041c811",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "483fb6ec-eedd-4fe2-baa9-60c8e5229f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f15dda22-027a-40ba-97d6-207b70aed116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d58608c9-a903-4b5b-98c4-05571d49ae3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5be81ba0-0011-4369-afa8-4123a50a36ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c29a06f-6975-418e-8d9b-6a4af2b0b736",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8443bce-72fe-43c4-aa09-c88f3798973b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28d09f62-cbed-4ff2-a873-c30ac1401cf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce8f908-3a27-4bdf-858f-75b81fa32236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2731b703-5dc1-4783-bed5-539fc7a4eca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e8b595-fdb4-4078-9d54-cb8e42e92bf1",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d170c80-b96a-4fd5-88e2-d1e98f0ee1c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51abc255-bd60-4eac-8991-00080458b100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c2161e-3c6f-4cea-8c9b-1b69c90fad55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c32d44a3-48f4-4c09-8d8a-3d680686ac7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c50e54-ba63-487a-9525-cfb343758f57",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "873ce086-9012-4166-b1ca-a5528d1f7aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e01e98f7-57f4-4603-bbbe-3a8119dfa22a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f4244c-1762-4894-8d14-5d74974deb5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70b02cb6-6fa9-423a-8bf7-ec241f838b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90422620-47c9-4d13-b4f6-96cb38dc6ab8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c6f33d-d2fc-470e-b027-c124f21a546c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f821cd8e-1687-4eed-acac-2c729ae5ca8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a072d7-c64b-4829-b9c9-5a3349b91444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "503c8487-b60c-4819-b579-920dcd699369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab0ff2fc-6f88-4b1a-9286-e4eaca4f0f72",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1956475f-5069-405a-81ab-f119ef899495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbbf0c35-97bc-4727-8842-c5925cda870b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e175be52-8a29-4657-b3b1-7f76bf9e33d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9091cd5e-19cb-4b9f-8e36-cf43ae192756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa221055-a03f-456f-8ab1-3c6b5f59d02d",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd03ffc5-e0b8-48f6-8019-ef291b33cbfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97e81e6d-1068-4265-b046-480fb6cb72e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd9ea29-d32c-44e0-8240-bd3c7ef378f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5361448e-f570-4f37-a86c-699496a2c8e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77da8f76-8bd6-4e60-9f1e-63f208b2aa7f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45eb76ec-85ef-46b2-8f78-d8fe90aa5d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e530f60f-6c8f-4561-8706-bfd834fc1285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e57328-b8a3-4453-bcbc-c478451b2f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12729e6c-82a7-48b6-8ac3-0769bdf40813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f35a945-4c45-42bc-b70d-ad0c92ee39e6",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6486c885-6668-4530-b30a-f4cc6a372933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fca32c6-6f72-483b-a4c9-426b3cd964f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "644157bf-dd76-4649-98bf-512773d35cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1873c561-2cf3-4568-9493-a5d56eb1ac0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "513ddb76-662e-48d4-8417-8e5ec746bde1",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "118cd41d-1548-4333-b23a-4c5d626c02d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83779063-fa42-4d96-8b29-23ae106e91f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed43e85-7693-4b13-a0c3-7dce4482510e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc2e3d1b-52e2-44c8-8d56-a617c093aa00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b919079-42c3-40ff-8b32-38696303640c",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da14eba-ab69-430c-accb-47616acbd61d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d8925a-b1d5-4072-a64a-cd64d0c52fa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d0893e7-cb6f-4940-a29b-8469a2cfbd8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a519cb45-0aec-46c1-803e-186495a3cad1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7d83f452-7baa-489f-a18f-cc3db4b3ab0b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c6546d94-c61d-436a-a390-cdd6dc565098",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882a86f4-dd61-47ba-aa84-268b8ff9a707",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "02fbf252-780c-4683-874c-c9cb628855a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cda51b1-4822-4164-9c1c-4581bbf1e055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86d63705-5fd3-4d1c-887b-bc6da1624a86"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "95acea6c-6e2a-4057-8c45-14c79373b3c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab956ce5-dd73-47be-b723-d7a586fa37ec"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "255c9c51-9666-4e46-a33f-aa35b38176e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2c50ce0-e753-4ec8-8a3a-7e2ed8eb64bd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bdb5395b-fb05-41f0-8f83-afe4a5b026d0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "704b566b-ea29-4508-8030-99dc1a8628e4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fba8ccdb-db4f-43b8-b4c9-e78555e0f652",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5b576d09-b118-423c-8659-fe1e904accb9"
            }
          }
        ]
      },
      {
        "id": "c647d560-938f-461f-bfbb-80c9781dfb31",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "221d544e-a89b-4ab4-8d2f-4fba7c802968",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e9191f3a-96dd-4e7a-9b79-b526f1d7f136",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e9bfec89-6ab3-4718-8bbd-95ae383543c6",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e441f1-aacd-484d-aaaf-97bf6c6ad243",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a7dc5fc-781f-4cf5-ba77-eabaddf5e243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f174f9-50d8-49da-ab6b-573e743ddd05",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51905fa5-43cc-4f87-9850-87f22c1759aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81db1fa8-94ee-49e6-b1a4-ce72e010ed17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d4f854-b7fa-4606-82da-1181cbbbaa24",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c54cf9-b821-4529-b335-8c9229fb66bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7592b20d-3c68-4890-97d1-d987d299853b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85da1661-394f-42a7-b7e5-2a18a69fe45d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ba6ce8-8688-41fd-bad2-17e8f99965c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fe87f80-760a-4597-a473-8c2ccc0e787e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7253aace-690f-4816-89d5-ee58867a4be2",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b84976-ae22-4349-bed2-217f14ee4bff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67becd6b-dcd4-4b77-9a9f-328b0837ddb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc20030e-4510-48a6-b070-110e343fe39a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcef93f6-9111-4068-aea1-9869376cc4e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c779ee87-5663-4599-bf20-c18a249a0650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "205bfc7f-8097-40d6-b741-16b218fc336e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c84812c-19c5-4258-a4fd-0cee8cfc4733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b567c4e-eb72-4cf3-8417-f05d8be5c218"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa3b13e2-8511-45e0-983b-e7fab8c0dcb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a68ec558-0c4f-46d0-8f4c-0a07c9257974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051aa4c8-c6cf-4c3f-a68f-fb7be829b886",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f210dd15-7b4c-4c5c-ad93-c4bec8562c75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b5e5b2e-55f7-460f-a649-246b0a01dc17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f63b00d4-f191-403a-be11-7ca521433e5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97d80dd1-b4dd-44b1-8134-b10a2a94b046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1210d7d3-febf-47df-8340-88592cee27f3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49efe7bc-2984-4fdb-a288-4ade4148c946",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89941818-a855-4805-9d04-210124e6c8ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dabd5b56-759f-4f81-bac7-c980cc30889f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bacab07-d3d3-4bb9-b41b-4fa30fa70ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c5b758-b4f3-4b0d-95d7-0ef1b99dc99e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd1f143-3a9e-47d5-a5c7-74568b8108e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2f7f794-33ab-4c94-b87a-793df50d53a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5bd5b24-111a-4b61-8dbc-aa7419912f2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24a92414-5959-46d7-ad34-79f99ee929ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c915c823-a653-49c8-bb24-253d7cff4185",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30cc6b94-0538-4c69-8c13-cb2d28b6a810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8aca047-d642-424e-a26d-c181c67b0f7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f8404c-a297-495a-a65d-408ab3ea62cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02a3bb69-8763-4b47-8807-04087933ac43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5987f0d-af5a-4b09-9ece-581431eb98d2",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6eac42-8929-4028-b980-a6d749056a49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fa3f68f-66a1-44fe-ba79-9040b4f7c747"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9091f0e-8601-4f77-a439-e1d7708ac102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73e3c7a1-a264-49e4-bfe5-6d9770ebf824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb8f4e1-5f70-4269-a2c1-c25f1179286d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c64527f0-a29a-4276-a607-819b27872373",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4af2940-5498-4069-9d36-f01bc2f7a824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88278e9c-2f53-4fd8-b2d6-363a6fe6fbd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2534868a-13d6-4489-9edc-94f0ab3676c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d73600-024c-462f-b250-124ce21457d6",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce645fe-51a7-4021-87d1-444158baaa81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8a0d171-ead4-4bcb-9b7f-079efcd220dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57cd6751-fa40-4a09-a7d2-044ac0d9cc99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59d074cd-6f6d-4881-9fce-5070f46f3bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0465cae2-1d40-446e-be9a-29d36f8c965f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "919c5eb6-471d-4c70-b1d8-53b5be59def3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18e4e5c5-a48c-4383-82c5-a849019e4c99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4397e564-f115-45da-b051-8127543931e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49b86509-8758-4784-88a2-fdb39ad324c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e638b6-fb32-40e9-be64-d039bb7cbcf3",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e2b596-62dd-4f65-a0e5-1c3c0b172729",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "716bb714-f4d4-4140-b855-facc0baf548c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d19720-1912-467b-b401-8a51bf307b79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74fd445e-2d5a-4118-a4fd-67fe7e4dcfce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f807753a-52f2-4c20-a85b-6bd1ddf568eb",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b689a82d-af95-4ea0-830c-eff6393f3583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f646d348-1c2c-4f5e-80be-0d91ae623834"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bfd6afd-0055-40af-9cfe-a2e8aea995d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df346a09-868f-4595-bc33-46853798b94a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807019d9-f382-4bad-bdf0-930087e6b01d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd18dcf-f774-4b3f-849c-59d2858e6a99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41f1913c-2ddc-4c7c-948a-1b3c6d3f77a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db53064a-90a9-4ab4-b746-69281e85b3de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f0dcb74-d111-472a-9a32-22c70ff52544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fa2c0f9-fbb7-44d3-bad6-24e7dc153769",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d106f4c-c89a-43ab-9ea4-18dedfdce244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db62f207-9d14-450c-8931-ad4b7e5b4d74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c7d209e-e86f-4b2a-8942-e2867b475ab4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5c46fbb-f2c5-43fd-9715-7508fd43b178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "035d9088-1bd7-4d2a-b47a-708ca8a480f9",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956d6c91-2909-4817-b4bb-07cb8bc83a8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1bf8147-d81a-4550-aabf-bc2d2b44a975"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c079d554-ae28-4b3f-874d-a1777df51ed7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cabe642-7654-4f02-9b5a-f063746c54bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3426d99-81e4-4aa9-b531-d735c05523f3",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c77663-fc9b-40e4-8ee2-888454acb353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2759ac3-62b9-453f-ae1c-04f70c30afeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86647d4f-41a9-449c-9453-370b1f473be2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba30149-d167-4246-8d4c-10892a77e066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd76b081-f64d-4ed2-a173-e38d1fd656ad",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4de856cd-9464-4d18-b8a4-e22a28471061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39304e5b-cf09-46d1-8d79-bc4df85bed30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34395ca1-310b-4962-9885-bd8c7809c5a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eda4ad44-3283-411d-86fa-58e319577ba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a2baa5-d3d0-4591-ae1c-09c7ca2b4900",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3453616d-af5d-4720-a7b5-b4bae11c421d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f922453-7490-4186-b9ca-40197ce359ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a7dc39e-2667-42ee-9a46-fb6fff5fa03f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db261179-e6bf-4354-9ea8-1360e819ba5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c245df48-9c63-4404-957d-31b8ded05147",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72010e36-c702-422d-834b-ef0fc1b225eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6e4a85c-0f56-47e9-9294-b2e4583be7ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3ea7f8-7018-4101-8ffb-ac11ec014fc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e237256f-b9c7-4e02-a431-2b2019031f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "009785fd-90ac-4d25-9768-319d9938662d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e968ed-7d5e-4dd6-9b6a-67fd5568e6bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bfaca5b-2baa-47aa-933a-64a6d6414243"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da61aa7c-77a2-410c-aaa2-cf5d44dd6030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9bba8ae-7309-4abe-9b52-e7997532d456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28e6a08-cd45-4be0-bb77-ac9cda30592e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "927a8b20-d0d3-47e0-a1fa-66a3e2625435",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c9556f1-e0e7-4330-8471-3c238f59d2d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df3cd3e-17b9-4785-bd14-df769f27153c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a015b82-e5eb-4514-b745-afea1c861a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1696eb97-bfce-4d27-ada4-cfc39690ecdb",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3178db67-dcbd-443f-8626-445cd20d7854",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba769017-406d-4757-ab6f-8a90364cc0c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f5a4db-1285-49ec-ab30-f411ab67f6cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ce114e7-5bfa-4e5b-a341-7fe272bee8bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "558eb0a4-a9eb-4995-9e8b-ba721266b8f1",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e6b81d0-0333-4cf3-a7ab-cfeb49fbfc35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a028e2b-50e8-425f-a546-94ada6de5ca9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4789da9c-84d1-48e8-b459-10ef4f856aee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "398a6b56-b582-4974-b828-ef42de2f0dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac61d12-d1d3-4cdf-95cb-e3a114785fdd",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a4adbf8-e703-4a83-96e1-621f72ced3b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b48dce17-3fe4-425b-bf78-7a8af2399285"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "527e5681-7a6c-48eb-95f6-44b5c5d77473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b937367-2235-42da-b91a-f2cc2d6fbbfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87db1898-0cf2-41b8-9f07-6342064a133d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7afebb3-6b25-456c-9935-0d1f600f94d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f210dd86-168a-4a79-82b1-5bd7fed50b8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d80778a-1e44-4ecb-8cb1-1f77376beda6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89d5a326-747b-4489-8865-1b51b8f82eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141fdcd1-a816-40bf-bb42-249b9e0def03",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5679bad9-e25f-40f4-8ea8-7c48c2e040fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e32d863-5276-4c50-9f72-00bab4e2c3bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9836d4e3-63c4-4365-8cc3-be18174aa19b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "723d3ba2-bb07-46d5-9b39-fb3820bb0b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eda5fcc-9445-469d-a2fc-5c225c2f8e67",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "823b86be-aa9a-4e1e-8d84-fd5fbead9f1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a3ef5d5-95b3-4f7c-a7c6-92fa9610ea6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2827ef13-e31a-4817-a2b5-81e517e0e21e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "346e00d5-b7b0-47ec-8e77-8dccc7f6d6cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d79ee9b-9a33-468e-a443-5d1a4fa28f30",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f36722de-67a9-4447-947f-29498aa35a48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bb57bec-e720-448f-8268-b30fc2a7a1d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e7e279-b4b4-4a88-837f-6d6e778723ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da8f9bb2-cf41-48be-862b-1eff7369653d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "833f5fb9-2dcb-4d8e-8905-68840012c67f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a716e520-a281-424d-a5c2-6fd74a97af4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1169577d-7a21-487a-be6e-f81798fcef8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcfb3346-f1ba-470b-99cf-d96cfe3a3697",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a1a87d0-9fa4-49a2-9934-a67f934cebd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69706395-6d09-4a36-80af-b85e364c3387",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d97c08-5d24-4d2c-b3c5-0f79e7d2f510",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29f64aac-8611-45b6-ae03-c8bc040c76e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db8a0a5b-3d8b-4faa-b791-16524e9a448b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "155cb938-d866-442d-aeee-6f56f96b5337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c62fa928-5695-469b-8106-5ecb7228b0e6",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e0331bf-bafe-4efb-9890-56a80a9df747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa6335d4-1e8f-431d-bc8e-fc9e19fc2afa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa5d188f-9d5f-4aea-936a-7679f340f71c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "322e31b9-30d2-4037-aee7-8b3dfcc7a434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80367b3e-1627-42b7-895e-5a06220a4a7f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0712f3f7-66fa-4849-ae10-922cbe00c1c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2581d9e6-a530-4b73-8a85-09f771512798"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24cdbeb9-213b-44cd-9548-c69a11570bae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "735983ca-3e76-4bc5-adf9-9d47e4b1391a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e72064e2-1116-4c4d-9b0d-046f7c8ac876",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "887cf54d-b110-4371-b5ad-998a92ea6bcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55c686e9-05d1-4b7d-9509-bdb42eeba4d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "543c52a8-1018-4806-9ea7-e98b2b5a7bef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb22c581-0350-493a-be8d-b65c31062015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cea86ab-46dd-4bd3-9f58-9e2faddc5270",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f522875d-56ef-4fb6-9437-affcf43f1bd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fd5f9ba-d4a5-4516-b281-3a3ba7d4615d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4587db7a-5f2d-4adb-9354-42e457e81490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4269e26a-2c4a-44a8-bcda-fbfc9d4deae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40cd1a90-cbc1-44a6-9e67-3f830c646c4f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4143ad8b-85bf-4586-921c-2cf48650425a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e984b39-7979-44ac-9450-849ec15e5416"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da29326b-9f78-45f3-952c-8ccd9f196396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42b95cb9-f9f5-4268-b9db-8e735b0ff335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d91eff3-f14e-4d69-9d7e-712ca4dc1bc9",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fff6775-c7a5-4e3b-a82b-89e05e6ba897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a39e0e49-c06a-4308-b541-1519452fc37e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9499a7-fdd0-4acc-8ff2-5b44cfbd6c1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd7c22c5-3b0e-4092-9483-d06c2d142d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f226acf5-bc7b-408d-b0eb-7c77efcf72ff",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7305d8cf-26ba-4d90-8280-343885e94b3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b594bcec-ab59-43a8-93de-977e90fcf85c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "685032ce-93ab-4399-961a-46650899d81f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05bb1d26-8244-40c5-a50a-f831cb89f7d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ba2180-83ff-4be6-9e13-0e83ad92c66f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "207b60bf-a0b0-4b70-9bb7-56c753b66612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c20b6e54-8ad4-4c81-b1a3-d68df705e52b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b93211d-4924-4e0c-8b83-cb8ca10823ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b210a652-faa4-4bcf-9073-0a2b7cf73fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbaef3f4-4366-4edb-b104-0f5e94460723",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "201db7ee-c398-4df3-9c3f-36f8f6bf36f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df37a569-0c27-4ce7-8fe1-a4d62d41dc17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ae64b3-0595-4230-903e-d1206bf53f3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da2b10fb-9978-4c95-b063-a390c0bd0901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86c2b27-bf02-4567-bb78-e5cabef4beef",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc37105-0318-4370-9b87-6eeb9cfbb41f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d217c05b-ab5b-4077-8438-758401071adb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1908d15a-31e1-4a9a-9777-a1bd443cbb45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07133ac5-03dd-4415-a5d8-44f703e0883d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5de4063b-29d8-461f-8f2d-063dbdff7205",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4d98f1-c672-4dd9-9a36-c5eaa9b1784c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b26cd6d8-840d-4d55-8790-e0fefe3c18ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e2b856-a4e0-4a34-a3f1-7d989275c94f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc50a5f0-3b1a-4e7f-9b75-3bdc0cb386bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d17d96b5-6281-4533-b244-8a2629847cdd",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c1ab56-f3cd-4563-8a7f-a173ef7d95e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20b04509-b5e0-4206-99a0-9b762fa00902"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c75bb3ba-b243-4370-8ae7-59fcd6414d19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75c0f46d-3f64-4530-a2e6-4619e589648e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "593a03a8-01e1-42ad-b875-22bdf5183803",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc9be95-4814-4bff-aa46-91f254d9b08e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e42bca90-74ee-495b-8fe8-c86df6f7c1d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b6c2c6-2137-492c-9878-3907f3243460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88915b77-ff3c-4660-b287-a34d4d368f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "720e3ccd-fd72-47ea-a27a-18cf9e7b1f10",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d413ee51-f3cb-460b-a8f7-76e8e1fccda5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "809ef903-8a74-4ff0-9975-5fd8b29dad40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd3ccedf-8365-48d1-aa8e-05640e5b23a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1189e31-97d1-465c-9fb2-b72e2933b7c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec8961a-e92b-4e7b-8149-24d793a77c6d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7754e4b4-f201-410a-bf3c-1878e91801c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b211a22-9b39-4d13-a1e8-b0fc993b9511"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a51661-a251-43db-ab46-71f9b9cda5af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a131758-1665-404c-b488-e761012226ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "851007d1-b89c-4f21-8dfb-ddfb6f6fc8bd",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa909a88-9483-4604-a6f3-354c4cfb807d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d603dfb-1f1e-4dc5-8640-3ecab4474f8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "585ee8f3-f958-47b5-a3b0-c5dda97d1de4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef5343bb-e448-4751-a9ae-bc5542a64c85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2952385b-822a-4f63-a3da-c1b249148e26",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d82dc7-190e-4203-bb94-d3d6f17b9fbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed336777-d05d-4154-b8b4-d5fb2a3b523d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71f8f89-a490-4fef-944f-d05efe823164",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d3153e2-97ab-4633-bad4-deba3d365d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc48e5e0-03d0-4a36-8283-07183dd118f6",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "058ccaea-5e68-4a13-81a8-7fe5701f68e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ed81ab4-f945-4157-8af4-6f2628e70530"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b627dd03-4b67-4bb6-83a4-ee3e4f1e81d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a4ae1fa-da63-41c8-a963-6fe3216c048f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f088cda-fd8b-4786-9aa3-9f192b7c6f34",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2410eecb-278c-4f73-a9f5-65e350a99e03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de6f03d0-166b-4222-81ff-341c2d743bce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de2e144-e5fc-4103-bb0c-c8c076c383cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3d64b94-d85a-4f15-b503-3c41011f4e60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670421a5-9a21-4fe1-b371-c201850f2d5f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c9bf2e1-1b12-4ad1-bad1-72ecd6d229fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb3920af-b4f6-4a39-90dc-d57b01bd36b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc1e992-e49a-442d-9c40-8bd492c9bd2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b08edbb-09b5-4abd-a135-34585d26e0e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce531352-d1df-489f-a5e2-afb920c72160",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4202ff87-1954-4e1a-8751-39d39b3dff70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c4dea15-987f-4863-8940-02c919c4c8c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2878d30-6aef-4ea1-9877-f097d88e1829",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "816d84b6-6a71-4832-bc88-5eaf8278413b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de6799b-0c33-42e5-a33d-500d93dba726",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb778f8-32fc-4ed5-b2bc-3c7d52b138de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e20b373-cd90-4158-b798-0235acf8d76d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f61afa3-f186-48e7-91ba-2274a40cf1da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a5bd45a-91cd-40b8-b7e9-371ee20b6fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34e57e75-9baf-4135-98b3-ccfab7f891a9",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31486620-60d7-447b-ace5-3080d5dff038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8489e4dc-9f77-472e-a779-a315a340abba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a258c750-6091-4ad6-baa9-184089c4bd77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64709528-8668-42d3-a1bb-f9018f532d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c68b910-d2b1-485d-bf19-1e31fbbd884f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1c88bb-7e60-4e4f-bc54-80ad076e3a9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5ad1de7-9f02-4781-870b-0b7092ec17e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86967f33-79e4-4c22-94a1-26891033cfb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7c814de-0745-4308-84e0-b2c34ece17d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7917685c-4b10-45e5-8c44-0adbce6ea2fe",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b00dff9-f652-43b8-9a65-094eff85b6af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41f20007-5e79-4c06-b03f-d8e0e8e64817"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "644161c9-43ac-4989-bf5e-c85d46c1b960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "288dbb11-703d-46c3-8168-81476b2c886d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76616b73-8abd-4ab1-82de-ed2c40c620f2",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "583c9b4b-b1f0-44cb-8b31-4635dc97086a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0e7bf97-0e9e-4bf7-9974-c17fa81db92a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "099d127d-c292-448e-8639-c43871c2f372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f8f1b6b-0e20-4bac-96ff-e8ab801385a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd9b2675-e2c7-4186-abcd-b1973633a683",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0648587d-c275-4dc6-8b7b-0db15a80448a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49d27993-68ca-48b0-b754-d60cb9ffa79d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb50c15-027b-413b-9129-b3c7e19c38ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "447af085-9394-4e7c-9e8b-5b70ccb54963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e250839c-45b5-4c31-a29d-180156d774b9",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e85166f3-d1ee-47ff-b353-8fa541553c72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be9a0dc1-bd3f-4b7a-afbf-706f5ffd8735"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b839ff1-f0cd-4370-aad3-133220fc7599",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12519e2a-8525-4b5a-9210-905480f27d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f7b7222-e198-409a-a3e5-93d6dcb29490",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b85c550-ba4f-4362-8aea-15a0d0e5256f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a26ed5e-4ec4-40e1-aa3c-56cc8c31e0f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df04986-4617-48b3-9427-c006a40e520f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9714b83f-c99d-423e-a00e-d1dee76f1e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b2c09cc-f729-4d12-bc53-f34bc154f345",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a2c1a97-58b7-499b-8a74-6930d42594cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f12b5340-57a6-4f45-a62e-d85a169836a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2189cdc3-8c39-4ab2-b85c-70ecf2d0a945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "857429ef-8230-46c8-9c3a-4bbfc44b25f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db0e5ff-3518-42eb-9c6b-435345a1a06b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47230bd2-e5f1-4ef3-b872-ecba4447cb62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3753e19-588a-421a-8ba6-aa729334d556"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c488d5bf-c0d7-4a9f-aaec-bfc5d2cf808b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f7ed313-1ff5-48d2-9943-9654f53a94b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ebbab0-e599-4b5e-b22f-754328cae25a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf66799e-3696-4174-bf22-1e2f3f1c31bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c765a21-4715-4315-b8ba-f6e4ae74caa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d7061a-dbc4-4ab1-b36d-0548aa5e1f5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "759db2fa-b500-42a0-af21-bee7fead7453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cad6c68-9fff-4bd5-aaf4-369021a57684",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b347e7a9-b2c6-4194-a851-57a6ffb96e26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb1facdc-6cd1-4fb2-be94-3a5bfe638892"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d69449c6-1aee-4882-a970-b66aec37b757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c88783cb-eeee-4483-b102-589812bae305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b17ae05b-961b-4259-96b4-87c91fcc81ba",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fbc36ad-e169-4fbb-841c-257cedb5993b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44ccaa8c-328e-424e-a2a1-514a45b3f705"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55b344d3-10b1-430e-84ba-9c7c421ab872",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20f22863-16a2-48ae-895b-134f6556c898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "663f0110-d434-4ee6-85b3-f0b073bed356",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb36a9d-9d77-4278-995e-87c08042ae3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "615c3a1e-ee62-4687-a70c-7ed4c65efbba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "294dd8bb-3207-4eb8-915a-412e17f35e6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe036d1b-16aa-4dc9-b014-977d03171874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b560164-5e6f-4bd9-a588-90ce89884a26",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5584248-014e-4dfc-a65f-030c94783e6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15aabddf-00c9-4eef-833d-9281a3800e10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a0b28e-3dff-40e7-966b-876fa3fbe633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f8b6a1d-73a7-47b6-b79f-508a98d65d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8337d7-31e5-438e-b623-fc40720fbac0",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "562e9756-95b2-4687-9627-00f11fab41da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "701a7b38-1dab-4316-9d6f-d05ce94b44de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0bf0f41-7828-4b44-b9b0-40d656cc4e7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97b59896-ed4b-4772-8743-5848d0aa7a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d0ded0-9bc7-499b-835d-98752cab2dcf",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe7da87-01ba-4e96-bd18-593d78a9bcaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79580bd6-8248-4894-8b9e-7f783b79fa75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aefcebc1-e659-4486-9cf9-e4b5e788ae88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1554b349-b44f-44f1-8a04-b8e34693ba2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb251b5-7f21-4787-9222-910fcf4a8f3a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7caf434-adc6-4174-b529-465e4ffc227d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cbc1591-ccec-4440-b88d-1f653796c84a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6859e80a-3a3e-49f0-a28e-7a7765e64904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e99743e1-aa97-4346-a11a-66ea78da8ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa9c10d-923a-4f2f-8933-8327082bffa8",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc64773-316e-4115-882d-e14946d9a3f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9962bdfb-0e57-4687-bed8-21ac32748dfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b11430-4380-4ee0-8f01-6cc4ac87ef63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a06b066-5a41-4c1f-abdf-ffbbe62b321e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44cd1776-a5d7-4f8d-afda-692b1b40d557",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc07ba9a-c51e-4611-8d60-25dc1a44a097",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5a31e0e-2b39-419b-96ef-f95cefd86df0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bdf2a10-d619-4d46-b97d-9af74835cd06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6411fb08-4620-47a6-b11d-f74455b83cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdafeb51-1682-4a88-a377-a07daae48565",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab97379-0fa0-42a6-b256-7e3f547e8e78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ab835f5-ae07-4216-94d8-4b8f5d3167c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f0d5109-fb17-4acb-9f41-0128f9a7da8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b87c09c4-0b20-47c2-9a47-9db15a4345f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3675f412-6c20-4ece-8086-506f281cc874",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d5f367-918d-4805-a880-5dbc3174d067",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99e5cdfe-e2df-40be-967e-1c09a82c8f92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49945682-e0b2-4f67-b8f8-8d0e52915dc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2e1173c-3fa9-4e92-83ec-ff42194ba701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b32279-a2ef-4196-9979-87abcaf69c27",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08aec6bd-b6c0-43f9-b878-c0059a1fa64f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c5e1b9c-face-49e0-a007-58ab0d1e3c38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4696481e-4c40-447c-9aed-74c02da47d8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bd8b7bf-ebd3-4b09-a5bc-109df8a0673e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dea158b-fdd0-418f-be31-6b2458c8fc65",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f2ffdd8-26fe-4314-883a-7adcacfc9363",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a592666e-624c-4474-b5b7-56558f567558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b9dd5ba-934b-44f6-94df-b88eb2a26f8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d979d600-72a1-4dac-9f47-4243fd1246bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5be88696-e1e1-44f4-bbab-ff2dbe18d3c4",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac04c037-ec28-4ec4-b762-15735f91b289",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e9fb509-7f19-49fa-b80e-78366d698abc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d07da07-6103-42e2-ab1c-18d79907852d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c3c3b83-28b5-47f9-8323-97469d3eac7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2873a1b-1ec5-45a2-95c9-06bb0b224c07",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d97781da-4742-4197-8157-be4ade9770ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65d68a1e-8dd7-46e1-bba6-13cf8127af0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f97414-6fdf-4f3b-a998-5fe015404620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f0104be-03d1-48d2-b98a-64dd9505ad8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd243ec-2652-463c-8247-d58d4bbbe163",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e14656-7c3a-41bc-957d-6ec7e54e01db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16aae421-7217-46d0-8846-389f3526d80f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a618980f-af66-45ac-9719-d29eea862046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "120c863e-4bf6-470f-a191-8db0dcb5be76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e733e74e-3c5b-4846-8ece-5e464847c400",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e40198-3353-4626-8f18-831e174a2884",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17109c35-237c-4d82-bf88-c35cfc7b2152"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b936fa5d-d3c8-4d3f-80d4-e6c6783e09d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f495c74-6834-4b57-b9d4-41f8050e5fe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0680ceb-5571-4e24-8ff5-d6dcc08afcd7",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "636f9347-4837-41cd-908a-1ddc7e164fb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ded992b-1c4b-484a-a075-98e15da988e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a56b60-d0a1-48fc-8322-887a11973769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f341bde0-3d6e-48b9-aded-b4fc3df8d81c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c34d066-9226-44c0-a7b1-a30cdc9fbfa0",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcd72b66-52b2-4777-bda0-997b3f416822",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b46442a-90fd-4f1a-abf5-a6b8f07575a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8039be98-9149-4265-99f6-d66ca41d84e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b609b77b-aee9-4de0-9b75-7c9c97650bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "473fc73a-f4a2-4b9c-8635-5ba56722f457",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610a96bf-2c0a-496f-baeb-3c3897284142",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15e82fdb-1f38-48c3-bbcc-3089d7883677"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e21e5542-2ce3-496d-8873-fc9fb7412529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b62d817b-c87e-4a0c-a358-43b04aa1a10f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d1ad40-ec4a-43c2-972f-ab16b2073655",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0bedc8a-074c-4de1-b02f-622d3af373fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4314a162-b37d-4723-9e19-92ba0c66bfb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b11b096-e8df-4c33-8a5e-5fbc4e92f2a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21313feb-7c5c-4680-8b1a-3dcc55100191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75db3279-d694-4b45-aa22-32d118d69cc5",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1639f568-6eaf-43f5-8975-733ba9e49484",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38b3d347-f0f5-4fe6-924e-23133726f467"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad896ca-4d8f-4bdd-9168-c062e7af0746",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec14c396-8b3b-4df9-92fd-15b7ab60534f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59db352d-2efb-4fa4-84b1-3ae25ed9f1f9",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1c5502-2d8d-4486-8b34-1145e529195a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb88bc8b-7e61-4d01-8c61-2ae7802ac39d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea6221e8-e69b-47ec-9c6f-7c7ac0a4d734",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18e7635c-77e6-45a9-b3f7-9f96e458354b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a6017a-4bf8-460d-a594-f5b3603e8528",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1303b498-0991-47a5-b122-f3034d8a1980",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9501597-3494-4404-9098-2ffb25f060d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10cc3665-2e4a-4aca-bc85-f6d4e4e92491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd00d4c1-7bda-4a9f-a07e-e278c069a2de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e34991d-faed-4b85-b0a8-687311fa3f52",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01228449-5e82-4321-965a-cf99b89b5e38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84609594-cd15-46ae-a656-eb19af5062f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62650673-8e6f-43e5-a905-924ba99022d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d17c84c3-2f9d-40a9-a4e4-f23272c7d6cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87038bb-f191-43e2-b2b6-3e0ee75d501a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2afb9626-5c60-4339-b06b-8a781dfcfcdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdaee0bb-0649-4e72-904a-ba3606ba49ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c5f6508-c836-45ac-950a-2fd8b06908fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03486448-93c5-4c7c-a5f0-54a7f99549ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf21c119-d758-4b6c-8fd7-73a62db42e51",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09574f7b-0391-4e66-b1e2-c15666526370",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3813c795-10b7-45a8-98e0-a0e29d3b1422"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b261938-3b27-4a36-b198-745fb2c4fc43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27f73c18-b8de-4ef8-82f7-9333b3f8a356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3909a021-82bc-453a-bb50-ec19ec51dd95",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "439e0d62-b293-4dc6-a89a-f181f57c14c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc7e8535-882e-4669-bce5-c2c64d13437d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e78bab-114e-4da5-8ef7-f0006da7fcb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d36c8fc4-f3e8-421a-af98-0f302b244c47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5780ada-2195-4493-90f7-fe6ed31af80c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "777a9ace-4851-4e35-a8c2-637d041f437d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fd079b7-a45c-47fc-a8bc-5438cc2faada"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d960b9-3ccc-488b-a031-89efda9ce372",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9b67dd1-c551-4638-ac9c-840b5a61b33f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cc054db-7059-4793-b998-73b8060a6166",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "839362c9-6257-4dbc-a977-01e2e39d10e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b88cae7-1120-48f9-b05a-9da601b817f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b73cf81-d6de-415f-861e-9c03e8dafe22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf93f28b-d3c9-4632-b72e-3d35d6748cae"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "343914a3-c27a-449f-a61d-0bcb0408112d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "41b8d99b-5e4c-45ac-b941-dcaf1f44378e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4dfe1a67-3b2e-478f-99b3-6dcf5436cc3c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ec446762-2513-458f-9ae1-e13c9f5f51c7"
                    }
                  }
                ]
              },
              {
                "id": "75234ec8-7649-40db-88b2-05b85737813d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "29b7ee50-e897-433f-aeff-c76c0040cfcd",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1704bcb6-ae22-4cab-a80f-fab0a9f284ea",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "573e54e4-2130-4524-9d16-43565a092b48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e99242-6707-44b4-9c91-95f11466deba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9138863f-a932-4066-be14-5a46c65d4d9d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1fe6f660-3880-4c4f-b35a-8fe4175fc6b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "632f994c-234a-4e0f-8d16-c603ac6b7460"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1304cdf3-86ee-4f12-bc20-57e692cf9c23",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b0836168-d6da-4fc1-bcee-08b4f34a94d1"
                    }
                  }
                ]
              },
              {
                "id": "c3f903d8-4545-4458-a100-46ba63cc5ace",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e37ee790-430a-4393-9c56-8b62659f0fad",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0048fbdc-1103-4f29-9acb-e4a758bb6d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "fbd92573-fc24-4068-8df1-2c1506585045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924c1595-a6b7-44ba-8f30-34e9dbebe7c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8886cd6-605e-463a-bf5a-88598c36adc7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cad8b3dd-7f56-4fde-b78d-2672495e4580",
            "name": "Positive Testing",
            "item": [
              {
                "id": "edf4ff1e-52c3-48b9-be6f-af7b02f23ada",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d196b1bd-ebc5-4866-86ba-4975f9ea7c16",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cf0c05a6-2649-451b-a77f-546454a6ade3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3593149b-0654-411e-8056-27f7f8caee2d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef89fcf8-ed7c-4174-8348-793ea6d58a21"
                    }
                  }
                ]
              },
              {
                "id": "2fa95c58-da61-483a-8615-5b6d5cfc3e6f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2081d95-dd56-4ed2-9e52-4df92bdee494",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "292291e3-dddb-4fcd-9799-415646ce9006"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "00763322-845a-4a44-a477-f4dfdc4aee83",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b129792-eb2b-4b2a-9a21-ec1032cfe056"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aff152c1-369b-451c-84c3-43c3bafa8166",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "cd4bac0d-02c6-4e1c-8aa5-4ff6e374ea49"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f6c2c5b2-b9fb-45a6-a26f-fe71e338581a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "59c864e6-f54d-4acb-983d-7413ba42d5ff"
            }
          }
        ]
      },
      {
        "id": "3d2520ce-5665-4ae0-b233-90b9cf306c0e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "8644a200-b392-4ea1-9d01-6d2c1bfd599b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bdb4afbc-bc8a-4d55-ad76-7de885edc412",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "229a9e71-3e62-4b12-885c-03490fc35b77",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71483ff2-b923-4c2b-b6fe-a7223005fedd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "24fb5fc8-a0da-41d5-9a60-645e34896415"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d47c2ca-4233-4167-88e3-969f115c037b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f6aa03d-a87b-4398-ba7c-c233516ac997"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1607a3b-a524-4a75-9164-9bc1dbc05e78",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ac70399-f9fc-4f19-80e3-bd8081f22423"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "183b0326-6828-4f27-8247-b800815dee02",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e120190-852f-425e-91bc-cc88295def33"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b58dd1f7-8987-43b2-872e-236d79a2b9bb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b07af100-5d62-4d11-8742-c37fef5a9665"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "77204f11-bee7-431f-a23b-38a99d6d4f71",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9d18df16-7392-4fb0-b09d-202bcce25333"
            }
          }
        ]
      },
      {
        "id": "6f734a7e-cb99-4fd4-bc75-975f65480bd5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ddabd519-8629-4a5f-93ca-28b20303709b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e0eda323-c98a-4e6e-b277-891f0cfea6fd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a9a297d0-ec96-4d2e-b52b-3e040ebda04f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63aadece-f9db-496f-bf1b-da1c7e47a097",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a3ec409-5660-4f56-a41d-3864e740c6f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "517d30db-32ab-4c93-b615-e7c3ee508956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef4917e2-d439-46c2-8a55-b66d30015c45"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e26eefd0-074c-4aed-9d44-af6166ee15bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7b65ba4-0bca-4356-bb21-e4af55511662"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "50549317-e87a-4c10-9423-f1ef5ff62cff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58304109-2c5b-47c4-8694-ddec27551512"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2a58d1ea-42e7-48eb-a7e7-99606e5910a5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3003b45e-73c6-4c72-8b4a-9fdc91391e38"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3f96441b-77e4-40ff-89bd-6900e7e33583",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "45d5ed05-c951-4803-9283-b2b46c3e3a48"
            }
          }
        ]
      },
      {
        "id": "d6bc13bd-e98b-4512-9ca0-c77494b48117",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "6b649f60-b1ec-4f56-b0d8-9aca635daf8a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fd645aa0-c247-49b6-b8cc-dfd673e631ca",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f254bab6-5572-48a9-a3fd-1ec9cff86cc5",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14fe9b0d-ffc0-45bf-9d3e-b124b73b11da",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6425270d-1e84-40d3-8ee8-67c7200de0f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ca4f64-9409-4aeb-a7c0-12c810e036a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c0520ec3-734e-44bf-9227-c02301ce30cb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d904749-f48e-4e73-93b3-2602db9ebdef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a1a3e674-e0a0-4347-b9cb-416ed019430e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a5c9f2c-2c9f-4d9f-a5ea-05767293e49d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a1bb1994-d6e2-4972-b72e-f987893584d8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d5852c3-549a-4a0c-89b4-514db38311ee",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1a3e8edd-25a2-48bf-9cf5-3842b43ee854"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4c721612-ce9b-44ac-9cd2-eb9cbda17b1f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d4b64a3b-28d5-4c51-9b63-e10eb9ffeed1"
            }
          }
        ]
      },
      {
        "id": "aa61ce22-5eb1-4aab-be9b-09681180b047",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c0ee8a85-3571-4876-b484-23e175af1898",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7699e16c-eb55-4147-9c65-a93d6063a87a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f00a6796-f886-4226-823f-33ab8f824cb7",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8dd07060-7afc-4da1-a683-3682366142f5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "46451d2c-8077-4c3a-b4ac-9239cf5225ea",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 13.364912280701756,
      "responseMin": 5,
      "responseMax": 291,
      "responseSd": 23.83614012103256,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1702686923997,
      "completed": 1702686936920
    },
    "executions": [
      {
        "id": "52576806-4abe-46e3-98ac-abb1423fccc7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9455b241-79df-49d5-8280-2e8094c7470a",
          "httpRequestId": "7dbd29a2-2013-4712-963f-e40545c616cb"
        },
        "item": {
          "id": "52576806-4abe-46e3-98ac-abb1423fccc7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "adc1ada6-f0e8-4071-9913-cf5b5606a9f5",
          "status": "OK",
          "code": 200,
          "responseTime": 40,
          "responseSize": 0
        }
      },
      {
        "id": "43fffd06-dd6b-4432-a327-484633bc9399",
        "cursor": {
          "ref": "158fe5b8-8ff0-40ba-a499-c5909df89ea3",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "4c78ca5d-d2a6-4744-80c7-6bd0825f12ac"
        },
        "item": {
          "id": "43fffd06-dd6b-4432-a327-484633bc9399",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "5f534072-9306-4902-85fd-338445d7fac3",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "06fcfea3-b000-4aac-bc30-4d08d5211dbf",
        "cursor": {
          "ref": "d4d9e305-cfac-4d15-a1c5-e37f893c264e",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "3ff2e0cf-6718-4bc8-b269-594733294773"
        },
        "item": {
          "id": "06fcfea3-b000-4aac-bc30-4d08d5211dbf",
          "name": "did_json"
        },
        "response": {
          "id": "d72cdf38-c99f-4321-8c67-94f5162eecab",
          "status": "OK",
          "code": 200,
          "responseTime": 160,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1affa0c9-1249-477f-afb0-fe51af76e461",
        "cursor": {
          "ref": "f3160d04-c38d-42f4-8fd4-25ecd59ab39e",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "edbf77fd-1f5f-4c3a-b9d5-9eb3d5010256"
        },
        "item": {
          "id": "1affa0c9-1249-477f-afb0-fe51af76e461",
          "name": "did:invalid"
        },
        "response": {
          "id": "eecb4845-662f-4919-875a-e9272440136e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1affa0c9-1249-477f-afb0-fe51af76e461",
        "cursor": {
          "ref": "f3160d04-c38d-42f4-8fd4-25ecd59ab39e",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "edbf77fd-1f5f-4c3a-b9d5-9eb3d5010256"
        },
        "item": {
          "id": "1affa0c9-1249-477f-afb0-fe51af76e461",
          "name": "did:invalid"
        },
        "response": {
          "id": "eecb4845-662f-4919-875a-e9272440136e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd12aac-0ef9-45d7-b1bf-2740aebd6d73",
        "cursor": {
          "ref": "5907d8c8-2b3c-4c25-92ad-07b55c12d5ae",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d939c085-0d76-4843-b6b1-d78c876c6bf4"
        },
        "item": {
          "id": "9dd12aac-0ef9-45d7-b1bf-2740aebd6d73",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ef93e830-2fee-4b54-9738-4254bea25c8c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 53,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc426bd-5bac-49d8-98c4-e6bc87a68cf3",
        "cursor": {
          "ref": "0361b6fe-e37f-4dbe-89ce-5ad8aa522a64",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f203dcea-1c83-42e3-be34-ea0a3e360e59"
        },
        "item": {
          "id": "6dc426bd-5bac-49d8-98c4-e6bc87a68cf3",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "6e859914-a06b-4595-bda6-00855b24a150",
          "status": "Not Found",
          "code": 404,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf5eef7-1c0c-45c3-9d31-d71cb0b8ff0e",
        "cursor": {
          "ref": "18c718fe-b3c8-4472-aa6e-72f0e5fbb664",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6fb42312-720b-4a09-8f73-c558986c82c2"
        },
        "item": {
          "id": "2cf5eef7-1c0c-45c3-9d31-d71cb0b8ff0e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2615453d-5fe1-44ff-b552-d75dfbcc871b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c922a2f9-a85d-42db-8a9e-4b9e1954c424",
        "cursor": {
          "ref": "45cf4450-2268-4885-bab7-16be4222cb57",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c5b03dc5-215b-41fa-bfcf-57cfbc81d034"
        },
        "item": {
          "id": "c922a2f9-a85d-42db-8a9e-4b9e1954c424",
          "name": "identifiers"
        },
        "response": {
          "id": "a52c7a28-8eee-4688-8a46-f7aa9236e28d",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d4bdf3-7afe-4416-917c-b53e67ddf177",
        "cursor": {
          "ref": "640a0268-5505-46d7-b4d8-c77eca0cb054",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8c7f7dbc-f6bb-4d37-a572-319cd042dd1b"
        },
        "item": {
          "id": "d9d4bdf3-7afe-4416-917c-b53e67ddf177",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "99942675-121a-428c-b203-247255ce409f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e00c7ee4-9187-48d0-b857-edea8a650377",
        "cursor": {
          "ref": "f8dfd595-3ce6-47da-9888-c63855472aa6",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7eca79f5-89b4-461c-b287-55fc25c91c40"
        },
        "item": {
          "id": "e00c7ee4-9187-48d0-b857-edea8a650377",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c5ef3699-6501-45cd-9faf-517ed5e6253e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d3adda-ac39-4dbd-aa03-dfca6b696669",
        "cursor": {
          "ref": "4d281885-85b5-4217-9baa-46ec353a8dbc",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e9a3e4b3-a67a-460b-a8fe-d1962627e51b"
        },
        "item": {
          "id": "a7d3adda-ac39-4dbd-aa03-dfca6b696669",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "66997fd1-1b66-40e4-8c34-c68a0b7c2100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b7d36c9-98c1-4315-912e-467bd67cdff3",
        "cursor": {
          "ref": "6a47c88b-d95b-4b08-bf42-0bd0e7b92d5e",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "48990af9-edcc-459a-aeff-5a2e2850e699"
        },
        "item": {
          "id": "9b7d36c9-98c1-4315-912e-467bd67cdff3",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "480cc6f8-6b3f-43ad-b7e9-705aa0c7ce02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "046a6246-5362-4493-a83a-e5f35fe515f0",
        "cursor": {
          "ref": "b41f5f51-e433-400b-978b-2282f92c6993",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "3b6c81f4-4e81-4700-8f9d-a0f1520b4472"
        },
        "item": {
          "id": "046a6246-5362-4493-a83a-e5f35fe515f0",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d847e961-da61-48bb-b2b5-bd5b9a1d7c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd23e98-d971-40db-8ad6-8177995dcdf8",
        "cursor": {
          "ref": "ca380c4b-bf15-4efe-ae55-dcbb9ec6485d",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "fbd7ae10-99d5-4ea5-93d9-60e515aa6792"
        },
        "item": {
          "id": "2bd23e98-d971-40db-8ad6-8177995dcdf8",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "15ef1493-b80b-4241-abeb-03cc6e81a9b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f4609e0-3800-4ecb-9619-ac75c36fbac1",
        "cursor": {
          "ref": "ef9aff48-70c1-41a0-bfd0-9ce78883414a",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "836cc53b-9002-4e5e-9f03-04a4e561f722"
        },
        "item": {
          "id": "4f4609e0-3800-4ecb-9619-ac75c36fbac1",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "332e798a-4e65-4c74-8e1f-d2d1888003f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a12077a9-6802-4889-93a5-913e2bde4bc3",
        "cursor": {
          "ref": "64ffc9f4-3cf2-4159-8402-cf52ca41e01a",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "41dea000-32ce-4b5d-85fa-b3a0410a6e56"
        },
        "item": {
          "id": "a12077a9-6802-4889-93a5-913e2bde4bc3",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "edd27a5c-6ef7-42e3-ae27-367d69b28928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa25abd-a1f0-4334-8e6a-5fad3213facc",
        "cursor": {
          "ref": "76d7c31a-409e-4cf8-b1f5-c6c16159592e",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e2feb65e-2c0b-4ae6-8d19-b5d439f0582a"
        },
        "item": {
          "id": "9aa25abd-a1f0-4334-8e6a-5fad3213facc",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "1ebb32d8-654f-4c14-bbfe-378c16ac92d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2251ca6b-73ff-4236-ac20-759feede64c2",
        "cursor": {
          "ref": "814510c2-e0e6-4dbe-a47d-cad0dbe4f8ef",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5274979e-eb42-4c4f-90ca-882cfe6a2bd2"
        },
        "item": {
          "id": "2251ca6b-73ff-4236-ac20-759feede64c2",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "514da8d1-1ee9-44d4-ad9e-808013d00381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f98143b-19e9-4bef-b945-7e05e0990966",
        "cursor": {
          "ref": "eb2dfeea-38ea-44fc-945f-37592687e9ba",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d02f4b35-a1a6-4180-a7f8-19b4aa39250a"
        },
        "item": {
          "id": "9f98143b-19e9-4bef-b945-7e05e0990966",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a22725bc-3038-4a76-8b07-71a9b29d5d81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed642680-c72f-4af8-bf3e-46829c4fa60e",
        "cursor": {
          "ref": "edad9081-b330-4ecd-b7ce-e79bd21a5bab",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4083c32e-8f49-4d25-ae43-05ec7a1aef6f"
        },
        "item": {
          "id": "ed642680-c72f-4af8-bf3e-46829c4fa60e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "51ec3eb3-2745-4754-936f-d50aca9227dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e6d9e8c-1cbe-4ae6-b855-0f6d5e163c0f",
        "cursor": {
          "ref": "8a4be69d-5f4a-4604-b3da-74d0d5fd849b",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "05fe58df-5f2c-423f-a094-4ca3f89b3d44"
        },
        "item": {
          "id": "7e6d9e8c-1cbe-4ae6-b855-0f6d5e163c0f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "48ab0602-1c47-4d17-b42d-24a27c812b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2382dc1a-5105-4d48-9f86-cb70984a4215",
        "cursor": {
          "ref": "8e1a842f-1662-442f-af69-c7c700db838f",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c7376b48-4e29-4cf4-8f0a-8dc77a1ec0d1"
        },
        "item": {
          "id": "2382dc1a-5105-4d48-9f86-cb70984a4215",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "18c6a68b-59f1-426b-80f7-a0922d8a8043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6684195-0376-466d-a594-40b0e3ff49b8",
        "cursor": {
          "ref": "14e4e066-c3c0-4cad-911b-72ff7ee2abc7",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a2161d7c-af50-44d0-9259-74eea38275fa"
        },
        "item": {
          "id": "f6684195-0376-466d-a594-40b0e3ff49b8",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "cba27d79-8bcf-4547-9d13-3d91ec029387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29373d12-185e-489c-9a55-cc23649feb29",
        "cursor": {
          "ref": "974200ec-8eb5-4c4b-bd21-03c2619b6b42",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "89a552d7-ab90-4e61-9abb-3edf68aef911"
        },
        "item": {
          "id": "29373d12-185e-489c-9a55-cc23649feb29",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "eb1154f4-77dc-45c2-985c-cb62e0c2ade7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d230b4-0a6f-43f5-b7c6-03bf262b71cc",
        "cursor": {
          "ref": "cb0b1ae4-34f4-4dab-90f5-56aeb28e15fa",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "695fa5c5-8477-4e18-b8dc-61456dd1cfea"
        },
        "item": {
          "id": "44d230b4-0a6f-43f5-b7c6-03bf262b71cc",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7956f317-2904-4853-aa7d-289936caebde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "427aa1e3-3196-444f-b97d-afe698967df1",
        "cursor": {
          "ref": "86581148-1b53-4872-958b-8a52b0bb96ab",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "4e44c6e4-8a37-4996-8843-2dd6f87baa2b"
        },
        "item": {
          "id": "427aa1e3-3196-444f-b97d-afe698967df1",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "cf1c7b48-7673-4817-8271-54ad93bc62c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38773d2-cc85-40c9-ac8a-2a0a7b8eebfe",
        "cursor": {
          "ref": "b35ec9ac-003c-4db7-ba41-94ec871e22b5",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "9bd44593-f230-4bf4-a0b5-3a83ca36c8f7"
        },
        "item": {
          "id": "a38773d2-cc85-40c9-ac8a-2a0a7b8eebfe",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "0eacfd4a-e19d-48f7-8ed8-66152ba376f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5ce783-19a8-416e-9d2f-d3215923d74e",
        "cursor": {
          "ref": "615dc924-ffef-4fc3-854f-3c8a6583ace6",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "abd09f75-a72e-47c5-9568-af3c13f01f42"
        },
        "item": {
          "id": "1a5ce783-19a8-416e-9d2f-d3215923d74e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ba5468bd-ed9d-4139-8274-b0ad663ecd17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e7783b3-6261-454a-8e1a-e76cd949a885",
        "cursor": {
          "ref": "f73e8bad-ade6-48ca-b65d-e64091643a7a",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "0482d8a9-2f7f-45d2-969a-e20b6c53e1c6"
        },
        "item": {
          "id": "6e7783b3-6261-454a-8e1a-e76cd949a885",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "115a6f7b-4e9f-4d6b-9aab-feaf717e2067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d08aa7-3c63-4cf2-a3aa-f391d710b8ba",
        "cursor": {
          "ref": "b658e644-5d3b-491b-9209-a5d47eae16ec",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "869f4c66-2d16-4bff-8a13-944ad6fb4b95"
        },
        "item": {
          "id": "b3d08aa7-3c63-4cf2-a3aa-f391d710b8ba",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "9a084ef4-9c99-4f07-ba74-006bc1718c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b3966d3-dad8-4003-b468-119b3eb984f5",
        "cursor": {
          "ref": "2ab87cd4-6722-41dd-b4d2-f4d8e445754d",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e94e67dd-8403-4c89-8529-d25aaf757b84"
        },
        "item": {
          "id": "4b3966d3-dad8-4003-b468-119b3eb984f5",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "8fd980af-af48-4bc9-8c8d-b9d66cb8351b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bfe3a88-72a9-41c0-ae29-b49406911615",
        "cursor": {
          "ref": "8c9aa2e6-ee9f-469a-bbf2-8c7b9d328da3",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "87701f1e-b5d7-4f0d-b225-f1d644f41906"
        },
        "item": {
          "id": "0bfe3a88-72a9-41c0-ae29-b49406911615",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "23dc1490-8b1a-4322-89c6-68e17a2fee15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a65b9b-22ce-4d43-8279-4805dcc3b499",
        "cursor": {
          "ref": "6f9cccc4-b868-4da3-82bc-25b487321639",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "668256b3-2c19-4743-b9d8-f51ce04fd520"
        },
        "item": {
          "id": "29a65b9b-22ce-4d43-8279-4805dcc3b499",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a52afd7e-77c1-4772-bcf2-04256ecaff76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef0213b5-40ed-4d00-bb43-c90e61b8b10c",
        "cursor": {
          "ref": "aa14ea83-92e6-451c-919e-0e05e7bf698a",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "543dc622-814e-4a7d-b65e-31ed88164e16"
        },
        "item": {
          "id": "ef0213b5-40ed-4d00-bb43-c90e61b8b10c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e29f2de1-f304-478b-b218-5da0a3c421f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e578da-e2ff-42f1-8b04-12d56da04e2a",
        "cursor": {
          "ref": "684698a9-044a-4e1a-9fa3-3a7a9605726e",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "bda97984-268b-4205-80bf-03df9b84dc53"
        },
        "item": {
          "id": "26e578da-e2ff-42f1-8b04-12d56da04e2a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c8b9c911-135c-432e-9bbb-87ca70fc482b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8668e49-4671-469f-ac15-ae6f3e91ef99",
        "cursor": {
          "ref": "e9f01dec-fc95-4e53-a255-f1c58a740d6a",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c2afe01c-90b3-418f-b8e8-a7cdf6aea6ff"
        },
        "item": {
          "id": "d8668e49-4671-469f-ac15-ae6f3e91ef99",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "3146ebf5-0647-4726-9120-326a73804c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa5f9be-f5cc-43f8-98bd-302378fb691b",
        "cursor": {
          "ref": "4cf7c58b-fc5a-4cbd-9031-e93e08c16065",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "5f915fd7-5893-4bcc-b2bb-1a4fc43c0eed"
        },
        "item": {
          "id": "7fa5f9be-f5cc-43f8-98bd-302378fb691b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "01afe36a-eee1-4025-b730-66cbbff12899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d32c1ec-2fc9-4efe-9dc6-4aae6b63a0d2",
        "cursor": {
          "ref": "eb2ee90b-c9b9-4904-aedb-da2a7529b522",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a9fac49d-5ae2-47ea-8a43-3e5f3eea9957"
        },
        "item": {
          "id": "4d32c1ec-2fc9-4efe-9dc6-4aae6b63a0d2",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c1186e65-748c-4602-b80b-5bd124ec2eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60bd451-973d-4a16-86bf-366d2a854e6a",
        "cursor": {
          "ref": "a9333fa7-7916-4326-a1c2-0f60e8c48a3e",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "45e51b96-1ece-4732-aa97-e1998db5ffb6"
        },
        "item": {
          "id": "d60bd451-973d-4a16-86bf-366d2a854e6a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ccfe5c8b-d850-40fc-ac93-3a03576b43eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b31ad5a0-26e7-4326-8901-19270240ce63",
        "cursor": {
          "ref": "862f1677-516c-4e80-addd-ec586ebc2995",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b2f1d80f-6d74-47f8-b559-d2e4049ebf29"
        },
        "item": {
          "id": "b31ad5a0-26e7-4326-8901-19270240ce63",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c5db9e1e-a12e-48fb-949b-8e74c4484e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "320a89ea-37f5-4d31-9222-827844233b25",
        "cursor": {
          "ref": "6a97acda-0efa-48fc-94e0-c5be7df81369",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ab3f63c0-e8ef-47d6-9685-73b35575bdb5"
        },
        "item": {
          "id": "320a89ea-37f5-4d31-9222-827844233b25",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "6ff17739-5018-4de8-b7e2-3b33dc7a2f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2515713-7268-4cd6-a549-c6271d9cc7b7",
        "cursor": {
          "ref": "28f8e2ee-94de-4231-a5ef-f6336b3e43af",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "1670f0a8-029f-449e-aa5d-65f37a270dd4"
        },
        "item": {
          "id": "f2515713-7268-4cd6-a549-c6271d9cc7b7",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "436a0027-8f0f-48ec-a30b-4500ec548fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af0a4d2a-8e9b-42c9-991c-b692225dccac",
        "cursor": {
          "ref": "5cc2e7a4-63b6-49aa-b6e7-d20b984b26d4",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b2382f24-94b1-4ffa-b9d2-11220ee1cd5d"
        },
        "item": {
          "id": "af0a4d2a-8e9b-42c9-991c-b692225dccac",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "6a4ed74b-9c0b-4502-a205-eb9406f043fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309991a7-6efc-49c5-872d-fa1267b4b430",
        "cursor": {
          "ref": "899f08fa-2b38-4608-95ce-c6fd5ba10b9d",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ae367ebd-1173-4be8-bdaa-673ee7c096ea"
        },
        "item": {
          "id": "309991a7-6efc-49c5-872d-fa1267b4b430",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b29954f1-90ec-4229-bb20-68fe711df098",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 33,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e16ba8a-5117-4a15-b335-1b0e4e0bb451",
        "cursor": {
          "ref": "d7edb264-62f3-4fa1-b6ad-c862e4bc207d",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e88ae381-b429-4c9e-b265-0cedfffc6fef"
        },
        "item": {
          "id": "6e16ba8a-5117-4a15-b335-1b0e4e0bb451",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "3d93ab1a-92b2-4dd2-90a2-8c3fdd08d87b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e14ea5-37f4-42e8-8ce8-b48f7d4db243",
        "cursor": {
          "ref": "e27c5beb-a1df-4605-8fba-13653c87c2f7",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d319752c-f240-41bb-9900-7a04f7c45e6a"
        },
        "item": {
          "id": "e3e14ea5-37f4-42e8-8ce8-b48f7d4db243",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "45a21c60-d40e-4a8a-b450-96714067212d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb47761-72a6-49fc-8b8b-58ede50e1b7c",
        "cursor": {
          "ref": "aafdf77b-e3a0-4668-82f8-ff04aa622c9b",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "fb09cf85-e1e1-435d-bf70-da204e307726"
        },
        "item": {
          "id": "4fb47761-72a6-49fc-8b8b-58ede50e1b7c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "97e70c00-07d1-4458-864e-d2409a5cac31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a241d3a-b28c-4b76-8445-95a037003423",
        "cursor": {
          "ref": "82ad2284-5216-4d79-86c1-277327bb6d66",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "fb708c57-f763-4f4c-abf2-499dd4f6cec9"
        },
        "item": {
          "id": "9a241d3a-b28c-4b76-8445-95a037003423",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "af3e86a3-5004-4589-8d5e-6d742c1c59dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a85650c1-ad26-4f40-91f5-2a147634324c",
        "cursor": {
          "ref": "bf09a8ca-f3af-44d9-9bca-42120e1e493f",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "198f1d40-8bfb-4127-a642-3a3035c538c6"
        },
        "item": {
          "id": "a85650c1-ad26-4f40-91f5-2a147634324c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5c092221-9a63-403b-8c62-cb7cb025164c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5488e86c-43cc-4b42-a12c-42f49fae4ab7",
        "cursor": {
          "ref": "16dd26b0-03b8-4fdc-a43f-88f1604b676b",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2c8b9a12-8889-4f9a-9a8d-bf1e06ca970a"
        },
        "item": {
          "id": "5488e86c-43cc-4b42-a12c-42f49fae4ab7",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "6fb93fb4-b768-460c-a2db-36b087cf63e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32aec98e-eb38-4f46-a33f-8dab1e273e2b",
        "cursor": {
          "ref": "bc8bec30-45d0-44b7-a7ed-8a82506fcd68",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "f1277436-ce17-4fd7-ab88-46e090c73b29"
        },
        "item": {
          "id": "32aec98e-eb38-4f46-a33f-8dab1e273e2b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d45813c2-594e-4b19-9826-1ff288facec8",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 25,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38318d53-9d66-4dd9-9278-10757338c199",
        "cursor": {
          "ref": "89d6678f-27da-461a-91eb-e21ff56607a7",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1d3da1f1-4519-4057-950b-9e78b39b8df4"
        },
        "item": {
          "id": "38318d53-9d66-4dd9-9278-10757338c199",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "629da5e0-e6c4-4346-8fdb-f1c21070a648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "040b530e-b491-43b3-94bb-c6a2993029a1",
        "cursor": {
          "ref": "5db7127f-c64e-413c-90af-74852ff01b48",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e380acbf-8ec9-42d2-af5f-4565dee6d30b"
        },
        "item": {
          "id": "040b530e-b491-43b3-94bb-c6a2993029a1",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "56a5d537-9b74-4d75-9bb7-d34157ea16cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "273bb26e-8ec0-45f6-a60c-e3466f3b37ec",
        "cursor": {
          "ref": "364ee499-b067-4461-aa27-2e1d9ce84cbb",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "824688fe-319c-4aa1-a905-06ed3fe64bc7"
        },
        "item": {
          "id": "273bb26e-8ec0-45f6-a60c-e3466f3b37ec",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e68fa16e-fedb-410e-aa4f-aa4e9f2bbd9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b9851f-dfc0-4878-839b-34ca92574a28",
        "cursor": {
          "ref": "81cddb75-6bce-4bb4-a9ef-b577c86a64b2",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "83f89730-d813-4aed-b967-3ca9a36aa525"
        },
        "item": {
          "id": "34b9851f-dfc0-4878-839b-34ca92574a28",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "6103a66e-ed87-4550-8811-6343bcba2050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a1ee9ab-805f-40b7-8a96-5f8ebb255074",
        "cursor": {
          "ref": "be4695e0-919b-4d00-9616-b3f1c2698b4b",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f97fa13f-aaa6-455f-9a51-fb76cdb97aa7"
        },
        "item": {
          "id": "7a1ee9ab-805f-40b7-8a96-5f8ebb255074",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "9eb8e399-cc99-4a79-ace3-d8132c2bfbc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ac1182-1070-45e0-94ac-e5a4513dcad4",
        "cursor": {
          "ref": "d88462d8-1840-42ba-843d-969836a1bba9",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "529b910f-ebee-4496-b290-fe796d92382b"
        },
        "item": {
          "id": "07ac1182-1070-45e0-94ac-e5a4513dcad4",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5fba4103-77ad-4156-946b-e3e20dfdb7c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602aaa3a-0723-4b22-9f98-901003904bc9",
        "cursor": {
          "ref": "0c7f19b6-55aa-4220-aee7-52cdb146ed4c",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "977a2717-4229-4589-9e80-305a6faa66b7"
        },
        "item": {
          "id": "602aaa3a-0723-4b22-9f98-901003904bc9",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "3c46656d-b26c-443b-b8ff-dfc86e9e6de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f850670-f542-4827-9beb-5bf8c8e69d74",
        "cursor": {
          "ref": "f8e2ba80-59c8-4a48-b73c-a6d7bd2488a4",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4326c3c5-8ced-4a76-8395-89b28b8d693a"
        },
        "item": {
          "id": "8f850670-f542-4827-9beb-5bf8c8e69d74",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "67891314-421a-4bcd-bd69-ce413972618d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e1a248a-6e8d-4ad7-8d65-9a211e1bf278",
        "cursor": {
          "ref": "328048f0-b17c-41e5-aeba-3d464ff552fa",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9e6c7937-472c-40ea-9141-3f50e0d8a3e6"
        },
        "item": {
          "id": "7e1a248a-6e8d-4ad7-8d65-9a211e1bf278",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "6a02d5b6-56db-4353-b568-e64f329d3893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e36034a-e530-4ec7-b9ed-7126cc6be1e9",
        "cursor": {
          "ref": "91d25bcb-50a5-411e-9263-ce991ca75213",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "47e07389-f72c-49c1-b6f0-2f3de86e95c5"
        },
        "item": {
          "id": "8e36034a-e530-4ec7-b9ed-7126cc6be1e9",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "2bf96690-e864-4180-b298-3aab0482bd50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f074e99-32cb-4e6a-b34a-30fb4e9f6394",
        "cursor": {
          "ref": "2d51fdc5-e1e3-446c-9781-ade1b32b568b",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5a3c18e2-8fd2-455d-a623-36590d0937b4"
        },
        "item": {
          "id": "7f074e99-32cb-4e6a-b34a-30fb4e9f6394",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "71c969a1-0f2b-4640-a230-784de8c8fb43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0db2812-c71d-4407-9b66-f1a881da97dd",
        "cursor": {
          "ref": "ae4963d4-20d9-4e64-8013-51dcecc96dcf",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "cfffcc53-439b-4810-be89-25481515e9b6"
        },
        "item": {
          "id": "d0db2812-c71d-4407-9b66-f1a881da97dd",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c38d292e-a02f-45d7-8aee-7173071133d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e98aa8d-3714-4539-a4bf-240ed3cf27e0",
        "cursor": {
          "ref": "4edbc08a-123d-461c-8ecf-68ef2660960e",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ec8a7718-b944-4db8-9713-371cd6e0a856"
        },
        "item": {
          "id": "1e98aa8d-3714-4539-a4bf-240ed3cf27e0",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "1e2ddf9d-3fd1-4df3-b1ff-d411e3bb3ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edca7e3f-7bf1-4e82-a18f-b09240188b9d",
        "cursor": {
          "ref": "b726b146-49b3-43c3-8d1b-5a5c1c4dcd11",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "06efdf8f-299a-4149-bde4-b63efd173992"
        },
        "item": {
          "id": "edca7e3f-7bf1-4e82-a18f-b09240188b9d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "bd709175-0c8b-4d3e-8d7f-fe878fbcf7dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a84b9d5-2e68-4606-9b8e-0c003b5c7ec8",
        "cursor": {
          "ref": "094abeb6-1bcd-4d0b-9b6a-32851d9d9390",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f989d551-c1f1-4b3a-8c89-274858f2e254"
        },
        "item": {
          "id": "4a84b9d5-2e68-4606-9b8e-0c003b5c7ec8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "90efea3a-40b9-4693-b957-a62e6bf074b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d412ad0-8466-44a4-9a0a-bc456e942847",
        "cursor": {
          "ref": "a62ba344-8a0e-4c34-a54b-8147a3c04fae",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "535ad12a-2738-45ee-9fab-bbb9beafdeb7"
        },
        "item": {
          "id": "1d412ad0-8466-44a4-9a0a-bc456e942847",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c9af1751-0684-4555-bdc1-81518d5a3ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c95202-918c-4f28-8f8a-86a9df9feb48",
        "cursor": {
          "ref": "0c9c0f10-67e4-40ec-9651-9fc6920e2dec",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "adf22671-5ec0-4788-b5a8-cfcc01103854"
        },
        "item": {
          "id": "56c95202-918c-4f28-8f8a-86a9df9feb48",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "cf3c7709-232b-441b-8c60-c23a5915742d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f3a06e-16ef-4344-9ae0-92cfd1b0716b",
        "cursor": {
          "ref": "925eb750-48fa-4dc1-ba2f-ea34e1855965",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6d3af3db-3bb2-4860-9ab8-eed7ddbf01be"
        },
        "item": {
          "id": "48f3a06e-16ef-4344-9ae0-92cfd1b0716b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "9e0dfeef-eb6a-473c-869c-c2187552ab64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e88b466-5696-4c61-9d38-05e6452f075a",
        "cursor": {
          "ref": "54dd2aa9-2593-4c41-b8aa-41708a5f6b50",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e9e839d5-586e-4695-b36b-5ac7036afca7"
        },
        "item": {
          "id": "9e88b466-5696-4c61-9d38-05e6452f075a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c9ca689e-1f75-4bd4-be94-d843c827d37b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b21b759-2dc1-4e11-816c-cf801c0417c2",
        "cursor": {
          "ref": "5c395f9e-ccf9-4707-ae0d-3dd12cf07d3e",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3dbcfd05-3466-4bc7-acba-173668ea25c5"
        },
        "item": {
          "id": "1b21b759-2dc1-4e11-816c-cf801c0417c2",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a75afa7c-7d85-43f3-b50c-2b4f33cde7f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31581eca-3b77-4f90-9158-b3fdd59518d1",
        "cursor": {
          "ref": "1bcf2c25-0e6b-46a8-bfb6-7dc7e3211873",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b715e42c-20a1-4a7c-bf97-024fadd071d8"
        },
        "item": {
          "id": "31581eca-3b77-4f90-9158-b3fdd59518d1",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d06fb15c-5e83-4a41-bb60-bb2c2f4813f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da09a309-c506-4307-a1c5-43148397a2f7",
        "cursor": {
          "ref": "8c66d285-7d2e-4cae-b554-4f668b41c377",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "34574536-3c11-4685-b921-663014d26746"
        },
        "item": {
          "id": "da09a309-c506-4307-a1c5-43148397a2f7",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b132bbc5-e8cc-411d-99be-34e05914f08b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b84ee361-7e68-48e9-86f8-b2ad6e3d93b2",
        "cursor": {
          "ref": "89f736e4-1330-482a-9d1c-21c36c666f04",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "fd19b483-0402-46fc-a663-8b4bf1646100"
        },
        "item": {
          "id": "b84ee361-7e68-48e9-86f8-b2ad6e3d93b2",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8cdb3b25-3840-4563-9071-6e9dc265146f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91710fe6-2435-41a6-bd85-3999cf70c0da",
        "cursor": {
          "ref": "b431b4b1-5d80-41a8-ba92-8c2dd9ebf564",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ee95148c-f299-442f-8fa0-df6c23d7df70"
        },
        "item": {
          "id": "91710fe6-2435-41a6-bd85-3999cf70c0da",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "798941f2-6cdc-496f-b4a2-0b4e460ff59f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35f6470-94a5-4d71-b82f-16cc636b9ee8",
        "cursor": {
          "ref": "0d6b80c6-2d7f-4f06-8f06-a8fe12f76e67",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9d0302d6-2b0d-47eb-8772-ee3f8e970f7c"
        },
        "item": {
          "id": "c35f6470-94a5-4d71-b82f-16cc636b9ee8",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9e5514b1-8429-4b9a-aeb5-2fbf744740ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0a380e-d0d9-4294-b521-8ff079e87615",
        "cursor": {
          "ref": "674e7d80-b11e-4c68-b3cc-7cd1dde6d422",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "5fe9c468-0142-4ce2-9be1-f6a49795c553"
        },
        "item": {
          "id": "8c0a380e-d0d9-4294-b521-8ff079e87615",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "25f153d1-af70-4508-8a5a-8f5b0f9111d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c59d70-92f4-4129-9127-181e9db5e9fd",
        "cursor": {
          "ref": "fc3b098e-485b-4778-ba0e-d24992b995e4",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "2cc4fb73-120e-4b85-9962-00918d5bbd51"
        },
        "item": {
          "id": "93c59d70-92f4-4129-9127-181e9db5e9fd",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "924bc879-5f77-4cb7-81de-fd116844918e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e502a54-de25-4d26-83ab-d3e2e8c63018",
        "cursor": {
          "ref": "927dd9ee-50b1-4aed-a17d-febdc7d60036",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5c0967ea-4926-4bf8-975d-f3b70960ed2d"
        },
        "item": {
          "id": "5e502a54-de25-4d26-83ab-d3e2e8c63018",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "dbc957bd-7deb-40b1-9fc7-472c2abf4aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c48a01-3d32-44f4-bdeb-cd35324fcba2",
        "cursor": {
          "ref": "d8f6e525-4f5c-4424-b043-a3ac246f049d",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "547c6baf-ffd4-4ded-a7e6-99fd9f46e4df"
        },
        "item": {
          "id": "d5c48a01-3d32-44f4-bdeb-cd35324fcba2",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "277d7f05-82fe-4ec5-8272-bf20465caaaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "075b0124-a090-4be6-b661-4106210a4777",
        "cursor": {
          "ref": "c7a61e08-dd0e-4cbf-89bf-3e22fd0fb367",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "277edb00-a28d-4c85-804e-cda1d5b3e383"
        },
        "item": {
          "id": "075b0124-a090-4be6-b661-4106210a4777",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "eac94ba1-59fd-4a04-a65c-5e15b215ccd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280a1148-3db7-4e8e-990f-29ccaa170d9f",
        "cursor": {
          "ref": "d12eb769-7aaa-470b-a762-f40efbf6b338",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "76f9a127-5d10-4a3a-93d4-e98d7c2cb571"
        },
        "item": {
          "id": "280a1148-3db7-4e8e-990f-29ccaa170d9f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "273ab354-d713-48c7-b57a-ac338950b0e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b676c030-08a3-4993-bdfc-21e3daa45e94",
        "cursor": {
          "ref": "cd9ccd09-8af4-4616-ace3-b8c88cade624",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "36852555-7efe-4971-b533-d3d3fb8b0782"
        },
        "item": {
          "id": "b676c030-08a3-4993-bdfc-21e3daa45e94",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1ee0be44-fe0c-4564-a845-3ec062e4d3b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa83700b-abe6-4d01-baee-14d3961c1388",
        "cursor": {
          "ref": "73c2c925-34b9-4951-aa99-86f245fa3eb5",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "106d5161-e3f6-40bc-b5ea-a3d71acdf5a1"
        },
        "item": {
          "id": "fa83700b-abe6-4d01-baee-14d3961c1388",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b5c26e00-3221-4e6c-839d-8fde0a224d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16ceff5-c1f9-4a82-9c7d-1590a1cce830",
        "cursor": {
          "ref": "4841a304-8fa6-4ec5-9be6-4d1e573a62db",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "8a6127b1-a0b6-4aeb-a6d8-a486cf6daf2c"
        },
        "item": {
          "id": "d16ceff5-c1f9-4a82-9c7d-1590a1cce830",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "9f593151-ecdd-419b-8f9c-4e0aba38a661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8259dc-43aa-4174-9926-7f0c0ef0be46",
        "cursor": {
          "ref": "185c3d3d-5519-497b-9efc-dbb91601c32e",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c5e240d2-f8d6-4791-af98-5946ec3d8643"
        },
        "item": {
          "id": "1d8259dc-43aa-4174-9926-7f0c0ef0be46",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d4ca07ec-c934-451c-8afc-28fd70190869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6157659-a953-48e9-8fcf-44c8051b3348",
        "cursor": {
          "ref": "4f27a741-e60a-4571-9988-9c67b6b96127",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "9bdb9ac0-6fe1-48c4-adfd-70267366cd61"
        },
        "item": {
          "id": "e6157659-a953-48e9-8fcf-44c8051b3348",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6a2cd9bb-98ce-4cc0-bebb-3c52f34daefa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a058c9-b5dd-4cbc-a75e-b4859dc66c7d",
        "cursor": {
          "ref": "a4b499bd-07c4-4317-b20c-ecb3e5e19c9a",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "bb0f4d8e-30c8-4774-b78f-f92fb7d79b18"
        },
        "item": {
          "id": "c3a058c9-b5dd-4cbc-a75e-b4859dc66c7d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d4e5a032-ab89-4f72-9e7a-4ff0914e1e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf6a4c0-f724-4b3c-8b67-84e1320c2cb9",
        "cursor": {
          "ref": "9009da75-7727-4aa9-b88e-b9067926bd2d",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "101d3332-e09f-49ee-b8e8-4576a60d2117"
        },
        "item": {
          "id": "bcf6a4c0-f724-4b3c-8b67-84e1320c2cb9",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "63e64cb2-e352-4770-adbb-c6eb7b8ddd41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1e0ca4-176a-4ff1-be56-4620eebd8412",
        "cursor": {
          "ref": "5aa19ea1-9eb0-421c-96f6-5bb404714e30",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "1ecbdcb4-dfda-46ac-8402-bffac421b640"
        },
        "item": {
          "id": "3d1e0ca4-176a-4ff1-be56-4620eebd8412",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "9afd6a9f-f353-4b87-9d32-d542ede8d2af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3a1385-a0b6-469a-9dcb-acbffec754a5",
        "cursor": {
          "ref": "33194658-c132-4b6d-a6ba-583337a25f6b",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f0093747-4f54-4c89-9b67-c8d1ed57fa82"
        },
        "item": {
          "id": "0e3a1385-a0b6-469a-9dcb-acbffec754a5",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e80a4070-7e24-40e1-a06a-e70e37935820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc90fd7-0406-4545-8124-8eb99c3466c7",
        "cursor": {
          "ref": "b313e104-93b8-46e2-bfec-fbb650757820",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "27bc4859-cbf2-40c4-b43b-f08f22655cca"
        },
        "item": {
          "id": "cfc90fd7-0406-4545-8124-8eb99c3466c7",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "186b8788-3bb0-434f-86de-b255ebcb22e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443050ed-0276-4aea-b52c-ce7ced3b4f1b",
        "cursor": {
          "ref": "06599bfd-e6b3-4c9e-8e05-1a4b3ae120d1",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "665725c5-cebf-4610-b0e2-e1842838290f"
        },
        "item": {
          "id": "443050ed-0276-4aea-b52c-ce7ced3b4f1b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b1b4dd70-79df-48e5-a9ce-d37906169c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b532663-ed21-435c-8f55-8f55ed754b86",
        "cursor": {
          "ref": "82c47988-c355-4a45-bd60-3eeaadfaeb73",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "b7f30b17-90c0-4fc3-bffa-749a6949c5ff"
        },
        "item": {
          "id": "8b532663-ed21-435c-8f55-8f55ed754b86",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "db771320-a187-4c14-bfac-b2b907ccbb14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c7c1274-4ba3-4164-81b8-483498709f39",
        "cursor": {
          "ref": "194c8e99-46d1-43db-a1f7-33e5e976d4ac",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "dda92138-c729-4b11-956e-5766bfdd3d9d"
        },
        "item": {
          "id": "7c7c1274-4ba3-4164-81b8-483498709f39",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "73f49cef-3291-4d99-800c-c33a194840a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654810b3-f83c-421c-9018-afc493bd4a08",
        "cursor": {
          "ref": "73b59c2f-8cc7-438d-bae2-670130844b70",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "43eeebc4-811a-4a86-8202-fcfcc064dbf1"
        },
        "item": {
          "id": "654810b3-f83c-421c-9018-afc493bd4a08",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5430f033-e430-4e3b-97f2-26e2ad5df951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f33d6123-5bee-43b4-8159-a2cba807b77b",
        "cursor": {
          "ref": "c468dbe1-46a3-48f2-ae73-55b89a83da94",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9e551662-c36f-4d62-93e9-87823248b157"
        },
        "item": {
          "id": "f33d6123-5bee-43b4-8159-a2cba807b77b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "87b2d843-08e4-4e7e-bda5-76d4595bf477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed3db52a-647d-4abe-877e-d16832ad6bbc",
        "cursor": {
          "ref": "b90b22fb-ad02-45d0-bb79-103e11098bfa",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a18a5e40-26ee-40b2-baa9-7912a4a4bc18"
        },
        "item": {
          "id": "ed3db52a-647d-4abe-877e-d16832ad6bbc",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "70d501d1-ced0-4b85-a4d8-c317c91d2396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8cb255c-d341-4e23-a890-67fb8ec235e4",
        "cursor": {
          "ref": "a799f817-8721-4641-9c87-2b672f401f46",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e2d33a66-f6d1-4aea-b4e8-1537834ba83e"
        },
        "item": {
          "id": "b8cb255c-d341-4e23-a890-67fb8ec235e4",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "bd7c34c9-4d6e-4d54-b68e-12c9c90467a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0db63f-9b95-4a52-925a-e84ecd7bac47",
        "cursor": {
          "ref": "4eda3be8-d25f-48b3-9de9-2f1bdb13ede7",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "aba5b01f-0606-4942-9f9f-163ef9827d3d"
        },
        "item": {
          "id": "bd0db63f-9b95-4a52-925a-e84ecd7bac47",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ec2216ec-4352-4985-8d1a-a30739343dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceea9058-8811-46f7-b96b-e5ef3b630f24",
        "cursor": {
          "ref": "92a7cd7e-9d5f-40be-a506-fcc148e43f02",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "3e56056a-a23e-4a18-9d0f-f892f47ec339"
        },
        "item": {
          "id": "ceea9058-8811-46f7-b96b-e5ef3b630f24",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0bad0ee4-f5ac-4733-8004-c8ff7f51f5e9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cceddf78-8fc0-4d5d-abbb-a54ea209394d",
        "cursor": {
          "ref": "8d2835cf-a0a5-4586-818d-7bf07cc72e22",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "731295b2-30dc-4b77-b316-6bfca618f711"
        },
        "item": {
          "id": "cceddf78-8fc0-4d5d-abbb-a54ea209394d",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "864df26d-9db0-4193-b337-5e18189c8168",
          "status": "Created",
          "code": 201,
          "responseTime": 47,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5bf3be-628b-4e65-9d5b-72cc93e19d16",
        "cursor": {
          "ref": "3b76db8c-66e6-4e6e-9bbc-982e986b8ada",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "dd9aa961-9813-40d1-b448-28dfc0c6dd69"
        },
        "item": {
          "id": "ac5bf3be-628b-4e65-9d5b-72cc93e19d16",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ed44228a-400e-45fe-9eb1-2b8c2c780171",
          "status": "Created",
          "code": 201,
          "responseTime": 76,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd27a587-dffc-4b26-b847-0f7d21628098",
        "cursor": {
          "ref": "dad5d1ea-5b54-4eea-bb3d-9df79a0dc3ec",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "59bdb380-2b46-4298-9cac-24b4b3f092d9"
        },
        "item": {
          "id": "dd27a587-dffc-4b26-b847-0f7d21628098",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "40567441-4f8a-4666-b4ff-9e3d130ee5bd",
          "status": "Created",
          "code": 201,
          "responseTime": 183,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7178547e-f47a-46f7-a29b-22f3ac09ec09",
        "cursor": {
          "ref": "e5838bdd-b37a-4c26-8be4-9ace2c394f86",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "72e03b08-c1c8-4e7f-a1b0-35e98f6dbaa5"
        },
        "item": {
          "id": "7178547e-f47a-46f7-a29b-22f3ac09ec09",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "077f3157-1898-4edb-acc0-7775a09c7ae6",
          "status": "Created",
          "code": 201,
          "responseTime": 35,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2fe782b-b41c-4aea-936b-aa159648faec",
        "cursor": {
          "ref": "8f456cd4-8d17-46df-8643-0e53ad63bccc",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "f06e6db7-26ce-4828-ab23-92565312f21c"
        },
        "item": {
          "id": "b2fe782b-b41c-4aea-936b-aa159648faec",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "74df8c17-d9c2-445a-a054-f93ad742bd87",
          "status": "Created",
          "code": 201,
          "responseTime": 33,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb6ca036-1ef8-4def-8b19-511cbeccf959",
        "cursor": {
          "ref": "d923fa6a-36d2-4056-a35d-7b7ca8515a3e",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ff95da98-8a04-4604-b2c9-26137ff655da"
        },
        "item": {
          "id": "fb6ca036-1ef8-4def-8b19-511cbeccf959",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "0dfa57ee-43d3-4343-8885-ebbd0497eec4",
          "status": "Created",
          "code": 201,
          "responseTime": 33,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "df096b68-acba-4ef5-8bc4-5abff2a14d07",
        "cursor": {
          "ref": "a856c67f-7cc8-4749-b229-85814058b46b",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "4eb1fdc5-c3db-4f8c-a994-c150543736d5"
        },
        "item": {
          "id": "df096b68-acba-4ef5-8bc4-5abff2a14d07",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c02b87c6-38b8-41cc-a448-c8350aca335d",
          "status": "Created",
          "code": 201,
          "responseTime": 44,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813e2332-b988-4a4a-972c-9b21adafd63f",
        "cursor": {
          "ref": "b3721c61-7325-4344-b920-2e1b8ca3b6ae",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "1266012b-05ed-4d2b-835c-4d8038b19184"
        },
        "item": {
          "id": "813e2332-b988-4a4a-972c-9b21adafd63f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "99f21323-1a7f-43ef-8d87-2b6451ba3b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da3577b-b53a-49d6-b2e5-ced5e8f01c66",
        "cursor": {
          "ref": "dc3cd7bc-8130-43d0-86ee-1a5e1600a1a8",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2cb4f690-c5dd-46a2-b3ff-cf134bb1352c"
        },
        "item": {
          "id": "3da3577b-b53a-49d6-b2e5-ced5e8f01c66",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "76b40be9-4ff1-4199-8acb-85e065829e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5a4bfd-d31d-4ff3-9e8d-cc2ad8613be2",
        "cursor": {
          "ref": "7e70c234-90f2-4260-9c95-ef2d3d53e229",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "7aaaf944-db18-444b-b971-44938126405b"
        },
        "item": {
          "id": "8a5a4bfd-d31d-4ff3-9e8d-cc2ad8613be2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5095c773-7c57-412c-a8dd-58b60db3c108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd29f6a-68ef-46d7-9c46-6e4b9d587fdf",
        "cursor": {
          "ref": "66d005af-40a1-4c12-9e57-0630bf55f94b",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "4025f1b0-f775-4402-a766-f79eb9495535"
        },
        "item": {
          "id": "ccd29f6a-68ef-46d7-9c46-6e4b9d587fdf",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "57874f0f-16f8-4213-b5ab-d457801c775e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7aedf5-2a37-4a70-acb8-1394039778bf",
        "cursor": {
          "ref": "4ba21e8c-de47-4ab8-9752-1107d6928947",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "5dc0a920-7a0e-487d-99d8-15fb6daafc9d"
        },
        "item": {
          "id": "ae7aedf5-2a37-4a70-acb8-1394039778bf",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f97bce1d-699a-4bf3-84ca-d316f95a6680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5afaee0-1791-4e9e-b2a5-7202ccc33e6f",
        "cursor": {
          "ref": "04457125-8727-4f4e-87d4-a75d71b09e35",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "1955d888-f05d-4e34-9207-c08726871f6a"
        },
        "item": {
          "id": "b5afaee0-1791-4e9e-b2a5-7202ccc33e6f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "13b6aa45-c754-4f4c-99b5-8399873ba082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ab1177-86b2-44cf-9ef4-cd9d7c6e5f36",
        "cursor": {
          "ref": "d1d94605-2792-4d37-94be-648755e0ee31",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "cd3659b2-a2a4-412a-b1ac-2ceac5b27677"
        },
        "item": {
          "id": "f2ab1177-86b2-44cf-9ef4-cd9d7c6e5f36",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e80778b7-d305-4317-be01-0896503d225f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb86e6d2-e239-449c-b27c-e067478dc000",
        "cursor": {
          "ref": "93f9987d-a72a-4aca-8275-14c5a4178f2f",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "875c0cc4-4ebb-4fef-ac08-558a51f1d11f"
        },
        "item": {
          "id": "eb86e6d2-e239-449c-b27c-e067478dc000",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8e616db0-d8f2-4e77-9292-71ac7d61f9b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359e1b6e-1580-4249-8a25-8011f87ad2c9",
        "cursor": {
          "ref": "ec6fd07f-8b4d-4603-b9b0-dc2370fd81df",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f0fc7068-a1e1-492d-a1cb-7cc389377013"
        },
        "item": {
          "id": "359e1b6e-1580-4249-8a25-8011f87ad2c9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9089f71d-a458-4678-896c-9e39555362d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4dcf713-0f50-4430-9c5a-4636803ad3ad",
        "cursor": {
          "ref": "824535ef-0e6d-4025-b84e-65f066eb2f68",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e1ac3692-dde5-42a5-acad-93a06cbac841"
        },
        "item": {
          "id": "d4dcf713-0f50-4430-9c5a-4636803ad3ad",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4f9caefc-75db-42ec-90b0-310f5c25bd3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792e3d08-f89a-42fe-be8d-070441ffbee6",
        "cursor": {
          "ref": "d0964364-901d-4d64-bc0a-c82b374268a7",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "165560db-6238-4a57-b22f-786f4cceb519"
        },
        "item": {
          "id": "792e3d08-f89a-42fe-be8d-070441ffbee6",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4b90dca7-48dd-4097-b6ce-c7a24845f651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a2255a-f5e1-49d8-b3ab-1040e99c8f66",
        "cursor": {
          "ref": "35cd12e0-6e0d-401d-89b3-85efa1d0f9c2",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "8b927568-4b55-483e-bd9f-0fcd7862047e"
        },
        "item": {
          "id": "01a2255a-f5e1-49d8-b3ab-1040e99c8f66",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7f41a52f-112d-4f4c-bfcb-0e69eee450c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665446f8-1ce6-4ce5-a4d4-100da264f714",
        "cursor": {
          "ref": "bc279a27-de52-4ccd-94f8-a009adf6288b",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "3e0654fd-0fcd-48ba-8f3a-73b7f0fec475"
        },
        "item": {
          "id": "665446f8-1ce6-4ce5-a4d4-100da264f714",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7865df90-13dd-448c-b27d-c99519f8b4ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629cef71-1b7a-455d-833b-dce7979f5833",
        "cursor": {
          "ref": "fb1f8a21-74e6-445d-a99c-4722af86134a",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c9594c6b-1abe-4627-bbb2-7ac9d937b497"
        },
        "item": {
          "id": "629cef71-1b7a-455d-833b-dce7979f5833",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0db9e592-59d1-42c7-b18a-8174bdb524b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370806fa-b79b-4d19-bfed-66c3aaa0369b",
        "cursor": {
          "ref": "a32ccbee-07ed-4c06-b565-6e101df9eca3",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "62753685-4b07-4d1c-ad3d-40bdd9ed0ec7"
        },
        "item": {
          "id": "370806fa-b79b-4d19-bfed-66c3aaa0369b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7dee3044-8695-458b-8295-47857fcbe953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f7c2049-0fd1-4b78-8939-c04e8dcf4f6f",
        "cursor": {
          "ref": "414c20ab-c89b-4545-8d26-0ec7e83cb148",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5a5b5caa-dd10-4995-a580-351a5cb7890c"
        },
        "item": {
          "id": "1f7c2049-0fd1-4b78-8939-c04e8dcf4f6f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e7067c14-66e2-48cc-81bd-4968778ad85f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db452494-8b84-4564-b78f-2873b41c8039",
        "cursor": {
          "ref": "125d80da-2029-4579-a4b9-d261b1ad196e",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "4c62079d-25fd-4e93-b7eb-a022e04c59b3"
        },
        "item": {
          "id": "db452494-8b84-4564-b78f-2873b41c8039",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a89f9b79-fe74-4459-8b67-956c3813ac53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80657f07-9106-4392-9263-ac6240005d0c",
        "cursor": {
          "ref": "68a267bd-882b-40c9-9220-25ce50bc7636",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "01c8b224-8391-42a8-af94-c0dcd6eb4bbc"
        },
        "item": {
          "id": "80657f07-9106-4392-9263-ac6240005d0c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "27a7f5dc-5770-4a11-8b71-d91c8ae63201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b62a8e4-8685-4f03-9d68-eb440c10f7c0",
        "cursor": {
          "ref": "d4057241-fbe2-4a10-bf6a-c6b946f8c1ec",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "95818a6f-3a7e-40f8-8b74-e02dfd33409e"
        },
        "item": {
          "id": "3b62a8e4-8685-4f03-9d68-eb440c10f7c0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8819b861-60ea-435d-8e5b-a16b9ae40128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "596a2545-a023-4ae3-b460-cbc19321d86d",
        "cursor": {
          "ref": "34c55b22-efec-4d29-b582-6323390c06d6",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c70a050a-0156-49ff-a10c-3249ecc3692f"
        },
        "item": {
          "id": "596a2545-a023-4ae3-b460-cbc19321d86d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6f9d756c-2039-453e-8e9b-f94adaec6110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e590c070-0354-48ea-b159-dd96eee14186",
        "cursor": {
          "ref": "e9bb1400-4d20-4bd1-bb76-6ea1b2c143b4",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "19e02950-e647-42ac-98fd-eb30987e0153"
        },
        "item": {
          "id": "e590c070-0354-48ea-b159-dd96eee14186",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cb46ac9d-2775-43a0-bae1-f283225e94b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f56fd8b-db86-4773-9607-064bfa703b22",
        "cursor": {
          "ref": "a577b949-e94a-4a22-8aac-8c5563727736",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "ab8a64c3-ff57-43e1-b55d-219e1c6b9bf1"
        },
        "item": {
          "id": "3f56fd8b-db86-4773-9607-064bfa703b22",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d1a60012-3403-4e0a-ba8a-3a8964129e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "930f4b25-25d4-49ba-884e-fa1d935533e7",
        "cursor": {
          "ref": "ddafbdb6-c400-47e4-b0fb-8d5d8e554557",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "18dad43a-c2ca-44bc-9a9b-64b07c6e4f1d"
        },
        "item": {
          "id": "930f4b25-25d4-49ba-884e-fa1d935533e7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "dbb2dc8f-0a08-40d8-abf9-93c1ef02b0c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444a9a14-5832-435b-8541-4accbdb569e5",
        "cursor": {
          "ref": "c7c2c2f9-56a3-4326-a8e5-abc019ac4839",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "2eb39c4c-114f-4419-ab38-381e14a294fa"
        },
        "item": {
          "id": "444a9a14-5832-435b-8541-4accbdb569e5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4724e1dc-3fa8-4016-a49a-bf796b926bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa0102b-4642-4d3b-9b75-d575dbb21551",
        "cursor": {
          "ref": "6f88ffd6-2100-4c74-bd6d-8e88780c5dc5",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "1df4b49e-5667-4abf-9087-bc061dfc5b4e"
        },
        "item": {
          "id": "faa0102b-4642-4d3b-9b75-d575dbb21551",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5b5f6721-0995-4aa5-aef1-37a8d7fa7a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ba0456-02d4-480e-874e-601837dca6c6",
        "cursor": {
          "ref": "2faedb84-fd10-4b01-81e7-24753f72ad3a",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "1ad75d7b-2b34-45af-9401-521f62a992eb"
        },
        "item": {
          "id": "73ba0456-02d4-480e-874e-601837dca6c6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "85acf8f2-fa5c-4b63-9ecb-f27dd18c1444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7643dba-a85a-439b-b10f-5538aa15d9f3",
        "cursor": {
          "ref": "9ed809bf-33f6-485c-a2ee-4e0f4296a9b2",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "fdbc7a84-7d29-4950-8c3d-ad65b03508b5"
        },
        "item": {
          "id": "e7643dba-a85a-439b-b10f-5538aa15d9f3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "aea13da5-d074-40a4-b291-613afa653eeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c73b35-308d-40e2-86db-1d24e41b812c",
        "cursor": {
          "ref": "ff3c8fd1-076c-491f-a211-dab52a2a47a2",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "4c695b8f-ee46-4ec3-818f-a1d5fa45a5f7"
        },
        "item": {
          "id": "01c73b35-308d-40e2-86db-1d24e41b812c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "dc5d912b-a258-4f02-972e-49ff14c1bb7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2790370-faf2-4e9f-b1b2-c6e3f325223b",
        "cursor": {
          "ref": "0f58bea9-627b-4b1f-ad6b-6ae9e5982d67",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ff447659-7b2d-426b-8632-3c6b7ab45199"
        },
        "item": {
          "id": "b2790370-faf2-4e9f-b1b2-c6e3f325223b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4dc1983f-7f38-4116-bbba-ea5c2c78bdcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5c8deb-41d0-44d0-ba9d-737929d0c0a2",
        "cursor": {
          "ref": "184fb09f-4fc6-48a0-b5fc-bc3cf5530b6b",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "05589061-f8f5-4ee9-beb8-01d08a746903"
        },
        "item": {
          "id": "fe5c8deb-41d0-44d0-ba9d-737929d0c0a2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b67b2dcb-0da5-4082-a422-47369196b725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b436a2-4301-4a6e-984a-3c471ea39bf1",
        "cursor": {
          "ref": "ef249f73-2673-4e36-bb7a-b2641e25c502",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e7eaf33c-e9be-4a28-9208-ca9a1d85315a"
        },
        "item": {
          "id": "f2b436a2-4301-4a6e-984a-3c471ea39bf1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1b404ac0-82fb-47b0-94a0-9f134f3e7906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b139920d-7bc9-4194-afd4-297296346fd4",
        "cursor": {
          "ref": "d43e8f8a-19eb-4d5b-b7a0-92a32480e2c7",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3dd4f327-6317-40b7-9bff-859a150068f1"
        },
        "item": {
          "id": "b139920d-7bc9-4194-afd4-297296346fd4",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "7864a5a5-c791-4136-888e-84c66ac5a5f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979ff56f-a2a8-4390-a739-422e72991305",
        "cursor": {
          "ref": "1e92a5d7-4355-4bdc-b14b-f499107bea2e",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c0364402-d306-4f3e-aaaf-36d58fdf2a5a"
        },
        "item": {
          "id": "979ff56f-a2a8-4390-a739-422e72991305",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b40f0147-7326-4e81-846f-8d6706fef439",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "279c804f-32bf-442b-929f-cc94c06c82d7",
        "cursor": {
          "ref": "ab915c2a-8b99-4ad0-a797-59a2bfbf9ce9",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "38be92b1-f9a5-4cbd-a223-fc3d3f7b83ad"
        },
        "item": {
          "id": "279c804f-32bf-442b-929f-cc94c06c82d7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "91d3df48-d6c3-4739-b440-90ff5d5da944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ba3541-b349-402b-8332-b89ecf27033b",
        "cursor": {
          "ref": "399b59db-30a8-4568-bbb5-0cb18c507271",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b3c37de4-b392-43cc-83ad-fb555e6f3743"
        },
        "item": {
          "id": "85ba3541-b349-402b-8332-b89ecf27033b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7dbd7644-3fcb-45d2-b468-ee6126b65cee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb926ada-9a22-4aa8-9483-10c2540fd45d",
        "cursor": {
          "ref": "f6306b10-e960-4ac3-be4a-2c7c62a527cb",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "87e24db0-e388-4464-bb0e-56cdaa23f58c"
        },
        "item": {
          "id": "eb926ada-9a22-4aa8-9483-10c2540fd45d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "aa978231-1805-4bad-aca1-be8f37bdb68a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd9d996-e719-4034-9e55-0695ef33c240",
        "cursor": {
          "ref": "3052d708-06b6-476d-aba3-624fdbe87e1b",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f5c8a42d-6d9f-4d04-ac5c-df3e4d8a2a4a"
        },
        "item": {
          "id": "9cd9d996-e719-4034-9e55-0695ef33c240",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1f878462-1f7a-4a63-8146-8af4befd2c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a39faa5b-cc41-4279-b61f-8776beb33641",
        "cursor": {
          "ref": "c4a97a37-9909-4ae3-bfa4-ff718f3759d0",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "598f188e-538b-4ae4-94b0-990104481833"
        },
        "item": {
          "id": "a39faa5b-cc41-4279-b61f-8776beb33641",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "cda4a0d9-d544-4cea-90e6-f7f39efe06b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b287d8-82de-4807-8f80-4e0e72f6386d",
        "cursor": {
          "ref": "f9569f3b-4ca0-4fa5-9113-8e66caef9511",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b28171db-d9c8-4d5c-ba5b-03f00bf0b483"
        },
        "item": {
          "id": "a5b287d8-82de-4807-8f80-4e0e72f6386d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7d485c75-ebad-4115-a236-8e1b7c2bfee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce2bd4f-8cf5-4bbd-9aba-137b2eae39a6",
        "cursor": {
          "ref": "f910b9e4-00e6-44a4-a872-21c6afd6befa",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6bc17f75-ec4d-4c51-9ea9-32912dc0543b"
        },
        "item": {
          "id": "4ce2bd4f-8cf5-4bbd-9aba-137b2eae39a6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b8c12dc4-dcd3-4afc-b1cb-f7f4a452bfa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1ab844-cdce-420a-b938-c1780175cd5d",
        "cursor": {
          "ref": "a7ef927e-d05e-4757-b147-4102bf5b2a71",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "c216152f-7c78-4e82-9ab3-233546f8f508"
        },
        "item": {
          "id": "9e1ab844-cdce-420a-b938-c1780175cd5d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2f305492-84c3-4d90-8e31-2e1b7e211986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0e2f53-e48e-48f9-acfa-ec710e43f8b9",
        "cursor": {
          "ref": "c3f5495b-acf2-4273-b6b2-a10dcb253c41",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "2968da25-f139-42ad-bbe0-3cfd87103da1"
        },
        "item": {
          "id": "cc0e2f53-e48e-48f9-acfa-ec710e43f8b9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "575c9d8b-06b3-4367-b757-350f8cfa7dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf4604e3-41a2-4ceb-9cb8-685058a761cb",
        "cursor": {
          "ref": "c0a86319-012e-4980-a08f-ace6f2599668",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4bae1701-01c1-400b-991f-2b35f2e367ba"
        },
        "item": {
          "id": "bf4604e3-41a2-4ceb-9cb8-685058a761cb",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "81c67802-8152-4282-915b-da7ae6699451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2acf7544-b6fe-4282-94b4-85e6685d7365",
        "cursor": {
          "ref": "61a3c893-b392-4460-b124-6b2d37b40b61",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "39e8b264-99f5-4a66-99a0-c227475bd155"
        },
        "item": {
          "id": "2acf7544-b6fe-4282-94b4-85e6685d7365",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e61164ac-df06-4318-a0fd-575c323dc539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4c09a3-18a3-4f96-8d58-35fc940d35da",
        "cursor": {
          "ref": "1feb6a23-1eea-4412-822a-873bf10f0ef4",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "da5a7688-461e-4070-b6c1-274ff3edac38"
        },
        "item": {
          "id": "2b4c09a3-18a3-4f96-8d58-35fc940d35da",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "089c748f-ad3e-4b5b-9c7f-f40d13e1a1e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff2d4fa5-ba0c-454f-94de-caf7a5e4d8a6",
        "cursor": {
          "ref": "2eb99a80-0d70-4e91-b9a7-18c559dc40fb",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "1db9d747-16ab-475a-9a83-9f2be16b312b"
        },
        "item": {
          "id": "ff2d4fa5-ba0c-454f-94de-caf7a5e4d8a6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c9d6e771-67ce-40a6-94a2-bfbfa5dfa050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80c9f32-344a-4bd4-a8d0-4c3a09021e83",
        "cursor": {
          "ref": "68ec419c-ae08-49ac-b96d-b8296063f623",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5aff71c0-ae8a-4af4-b74d-64b82e1d7ead"
        },
        "item": {
          "id": "d80c9f32-344a-4bd4-a8d0-4c3a09021e83",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0ba2739a-2a44-43aa-9c6c-cde08571010a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8eba26-e5f4-409c-ad2a-835bb85a0daf",
        "cursor": {
          "ref": "b575d324-e59b-43bb-ac7c-3e300bab6c5b",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "2d3ba8d4-fbc2-48f0-8384-87c030a57646"
        },
        "item": {
          "id": "3d8eba26-e5f4-409c-ad2a-835bb85a0daf",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9014754e-91fe-457e-b65a-4c69fcd0884d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "959e0f0d-a390-4da5-b3f8-8b881d3e5aae",
        "cursor": {
          "ref": "2c124651-f432-48a4-a64a-6ced1cc22cd1",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "8aa968cd-2f22-473f-9f30-ce47ce5a3f4f"
        },
        "item": {
          "id": "959e0f0d-a390-4da5-b3f8-8b881d3e5aae",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6c5ed87c-90e3-4437-bbbe-4cd09b41e570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b86e5c57-d91a-4077-a968-336953067d23",
        "cursor": {
          "ref": "3cb027b6-ddb3-4301-bbba-f5ce348ccf09",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "570dd11d-b94d-4a89-9fc2-81d7021acab1"
        },
        "item": {
          "id": "b86e5c57-d91a-4077-a968-336953067d23",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1d9d8cc7-5a67-44cc-8841-2e0cd0104320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c6f1db0-cb4b-4c03-98f2-73389e6ac801",
        "cursor": {
          "ref": "0cfbd6bb-ae05-4e28-b00f-3f7b0b8fccb3",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "0097ded1-113a-460f-93a2-cd3c32976da1"
        },
        "item": {
          "id": "5c6f1db0-cb4b-4c03-98f2-73389e6ac801",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "4a07f2ac-0810-4a5d-93e5-dfa48343f9c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "120f22b8-c4c1-47e4-a4f8-37bf6ba7b767",
        "cursor": {
          "ref": "09d54da7-65bd-495a-a14e-60f021e34699",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "38358436-e014-4698-bca3-323c56340d83"
        },
        "item": {
          "id": "120f22b8-c4c1-47e4-a4f8-37bf6ba7b767",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0a9dea3b-dea5-444a-8197-5d87d371bcc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f79bb930-8707-4851-8335-cb7093ce46d6",
        "cursor": {
          "ref": "dcfc4c7a-07d7-4f09-b31c-9eebc32dd7ad",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "222cd544-77ac-4b5c-9bc0-7b5f0919d389"
        },
        "item": {
          "id": "f79bb930-8707-4851-8335-cb7093ce46d6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e58bc7d8-6f1d-47c1-a50d-6519d61c9023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6542cd1-d496-40b2-aceb-e370789dcafe",
        "cursor": {
          "ref": "5ea8f24b-5478-4057-af2c-f4fd2ba47b3d",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f79ed237-854c-429a-a82b-662fa45195b9"
        },
        "item": {
          "id": "e6542cd1-d496-40b2-aceb-e370789dcafe",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8eabffce-69ca-430d-b23a-f9c6304f7740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc1cc532-b8e6-4631-857f-12f6e7400e7f",
        "cursor": {
          "ref": "9cb91653-132d-460b-b376-eac29fb55a23",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5b6a4e6b-edb9-493e-acf5-ad1a3429898f"
        },
        "item": {
          "id": "dc1cc532-b8e6-4631-857f-12f6e7400e7f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "fb605727-d882-4468-96c8-4128bd390ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa9ac8f-9ae5-43f5-8bab-863006bceb86",
        "cursor": {
          "ref": "8c8550d6-ebde-4118-b15a-616e7271998e",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "73fa7477-2e37-45fb-92f0-8a7c1eba6f16"
        },
        "item": {
          "id": "caa9ac8f-9ae5-43f5-8bab-863006bceb86",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "65b873ac-aae7-4daa-98fb-25ce02c52627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b12b83e-ea58-462e-8fc0-93b379bdaf1e",
        "cursor": {
          "ref": "506f0842-5785-4118-8535-0e240398b15a",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "62140f1d-4f21-46b9-8994-3aecc83ed6fa"
        },
        "item": {
          "id": "6b12b83e-ea58-462e-8fc0-93b379bdaf1e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a2bcc1b3-9635-47d3-a874-29711a615ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea33372-de14-41cb-b8b2-5df70e146389",
        "cursor": {
          "ref": "2a81dd85-b629-4468-97ac-5603924e57ca",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8b67d6af-775b-4b1b-a979-c58378ac65e3"
        },
        "item": {
          "id": "dea33372-de14-41cb-b8b2-5df70e146389",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "458313b8-08ff-4ded-a598-771e9accfefb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67322f2a-5eb9-4e84-8378-16c56df1db1f",
        "cursor": {
          "ref": "7544766e-3d43-49a8-ad21-517d653ca4e2",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d66468e1-a79e-4f03-87ad-124e913ff4dc"
        },
        "item": {
          "id": "67322f2a-5eb9-4e84-8378-16c56df1db1f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "507e00cd-1f47-4698-aef2-cd2af8d765dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a4725fa-55c0-4099-b56b-e16bd041c811",
        "cursor": {
          "ref": "d57b1585-6c5d-4811-a6ef-25b738339406",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "7226862e-b3f8-4baf-a2f3-fcbc81cc6905"
        },
        "item": {
          "id": "3a4725fa-55c0-4099-b56b-e16bd041c811",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d9818d8c-c1f9-492a-87dd-8cee1b795073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c29a06f-6975-418e-8d9b-6a4af2b0b736",
        "cursor": {
          "ref": "d8197259-7f57-41ec-acbc-c6d3dc86778b",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0f17cbdc-9513-4222-abcb-f8bb632779d9"
        },
        "item": {
          "id": "4c29a06f-6975-418e-8d9b-6a4af2b0b736",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4f101874-4242-4035-bee0-3e8e427293ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e8b595-fdb4-4078-9d54-cb8e42e92bf1",
        "cursor": {
          "ref": "8b8299e2-d4b4-4a56-bc9a-758869f56402",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c68234bc-5503-47a6-acbe-20804b5a5831"
        },
        "item": {
          "id": "d0e8b595-fdb4-4078-9d54-cb8e42e92bf1",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f1eeaa90-7f60-4f7c-84fb-23b5592debf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c50e54-ba63-487a-9525-cfb343758f57",
        "cursor": {
          "ref": "271f65d1-2dd3-4afe-9da5-41e4a130ab06",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ca56f120-f933-4697-8864-674bbcba804a"
        },
        "item": {
          "id": "78c50e54-ba63-487a-9525-cfb343758f57",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f25cc8f6-bf6f-4672-b399-ace63c2b42b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90422620-47c9-4d13-b4f6-96cb38dc6ab8",
        "cursor": {
          "ref": "beb530ab-8b98-4bdb-9c54-43c4fd61a84b",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e234fdda-4525-49b5-9768-a3bcbe276336"
        },
        "item": {
          "id": "90422620-47c9-4d13-b4f6-96cb38dc6ab8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0d23d081-0194-4ab6-9967-73c645733947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab0ff2fc-6f88-4b1a-9286-e4eaca4f0f72",
        "cursor": {
          "ref": "528445a3-738e-4b94-9e50-cca88f7bfe79",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "78c41f39-0094-4cd3-912e-10f9c388441a"
        },
        "item": {
          "id": "ab0ff2fc-6f88-4b1a-9286-e4eaca4f0f72",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "759ccf88-30c7-4bac-9018-3f3500336ff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa221055-a03f-456f-8ab1-3c6b5f59d02d",
        "cursor": {
          "ref": "e1248c1b-a2d3-4247-bf9c-30d8fed202a9",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "00ea92cb-f459-41cc-bb13-e77e1aabb345"
        },
        "item": {
          "id": "fa221055-a03f-456f-8ab1-3c6b5f59d02d",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "a25a8f4d-fc12-4eee-a050-e748a3c0e9ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77da8f76-8bd6-4e60-9f1e-63f208b2aa7f",
        "cursor": {
          "ref": "1b5dc922-85ef-4312-bd46-ccbe88c919a0",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d98a721c-0128-4d65-a927-13f998175d01"
        },
        "item": {
          "id": "77da8f76-8bd6-4e60-9f1e-63f208b2aa7f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c2562c12-df31-46fe-b635-2db5f226a98e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f35a945-4c45-42bc-b70d-ad0c92ee39e6",
        "cursor": {
          "ref": "e67cbdb8-a1bc-4fb9-9411-40bf1ccccf88",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "3997e341-097a-405a-9ea3-91604cb3f21d"
        },
        "item": {
          "id": "8f35a945-4c45-42bc-b70d-ad0c92ee39e6",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "a5cfb861-4561-4c82-9560-64637813a014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "513ddb76-662e-48d4-8417-8e5ec746bde1",
        "cursor": {
          "ref": "4db378bc-a0f9-447f-abc5-74b2913ba417",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "217fcea6-bf6e-490b-b21e-cced8aae83e7"
        },
        "item": {
          "id": "513ddb76-662e-48d4-8417-8e5ec746bde1",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "7ef0e80a-8fef-497f-9e48-1e8827e30115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b919079-42c3-40ff-8b32-38696303640c",
        "cursor": {
          "ref": "aaa8ee03-b657-4339-933c-ae34ed47d7f9",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b7d316ae-2900-4a0a-a482-76195e64758f"
        },
        "item": {
          "id": "8b919079-42c3-40ff-8b32-38696303640c",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "ab61466d-8785-4718-8a8c-2e73d30dbd79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6546d94-c61d-436a-a390-cdd6dc565098",
        "cursor": {
          "ref": "d808247e-2bc7-4782-935c-c0aa4d5107cd",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "242cbeee-0566-4391-9530-809c25cd4f98"
        },
        "item": {
          "id": "c6546d94-c61d-436a-a390-cdd6dc565098",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f95b5e99-a93c-466e-9e05-e95a9876769e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9bfec89-6ab3-4718-8bbd-95ae383543c6",
        "cursor": {
          "ref": "df43d841-5b53-42f1-8569-9b81a95ae8aa",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "cc329b62-6e25-4b31-898e-7e8481fcff6e"
        },
        "item": {
          "id": "e9bfec89-6ab3-4718-8bbd-95ae383543c6",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b31c8836-b903-4092-8db0-0f7fe403ea46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f174f9-50d8-49da-ab6b-573e743ddd05",
        "cursor": {
          "ref": "2a80c713-c151-4173-804f-c8af5a1c5b59",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "dc285cc1-9383-4bce-b804-046053759b3c"
        },
        "item": {
          "id": "b1f174f9-50d8-49da-ab6b-573e743ddd05",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e71a416b-ef49-48be-ba1a-9dc1fd666dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d4f854-b7fa-4606-82da-1181cbbbaa24",
        "cursor": {
          "ref": "7cf9bab2-b507-49cd-bed0-871b0700863b",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f9041f67-c7e3-45d5-92b0-28c91c71bcaa"
        },
        "item": {
          "id": "a9d4f854-b7fa-4606-82da-1181cbbbaa24",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "bdb08027-b4ea-43d2-bb83-62e156643283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85da1661-394f-42a7-b7e5-2a18a69fe45d",
        "cursor": {
          "ref": "e58c5bcc-f888-413d-b2e1-d5f44df8eb76",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "82bd9ecf-617f-4670-891e-dc9c7dcac0e0"
        },
        "item": {
          "id": "85da1661-394f-42a7-b7e5-2a18a69fe45d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "89991944-ef21-432c-b55b-09ab5d789d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7253aace-690f-4816-89d5-ee58867a4be2",
        "cursor": {
          "ref": "5c7d584d-0a10-4175-bf8b-5946f917a039",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a1d49122-f09b-46be-94a8-0d10667c4454"
        },
        "item": {
          "id": "7253aace-690f-4816-89d5-ee58867a4be2",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "fc6e7fc2-79c7-4d15-857e-2f57316dcb41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc20030e-4510-48a6-b070-110e343fe39a",
        "cursor": {
          "ref": "5054231d-f660-4f67-9f34-5c6d4b900300",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "59ac8ce1-13ef-4ebd-846f-9081fc41e89e"
        },
        "item": {
          "id": "cc20030e-4510-48a6-b070-110e343fe39a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "4fec8334-bc9f-4c56-a8b9-f665a5e72be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "205bfc7f-8097-40d6-b741-16b218fc336e",
        "cursor": {
          "ref": "cacc405b-2b3e-424d-981b-aba737ace2e6",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "897fdb67-4630-45c7-aa88-3463ee6c189d"
        },
        "item": {
          "id": "205bfc7f-8097-40d6-b741-16b218fc336e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9fca51e7-db84-4bf7-ae37-ed25131d0f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051aa4c8-c6cf-4c3f-a68f-fb7be829b886",
        "cursor": {
          "ref": "40b2d488-9419-4d46-b065-73e3f24779bb",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "1c2c9b82-d58a-43d0-a6da-bdb28731e3a2"
        },
        "item": {
          "id": "051aa4c8-c6cf-4c3f-a68f-fb7be829b886",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d9810162-b8ab-4a23-bc9e-2014baf9070c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1210d7d3-febf-47df-8340-88592cee27f3",
        "cursor": {
          "ref": "4d7a1bea-83ee-4f2a-b3e2-c0d1c5262002",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ab52c7cc-5864-41fd-82cb-5561a7bd4849"
        },
        "item": {
          "id": "1210d7d3-febf-47df-8340-88592cee27f3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "60c7de0d-76af-404d-92f8-96458d9d8653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c5b758-b4f3-4b0d-95d7-0ef1b99dc99e",
        "cursor": {
          "ref": "82a29486-04c4-42b9-b317-41487e6e2f3b",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "bcac9d19-d10c-45ee-8e13-391cb2f0d149"
        },
        "item": {
          "id": "27c5b758-b4f3-4b0d-95d7-0ef1b99dc99e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "094d7410-f4ff-44db-b89c-af7b8d92dc74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c915c823-a653-49c8-bb24-253d7cff4185",
        "cursor": {
          "ref": "03ddbcf0-67cc-4bdc-8747-269ea79d5435",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "87621cd6-07ae-4d52-8c1e-e86e1c1573c2"
        },
        "item": {
          "id": "c915c823-a653-49c8-bb24-253d7cff4185",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "9367a189-cd00-4c7c-9c3c-d4902470ec0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5987f0d-af5a-4b09-9ece-581431eb98d2",
        "cursor": {
          "ref": "13af7d5b-65f2-4970-ba20-a30ae32444f7",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "1524fb0d-4f74-49bc-96db-d1f949416700"
        },
        "item": {
          "id": "b5987f0d-af5a-4b09-9ece-581431eb98d2",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3aed8aaf-f1d9-49b0-beb3-618abb5a8e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb8f4e1-5f70-4269-a2c1-c25f1179286d",
        "cursor": {
          "ref": "8a212373-a8ef-45ef-acdd-c9fb246f29ba",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "967d580a-9b44-4c63-ac2c-d52006733a72"
        },
        "item": {
          "id": "8bb8f4e1-5f70-4269-a2c1-c25f1179286d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "de34e57e-1694-4b5b-9a2f-eecdad40e645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d73600-024c-462f-b250-124ce21457d6",
        "cursor": {
          "ref": "3601e2b1-01b1-4991-b794-f14fc2a5830d",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "6b7ec972-1a92-491c-9979-14bf8d2d5666"
        },
        "item": {
          "id": "d9d73600-024c-462f-b250-124ce21457d6",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "11527dfa-b715-4fbd-b168-0fbf7d70295a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0465cae2-1d40-446e-be9a-29d36f8c965f",
        "cursor": {
          "ref": "9d549736-09f1-43d3-85c6-083e611d8db9",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5227a1ec-ef51-4a12-b3e1-01f59822aeca"
        },
        "item": {
          "id": "0465cae2-1d40-446e-be9a-29d36f8c965f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "35b10809-9034-49e6-9238-578671eb0b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e638b6-fb32-40e9-be64-d039bb7cbcf3",
        "cursor": {
          "ref": "987985e5-38ee-4a0f-a2dc-07c78060c637",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "79ad21aa-1a64-4b78-b061-d36f337964e7"
        },
        "item": {
          "id": "e0e638b6-fb32-40e9-be64-d039bb7cbcf3",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "78aedfd1-de57-43e4-824f-ebe38170fd60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f807753a-52f2-4c20-a85b-6bd1ddf568eb",
        "cursor": {
          "ref": "24274fd9-0b05-46a5-9f62-86c64f1e53c7",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "b7985397-86ea-43d9-ac7b-506c7651e410"
        },
        "item": {
          "id": "f807753a-52f2-4c20-a85b-6bd1ddf568eb",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a16455f2-5185-4034-972e-92d13c2f4e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807019d9-f382-4bad-bdf0-930087e6b01d",
        "cursor": {
          "ref": "62200ff1-a231-4a1a-93ac-b9de64d7a892",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "47077f3a-ad2b-478d-a8b6-cd12720fbe66"
        },
        "item": {
          "id": "807019d9-f382-4bad-bdf0-930087e6b01d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "68ccbf87-d847-4960-a223-956e0f80dc87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa2c0f9-fbb7-44d3-bad6-24e7dc153769",
        "cursor": {
          "ref": "bfc5530a-be07-45b4-8a00-1c76c29db94a",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "9f32efeb-d4df-4cc5-ac4a-7373eccdea95"
        },
        "item": {
          "id": "4fa2c0f9-fbb7-44d3-bad6-24e7dc153769",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0ad02447-0d2f-4b27-8a70-b6529382e916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "035d9088-1bd7-4d2a-b47a-708ca8a480f9",
        "cursor": {
          "ref": "65dc8938-b501-4f32-99c5-fbdfe7bcbb29",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f806ade1-087c-4c5b-8471-38eff04259fd"
        },
        "item": {
          "id": "035d9088-1bd7-4d2a-b47a-708ca8a480f9",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "43e83886-cdec-4cfa-8b81-bde71881d1a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3426d99-81e4-4aa9-b531-d735c05523f3",
        "cursor": {
          "ref": "4018b9ea-d9f6-439c-92ba-1c4707348310",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "57f5a754-bd54-429d-a7b8-a7bc66364b3c"
        },
        "item": {
          "id": "a3426d99-81e4-4aa9-b531-d735c05523f3",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4d759642-b363-48bf-ba86-d3bb020ea1a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd76b081-f64d-4ed2-a173-e38d1fd656ad",
        "cursor": {
          "ref": "fac8ea85-2be5-440a-95ae-c047c4123a4e",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ce604186-8c5f-4785-80f3-1eaf3812a6d2"
        },
        "item": {
          "id": "fd76b081-f64d-4ed2-a173-e38d1fd656ad",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e8accd0d-429d-4f49-a162-b10bf4f5ef72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a2baa5-d3d0-4591-ae1c-09c7ca2b4900",
        "cursor": {
          "ref": "3ab485a1-bdf6-49e9-b0b6-19e0adabb99c",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "4e233eb9-6bce-41b8-b1cd-10d9179ebf4a"
        },
        "item": {
          "id": "61a2baa5-d3d0-4591-ae1c-09c7ca2b4900",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "eaa68def-8a02-425f-9d2f-56674666f862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c245df48-9c63-4404-957d-31b8ded05147",
        "cursor": {
          "ref": "7304b9f8-f075-4457-8d27-2ab92e7398f0",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "649b84ab-79a8-4d9f-b75d-1e8c3af7fa67"
        },
        "item": {
          "id": "c245df48-9c63-4404-957d-31b8ded05147",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e62f5581-a239-456f-af6b-7e33f1906636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 147,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "009785fd-90ac-4d25-9768-319d9938662d",
        "cursor": {
          "ref": "2004a975-4657-4595-b9c0-fbabde9b6771",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "88654107-855e-4eff-863d-55fe7fe5f0e0"
        },
        "item": {
          "id": "009785fd-90ac-4d25-9768-319d9938662d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "fb56355a-71ec-46d7-b8cd-0150939c5e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28e6a08-cd45-4be0-bb77-ac9cda30592e",
        "cursor": {
          "ref": "66f6e515-beb8-4bc7-947d-5648cca69ca7",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "3574ea23-7348-499f-ad64-70953cfe9271"
        },
        "item": {
          "id": "e28e6a08-cd45-4be0-bb77-ac9cda30592e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "28425110-12ef-4486-bd34-cccb4dd82dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1696eb97-bfce-4d27-ada4-cfc39690ecdb",
        "cursor": {
          "ref": "7b7c70f1-c732-44df-ac1f-8a938dad26bf",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3901d540-dc37-4ced-8234-bd269a38aef7"
        },
        "item": {
          "id": "1696eb97-bfce-4d27-ada4-cfc39690ecdb",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "90a99911-b8de-474f-80d8-8beb32271802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "558eb0a4-a9eb-4995-9e8b-ba721266b8f1",
        "cursor": {
          "ref": "8a575b60-0aee-490e-856d-af3453b73159",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5c86c5ec-a62e-43cd-9b5c-917afea05c29"
        },
        "item": {
          "id": "558eb0a4-a9eb-4995-9e8b-ba721266b8f1",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "925d2a9d-b1ab-4424-9c76-eee36403225e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac61d12-d1d3-4cdf-95cb-e3a114785fdd",
        "cursor": {
          "ref": "70358c78-4f31-4644-9213-c4f7767b0d5c",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c3e709e0-d51b-44be-9865-f1aecdd00fbc"
        },
        "item": {
          "id": "dac61d12-d1d3-4cdf-95cb-e3a114785fdd",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "dab666c7-2425-4480-b7e7-29e022f6b239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87db1898-0cf2-41b8-9f07-6342064a133d",
        "cursor": {
          "ref": "1daa0a4c-a815-409e-9a0d-aa4b7251eee4",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "078dbf1e-df3c-4378-9c02-85312e5ac175"
        },
        "item": {
          "id": "87db1898-0cf2-41b8-9f07-6342064a133d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "0cfc908e-af58-4993-b210-b440ea92a882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141fdcd1-a816-40bf-bb42-249b9e0def03",
        "cursor": {
          "ref": "79b5c293-752a-4a1d-8f21-d50d54dd262f",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e0086dca-3fce-4ce1-a12a-ec562614c82a"
        },
        "item": {
          "id": "141fdcd1-a816-40bf-bb42-249b9e0def03",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "975049aa-fc10-4d65-b9e5-c8343c660423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eda5fcc-9445-469d-a2fc-5c225c2f8e67",
        "cursor": {
          "ref": "88db7084-1fc5-4d69-982d-28686fa3431d",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "322543c3-5d53-46c9-adf5-980d87f751ee"
        },
        "item": {
          "id": "3eda5fcc-9445-469d-a2fc-5c225c2f8e67",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8b7fa0b5-2278-411c-90c8-8998786fe7c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d79ee9b-9a33-468e-a443-5d1a4fa28f30",
        "cursor": {
          "ref": "258a1e9d-19ba-4b46-802a-451632555e9c",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ee50a19a-62e9-412f-8acf-1535773196bf"
        },
        "item": {
          "id": "2d79ee9b-9a33-468e-a443-5d1a4fa28f30",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "24776a3e-b713-4da9-b5b9-d134a52d1d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "833f5fb9-2dcb-4d8e-8905-68840012c67f",
        "cursor": {
          "ref": "e15534ed-77bc-4371-9d4d-b1db5e38b153",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "98553e7d-72c1-4611-b9cc-f32e49f4adfb"
        },
        "item": {
          "id": "833f5fb9-2dcb-4d8e-8905-68840012c67f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "dfc25b94-28d0-4138-971f-47994fca5a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69706395-6d09-4a36-80af-b85e364c3387",
        "cursor": {
          "ref": "88286519-94d2-4a22-adbd-a301fe9eee60",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "4179c5c6-0a87-42bd-89de-e813fd4cbb49"
        },
        "item": {
          "id": "69706395-6d09-4a36-80af-b85e364c3387",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "cfb9368e-3492-4995-9583-afc90ade91ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c62fa928-5695-469b-8106-5ecb7228b0e6",
        "cursor": {
          "ref": "0280c034-89a8-40f7-bf28-1c8a6df34ef2",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3ca8bdaf-4d49-47ba-8225-08b0c15e5d91"
        },
        "item": {
          "id": "c62fa928-5695-469b-8106-5ecb7228b0e6",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c9613b7b-3660-4793-87d0-9295f97ac77d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80367b3e-1627-42b7-895e-5a06220a4a7f",
        "cursor": {
          "ref": "4c7e4577-22b3-4122-9806-77fbd7a67d5d",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "620589ae-81da-4cb0-b81c-f60c44fb6e12"
        },
        "item": {
          "id": "80367b3e-1627-42b7-895e-5a06220a4a7f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "6f2ad8cd-b5a9-4154-8801-2863d8a75b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e72064e2-1116-4c4d-9b0d-046f7c8ac876",
        "cursor": {
          "ref": "fb906c2d-259c-4a17-a684-77aa8d54b25c",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "cfd950f6-e447-4ee8-a69d-a99fa6fb9f78"
        },
        "item": {
          "id": "e72064e2-1116-4c4d-9b0d-046f7c8ac876",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "905c8e3a-9ee9-4027-a53c-5707db003fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cea86ab-46dd-4bd3-9f58-9e2faddc5270",
        "cursor": {
          "ref": "fcc8a59a-ceb6-4e92-b96a-5d0fac5ace5f",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "aba7ef92-9007-432b-84e3-a08ed181385d"
        },
        "item": {
          "id": "9cea86ab-46dd-4bd3-9f58-9e2faddc5270",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "58232ea3-6bcb-42b0-bff3-4d4429845cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40cd1a90-cbc1-44a6-9e67-3f830c646c4f",
        "cursor": {
          "ref": "3dae7a1b-6b57-486c-91c8-a814d9107e13",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "9bf7d512-7e41-4bb3-814d-454b5c95134b"
        },
        "item": {
          "id": "40cd1a90-cbc1-44a6-9e67-3f830c646c4f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "21463cb7-97a2-4213-bf90-6a5f7d452b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d91eff3-f14e-4d69-9d7e-712ca4dc1bc9",
        "cursor": {
          "ref": "4c1bb86d-cc99-483c-99e5-0ecb923fdd01",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b522d9ea-a158-494c-a568-aa8b1c787e00"
        },
        "item": {
          "id": "7d91eff3-f14e-4d69-9d7e-712ca4dc1bc9",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7388bd13-960d-41d0-a480-e2d65f11ac03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f226acf5-bc7b-408d-b0eb-7c77efcf72ff",
        "cursor": {
          "ref": "0a298e74-cb5b-44e1-a129-a137ce711b09",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b1017904-67a3-458b-a0a1-39558a99d661"
        },
        "item": {
          "id": "f226acf5-bc7b-408d-b0eb-7c77efcf72ff",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "47487a73-2210-426e-a3bd-be17e6f41b7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ba2180-83ff-4be6-9e13-0e83ad92c66f",
        "cursor": {
          "ref": "112d9189-ab84-43bd-8134-65abd70651b7",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "add92287-5088-40d3-aba2-159d45e42c97"
        },
        "item": {
          "id": "88ba2180-83ff-4be6-9e13-0e83ad92c66f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "7565a7cf-bf6b-480f-b3eb-ddcdf2ba73fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbaef3f4-4366-4edb-b104-0f5e94460723",
        "cursor": {
          "ref": "30f8affd-b0fe-4ead-b1cf-63e7ff1354b2",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b9a0a19d-04bd-423f-bbf1-7f5bf496473c"
        },
        "item": {
          "id": "fbaef3f4-4366-4edb-b104-0f5e94460723",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8782c733-468d-4034-b757-d07c505e6e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86c2b27-bf02-4567-bb78-e5cabef4beef",
        "cursor": {
          "ref": "d8e1db2a-06a1-4280-8d6a-2fb648083156",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2685cb36-c813-4d07-9878-6834956da3a0"
        },
        "item": {
          "id": "f86c2b27-bf02-4567-bb78-e5cabef4beef",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "124e4078-8ef5-425e-9593-ec7271fddcf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de4063b-29d8-461f-8f2d-063dbdff7205",
        "cursor": {
          "ref": "1a8f948c-157c-4e44-95b8-e6965035a6be",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e4f49303-faeb-4df2-ad85-825ba72005bc"
        },
        "item": {
          "id": "5de4063b-29d8-461f-8f2d-063dbdff7205",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "991ad40d-f4b0-428f-b1f3-690f00f5acd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d17d96b5-6281-4533-b244-8a2629847cdd",
        "cursor": {
          "ref": "d1c3a1cd-3a31-4713-8e9e-3a28168c2cb9",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1da77e62-8cf2-44ef-bf6d-69dd17477149"
        },
        "item": {
          "id": "d17d96b5-6281-4533-b244-8a2629847cdd",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "4e069956-eee3-48d5-be8b-1287aba60947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "593a03a8-01e1-42ad-b875-22bdf5183803",
        "cursor": {
          "ref": "d50f94fb-ab8a-4316-8e2d-4644efff353f",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "118f5a81-13ff-4d83-9820-5f5a024fc2df"
        },
        "item": {
          "id": "593a03a8-01e1-42ad-b875-22bdf5183803",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "fc5f064f-d41c-4cb1-94c9-11499fa8c8b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "720e3ccd-fd72-47ea-a27a-18cf9e7b1f10",
        "cursor": {
          "ref": "7da482e7-b23c-4327-b7eb-683d4269dab2",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "6246fb08-13a4-4939-b206-978c042b38ea"
        },
        "item": {
          "id": "720e3ccd-fd72-47ea-a27a-18cf9e7b1f10",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "8caf5bd9-e7b8-4c08-bb2c-c131f9db4b1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec8961a-e92b-4e7b-8149-24d793a77c6d",
        "cursor": {
          "ref": "e1d88e3f-4cf9-4d5f-9dce-5329db788059",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "75bd3c15-11c5-4182-b4ff-0af6854f18e3"
        },
        "item": {
          "id": "fec8961a-e92b-4e7b-8149-24d793a77c6d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "28278169-fb4f-4e7e-8420-d4b00b1ea9e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "851007d1-b89c-4f21-8dfb-ddfb6f6fc8bd",
        "cursor": {
          "ref": "ee49ea8f-c11c-4cce-bf2c-5ceaf5f3b063",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d3d956e8-e5b1-4287-8d62-92a345410a3e"
        },
        "item": {
          "id": "851007d1-b89c-4f21-8dfb-ddfb6f6fc8bd",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ef8a8c11-7cc6-4467-ad23-2ccd026fc573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2952385b-822a-4f63-a3da-c1b249148e26",
        "cursor": {
          "ref": "46fa870a-0e88-4013-9d65-4a0df3c0cb7f",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "0df4487b-0522-4bfc-8144-ad5c3c746a46"
        },
        "item": {
          "id": "2952385b-822a-4f63-a3da-c1b249148e26",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "453781dc-0487-4d87-a80d-f4ef04575dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc48e5e0-03d0-4a36-8283-07183dd118f6",
        "cursor": {
          "ref": "35e12fda-6e34-49a5-aa2a-6efbce8577c2",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "277fa56b-aaa0-47d4-804b-5d6ff7a4e4ac"
        },
        "item": {
          "id": "fc48e5e0-03d0-4a36-8283-07183dd118f6",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "8effc489-6591-47e3-8b07-eeb9069b8ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f088cda-fd8b-4786-9aa3-9f192b7c6f34",
        "cursor": {
          "ref": "426d1b99-376f-42c1-9fe0-724de2d1cbe2",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "02511901-f9fc-4607-b4d0-042db65c4554"
        },
        "item": {
          "id": "4f088cda-fd8b-4786-9aa3-9f192b7c6f34",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "2cf391fb-3046-4d83-ba49-d4981300324a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670421a5-9a21-4fe1-b371-c201850f2d5f",
        "cursor": {
          "ref": "32451a27-fc5d-4c3b-9c04-6886996723ae",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "2b7db02c-06c6-4067-8c1b-e1a922b086f7"
        },
        "item": {
          "id": "670421a5-9a21-4fe1-b371-c201850f2d5f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "cb521228-1835-4247-8194-514082286012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce531352-d1df-489f-a5e2-afb920c72160",
        "cursor": {
          "ref": "03cadac8-dc39-4956-a944-9cadedc12966",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "99af6d63-6667-46af-b836-c3100de3c59b"
        },
        "item": {
          "id": "ce531352-d1df-489f-a5e2-afb920c72160",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "4b31d576-f75a-4b8a-8a67-e39eb561bdd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de6799b-0c33-42e5-a33d-500d93dba726",
        "cursor": {
          "ref": "a2b87244-d240-4091-9b14-e0bc1b096c5a",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "0558dbeb-0cba-4958-83db-f2521ee9e821"
        },
        "item": {
          "id": "8de6799b-0c33-42e5-a33d-500d93dba726",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1fc55140-4099-419d-a911-7266404fa6f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e57e75-9baf-4135-98b3-ccfab7f891a9",
        "cursor": {
          "ref": "53b644a1-e627-4695-a004-a5bc7bacf916",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ab3dc4ec-d680-4d93-820a-02413b604792"
        },
        "item": {
          "id": "34e57e75-9baf-4135-98b3-ccfab7f891a9",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f3243dbb-0619-4313-bc49-b43d0a13717f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c68b910-d2b1-485d-bf19-1e31fbbd884f",
        "cursor": {
          "ref": "2f95e3da-a398-4852-981d-2aefa5760ab1",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "07be0042-a44d-46ad-be89-779dcb397b79"
        },
        "item": {
          "id": "4c68b910-d2b1-485d-bf19-1e31fbbd884f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "60221835-15b0-406b-9aaf-f1c434ed97e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7917685c-4b10-45e5-8c44-0adbce6ea2fe",
        "cursor": {
          "ref": "cc8b9e41-3e05-4dfa-bb0c-2d435f4bad4b",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ec212788-20df-4f65-9786-d34047cf2336"
        },
        "item": {
          "id": "7917685c-4b10-45e5-8c44-0adbce6ea2fe",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a98303f3-e629-40c7-b819-7a34bec12b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76616b73-8abd-4ab1-82de-ed2c40c620f2",
        "cursor": {
          "ref": "8289a853-3ab0-4191-8870-487f574b6d12",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "da627964-820c-4f5f-a3bf-2b2d7f7874e2"
        },
        "item": {
          "id": "76616b73-8abd-4ab1-82de-ed2c40c620f2",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d1ba7d55-4269-476b-8a9b-0d17aa3d8979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd9b2675-e2c7-4186-abcd-b1973633a683",
        "cursor": {
          "ref": "f34fcfcc-b477-4c50-8a7f-be1350c92935",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1f241301-f30c-46f4-a472-2975e1b16894"
        },
        "item": {
          "id": "dd9b2675-e2c7-4186-abcd-b1973633a683",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0108117d-8b71-4625-8be6-b34b92497c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e250839c-45b5-4c31-a29d-180156d774b9",
        "cursor": {
          "ref": "6ee58c18-4271-4008-8d05-80ea985d7329",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b7e598ad-30ba-4981-b632-e832e79663bb"
        },
        "item": {
          "id": "e250839c-45b5-4c31-a29d-180156d774b9",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b940f054-c17b-408e-98e0-7a5c7f6c21db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f7b7222-e198-409a-a3e5-93d6dcb29490",
        "cursor": {
          "ref": "4252ffa5-7629-47a3-9fc7-6b2e774fac29",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "39348c17-9034-4606-b6ba-16618f7df261"
        },
        "item": {
          "id": "2f7b7222-e198-409a-a3e5-93d6dcb29490",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3de6bfa5-add9-4319-849d-b194db435d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b2c09cc-f729-4d12-bc53-f34bc154f345",
        "cursor": {
          "ref": "25d40b96-e8b9-4ac0-bf31-567f112c9323",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "67d9fa37-fbbb-4883-a9e7-4f6319b1c6a2"
        },
        "item": {
          "id": "5b2c09cc-f729-4d12-bc53-f34bc154f345",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "5c28305c-23cd-408a-8c9c-af75359eaacc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db0e5ff-3518-42eb-9c6b-435345a1a06b",
        "cursor": {
          "ref": "65925b42-1eb2-4666-8f55-ea755c26be3b",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "565001a6-e7ab-46b5-ac86-0955c30a0e92"
        },
        "item": {
          "id": "0db0e5ff-3518-42eb-9c6b-435345a1a06b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "6ed03cad-c7c2-48dc-a803-b31d01b0398d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ebbab0-e599-4b5e-b22f-754328cae25a",
        "cursor": {
          "ref": "fce8822a-87c0-45f8-b3c9-7d632a4b603a",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ad5b3cf4-2a18-4576-a709-daba46304ff0"
        },
        "item": {
          "id": "b8ebbab0-e599-4b5e-b22f-754328cae25a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b29916f1-00a2-4765-ac88-7f4817e799e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cad6c68-9fff-4bd5-aaf4-369021a57684",
        "cursor": {
          "ref": "71891daa-7244-4e52-9645-f734826b9a5a",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1062ae28-2dad-42c8-83c0-1cf3a4584c80"
        },
        "item": {
          "id": "6cad6c68-9fff-4bd5-aaf4-369021a57684",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "eaf6f3e2-342b-4b28-bf4d-a20cadb93ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b17ae05b-961b-4259-96b4-87c91fcc81ba",
        "cursor": {
          "ref": "26af61a9-cdbe-4e54-9e27-adcbdb04cf19",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "493558d4-37c5-4b4a-b0e4-8bafca3241b0"
        },
        "item": {
          "id": "b17ae05b-961b-4259-96b4-87c91fcc81ba",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b8ccd0e7-2911-4ba9-a22f-89646a81ea86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "663f0110-d434-4ee6-85b3-f0b073bed356",
        "cursor": {
          "ref": "16ede07b-776a-41c1-bd11-e859251d2c2f",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3736b63e-e0c3-4447-98a7-4811cdf8b3f3"
        },
        "item": {
          "id": "663f0110-d434-4ee6-85b3-f0b073bed356",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "46795f57-bf3f-41d0-b268-00a118e91d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b560164-5e6f-4bd9-a588-90ce89884a26",
        "cursor": {
          "ref": "74780cd8-e4f5-4064-98c3-403b44a2589b",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c0f9bd5f-f38f-4caf-9708-cec44b5d01b5"
        },
        "item": {
          "id": "4b560164-5e6f-4bd9-a588-90ce89884a26",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d7d10e30-abef-4b05-acc1-4a4d8435e7f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8337d7-31e5-438e-b623-fc40720fbac0",
        "cursor": {
          "ref": "b5414eda-bcd8-4346-b426-dd6c2b7fe6c8",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "6bfba369-f04e-42f7-8657-7f1c76a91880"
        },
        "item": {
          "id": "2b8337d7-31e5-438e-b623-fc40720fbac0",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "55976348-ce0d-4af2-ad96-2708b0d0b128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d0ded0-9bc7-499b-835d-98752cab2dcf",
        "cursor": {
          "ref": "2458ed5f-8327-4969-9551-d3e863704dde",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "91b89f36-9bc1-4266-9ed5-775637fee0a8"
        },
        "item": {
          "id": "67d0ded0-9bc7-499b-835d-98752cab2dcf",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f8c7b7d8-4a39-46a5-b30d-bca602dae4e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb251b5-7f21-4787-9222-910fcf4a8f3a",
        "cursor": {
          "ref": "6f4e91ab-106e-4471-b9ad-31076f530284",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "6da96699-9810-41c8-b173-f9819c451326"
        },
        "item": {
          "id": "fbb251b5-7f21-4787-9222-910fcf4a8f3a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d17925a1-ca5a-4601-a3a2-bf62b81abf70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa9c10d-923a-4f2f-8933-8327082bffa8",
        "cursor": {
          "ref": "49329f81-17b5-419f-bab2-da65c6e7a416",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "838a32c1-912c-4165-b470-5d946aecfcec"
        },
        "item": {
          "id": "caa9c10d-923a-4f2f-8933-8327082bffa8",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b3f3efac-a052-4cc1-a5da-763c6adeb9d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44cd1776-a5d7-4f8d-afda-692b1b40d557",
        "cursor": {
          "ref": "9377e4ff-4167-4249-8277-516c810c1e33",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "e3e4c995-de38-4799-8a35-6e334dc4f08b"
        },
        "item": {
          "id": "44cd1776-a5d7-4f8d-afda-692b1b40d557",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b6715d3f-3747-4f67-91f6-73066532eb2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdafeb51-1682-4a88-a377-a07daae48565",
        "cursor": {
          "ref": "a7da75f4-e811-4b00-87f6-72f056d06258",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "f18f9c03-ac51-4a7f-ba60-5fa00be59c5a"
        },
        "item": {
          "id": "fdafeb51-1682-4a88-a377-a07daae48565",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "48c85778-5b60-4380-84c6-f34783dae0c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3675f412-6c20-4ece-8086-506f281cc874",
        "cursor": {
          "ref": "8f06567c-26c2-4cb1-84cb-5e1a6658e8df",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "4c28459b-439c-45e2-8e88-272d79de7b0c"
        },
        "item": {
          "id": "3675f412-6c20-4ece-8086-506f281cc874",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d89d69f9-6556-400e-ab9e-76e502f24397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b32279-a2ef-4196-9979-87abcaf69c27",
        "cursor": {
          "ref": "460cecac-9f6b-41eb-87c9-03edf4dd6781",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "a3738f69-87bd-460b-8fc8-9efd71025f32"
        },
        "item": {
          "id": "b5b32279-a2ef-4196-9979-87abcaf69c27",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a5c59d60-b254-4771-aa50-251ec5ef3115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dea158b-fdd0-418f-be31-6b2458c8fc65",
        "cursor": {
          "ref": "75ada2cd-6281-4d21-b0c5-a90cbebf3952",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "e174c28d-da87-49f5-a0cd-94efb40f9111"
        },
        "item": {
          "id": "4dea158b-fdd0-418f-be31-6b2458c8fc65",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "b8436e45-16a5-4441-bb89-0d4f24d0ec34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5be88696-e1e1-44f4-bbab-ff2dbe18d3c4",
        "cursor": {
          "ref": "f0d8307f-1e35-44dd-9710-4b3969bc4acc",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "e4e39309-723b-4210-b37a-b4319e69b3e3"
        },
        "item": {
          "id": "5be88696-e1e1-44f4-bbab-ff2dbe18d3c4",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5931a6f7-b485-41a6-b96f-74134afa806b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2873a1b-1ec5-45a2-95c9-06bb0b224c07",
        "cursor": {
          "ref": "1d736b3c-e99c-45a5-9ce0-f5bc02b7fb2c",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "79fe19bf-4620-44bf-a0bf-6c310cf9afe3"
        },
        "item": {
          "id": "c2873a1b-1ec5-45a2-95c9-06bb0b224c07",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "55881014-53b8-4aaf-a294-c4545e74ca1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd243ec-2652-463c-8247-d58d4bbbe163",
        "cursor": {
          "ref": "18c76278-48cf-48b0-a005-1087aa022389",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "d8ab1601-1daf-45d4-9f63-e1bc84606f72"
        },
        "item": {
          "id": "1dd243ec-2652-463c-8247-d58d4bbbe163",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "4c22c500-b939-4489-81a2-9e4f378f14b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e733e74e-3c5b-4846-8ece-5e464847c400",
        "cursor": {
          "ref": "48b10a2a-44c0-41ee-bba9-9ee09d568596",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "a8335b73-fe1b-44c7-a15b-45d381f8ea48"
        },
        "item": {
          "id": "e733e74e-3c5b-4846-8ece-5e464847c400",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a6cd9794-d5a2-4433-9f86-4a5f8bf7336e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0680ceb-5571-4e24-8ff5-d6dcc08afcd7",
        "cursor": {
          "ref": "d2cab332-888d-4329-857d-fc693e088902",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "dc9b3a8a-d7f6-4846-ba8c-03365065fd51"
        },
        "item": {
          "id": "d0680ceb-5571-4e24-8ff5-d6dcc08afcd7",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a9449e9b-9692-4194-86f5-469872c260f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c34d066-9226-44c0-a7b1-a30cdc9fbfa0",
        "cursor": {
          "ref": "31ea7361-f38c-435b-8885-14593547b41a",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "cacb8187-b15b-47a0-9c04-a78125355194"
        },
        "item": {
          "id": "3c34d066-9226-44c0-a7b1-a30cdc9fbfa0",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a549dbef-6068-4f37-9dc1-3a47239bc582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "473fc73a-f4a2-4b9c-8635-5ba56722f457",
        "cursor": {
          "ref": "28630f04-6858-4b89-831d-ed2f52888b6e",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "178caf10-1253-4503-88bd-1863b7324c7b"
        },
        "item": {
          "id": "473fc73a-f4a2-4b9c-8635-5ba56722f457",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "8d030dc0-8be9-4da3-8a4c-bf3982582d1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d1ad40-ec4a-43c2-972f-ab16b2073655",
        "cursor": {
          "ref": "ca35fd15-9a76-4613-99ed-e3008ede1a19",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "8427e1bd-0ba0-489d-a299-cb54dd3c01c1"
        },
        "item": {
          "id": "75d1ad40-ec4a-43c2-972f-ab16b2073655",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b4408063-db6c-46fc-a6f0-6ea4ba6228bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75db3279-d694-4b45-aa22-32d118d69cc5",
        "cursor": {
          "ref": "a9383ffc-6d83-4b01-9f15-119e58c444c7",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "2282740a-06e7-4ab4-88ca-616bd2ba3baf"
        },
        "item": {
          "id": "75db3279-d694-4b45-aa22-32d118d69cc5",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e2c2a187-be24-462b-8c35-b5dba6e8a6da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59db352d-2efb-4fa4-84b1-3ae25ed9f1f9",
        "cursor": {
          "ref": "1b6e4d2e-3bfd-4c3e-a2d6-8a24ccb5a2ff",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "64f52618-6b83-4091-8fe4-829273b58f2f"
        },
        "item": {
          "id": "59db352d-2efb-4fa4-84b1-3ae25ed9f1f9",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "549de9fd-f81c-4971-8410-f36e31352cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a6017a-4bf8-460d-a594-f5b3603e8528",
        "cursor": {
          "ref": "dd03cfd4-e4ff-42fb-8968-fd003c719632",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "baa738e3-ab95-4d4b-9662-fea006d7246e"
        },
        "item": {
          "id": "74a6017a-4bf8-460d-a594-f5b3603e8528",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "54d12606-ddc6-4ff1-b0e8-92525824a708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e34991d-faed-4b85-b0a8-687311fa3f52",
        "cursor": {
          "ref": "92c7231a-2f49-4c2a-a6d5-ef4e885dd085",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "6f787705-ed8a-4c24-a168-c526e3c4b5bd"
        },
        "item": {
          "id": "2e34991d-faed-4b85-b0a8-687311fa3f52",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a5a5d968-bb4d-45f4-818c-11cbd4435745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87038bb-f191-43e2-b2b6-3e0ee75d501a",
        "cursor": {
          "ref": "321a5dfc-925a-4f07-b26b-6e5b62327c80",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "000ddcc0-b813-47b9-8da4-fb88cd97490c"
        },
        "item": {
          "id": "b87038bb-f191-43e2-b2b6-3e0ee75d501a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d3315190-79c2-4b58-b17f-21b951f95524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf21c119-d758-4b6c-8fd7-73a62db42e51",
        "cursor": {
          "ref": "21e07630-07d8-484e-a759-f85e0fd26ea7",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "97cf8f5e-c250-47d8-83f9-4ff4b7f3d61b"
        },
        "item": {
          "id": "bf21c119-d758-4b6c-8fd7-73a62db42e51",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b818006d-4cce-4da0-98a9-e9c6dde695bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3909a021-82bc-453a-bb50-ec19ec51dd95",
        "cursor": {
          "ref": "a1161a70-7c48-44ae-9228-7d114739f6a7",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "7638600a-71c1-4e9a-b06c-f27be14f6658"
        },
        "item": {
          "id": "3909a021-82bc-453a-bb50-ec19ec51dd95",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "74555ce7-0d68-47cf-9024-c4a0a2e68e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5780ada-2195-4493-90f7-fe6ed31af80c",
        "cursor": {
          "ref": "9529e1d3-7fb0-4be5-a90b-5ad7eadfa0ba",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "954253b7-9b4e-420f-bdad-da78fa476e18"
        },
        "item": {
          "id": "a5780ada-2195-4493-90f7-fe6ed31af80c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c2757d5b-7d8d-4ab5-9534-2a4f476c7387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc054db-7059-4793-b998-73b8060a6166",
        "cursor": {
          "ref": "5f4373ce-83ed-4faa-942d-a7d41eddd258",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "10a1ea59-b8b7-40eb-b607-2efddf62c890"
        },
        "item": {
          "id": "9cc054db-7059-4793-b998-73b8060a6166",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b6a59589-8d69-4fdd-9e53-f66b94126e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b7ee50-e897-433f-aeff-c76c0040cfcd",
        "cursor": {
          "ref": "72f9161c-6362-4fb9-a306-f69fca554824",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "80416159-2cc0-4331-a454-6b0ddc18c871"
        },
        "item": {
          "id": "29b7ee50-e897-433f-aeff-c76c0040cfcd",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ba9d36c0-b5a6-4cbd-afed-60e5a5048c1e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e37ee790-430a-4393-9c56-8b62659f0fad",
        "cursor": {
          "ref": "ea7c0274-856a-48b3-b8da-ca43b71ebceb",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "b610e261-e181-43f3-a40d-3dd2f314a09b"
        },
        "item": {
          "id": "e37ee790-430a-4393-9c56-8b62659f0fad",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "801c4c22-11d4-4059-aa4f-b86ecbc5fd29",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf4ff1e-52c3-48b9-be6f-af7b02f23ada",
        "cursor": {
          "ref": "26ce18fe-8c24-4bda-9210-7fa7adf973ef",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "06d0d36a-52fa-4edd-872b-eacab2dceea4"
        },
        "item": {
          "id": "edf4ff1e-52c3-48b9-be6f-af7b02f23ada",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3685b784-ae54-4d0e-9154-c0e3797d1300",
          "status": "OK",
          "code": 200,
          "responseTime": 25,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa95c58-da61-483a-8615-5b6d5cfc3e6f",
        "cursor": {
          "ref": "a73bba84-3f2c-4b96-bd69-ff7cbeb75cf7",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "9e290c81-2ceb-4335-b065-bf004397ea79"
        },
        "item": {
          "id": "2fa95c58-da61-483a-8615-5b6d5cfc3e6f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e827f186-9df2-4287-a853-d3a976afea5b",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "229a9e71-3e62-4b12-885c-03490fc35b77",
        "cursor": {
          "ref": "6a349bb2-5f0e-46f6-9516-e6a83d17683a",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "33380a3f-5898-49ee-bce4-49b2f0b3d1d2"
        },
        "item": {
          "id": "229a9e71-3e62-4b12-885c-03490fc35b77",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d6dd8e09-62b3-41c6-892b-08acfd0a4fd7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "229a9e71-3e62-4b12-885c-03490fc35b77",
        "cursor": {
          "ref": "6a349bb2-5f0e-46f6-9516-e6a83d17683a",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "33380a3f-5898-49ee-bce4-49b2f0b3d1d2"
        },
        "item": {
          "id": "229a9e71-3e62-4b12-885c-03490fc35b77",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d6dd8e09-62b3-41c6-892b-08acfd0a4fd7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9a297d0-ec96-4d2e-b52b-3e040ebda04f",
        "cursor": {
          "ref": "31300ce5-a972-4445-9084-3aa7c5461c1a",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "2d577789-b1d9-4a57-a6bc-c99e410e6902"
        },
        "item": {
          "id": "a9a297d0-ec96-4d2e-b52b-3e040ebda04f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5e92c3e8-f253-46c7-b2e9-5a822f564617",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f254bab6-5572-48a9-a3fd-1ec9cff86cc5",
        "cursor": {
          "ref": "f9a3b811-db1f-4c7e-85f9-7ba34a229816",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "7db60ba8-9f74-440a-b2cc-b377d1effdf6"
        },
        "item": {
          "id": "f254bab6-5572-48a9-a3fd-1ec9cff86cc5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "066ee9a2-8f42-49a2-876e-1d0aba8eba08",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}