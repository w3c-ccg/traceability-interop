{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2abdc126-df96-43ae-ad0b-48ac0fe3186e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "18e9276d-e2c4-4f98-85f9-727cd000cea1",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d1ae4bcb-e333-44ad-a7ca-6eea1460f3c0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "46fe17a7-8bc8-473a-b4cd-ce3d98a4d765"
                }
              }
            ]
          },
          {
            "id": "6bff3689-3f53-43ac-90ab-34d5c361b4b8",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1afed056-97da-4bd5-9918-df5af4d1beef",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0c1a41e5-bc96-4d99-ad72-5c5a252dc5f3"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c4269f93-ce77-49ad-a27b-15c14a735eee",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "7189c279-59a3-40cf-be97-fb18d7fe2156",
            "name": "Positive Testing",
            "item": [
              {
                "id": "69e97224-e320-45fb-a630-f05538c4bc13",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ffa92dec-732f-46ac-993d-91f1f2a28996",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "35f49336-2688-48d4-a874-55e640adc85b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a87270b8-fd96-4040-ad39-267eb05b8272",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "021fb64b-fb39-42a9-84ed-90c4b8e34a06"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0e356d59-9889-4b90-980d-45f7475fbb4e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fb3c0ddc-79f3-4382-9c23-9d3bd35761f3"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "afc7b40c-7ff5-4031-b789-1e3c01411292",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "efae6874-55fd-4725-b1b3-78022825cc4e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1063ca2e-79a7-47f3-9ab2-0799b59f51a9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "53c408e4-784b-473b-9d89-13de04e42575"
            }
          }
        ]
      },
      {
        "id": "4c1652ea-74c5-4c80-b8d4-b2bad200c627",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "4db4719a-ef53-4f31-be93-0bf2538c82c8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0bd88369-ab52-4c8b-abde-db0e5f015d52",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "76d053ec-8191-4a58-a5f8-d3903396f9ef",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22521744-2f83-4649-bd84-13939142060e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3082baa1-b3b4-4df9-a0bf-c4c83c11fe10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec14eff-a202-4610-96d4-ed13f179d600",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b0ea0e-86dc-4e2f-b55c-6963aa85d422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ddb064c1-9d98-4b02-9f91-993fa71e853c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba6eb32-aad4-4ad2-bea8-3244265ea179",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a63f82ce-bfcc-4bad-9d6b-9adf25ac3370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7bd5ea6-9be4-4ac2-a08c-3e3479986154"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5a051122-130e-41a2-afd8-321f5bf03b9c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "439b3155-497d-42d6-a465-0a0b68962b49",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e860668-1271-483c-a4fb-87680d0f8217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "82e38c9d-7651-4c16-b1d0-cfb60ec80b02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e66cfc5-ac53-457c-8e03-274a48933a52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d5e61c6-70ef-47d0-962c-13990d83f485"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4d4d73fe-fd6c-40d4-b8d8-a17213b7ee22",
            "name": "Positive Testing",
            "item": [
              {
                "id": "14804a22-f782-4fa0-bc7f-8b4ad4eac46c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8138eda-f64d-42fc-8b77-3d2855d4be57",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d58f9575-54c2-4b82-9547-2ff4fdd45f8b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b8e91575-7c95-4ae2-8661-58f363fb62a4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "7c0919f6-5430-46cf-87e2-236944f5e891"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e05af2a4-d00c-4c98-b013-e724ece03e45",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d8c6f94f-2b66-4cb1-ad2d-890422c701ef"
            }
          }
        ]
      },
      {
        "id": "e084d62d-1bbf-43d2-b843-04464a91aa82",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "be73b9f0-6508-4ebd-9c86-1eb42bddb523",
            "name": "Negative Testing",
            "item": [
              {
                "id": "681df4c6-ef44-4fd1-a397-1c3d9436939c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "60b4e3a2-55f7-42df-979c-c549fcd030fa",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68694a6-6123-4f86-8dfc-6ddcc1835b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3dceb5c-0d8f-4c0b-8e66-86bf3f2bb3c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ffb66e2-07b2-421d-b589-b572ad2e6c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e189a63-3110-4c0a-97fe-fcd954ee87a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa895ac-7679-47fe-b582-793b890d2827",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e171e6ac-6e62-4556-b8f6-ab5ab42234d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55475d28-99f4-4cf8-9e04-615161fe33e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959c3807-d867-4bdd-8463-4a4119351987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ffca451e-9372-4f43-9eea-d909d4eb98b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5de48815-3708-4147-b9f1-3cc58b3df062",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27bbad5d-2532-48e2-bac9-b4e72b51f1b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fc9bf41-a392-4957-b222-20ebce08e27f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255bf09a-c75f-41e8-a612-e8393276d1d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6abdf42b-4d77-4786-8cb9-a3b12cc664fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "949ac4a3-5dc0-430f-92c2-15c1a289a408",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0112b9e-76b8-46dd-aae1-f8baeb5c9a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3246841-07a4-42d3-b341-253cbe0c3e7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0cc39d-e4b3-48e0-8d6e-34863f7470f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9d0d1d8-dec0-4f5c-a471-925c7f4d1c00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c82066-ace6-48c5-9db1-3a3d3e1dbd18",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4782cde-d962-47da-bb8f-f46f9dafbd34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f8606b3-2b73-43b8-a3dd-f135889393af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982648e1-1a6f-4899-a115-aedf3fb6fe52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec0f6bca-9a8a-4b4b-adbc-bc652d26b4b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdfe52a2-5166-43ef-a975-f355d7d92282",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "948d4b14-99b7-4a3d-beb8-a9c9d4936b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44490b45-424d-4f1c-bc1d-68a9c790094b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8398865d-5cf8-4b43-a054-faf18ad6d6c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ccffb347-f086-4afc-9faf-42ab00fbeb34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e5ea654-29d2-46b1-a161-67d5a35baa6f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8e01e7-79e4-4281-b3f3-0682ec63ca73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24328198-8835-4c31-82a8-b0fdafad79d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d13d89-5e33-4f9e-8c9f-25e9d004fd30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9463095-f331-4869-829c-604539f2076f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "434a98ad-3bf2-4240-96d5-4a195c1e6409",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a80b728-30a6-49f8-a184-145ef14bb00b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18df3da2-b82e-4dca-b4ed-b84c4f074759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd739f58-36db-4c50-9284-fe87044699e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8f31800-99ec-42d0-a0ba-542a431560f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "835ed8b1-f361-4856-90d2-210dbfe013de",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a507bb79-e2a5-41f6-a7d3-a56a6cc09aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4987e0f3-81c7-4283-87a6-207f0d78029b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c86e5b-7e13-4c98-8496-16f9e6e5fe79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "692ded22-e2cb-4166-b7f7-6f97c2f10249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d58c44-199d-434f-822d-759199995eec",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c28f5b65-c790-49ff-b4ad-5df036eb24c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77fca751-be8f-4fb3-9546-81a3b45dabce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf54be4b-5c5b-434a-9c63-880508c68145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "697fd696-84b8-4613-a359-cc4cfaf1f716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc43eaf0-c78f-45af-8146-a72cd5b092e4",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e320f98-a7bf-4791-9e97-7dac6d9def24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2396f318-d36c-4853-a4b9-e6b3f4218da6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df09ff9-3935-4b61-9340-7c8b5f4c1789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc6ca6fd-d283-4d57-b1d5-0a06ee0b49ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "565ba022-c2e1-4f8d-b41a-aae8f5789719",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35450819-29b1-4dab-8e80-0af973ffe353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0c8e8b8-267b-4420-a324-1043dd8d34c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e76ac6e6-6c47-42fa-92f2-88e5d1d9675a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b28348f8-b189-4453-978f-a1e771d26e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8241adf1-837e-4ed2-87bc-9d93b5f28035",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a814abb2-4888-427a-b338-06ac99a5ee82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b764944c-1d5a-4e3a-8f34-3b35030ae574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc82f6c-cb27-40c9-a805-741bb1134663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "616161cf-ee46-4328-b5f8-1fbf022d3d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5a1de2-b488-4d1d-9c10-3d2686e2ad67",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aceb42b-4a55-42c5-a443-072a4b65c2c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f55edde8-871c-4de6-ab0d-3ebae9fe3770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6402978f-b8a3-48bb-b089-3ef587811f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4c0de61-a8ac-4c93-a5f4-6d920844545b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c988cd7-d7db-4b54-bf15-a7438c4dd02b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c72e4b-e158-4da3-896c-383d8c074761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "642632e4-faa3-48fc-892d-c30a6d67365f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "957e607e-c780-4550-ba37-73c93d11a854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "abfb222b-4073-4a7f-99da-d5d92b67e41d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb63be23-a6aa-4ba3-9b1f-29091eb62f58",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e55b4e0-c53c-4c29-91e2-b9491a40fea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bc1b8d5-9b84-4c22-9c28-b19e7efbc311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2065e927-edda-418b-ab33-b56a8f790e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af3ab4bf-410d-4e97-8d90-1c7e79f945df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f57850-17ca-43e4-a192-e2a9a5a83f69",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8945f13-4729-468a-ac25-524eddd6b2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9d29e58-9fe3-4769-b11e-612904761119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd2bdf9-0208-4d30-a89f-b1e14390e229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dbd739ec-e10d-4bc7-81f2-46d66ef9b766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b159b4-db2a-436c-8bb8-0d21fa33b693",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b39a00-d563-488a-b01d-578e20878391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2e32cf1-89c5-40c0-b6ca-b328066fa9c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e0627c8-00d0-466a-86c9-011112c56031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "430a9039-f3ae-4fa4-8f71-32a5ad036b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af03631f-62c5-442f-8875-0b48019a7aa7",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e6554e-9cd3-4078-aac4-e992c0c4d21b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c1a2c6a-d85e-4c39-95e9-f5dd40d58bb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7fce68b-71a7-4103-9c42-231a74bf5f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "77e49a85-05a7-4702-b1d0-9fa35a674cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee709bb1-b082-4e3f-af76-a33d1349c13b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ced164b-c15d-4bdf-bd09-97ad893c49d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0f0ddec-33c4-4425-bdc8-eeea75962cff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e9c28e5-4269-442c-9539-6f34e58f6354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5823dd01-55cc-49e5-be1e-f30c1d6cacdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3214455-241f-4180-a10e-9878cde25764",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7087d50-2d43-4abc-ac54-d1f660121ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40c454c9-e275-45c1-9b40-199bcac12fb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "963a10cc-ab44-4cb1-9d8b-61c92cdf3cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d431ece-5236-4716-a695-00bf5cffc0a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "182ce49f-b659-4e8e-b2f5-771d73cfb565",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "359367a4-ca70-493b-9760-32242530b1ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "619c9931-a045-43a1-ac48-124db46a6ad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "374ba740-c3b3-4884-bea5-d881dc755fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "71c10c8e-2f92-4195-b1ce-9df273a41086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d7dbb6-d5a3-485c-9254-8602c8a663cf",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a0c955-1595-4d84-931e-5f0b98955f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a144ab6e-f8a0-4d15-a373-a8587fd95b02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8387384c-956a-4ee6-a4a0-50c0be61097e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a3a32729-6b36-487d-8068-3fc47661e825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d78505b-653d-4dc2-9754-45f0ed62661b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55a58c8-383f-4f4d-a2ed-45d23e9a4c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15731538-7490-4f1e-b5d5-bf5f6d9204c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a12094e-2e94-4561-9aba-4e0d98fa56e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8870c25c-33a2-420f-85e6-9e24cd1436ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89984812-45ed-4169-ac7b-2964cb9d138d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e42452de-500a-4bfc-8560-c19d4a573016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bd79774-a946-41f9-87af-179f8923c5b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad1dade-7783-4300-9471-1c398be3aab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "46bc45a4-f11f-46e5-9ab9-a1cd42f5ea50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae50b94b-7e28-4837-b9ac-72c298d16356",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2087d0f-abe0-41b3-9992-cc6acbcf9002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1659066e-9f0c-44e0-aab0-9e9cf9d37272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "508becb9-f8b6-4e59-b29d-24b21a59f16b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "79e00936-6a3a-4554-8856-8a6cf67aa456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c2d4f4-111e-419c-a29b-96d4905e9b98",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caba3766-d59b-4218-9485-38c4e1b44a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b8fd56e-12da-4b6d-9974-0bb6e55b4007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296d8f14-fd69-42d2-8b94-655ea8bb0c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f69309b2-edfc-4a6d-ac4f-ece866c28a06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05fafeb3-d72a-4913-9a75-9a1100e4ad7e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d53c11-b2c7-459a-b7c1-b61e6e77b081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a7d26e1-6197-4a68-aa84-33059b4e7440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b6e58b-faf0-4dd8-80ad-b55f31205bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d241b3a-6163-4ec0-937b-8a410c957f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16355059-1d83-490d-bc99-0b1de0407012",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "837142ec-eb92-409b-a6d0-abffc0786ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09a20fb1-5481-4f13-b307-a4ccb6148b76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc7e31a7-782f-4899-b025-f14da602b0ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4aaedd7-6dac-4959-b0b3-2f186cfebb50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c2f85b8-03f4-46c8-910e-d4732aca8155",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "518dc50d-0929-4296-935b-b3856b9550b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1e7d23f-46d4-4dfe-a751-74ee49063b90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a14ba2-7711-4904-a32e-8205f0f34502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f214350c-8259-4f02-a46d-62ca87ba8a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8cb428b-8a65-46cf-b5ca-c2f45dec3352",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1597d58e-01cb-4c37-9b28-77d3e70150a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0f81fa2-a04e-4478-9700-4625c816215e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5355d69-70f0-4a4f-b576-1c00344cd680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "71895cc5-e818-4180-a85b-28410809c365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb1e57d-d376-4a92-a951-389df8ed625e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d8c905-988b-4de8-a66c-ca729e7bfd4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "074748a7-d4f1-46c4-a237-9b48e0a9aff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d74b1866-0cdf-49d9-9405-e9bb54d4eda9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "29526b6b-ddfc-481e-a7fe-a48acd7d3f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "582e894e-0f8e-445d-a0a0-b1641ff08261",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91d9fd5-c9ea-4dc9-be90-d2cf893be515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaa0557b-4c18-4c29-b607-25ff0f0659a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "debe2d1a-442e-4469-a264-b77ebbfb53ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f81da143-a249-461e-8b22-8a509ecb5ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8b9854-5c3b-4e26-ab6e-755967949c36",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e010dd-b7ed-4961-96b9-2aaf5fe1b475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68bd640e-d0a2-4b49-8844-6fc13ecfaf32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f6c540-5659-4b08-b3d7-ab34cf55f176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aaad0618-6086-48a7-910b-443f954bf2a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358aed15-0f66-45a0-bbb2-723921b3bce1",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aea6f56-beb9-4cfb-9550-bf041020ec71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44b76f22-2d6c-4ff4-9709-b5034e729f77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9078bd-e17c-4959-bc77-3efdc168c385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6f766071-038e-40f2-9fdc-bb0b6162a2dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3062e5b-d8c2-4688-b328-3a1f985a1021",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9651bacd-2b65-4104-aed4-ecefa53f879a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "563cfb81-7ef5-4ae2-84a8-9a8d7a67b2ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bf9d0d6-7ada-4de4-add7-f4888fdd9dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f821442c-93b0-4b8a-b1a0-66c8cd599308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7906b294-c14e-4145-bbe1-89359260f326",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6991252-ba4c-4842-a484-76bba1c56b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acf765eb-169c-434c-b911-20ac472e8167"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "527d8bb0-36d5-48d3-90de-b7e21d602667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b354083-723c-4397-8776-0ebd141ab204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "708a9505-97ba-4e72-ae9c-cee72799fb3b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c60fab9-1537-41e2-af3d-d047e487c645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1dc1c20-5f9f-4d58-b9a3-a6b197053648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5fcd0f8-3b4c-4997-9f14-a655a81fa903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd905226-3a91-452a-8f88-bb8882f8155d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "017f2a15-abf4-4b78-983a-45071e1dfba6",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbdea410-1479-4929-96e3-e3c009e8f7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0150135-6963-4eb9-bdc7-2f4b036dfe45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae0344b-222f-44a7-9b28-3823f574374b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bcce95cc-0bfe-468e-8679-0eaa903c5e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab1204b-7723-4346-9a70-d94f356dbd32",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "893b942a-88b7-4645-ba43-038cdd874d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf7730eb-3556-4d12-9493-657ad5de422f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f650a535-7421-4dee-930f-a96817d722cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "34c00537-6b67-4821-8fb2-d97124f56040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8cdf723-2caf-4cdd-af1a-e8df2c1fd6b7",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9baa3add-aec8-4597-954c-5d8af5186574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a23f512-14a8-425c-abac-0bbf5a9c48e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea35067-e060-4e79-b088-14b51630cea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9dc619fb-00ca-45de-a7cb-24e15daab377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da2b7eb-8f16-437e-9760-a8ecd4ce3f7f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "590eec93-215b-474a-ac10-7a936eae351d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c1292f2-f41c-4912-8b16-b21adf288af7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc48b169-5fdf-4dab-8843-0a93760a3980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "322ff6b4-cb69-4344-a9af-073ce1f84b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3226d05-3b89-40c4-9d5b-444777803e96",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b1dd87-9ab7-432a-9207-b607adb2f774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb3283f4-14ef-4a14-8ad9-99f9d63a9d2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e287ab2-1926-43d1-9360-faa23568704a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "50c6318d-17fc-4752-b587-34acdc398e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dbfbb8d-b72f-4f57-8d1a-6be8d1c85b74",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a1e8be-d20b-4775-a2bd-8507373b9d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a775263-1661-4465-8717-f4df6b74a9b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7ace67-83bf-4e60-921c-09b0097324f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ea3e491-04fe-45ed-804c-942461982009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c418f2-c43b-4950-97a6-de9d4111d493",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a2e301-4983-4ba4-8688-bff532412996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f76eafd-7993-4bc2-962b-dd01318d0b01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1562f2-edf3-480d-9948-de9092981dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae5146b4-7b81-4a93-9b82-2fae8036dbe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96eaf089-031b-43a5-ba6a-a640620229a0",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd13715-320e-40df-8ba3-441376e30166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0df9460f-4c79-47ef-b424-61bd25d5c06d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c182ad-8e70-408a-86b3-205fb9f72b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "28e9dd08-5b6d-4ab0-b5b6-a20f989fd8fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d1f9ea-91e9-4619-ac5b-df4fa2e115e4",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c465d8c8-f03f-4c5f-a238-a1d331af08bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7861955b-a29d-423c-ac16-864e876ebeec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40fa3c6c-b631-43d6-a023-29fe9131563c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b29a1a9-316a-4d48-a9a4-48af8468fffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "411ff540-46a3-4654-8d04-d6a0bb629a1a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "619a920c-c22e-4ee5-8f45-0619e6d49053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbad0d33-7a7c-4d06-81b6-495dc04aa617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c973ff96-8209-46de-a1d4-a22fd85749a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "98230310-34c4-4668-9023-08b5d7cd3f23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf0e9331-7b2d-4519-825f-4fa000412531",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4351dd28-1c6b-4af5-b3a8-12caadacb549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6367f417-4c2c-4bf0-94a8-cd877c6c157a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8331da74-3b38-4184-9b0a-03291043aad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "03cdf9e2-bbeb-40c7-81ae-9e206420a783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb1e3bc2-261c-4e2d-b995-ddca9509f48d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17a9c9e9-94a4-424b-8867-846a3a83962b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f183201-6ce5-448d-8d05-74da44d09383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb669530-cf09-4da6-a392-2bbd92ad72ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "66a7af67-9c5b-4f9e-862c-93285ddd719c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e1860e-5374-4503-9671-b3634e7e5c13",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3e7c94-fc16-4460-b8ec-6822b9a5bc0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95955b59-10a1-4bac-9447-36d042c2b375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc0371a-e184-47ba-a0f4-607fc079af6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f65f30a5-7273-40f5-b597-9a3bcdd6d59e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd775436-0a5d-4a80-bb0e-79a1d5d39e25",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c8f741-eae6-4c11-81b1-2203b5b42467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db958f66-02a2-4fdd-8819-6aac0050daa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda604de-6731-4511-91aa-aa72a6409a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c926117-1628-46a6-97ba-58e3691decf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5800d2b7-882e-44cf-8157-f805e3dbd66f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb5a506-d68a-4909-9621-f0ba55d3b2ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce4a6912-08a0-4295-81ae-ba814c4756ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea96995-71da-4f13-ab76-75086316afbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "689ce936-47ba-4320-9b9c-86ce1c5a1b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5fcc07-9463-4637-9dc4-992ea4ab3b14",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed844186-9077-4b68-a657-ffb3ddf180cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f9670ae-e7be-4e7a-ac31-6baf0fb467dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7360e7cc-95a1-43ec-a684-03a568c9c690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d7a3594-89d0-4b3f-9fa1-cb6740705845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8714f99c-dec2-4dcb-abd3-93a2b4682836",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2090c6ca-3277-4ea4-a5c3-a44347c7c0d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e5f102c-5671-4697-9b99-b16d16912964"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11286f8b-cc26-474d-ade2-ceecb5d7af9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3aec039-f8c6-4303-b054-b1f3b2c4421b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea8bb5f4-401f-49bf-bb44-4fc07d3a75da",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fd57ba1-0ce1-4a92-b5b8-dd05fd4fd591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deadc0d9-8533-4047-a671-f638a239c8ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df47390-4ce6-4dea-8fb9-2f41143f4890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a1258319-f195-4226-91c8-c15d40ea207e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5de19341-cd22-4ca1-a6b2-710f0dc4cc0d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0e10ae-0c1b-4b6f-94c7-7ff3b8eced5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbbb9e0f-8235-4823-a684-2654e87575fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3dc3c63-071c-43a6-97dc-5a15a05b4121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf5cc815-f16c-4d82-8602-41f90e5abffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd03128b-36a0-43a3-836d-5ef4c56b5a3e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e4be522-7c74-4361-8280-390070a19102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1df65eee-d076-492d-97cf-80331572873e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3708a3b1-0bdd-4b11-81b0-ab5301151293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1012df77-dc4a-4179-a5c2-3c5851421b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f6aa47-104d-4c27-8e10-2985359f2e4d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0671e7c-7a82-4611-b966-377f575b5ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "499b83ab-dfbf-48e9-a4ab-b3739e318216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2b338e-10c5-4413-9019-3d446053b9d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9636cbed-7507-4fdd-896e-6b16e480c7e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7319dc7a-8bed-421f-9a0f-42e61208149e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2009a7a-eee0-4a94-baef-68df53b9e4e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4fd3143-6b0b-4f19-9ef8-831a5a4ce086"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d77c57-37e0-4e9e-8df4-444c039fd14a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c7ec25f-e43a-425e-8d08-af89b9bba6a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f08a5022-9f59-4190-961c-d6d0d9244828",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "625e2f5b-3b77-4e2c-8ffe-f4f0b388cb92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51c3a677-23ae-41e1-8be4-ec79c0d00154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed8a9901-fe39-41b0-9089-040b84e85f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd3f55e0-f206-4baf-8060-a5a0943f7820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a13b475-ba9f-4b71-a2e4-7149f16ce69d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "582d2c2c-3d4d-418c-9da4-adfe24e1ac8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "842dcff9-c7ec-4027-b551-5d7520606540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b79af82-41a1-409c-bf88-f21559c5ada0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4dab4d5-36c3-4819-8e4d-e7a1bfca4a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5ea4c9-da25-4118-ac24-292b374c4262",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "523d6981-fa9d-4a1b-80bd-e9943ad40a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "632215ea-21d6-4613-abc8-6788a9f6cf6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00eb72dd-f55b-4652-ac73-d4f2b09f1d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a174f53-d0fc-458e-9ef0-e8e57b0329af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5993880d-be01-4289-a7a4-13705ee57ebc",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1dd05ab-6757-49bf-8510-243a52ed6cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44a8d37c-7ea5-4649-8d03-f13233ade8b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "290aa1e4-2a19-43d8-b8de-173980269390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6360a069-2ce6-415a-a7f7-2ed93b548acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f95af20d-23b2-4b4d-a9b0-ccf00d535097",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd46184-91c1-4618-b5a6-03816ad43591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc1e99ac-0099-41b8-8c83-4395a35902a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f80418-03ff-4c4b-aa05-b2c73cff5baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "293dfe5b-febc-42ce-9414-e80e5b8e563a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "715c760b-96c7-4bbc-ba06-95157906d2e6",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f428a1-f78d-4341-98d2-a8e621a2e493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97b621cd-cbf8-42c3-a1b5-52476212d1f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847958b4-ec67-41ca-9d6f-5fd815edaf52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3cb923f-945c-46dd-8ee3-9fe8a937d472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c6db68-ae6c-4f90-a602-fa773682673a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbfd1c10-cd3a-42ed-8744-c3863b08437d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae7faa33-ba75-4c02-a135-fee5afb38149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721cec0b-43a8-4fa5-87d4-964ceaab01fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6fe62b48-6e22-478c-873c-0f3a701a6462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df1ec58a-7065-475f-b0a3-e597e7151982",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "938f6394-cf24-45c7-aa0b-e277d053a300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c3cd6f9-d623-45b8-87ae-d9fa5d99d0f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4dab4f-f23b-4c70-8503-5f1ad844548c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f674f6a-7c18-4410-9a64-171baf05d7a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8528fb15-c0b1-4d77-b9c7-913b15e82cfb",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8600fa9-3c90-493b-aeb1-18896453e538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "592a3dde-f41c-47ce-bfdf-414ae509e38d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68fd5d33-2b51-41d8-b171-2eaca3cd5e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "482ef2f2-b550-435b-a9cc-4257a96a4181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa0945d-0a92-4f39-99d4-7e449e66c3e3",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8c811f0-c7ce-4e91-bd3f-916e5a3de112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82a23317-826d-4eaf-a508-fb444ff98541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "486e76b7-f498-4b1c-b44c-52a18bec151d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a7afc90-ab7c-45a7-bcd5-e4da59fa4105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "490d9d6c-3210-4f10-ae75-6e96f1bf6a21",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f93f62-4945-4f0e-b9e9-ca195c892a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5560379a-01d4-4c16-bb5d-219b4b007664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab45894-f6b1-4cb6-836b-d96283e64b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f462f2e1-bda4-4831-b03d-629cdecc48ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7235964e-96ae-40ee-a94c-f86a267dc460",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d38b3125-f167-489a-9ef3-307edd0a5f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71a2da62-8226-419c-858a-b3500271d6e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9496d884-b72e-4057-b6bd-7a223fc63610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "591edda3-1c4a-45b1-b6ff-ebb9be1fe068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e99073c8-2c59-468b-a4d6-9bb64744517b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cab1516-6890-4ab2-aeaf-ff599ed39de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6630787f-5643-46fa-846f-b49eff8dabdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce119bee-fd93-452a-8248-64f84a444c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f98885ca-1050-4abe-9e4c-64cbb902c4e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b399311-d39f-4a7a-ad06-400b62e60f35",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "575a50fa-56cb-4d72-8a55-60b10ea273ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38c4328e-1c94-49cb-97c8-7ad0404ecd59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52733057-99e3-452b-b38a-c6012b9a1af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "776a65e3-4038-47d2-bd56-905c555a3c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "487bf437-eb68-4305-91df-86c3affd2330",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "771f2d71-08d7-47ff-b9e4-8347c512a836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85b38464-3744-45b8-ab38-387ae30eeac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7750c2b-1b2f-4090-a2be-a06dcaae9e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bc21e16-a649-4143-9129-80a045bd45a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa9dceb-2149-4ed7-8eb7-b25cf80c077c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7c71b7e-8366-4569-bfaa-c046c2ebf559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e4d9170-59e1-4937-8c79-33c9a73ff73a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f28627f-95fa-4149-9128-ec51ed26df2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e9b8834-16cf-47ad-9cff-047904cb19e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b060fe-d88e-4898-bde5-f56fa89bcc70",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b8cb42-83fb-4613-97ee-cf32487ad8d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d15a274f-7ae5-4d99-9199-887ffe6a4fbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c733e91-761d-4a86-992b-0a8f12bb9cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f532904c-ea22-47b9-bd33-65867fdccddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7610472a-ba64-4d43-bfe4-ad28e3b56df7",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27df2000-366d-499d-8291-2c4a30ae99b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ee73068-445e-48d5-a0a5-3f8e78b4400b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e85bd5c-7d9e-41df-9bb2-2a2d6d1fe8ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a0b1d0c-8adc-485b-ad26-710a5698aa75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7155beb-4b07-432b-944e-f7b5a7133884",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d87cd59f-673a-4865-8c1e-70e5242500b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3b5c133-8ebe-430d-8497-ee25269a2dd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c7166e1-0a7c-4231-ad94-7cd6a170efdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d73b15bf-8bad-4bb0-b0b2-7e49be11ea4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97389ac8-06f4-4c47-922a-8615452c4e3b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c99c131d-35cc-4b98-b6d9-0278740c24d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93f02657-d533-4859-93ef-60849530707f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e9133b9-ca8b-4eeb-be6a-a997e9e04bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b3e611cc-84d2-46e7-818f-12fd30cc03c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acbfdd11-878c-45d9-bd8b-69e3931e0a38",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01dcbcc-4b81-4c20-962b-e518c9a27bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e91af95-acf8-44fd-80a4-796755e56384"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565e597a-879a-4868-8fd3-bf6c07b56e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c87c1ab5-6600-488e-96c0-c409dbd4f25d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c5e6e4f-fb41-4134-bfb5-e0602aca5397",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e0c01c-e73b-475a-8568-496c4c7a3444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e111e9a-6109-413d-803c-3ae6bdf8f2e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "922a405e-45c1-4676-b618-6768c8aa76e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "953f5237-bd96-4059-ab4a-14a1d1afaf1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab2056f9-5f15-43fa-9036-13e01e36c1c4",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e07a5ba-b990-4b07-bd4c-3800c55f49c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6540da7f-9523-4c15-9109-11be628e2e5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54677f88-a25c-40f1-9783-11abe091376f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5a24538-1b3c-4764-8170-d62b7f14fa20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "511c9f37-5da1-4cbc-9a53-0b69754aff4a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "251c1d13-9bd8-4f35-be27-74779934aa7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1b7f989-8219-4ba3-ae2a-1accb4fb6ad8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8976ceee-fa08-464a-9e3d-06f470649825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7af8d3d4-d371-43d2-af37-eb5b41ad5448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3f341a-2074-4f08-a29b-710af83ec9a3",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aafa5215-b128-41b9-ad15-16d17eda1e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57078d00-9acb-473a-9a57-5b43cc31d353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c74ba5ba-bbf3-48cd-b0ff-cd3f6a146859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9b67e0f3-61f1-4b52-8006-f5a014f53e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4476e00f-f4c8-48c6-a1c3-076dcacc8293",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "618c4075-1d43-4ff9-b366-81187625ade1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "500e353d-626c-48c6-8e07-1f3639476f19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3450612-eb5b-4cc9-a851-a56f7f52150e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae99718d-46a6-41cc-b697-ec9c65f0832f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f49a009-7bbf-4935-82c8-226a97c4dc4f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf8e0601-a9aa-4c38-84b8-ced126310b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8764168a-366c-4ead-b564-8bb16c72618f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f716ec-e5dc-4002-bac4-96c8cfa430ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "995c02a5-6102-4491-8c06-1e337725951b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "836681d6-9d52-4e90-afbf-207f80328553",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2cd2971-fb42-4858-9d41-9b21db0278cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ce2770c-e397-4a34-849b-88ecb4e23912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74701f85-e775-4f90-ade9-34fa55a9a869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5cd7111-88c2-4a6b-9f42-737d715ab0b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7270d3f-5f8b-452e-92c3-0d623df18547",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "523e909e-2039-43ad-a7da-0e2691894cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01abdd18-a793-4e2c-8007-1361c83eb6bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd87024-b40a-4501-8ddf-cf60b1f3a4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4918eae0-1dab-4e4a-97e7-a4c9dd4a8684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e55ec2-b0e9-46e1-9c88-15c700593f68",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "244334cc-5632-4afb-866f-9d3581013643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "563fc00e-2468-47e2-8767-776d615b8335"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28448fb3-b25a-48cb-ad32-6f7e61cfe392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9606983-33a1-492c-a473-2d7557ad5ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89dae70a-a1fe-4c95-b491-a9b51938fdeb",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99bc33a0-e0df-4bc0-8e84-b2151db2eaf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb384a3b-ec9e-41bc-8093-b158d6dff0ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "295d44c0-4091-4844-be89-1ae9753ed190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9dc7c80-87e6-4713-b713-b4b9d229ce5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e652b8ad-1e9b-4e26-a417-b11973ac7fef",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f360f2-fe3a-4f30-a580-a6efc1d65b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "129f8907-fa2a-4a1d-9be5-88f964b385ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458f1e6f-2489-46b3-9be1-475c1b0ae0a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "803dab5c-86cf-48d6-98c0-a56373644052"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "63da9150-71e8-40b2-9cae-b8fd24ace1fb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a662ad2c-66fb-442f-b9d2-acc603fab54b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe7adf6-2079-486b-a8dd-9634589fabd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d9e5f59-04f2-4d5c-900c-e24c794b44ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b8d38e7-2b30-4bc4-8cf2-9a8cd7ecfbc8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4212e104-ab82-4055-856c-b86ffdcb98b2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f42b6d86-6cfc-4260-825f-45d356d81bd9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80e8ce4a-6b4f-4bdc-9b1d-b3851dfaa025"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e828f7b6-9216-4d22-8f46-7d789951cf3a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a08a6fac-f855-48ae-bcc6-460423590d86"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e67bb18c-0f10-44c4-b738-1791f9a21fe9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2faf1a35-482f-4c56-8a6d-149659589571"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "762232e6-f795-43b7-adbc-af6debdb7b50",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "04f03801-65d1-4d03-8495-0ae1b43a4480"
                }
              }
            ]
          },
          {
            "id": "f1f2dc9f-a4dc-4ed5-a703-fc940d112e0d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c038c221-b7ec-44c7-8dc8-39c26b72dda3",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "94bba9bf-1c29-47a4-9ab9-9f87038f5877",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4782bf1-fa50-420e-9352-f455b916a32c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6320a16e-4ce6-4d70-b640-72e8d2ebfd5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b73efe-1cd7-408b-8e85-e710f7ce79cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c5c4ac5-ed69-4a8f-bbd2-49de3b192e2a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5d8b6dba-6e77-4e32-aea4-9d1281260712",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d6b1a17-cf58-4f35-9014-ff336b14fdc0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6cffe449-6c46-4781-b94e-83540a2c9dea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3fa1e708-f080-4689-90d4-86fb482837d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0ed47239-3b86-4a3d-a388-e5321b4b8530"
                    }
                  }
                ]
              },
              {
                "id": "25eb84ea-2f3a-40de-819b-33652e159a49",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef6da6d7-b88d-4805-b249-8fae7ac3d716",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "888a68b2-ee15-4313-97ca-3849cbdc571d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aec1ad75-5839-4e23-9b58-49b609bbdc75",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fcb62218-8a7b-431b-9d44-ba57ae5828e2"
                    }
                  }
                ]
              },
              {
                "id": "d2d64b6c-3851-429c-a3b0-0546190de0aa",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c95533d6-accf-4017-be1f-5f289fde4b1f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0a18ab0a-b79e-469e-8204-032b7952ef00"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "54000e29-d08d-46cb-995f-92b9f3c913a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e5a7370f-ebc3-4010-b743-2414eeb7bfce"
                    }
                  }
                ]
              },
              {
                "id": "a1982eca-568a-4440-b6de-dc49362b5871",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "12681546-7398-441d-a5f7-189b64a20bca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1bf1c1f2-806c-4fe9-9671-b815f80d7447"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "557b5c67-e626-4d2b-853b-1622b92371e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "921519a7-8a80-4f32-ac79-a1ea6e3c381c"
                    }
                  }
                ]
              },
              {
                "id": "a66a3e15-e9aa-4875-bda6-c723ae12eddd",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "342995bc-43cd-4bce-8f50-2d80073fc3ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8693d2b5-97b5-41ed-9132-51e21229ec75"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2f72ab90-fa4f-4911-b97c-944ade68f64a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a6591dfc-1ff8-4d8f-89c5-abb3a0ad79c7"
                    }
                  }
                ]
              },
              {
                "id": "7c185700-71b6-4a8e-967a-62deab91fe45",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cca45ba6-18e5-434a-b235-7f06b623e2a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5d80eb17-9dcd-4e1c-8197-a8c5b06415fa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b80f09b2-72d5-487c-aa0e-dbf852d7cbfa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6258f8c2-6e20-4a8d-8b6d-44d5ee544ac0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "223bafa0-0f6d-45f5-bfb0-de2877c44969",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5d02fab9-ee12-4c3a-8725-2b962c6c14b9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "00654a3b-7914-4409-a6e2-d20bf3a5255a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d6364599-dda0-456b-af83-21078ee0c6bc"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c200aade-c6e0-4bdc-b00c-6e96a4863d4a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f706a5aa-6ccd-45f0-9a81-9bb89ea5c325"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cad02e34-f5c9-4a6a-ab93-5bd5e5115809",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f5ab934d-62c2-41a5-a5c2-eb2eb2a7d7b9"
            }
          }
        ]
      },
      {
        "id": "4c143351-f8ef-4463-99b2-9813be86f034",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5701f56b-2d44-4625-bc3e-a78b3b44cb56",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ff858ae4-8f40-4b13-a4a0-cda496dc5a3e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9cdc39a4-8f4c-4667-87eb-cef8c9143736",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e80aa4-5333-44df-85eb-616ad05cd94e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1af655c1-399f-41ee-845b-746aa271533b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd9cc80-49ea-4682-9f2a-4ebd8dc9f647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "339299dc-28b6-45ae-a37c-1e8d8ae6dbad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd6b401-7c12-4259-aab2-e14a351408a2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52147d51-5fe5-460c-b254-d4286221c9d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be7447d8-9839-46bd-b71f-91955663cdf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab0c7eb4-a455-4206-9e28-41d84bbdc8e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "901bced1-af8d-427e-bef3-ec621ca094d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e6c2b7c-15a4-4347-a7d3-5ee5931fd781",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4289d7f1-154b-482f-8b0e-f2ab928c70b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16fb8a17-a1f1-4ff7-83ac-0b3f512547f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d49931dd-56fd-4ebf-a322-ef6a79513939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1391b64-9826-40ca-a6a4-3acaaba25e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0623263-ef8b-473f-afa4-d52fd891dab7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97225cb3-6d5b-4879-baf5-7175ebd27fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8b87d5f-0678-4e1e-863a-0c94f4e2984c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85612db1-2297-48c1-9d37-a4c825ced80b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8aa6ca1d-9364-4e73-b924-f4ca8e0ee032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52197688-20c9-414b-a7be-8f3fae991497",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f1bb6c-15cc-48f4-9b69-8e9b80433ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9194bd0-a415-4b45-b3db-dd7e243f8e75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb183a8-db2a-48f0-8f71-5e8d09f26d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b59cf6d0-9a22-49ca-8fe9-ae8affa0f727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "182ae9ce-066e-4f48-80b1-cfc35f097185",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aecfa09c-4972-4e9c-8727-aafbec73c1df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af432794-2c63-4939-a49c-a637356437c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7395e1c-d034-4f91-b241-7bf328f1d6d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e043ff9-fa02-44e5-95c9-2b68e01afba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814f1d87-b953-4c70-9f52-eaa9c89b930a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be8513b-61c1-4ece-8ae6-55fa36966b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eb15904-f0d4-4f57-9ae0-77dd812470ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3afd4996-daea-4762-b5e8-88bd335742e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5fa7ca5-1283-4c27-baf6-36c56f0affd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a5e310-3ac6-45ae-bf01-bbf6c28f0af2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b890f93d-791f-4e38-950b-467a76a3efe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cb92bbf-636a-4fc4-9a42-2b96d21210fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7883fa89-23f3-4e0d-9404-09f5281157c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c4318bc-d93e-432c-a8d0-9e1b53c5b814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57bc5af2-e95b-4a6e-8ccb-1ca644e12712",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf3796ed-9baa-4deb-a1a9-3dd63b78dae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ebfdbcc-be2d-4fe8-9257-ae9840cce25d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b299f3-3bef-4c2a-a2ed-e229ba33d3e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2d83a3d-3ea6-4d24-86a2-270413afee5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be1a004a-6a0b-4cb5-9ca6-d2d11bf3d5e5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ece78f-8866-42c4-86af-74c22f340ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "274fbc81-e2fd-4a58-bce1-054a0769a7d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b099f7-5cff-492e-9f77-a84f4479bd93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3de332b7-fb3f-467f-9173-46ddfcc0d391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c29e9a52-6c36-44b5-8b20-5537bcf6b62f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69393d6c-b42b-4205-bc18-a7a2e88bc308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e91373e-2418-4f05-8cba-b6c15b3ddfca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb87e85-ce3f-4d84-8e5d-a571352872f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "315b34b9-2bd1-45ec-8c6d-6aa871a3a217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6358705d-4cdb-4376-a68f-49b62839d885",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e50f4d9e-37ac-4d6d-8534-c636f80cecc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49260c04-2558-4e6d-980e-eed54c7ca990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6749570b-4863-48e7-b901-9f2e8d768e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "24604de4-53ca-4a27-a9a0-673696f7ce2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae6ad6b5-7251-4394-b604-cfb5ad855317",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d76b9056-4627-47e7-8521-00d593f4e1c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15c32ef2-7377-490e-b46c-63b04f792ccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9db7c37d-dc16-4527-965e-69ce2680c52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e18b7ec-6a18-4885-9b96-966872dba55b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f623242b-e906-4968-9e58-892747b02ac7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eecfd983-50a9-4ed2-9e51-81714b5cf539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01260cf2-19d8-458f-9b48-2981282d10f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa644d3-c76b-4cba-a0c9-ee75f65b01b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d432d376-724e-4e1a-aefc-d23442198d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35df75c1-6522-4d93-b776-57be7cd75d99",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d728d537-80ab-41ac-a315-12f199572013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81a0fdcc-0867-482d-9691-d84606d8c0e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b51e38-175a-48a4-92fd-cb898298ede9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b50e77b9-8b46-456a-a63f-fc6f23f1db17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b07834e-2fbf-4ded-9283-dbfe33778f7e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d7e934-c0aa-4b18-a0e4-fc13cb74fc6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "303e0dcc-8522-4bb6-ab72-88d0a15ea6fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f7c76f-4428-4adf-9416-72a72afd010e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a49d9d0-a797-4283-be88-62fd5b5711ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b995cae-f85e-4f28-8ffb-675bcb205e38",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "373f0816-deaf-4d29-8aaf-2c29767767f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "976c6063-ba81-47bd-abd3-430d9d62456c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c7d79d-f9b3-48c4-b104-8dbdeaf777ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d7abf79-5996-4562-bce4-668ebc54b523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb595f1-c380-4c4b-bf63-acf369e5cd43",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a23082b-4048-4443-93f7-e0ffefc0104f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c272234-99d8-4e0b-a2bc-1e92b05d9434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0074b554-4f0b-470c-9f50-b4b7488b3094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "16182a0c-7e04-4392-93cd-bde29fa0d573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c0ad975-748c-44dc-bbc6-dc55c33f8027",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9be0b20-399c-496e-963f-9a8ee9d000a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6fa410a-cd75-41ed-9fbc-920d78a06e14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de120801-6e35-4f1a-8fcc-2e7458ea58e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11d4d605-14a1-4972-9eae-baa4b9db5584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d655be-485d-4b82-a15c-17391920b359",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b3d7b4-8914-4f97-a8ad-e0a4baa51c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ebcd17d-9693-4949-a211-07f6c36af635"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dded6361-3d45-4e4b-8f2d-c3496484b21f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ae69306-c97c-490e-b8ce-56bf7338254b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc05e78c-a65e-417a-be68-12fa0628d04a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb240879-567a-4b56-ab67-e4a5f53a724a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "196fe45e-9ee9-4370-84de-0a82842a158f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1448d933-a01c-4b49-8cf0-468d0f665069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed5b4763-1ce9-4712-9bbb-d3b3e235db05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41c1713c-6d46-47bf-8e40-7badc74de646",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c16dd6-5a6c-4a34-ae97-f36133ff029d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6845a47-9b5e-445a-ac84-3b4d7ed5c97c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3bcd33-a2fe-4d90-be19-6f66c9cfe802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dc5f11f-098e-41ac-962f-758aa149eaa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df950dc1-7281-4fc3-a50a-253f037b6137",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e16a81e-6bd8-4a3b-b332-48fd923caee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f400eb1b-6385-4288-93c9-2ebf799e8118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca4632f-01ce-4b4a-8e60-658a134db184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9d9b36a-7f85-4d20-9cce-835995e361cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "044c17be-3616-454e-b3c9-8eb782c4f3b6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de9b2954-7496-4dab-8ee1-0bbd20fc00d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1436d836-84f7-40b8-9575-454ca1f14d01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff63e84-6f9c-4bef-be4b-2a0156e09566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5faf641-f45a-4098-8936-b226d34ee4b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "697b9511-1bd4-4557-9aba-df34957f1c77",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db6c7fc5-bcc2-494a-9f09-5d31ffeb895f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "530d6a7d-7b90-46bc-ad15-ae17d55e666e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb383f47-081a-4dd4-9b9c-75c5b1e506cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca91e613-1d69-4a57-80de-a8b7a474d827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d86061-dfb4-4fe8-80d7-b54e8e2d1c2a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c00d97-0589-49bb-875b-2067777a82fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc86484f-0daf-4852-8002-4210b829fda8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d5fdd9-e0cf-4be5-9408-819224909695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fced9af1-14a9-4e8b-bdc2-bfc571f2dbd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6700f84f-3f6c-4c21-af58-b86b481980ba",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e2fd079-a1e7-453f-be05-88f0ad339b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb064c75-fbfb-4a83-9d10-c51b34d20869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b656c2b-b2e9-4ba6-9582-05c85e6e59d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "298262f6-3061-4533-a878-87dab04b7e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd28e905-6007-435d-9b0e-04c6fe6072cf",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12578525-cfd3-4484-a74b-065f8e910994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15acd330-b932-4f16-9d16-c89d8c315009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f2fd352-109c-4af4-97db-7606766a52fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6a4e012-62f3-4f1e-ac84-fa54d6983b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6395708c-c86e-45d6-9c08-cd1ae6162fb9",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47016ec8-7fa4-461c-9045-e24a61aef0d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35fbafe6-013f-4271-855f-eaf2424ce18a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8b1fa4-16fa-4141-8ca1-b0efed727385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7f4bc31-548b-426d-b518-e5e07041ecc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "803cef56-4548-4276-b6f1-bc6d1a299947",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af4d5ec-1860-4440-b840-c4973498c482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5da1a5c4-17f4-4da6-8851-d2161ea93135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab77e55a-7695-4b33-8e35-08bec090f782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0702724-dbec-49d3-a3b4-460323ede9da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef2b92f-04f3-4d8a-90dd-671e976564e4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f1949b8-3a20-4dce-96a9-6abd4c73f3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5368360d-ae0f-48bc-b566-f1216dab2d6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbbbfcc5-9355-4729-a08a-cf09a4a3a0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8927c20-a31e-4879-92c0-ab22f703a9b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c3e459-a56a-4875-99cb-b17d19caec9e",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2c0dc9-acb5-4670-8778-c0b4b7894329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b406fac6-6a08-4c46-91d6-b45e0e50ac1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc299a1-9c69-4376-80d2-f22c972fc225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "484954cc-a1f5-4e9b-b431-0e997a344b1f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9d5cfa82-f7b6-405f-bdfb-9f54896a430f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7f93da3b-ab32-4b1f-a53d-7d1d17e1aeaa",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d33e1b-862c-438b-a58f-3d016e19a0f5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fffbfe2c-db39-4e57-97bb-c83ea625aa19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "725b0ce3-79bd-43a3-a1c7-7d5065d8a882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb7e6033-0482-4fd5-9816-4cf1cffc2c0a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea0e93a3-60ed-451c-be76-abcd8537e97a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bee379bd-461f-4af6-85e2-c0568cc3d622"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "445b7b46-cba5-4437-921a-376f52fb87a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96fb614c-b98d-45b5-9024-d5ff8956fec1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "68ea0a62-6abe-4775-83c7-bd080825011f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cafde7d3-d04e-4619-bd7a-cb989be04688"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2c901469-55e8-4144-8227-5d468c7ac888",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "39344934-c799-4e01-81d5-c67d0b508715"
            }
          }
        ]
      },
      {
        "id": "79c9d29e-98e3-4e4a-9a08-bdf13f483a28",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "6da86667-06d6-4c49-87e4-ffee26eca193",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fd1e6785-31d2-466a-8c25-478d03d250fa",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c221fcbf-c8e5-4c01-b9b8-e5a38f0b38d2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca94fa4-0da8-4b72-8e94-5a0c8a223680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84df2772-7947-4daf-a191-45f162ab56f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70db787b-d0ef-481d-8eb1-1b537bfa2edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "cff81e6f-604a-4216-8e5f-a10beaf4be8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f97b3303-9969-4f5f-983e-b3c4639295a1",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12e4f79-bbd5-4170-9eff-272e258f3fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fc35401-e5e6-4be5-82e6-483cac3e7988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02cedb93-cb60-4c14-8c29-6bc13514cccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4febea4a-84eb-4d8f-b5a6-e370979e1a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ee47a77-a316-4050-a628-4b2f8bc31c8e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91323376-092f-4da4-ad94-d142299bfb91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0785fbd7-9700-48f4-8722-997e3eed5fda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82406e5d-4f77-43a8-8327-b8a1bbbca996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "12f54167-65da-4454-b423-70678836ed6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "548103c7-17db-4533-8371-5b1a1455f157",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d8c8b43-4d41-4e81-a571-c4796d8d6822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "860159bc-b468-42a4-a6a9-89be7ae545f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5208c1c8-b8c8-42ef-8645-c3981f92ae45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "978fefa7-0b7a-470e-a209-6f3f90930f0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96febd45-316a-4806-8d22-16e9df2535ea",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a371d37-2417-4921-920d-6eae23211c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fef4f401-a97b-4526-af42-1f4d39aec833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82abb193-6801-439c-a67c-07d9f71b80ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fb1d504-3e84-496d-9275-59d607e90d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed4275f-79ad-4a4b-898d-87464c837259",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "606cfb2c-3684-41f1-a1b8-ead10ac07898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8c4f283-cf60-4033-bfed-37a758336474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9371c82f-7bea-4c8a-8132-a55f048db2c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b45f797b-dd1b-48e1-ad4a-632d773ffdfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1086ce6f-1085-4340-9ca3-98d487beee08",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c20b90f-e98f-4cc5-beca-b6955384c4ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cd71246-922b-4699-be45-005beb881629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c238f451-085c-4600-b2f7-a6e51a695453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "52715297-00ed-48b5-ae6d-2d730893a0c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c657c6ae-7dbf-42cf-80b7-9b11417eac48",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4854b3ad-4a96-4318-8963-bb0c4fee4171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d925c458-2f76-46e2-80bc-d679a63f0833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ffdb71-981e-4e99-827d-e142dff8ed20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "35e6630d-4d08-4d1a-b4ed-9aa9ca8e4434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3717b96d-e602-4bd2-a20a-8b3bbf0b56d9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de0c9b3f-b8dd-4f6d-9915-7ca1a42ff636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be5652ef-ba51-47e2-9800-d3be0adbe659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c7739f1-3f3d-4821-bd8b-9073575e109c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e0a1f1b-d334-4136-8af4-573959acae45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1663dc4-6130-4cec-9733-0736bd6fda99",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ff8791-c22d-4ead-af66-d6467751a9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ac35b36-863c-4de1-9e64-f0f62a091794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b435ac1-5135-40e1-be3f-d1414b9e900a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "868532b0-c2bf-42a5-a120-3f1e80ef8de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7891763-8f83-4e5a-858c-97987afc740b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ee6231-8864-4fc6-a3db-2f96ee106b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "726e768f-9239-49ee-8509-b931713d8092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88764c39-c182-4d36-9fdf-1088db4b0592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "bcb746c7-c15d-45bc-b495-10a62e6acd89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43bd10ac-d42a-4d4d-a34d-1ac2a0297063",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97551b6c-4185-4ae2-bc74-574c9b182e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6eb1d58-0448-49a3-acbd-71f12904bb2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9fc1049-cc60-4142-a7e9-2206d4aa04ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "57043d5b-4ef7-48e6-9891-7e5f2a042bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c5de95-7bf4-4e03-9e02-a90a10685e17",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "698b3b23-7e56-4f13-9a77-96d112663257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fb12b8a-f952-4b22-8f9f-67f2c3289c59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85da846c-259f-453b-955b-78c91cf61414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e18440e-1766-4278-87c1-b661b868ca07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d23efad-5d79-4d70-beaa-7464f967aa14",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f462a52c-82a6-490d-bfd1-2adeb1c0ebab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ca90277-75fe-4f9c-9202-a01dbf6e8f81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d38abf6-4c8a-4396-8388-3dce1bface1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "903ac1ed-a54d-4ba2-a041-d434fb568337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "432b91b2-62d1-4ff5-b5af-4ce5d19920a3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "850e6b91-a8ec-4480-83f7-8519966f42d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "479c4f5d-cc25-42b9-973a-e2eccd816ff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed84ef4-c1e3-4d90-af38-1d0ca88ecee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "91cbff65-ac18-4087-a1f5-c4edfb9fb486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f946dce8-5736-48b2-bf78-ad2b1cc15238",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91585d30-3aeb-4b49-a97f-1f12a65f1959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef971ea8-c0b1-4001-b070-22d0ebb50c75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "983d4725-b12f-443c-b720-dac9ac6b43b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3382b110-e030-4768-a1f0-95515461bc22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c0dc812-a287-4b19-a438-24f34f94eacf",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f10fb2-4828-4775-bae8-377dad9a9660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3300453-705e-4386-b20a-03729f52b7fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52bdb156-ada2-414a-bbff-7a5da07dc774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "28ee60aa-661f-4491-95a5-6c935f9e6c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d3c655-9007-4295-8107-cc7863c11a22",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f3063fb-14c4-4bf2-81ba-874ac96f0a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "606bf333-4732-42eb-b609-318d69b7b83e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd32093-1ec3-4f5d-aab0-82348e4c5a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b5a672e-0375-49f3-a31a-8d123b3d8a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce37a36b-0c94-4026-a313-467a9bb5f8eb",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab78f9bc-dc30-4fef-93a9-0fd7147d9fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3279542-c5b2-4f72-b8ee-70af7d2172c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fdcd94d-3e98-47e0-b1d3-116c77880473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fb7e42d-b527-4580-a858-f566bab1eaf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d26dc43e-932a-4d47-a409-7c693efbc529",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67961fb6-1a97-4296-89d7-9d2f962a9412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b11de10-10c5-4158-abe0-c7d7b499be22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc0aef3a-9ff8-4f34-a7c5-690a7edaee5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9aff95e-3765-4a0c-be9f-8fdabd55bc41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41c6531f-86f0-4494-8609-dcf03e983408",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c86e59a-f068-4e00-8ad4-27f88a476648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85c0bba6-12c9-4dbc-aca1-51b8ee17563a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2edd507-f2c5-4964-b1c4-4eeb29832ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53a33e07-5678-45ab-9a26-421267cd61fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d18ee4b-12ba-422f-98d4-5134bfdb2098",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1c4146-6605-4f25-aa0f-13a069dfa65c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40f072b9-8769-4d0a-b005-6a8772546717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55e0058-820a-457f-bc6d-c237b8f26222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6917bbfb-bbdf-4038-923c-f677e46c2619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a77e8a-addc-4d40-85c5-b88304e22c58",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6fecccd-6ef7-4c57-a8ff-cf52aa21a4b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29750c65-2568-47af-9920-0862af498a34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ba7464-3285-4271-be31-7a493f3576a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4065fec7-3df7-4ac6-b2b5-59ef96211d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8395e6f-ec2b-4369-88e4-785e11b0e6de",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b7f9b04-751f-4dd3-a95e-d875c5d26826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e03b6ec6-e0e2-49a6-9bd0-a07d7ef806b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38dd72de-e52c-4fbd-9d25-00369eae940d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca9fd6b9-0545-435c-9235-5b88cdbd531e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549966a5-555c-40ed-8daa-002256870114",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71dab0a5-f3c2-44af-8514-33b1dba8600a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b1f95df-7c04-407b-b34b-5d27db0071bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451540ec-3ad8-42a5-b033-4c66b603534d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10b424e6-50e5-46f4-92e3-68c736d02c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3231d936-f85f-4f46-992f-67a5c6769b23",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e038979-58c1-4342-9946-96e20adc879d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "320b419e-e958-41e5-9161-ad3e4b2e8b1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4edeb7c-b9ac-4d6e-bafa-8ff52cd902ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b11a4671-6347-4733-bd60-916d905238bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae8e3cde-3d37-4db2-8440-ec0f70d97f5e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21eeec4a-0d1c-48a5-878d-d24762113da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2115e432-fd92-4bed-975b-b9a834d3fd89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31323f2d-9b11-40ed-a386-1666a8751bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b6d1b2c-4675-42f4-95b1-1a30e2a32df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329c87f6-0327-4bc5-938c-180c39a77ab7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9043eb9c-c83b-4a07-a634-4f6ec0b9813c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74dcaacf-56b7-4522-8742-fc3649c88d44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee6c0741-3ceb-4412-ac53-f21884a6cddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "180c92d4-6ac5-4fc8-8779-557497f5eb72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7826eef3-22dc-4e90-a999-f5410de776f3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5674f8c9-75f2-4e1b-84ac-3a26025f611d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c460f3f5-953c-4c29-8a43-c313ab58d362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c6e1bc-59c5-4caf-a41d-80c06cb2d8d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d65843ac-9ec8-46e5-a581-8d284dd3c886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8192fa98-edea-4222-b2fe-c2c3d1562c53",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b25e58dd-8aa7-4b66-818c-4a2052ae7936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c407042f-3ee4-4b07-94bf-7489e394177d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9284152e-948b-4d20-8492-528aefb41c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c0b6d81-753a-4e49-b925-bbce5b41da4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89eae00c-e1c9-45c8-8c16-a357ea8aac88",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4519a5-043e-45e3-82c8-f3c1136289f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc510350-5814-4315-9060-48ee6629c711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa8cd34-220d-4bf6-97ff-37b89c0ce7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b97986c4-961b-4a21-80da-706c1fa06354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f70b21-2f9a-4bc7-82b0-ac252c4e1b35",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14469fa4-7334-4153-8d30-8a5a110b094d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6dbf92c-7b24-4a0d-983a-1c841dc3c936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "226f1867-6495-46e7-88ab-8dbdeb61a0da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "933bf9b6-9903-4e14-a4dd-d7e040112838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f91ffec2-5023-4764-b18e-1546d1f01c0e",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd608ce-3fa4-4939-ac84-d96000ba0e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad6bdd42-a7c8-4224-bcfb-ef97772aef38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f27d28-aaf6-441e-8f96-3ab80581d9c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab8d92de-c913-469c-9aaa-07cb0665e342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ca6884-46df-4c11-afab-ea936844d938",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7edf439c-b760-4109-be95-60b817287f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7839d0b0-a30f-4f68-9a9d-1de99692f563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e76c678b-dbc1-40ac-afd5-0b62deb9278c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55ec41e9-8e5a-4398-8251-b1627928e623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93bf59df-fcd0-4d98-812e-b038cd1fbfde",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8da06ed-7fe3-4e19-a2b8-87c375c9d9f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e78b6756-c6e5-41d6-94b7-e67fd8b2909d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b98c02d-7116-49cb-8342-cde8b14fc71a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0c346ea-dc87-452d-95cd-e8e7e21c4c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ad7696-8572-4bfa-b117-920f4592e115",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af814ac-b1a2-4041-ab84-dfca4dc93ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46f96225-c1e5-4a75-ad4a-ffcd0b2c8d41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b73fcc1-9bd9-4b43-bdeb-dccc9ea7fe3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70fde642-402b-4a71-8766-f9d684e300ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f9da01b-a63a-435f-adfb-aedcfe4998e3",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9436dac3-255f-4324-91ec-1784ac1c394e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c4c5617-af5c-4b29-b9a0-8921691cd846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22050be-a099-4f11-862d-a986eae8a0f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1019993-7728-470c-b0ff-bfb0e57e7ce4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7e91df88-683f-47fa-9d57-047a87c85804",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a7fa47e9-a72d-436e-a218-db944a094e5f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b98d855-125f-4ec0-a5a9-38c28bc6a9f4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "954e616f-6ad3-4acc-9a67-b399b8e55660"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa91634-b72b-4ea5-b984-afe67385f5c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2fad93cf-48aa-46ca-9f23-1475baf7c201"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df5f0f7b-a832-48e5-9f78-f0c01f570439",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28f9bf04-1ddf-476c-9351-54118aec5a6f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "354a190e-6396-4b34-93f1-c1f776835894",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b800d743-4d1e-4b27-8f00-5d231d056c2f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "42bb9e0e-df66-44c0-82ff-303a6bbc8217",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "92d8697a-af85-4972-a46d-b223403e5655"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "53793d2d-0bb8-4869-83b5-6ac5d5b9877c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "85251a25-d352-4794-8e16-f10d8463f12a"
            }
          }
        ]
      },
      {
        "id": "68a2c114-c749-4973-9871-08361dd1db23",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a8819d7c-a479-4f5e-bcf0-852b7f220c01",
            "name": "Negative Testing",
            "item": [
              {
                "id": "74c7a794-bc7a-4e3c-9241-f2807e70a9a5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bf2d5f8f-c4ff-446d-80bd-d0cb27d5e36b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f40c2f-b591-4a49-9bec-077b5bcd6963",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc0a31a6-75e0-4741-8a3b-a4ae26817d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c20766-b5ac-4984-91f1-a588775fc978",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb0da4c-8774-48c2-a6aa-291d9d85baa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e350f05-ad96-40d3-a7f3-c071634783b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae0ed69-2cb3-4ebd-a838-5005f5c5e407",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4970ef01-67ef-4812-89d3-7a0f11353911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e10158a-fb05-4e9d-81f2-cbd5bc908dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dda28ed6-625e-4e00-af9f-4c58f3507527",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e30fd34-b366-46e9-98a9-5bd54d222e0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5102b915-1083-4448-b9d9-b6a68289e540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b70b1acb-147d-4c4d-bcab-682a7ee4d2c3",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55bb75ab-0f40-44f9-a2a7-79381e96fab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2beaed5-94e1-4435-a408-de3b4ccdb1ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c115c7-36b2-4dfb-96f9-5507e205ba1e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d9cf421-4c9e-45ec-931a-46e59e1312f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ed85f17-8cb9-4703-b7cc-54c8379be8bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df2ad311-836d-4b43-b9a2-cf9afbe68050",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11007a8-877d-449b-8dee-8e46ca888428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51698aeb-f185-48b9-b43e-b10f8ef4caf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da62882f-2522-4ae4-9892-fcc1d1c2ba5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41b5667c-373d-4a89-9434-d81732dd66b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1be4eca4-8c54-4036-ae38-ea4969cfdfc2",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d20a07-563d-4534-8194-0917302d7350",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abf83413-23b4-462f-9142-edf3611a4b89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2183f98c-38f3-4d59-be93-41f617600220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89da91ff-a24e-4546-b147-55496d3bc2a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e69f1b9-da06-4539-b0bb-a8f702b5b572",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d02649-10fa-4241-a854-8d7217722e96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28581726-b549-4a4e-ac83-79b753f31183"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c2d10d-9b5b-46a2-965c-7a14c4487a2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98b5f21c-56bb-41c2-a510-2625c9b1982e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd7a70ed-6c8d-49f3-913b-03983ab573d0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b8f9c3a-c8e4-4fd9-b34b-99c2d7c4f123",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5e0bd80-7065-4d47-ab9b-098043bc7836"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2248188d-9f65-4199-ab71-0845c3901cd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fe3d862-81ab-46f4-b0e0-3c60c8dba846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b6f817-9428-4f2f-bef9-94e2d7db9cdb",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93fb53da-c722-4d74-9fea-7b5b74cf5a34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a63e78a9-8bfe-48fb-b00d-1711ebedb607"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf79b431-6781-4320-a8a6-222cd93d3525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a642abb-e99c-4289-bc34-1b3f8974bb59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce600180-9234-427e-9e0f-8d20619fd77c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c8b57d-245c-4391-aa2b-f463e42dd8e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b42bec0d-fed7-4388-ab82-b7d1b9a092c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c676467-fc40-4502-913d-d9c4a3a145ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3212ffec-e8fb-4637-bce4-30094ffb4456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac40f4e-ab78-4cd1-905f-292ba71fa4d5",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "485f5a3d-cc36-41f7-bc12-854b7492f3ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53c0bd51-abf7-42e2-b2c4-db079ea2f6d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6655c983-9a5f-427e-9227-5604687de88f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5af2afc1-a458-4f6a-b1f5-c2a819edf83d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6cd6924-79d9-4315-8f59-46af642215a1",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a22ec18-7cd8-40fe-b6ab-031277895e91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9624f35-a6bf-4840-82f8-25c9faca60a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42107306-9c23-4976-aec3-c3a5e6e1bcd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f94fa358-e34a-41ea-8438-8f6107e36a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0898322-5ab1-45a9-84b7-4284483fd613",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5638da-61da-4609-8bec-723d1e793e96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99142341-e8d9-47dc-a834-1e8e43d6cfac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8de3620-a321-4c22-8dfd-d074fcc07ff1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1834192e-ab7c-4063-95e4-5452294a6006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "069b360d-435f-4dee-a65c-e473937fecdc",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1338dcaa-c61e-4a7e-8644-28a0fa4a4f7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b48c4e7-8a3c-4920-98d3-cbb2a9793292"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29d355e-746f-482f-a421-ae171c22c6e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7caa9573-0269-4d38-96d9-607fed6f6b45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fdb46d8-1421-4858-a3ae-6a9e62983076",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e06c9f-41e9-4154-b397-7dc75fa4ffc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a4554ac-fc2d-4aca-929a-2651dd5eed0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c781e96-e125-48ca-ad75-46a75f6f0bb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f5220c-7ccc-4c53-9c7b-7b6da34306d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b589082e-fa88-4ba5-8e14-0e7b674f43b9",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97baf9c2-b114-4f61-abd0-75c9fdd04263",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b011506-76c2-4236-b102-c4c7dca0f079"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5aa96c2-0ecb-464c-9109-9fd7da21e677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22318142-e1dc-4e0e-bd59-0dd351dc7f2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa66d196-4123-46f5-ac5f-d52ecf9c166c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ea5fb8b-9d3b-4cc6-919c-74a89d5330d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2d4aaa3-df4c-4e03-b548-f7db1b1cb4a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad99f10-4b11-4d5a-9daa-898ec0d6b9b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffa6d80d-181a-459f-abaf-1dcc8f0d6299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33b8290-d693-4e50-9683-198a30af4758",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc140f0-5808-4d97-9f76-7e1d7caabb56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c21d61ff-01d9-486b-a308-b59b0503d9b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26f1fd5-aa3c-43f7-b1f9-bd0709fcf9f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3309112e-95d0-4144-b8dc-29e80b632fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "083d4072-89fb-4947-a1d6-b209354eb15b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71840ea2-64da-41f4-8774-52677cbeb91b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "842111b9-28a9-46f8-ac19-1ad4a62d265a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae27fd7-eca8-47ea-a1d6-97fbb60673be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47e3b7f0-65eb-4e2e-9cb6-1cdb2e917036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ffbc4ba-182c-42ad-8d75-0eecb834af1b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e60fdf-6e7b-4c2d-9a8f-aac8e65e62f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3a797ae-9bfa-4003-9d0c-790dd9bb9c8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3c613c0-a3ba-4fcf-a959-bcf13b292582",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dc7963c-edbe-41e3-8f26-0539d1e908f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba24929-bbe7-4ea4-98a4-bd6edfe02b83",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4197de-8c10-443a-a013-8d8154c1db73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f49f134-a079-4023-9599-601b1a914873"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df448e9-0472-4f99-bfd1-a41060a7575f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4cf1133-290d-4576-8c66-b2e0386a939a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76d0435a-16ca-4da0-bd71-69ecdb4d31dc",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632ae225-0c2f-4173-bb63-f8d09f019190",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94eefd51-463c-4463-bb2a-169f9ba21f8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "957de845-ebe2-480c-8d29-7c9e4ede03fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f83a3bd3-18f4-4320-93e0-f3884d0c5a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd41e5d7-1763-48df-ae89-fd6e949b1aec",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d1565a5-daec-4765-8096-451d3f9e0047",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a71013e3-e735-4d05-9357-ce38ca6b8018"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c7584b-aac4-4e33-8b84-3e0ed706ca20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceb8fa47-654c-42ff-902c-4c334a0c8d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d27a1e1-c02a-4195-8ff3-1c2c6f229b3d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd1f0f0-b7da-4280-98b4-63a550a5f705",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a982031d-cefc-4175-86f1-2a139c708efe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdfc6f5f-c306-4d91-ac15-aa44aa2115b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2773d02e-5c8f-4e69-9eab-12268e08c418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a40df9c3-3323-4a1d-ba4a-4dfbe249c6c6",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "346584f2-6280-4de2-b88c-7a784885168b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f452a35f-372a-4e0b-af6c-ad2eeea88365"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "363272f0-7ab9-4461-a614-95a833e7c4d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2257440f-e7c1-4678-934b-4130e76087f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ecd281-5209-41b4-8461-95e4e5f36b45",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fd64cb6-5bf9-49f1-80eb-eb3e8b30ec9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13437646-bb9d-4c12-a103-3ed9a7ffc80d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f63dcd33-ea6d-4104-b981-c218670da3f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f1f7c07-8e4d-4c8f-a061-195c67eb3f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7305cc9a-f8ac-40e8-8b0a-f8cde6276a35",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d8c8af-2d54-4f03-a65c-2b2c194af03f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad197746-6860-4b9a-9cca-e3132f7f4288"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8d6e67-08eb-4b34-b4c8-4cafd83f9887",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d25d8f9f-99bf-4aa1-9d20-668aa41f4be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b3cd71-c73b-41b9-b1a1-cd79a8168a88",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a51216-c3db-4b6c-bf96-ccdd8fb1bfcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d752d09d-5637-4fcb-891c-e1b0e32e6f5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b59b4d72-cdba-4c1f-8b74-d1491a11979c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fab55ea-6a53-4fc2-871e-a4f96e4e4700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "960d6576-5793-446a-946d-32c5eaba2db4",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7587f60-50f0-4d0b-9341-a37dc966ecac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b538a4b-59e2-4c2f-b7c8-7335b1332468"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9265b06c-d604-42f0-a3d3-5a7d491a6ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55357f3f-15f5-46e2-b05a-abade57e039f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88ea6d6-37f6-4813-a4c3-0b81fe213a47",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077cbf52-0c5d-4a4e-b256-7e6d00b5e275",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d91f9634-e2ce-49dd-afd0-620f520e9aef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8d5571-8670-4d6d-b7d3-2722e7f153ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c063da3-b214-47cf-be66-a1214f8bb3c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "589d379d-b017-4e70-a5ff-4ac6b410742b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d20c33a1-6863-4f73-a031-87c25000dd1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1691cfa3-df93-4cd5-a5ff-5c70b408e508"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1a49bf-4179-43b6-8cd5-599208907526",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77bb72c5-9da4-4899-9b74-901273ebae11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "930de1cf-5532-4b7e-9a37-f8fadf3ad177",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5ebf97-482c-4884-885b-02e3e71ed367",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf6c3d29-e088-4153-96f9-602375564e21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96ae565-1c0c-41fe-a604-21915666216f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b76d7a5f-592c-4045-8916-f7fe596f9ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f59ca444-bbc1-4abf-9b09-a987a34ff508",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7121dc61-48c9-4cc2-8c68-3c0843da66ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0dcd62d-fc03-483e-aad3-f6bbd9d4d778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6438275d-aa55-44ea-96dd-be63e5b802e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b546bba-6632-4415-9b22-e4bea911bd28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7b098e-92f1-4a97-9561-44d51a9ec373",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b676373e-cd4b-437e-9161-8682e44b9dce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "340b927b-f5b1-40c0-9fed-32129ac7fbd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dde24e7-81da-4260-97ad-f10f3231cee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2c03492-dea0-4e87-bb75-c5a6e6e6770b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ceb170-7e26-4dd6-88de-5130fe87eeeb",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "215c2abf-0d64-4428-8c31-db561cbb0a9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97c537e8-494b-4a36-b08c-7e23ffe19f09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e623c5-ac98-4685-b657-664ccdec6af7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1632cb90-6d7a-4847-9f2e-acf930541248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58891f67-d3cb-47fd-ad5f-ca5f518ee586",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642acb6f-62d0-43a0-8081-f15336242e79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3973d4fd-27c7-4eff-aeb1-fb8df29baea8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca7c6102-a2d4-4bd9-a876-abc51fd564bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec314c28-6f37-4075-801c-423893a68a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ae37e0-67f3-487e-ac3e-f77f7561ba09",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e8d9a2-8782-496b-bc66-4787c2cc9a93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93548872-4518-475f-b3ff-c459db5d0bb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba2f5bb-0d4d-41c4-b2fd-906baa53a19b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b217a6e-4618-4859-b7e6-0b62f6e0e560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecec7387-ffd6-49a5-89d9-b3ef483332ae",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "150b0f86-ac32-49e4-aa93-28c5435b12d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35dbcc51-e06e-476b-8e47-622b58240565"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a7ff8de-2740-4f7d-86b6-33b64defc851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8efd9146-7ae5-44cd-865e-f6546fdff636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2763b5-4933-4464-ab85-77063879a27c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ff6faf-f49e-4fa2-8c49-33ca79995095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1023cf0-00f4-475b-922f-43707d2a9e39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce2104b-33a2-40e6-bfc6-e3cd2b65a431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "399c7951-8ece-4bcf-a3c0-2641eea10ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f17abe-cde5-47a5-ba84-95a3e2668271",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a062adaa-f179-4dd4-92a6-703830aa4764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ca5ee84-022f-4eb7-a780-fb364c43db89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a9cb6e-5d16-4287-915f-b717672d7a3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "254e42a2-4acc-495a-a604-f99b56f069f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24318792-9a8c-43c8-8242-e05b97ae084d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e324cf0-bc76-4cf0-9fef-e07fe06ec6f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40331eb1-110a-4e2e-800f-e1314377526a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a28ec125-1132-42f0-8122-4582044f18dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e82dc5f-2262-421f-bec5-5c7fa497f307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff9955ce-3981-4b92-9d4d-3b9df1a776b6",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e03276-f460-4f0a-8c49-97d3d922d758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c16db11-6455-44f4-9861-74ab2ac8a4a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5605e483-dbcc-49a7-b891-4c9f102cd556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b91b0e1-1944-437d-aeef-0c1b8f8433a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec4dadf-097a-4a79-b691-b17fb4d94fd2",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33fe203b-5689-44c1-aa88-ff46165c8c9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "866476d5-e066-491d-a394-7d2440d3f325"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55648016-4740-4029-a876-4c5f4210ccbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c626b191-4351-409f-a6c5-423dea623c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6182eec8-caf8-4859-b033-4e5ccd2da1db",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c28856ae-f9dd-4dbe-88ec-82e689df3508",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71413bfb-d3e6-4b6b-9b19-b8097b331d73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b925bf-c1b8-4d40-9e1e-0b6314d14778",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "456c55ee-24f7-42c3-9b9d-cf63e745fb17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc7410a-9490-4a34-ba12-1a32ba97bcf7",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee629e23-2476-4272-9fb9-e5b046636849",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdecf4c2-a687-492b-afff-f55cab38855a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83296d6f-902b-4176-a371-33fdb97ef0a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c52b08fc-e540-4355-9527-8ab8ada11fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c1a0fd3-011d-4574-a3ca-8f39e3d2a8a4",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca16bdc-9b54-4c78-9734-66745161db7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "172dd409-871a-4f89-8478-50cc3ce13ab7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f748bc-b697-414f-9748-b44c47e0ef80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdadaf34-de24-4d98-bf09-6cd7f11f9f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e7a1da-b37a-4b9c-aee6-74706f74d294",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19b7e3d6-03b1-41f1-8098-bedf1b070ede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09b414bf-d5b8-4fde-a1a3-1427057d9418"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df466e85-c759-4c56-9fe3-c70e7cb211ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd13fd6a-cb22-436a-926a-caadcb074dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a2c84b6-395a-480b-aa35-81ff159acdc6",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a98a82f-aad4-4770-bf58-205ef56df9cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6488cde7-1f79-47df-a209-ca68659eb40d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8daa408-abde-4478-83e8-318df0ae5ffd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c58b688c-8860-4215-8ac7-de6d0a660c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "731aea1c-5e6a-4c98-a163-56c009909f23",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be78a4f7-7582-4ec6-ae1a-02089b95a0e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3425e79a-a078-4e9e-bd16-e2cf297dda37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87794b9e-af7f-46cc-966c-8bc14b10ca44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5240d2c1-2a1a-4bf6-8a37-db1c821b5fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e9bbfd-4cec-4fdf-ad29-296852491a25",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff04f03-ef93-4da0-bb45-1ec1215e3205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1935360f-c236-485d-a1bf-5733d55f6798"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b4ca3b-ef82-4713-a65c-6029b11dd3fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0f7e78c-3655-4969-924b-01c4f38b4573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b580ff8b-5a19-4167-abf3-ff9b8df7118c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9124dbb5-c871-4985-8168-b029aa5cf164",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88fd920c-8acb-4a9c-b664-7863286a01a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d66778-39bf-4b3a-8c9a-40ed054db17f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "462463ff-511a-480e-98f5-7f9748c9bb65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c1c4907-603a-40c8-bfe8-741ec8e33e0a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf101f8-0c56-4db0-bf59-aeb98229e744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "891a358e-2b1b-4bd1-a021-741547e1ac0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7b1b39-0316-4740-a751-70f16859fb63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e19fca9-d29d-48d3-88e5-e673d116233e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac15b18-51c4-4731-837e-6b846fa2df74",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c93987-b7b3-4561-9099-128cdf4013e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ec0233b-00a6-4578-91e7-fc0514f6a1ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b69915eb-65d5-432f-89bb-644fcb655df5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90e52416-0719-40ab-b526-7b7874b3653d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdbcaee3-3bd9-423b-af2f-2b5ff9413328",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e19c9f-977a-4113-977c-ccf627189efc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb57e357-dd83-48ae-86db-212ddd5283b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c75daa4-fa35-40a7-8311-a09afd96e3f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e44ddc2-ad7c-42b5-9f27-30d14389cdde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec5aab0-a714-42e9-a3fb-3d683ec7be65",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c53593a8-e034-4d12-a226-a6725e164cff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04551d55-7215-42c9-be7f-3326d0659a37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3f255fa-18f3-4c34-8826-386fc4864bbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db390d02-ebfc-40b6-a0fc-f34b2b01d988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82dda984-4b9f-4d9f-8bf0-002b889b7324",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb0806a5-152a-4a88-b87e-c50413dd3c4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a42ba6d5-18e9-4c1a-91d7-9677ebb588e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb4de8c9-107e-4f5d-b4ee-61a84b865403",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed50b590-2258-44d3-95bb-c4b308a5f57e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bde5e71-abf5-45ab-a856-457d2236d777",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c80a1b2a-b41d-4936-93c5-a35f97a6fab7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d83f6ef4-670f-4360-9344-c95a41b49e64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aed7370-3979-4e23-8e26-a7b12ad71e50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c4731e7-3f64-4058-96ab-7738356e68c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f91d92-7ebd-47b5-ba32-48ad570492d4",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe23a76-f4e4-4a59-9211-9743b0fe873d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e9964a5-83aa-4c38-b420-47eae02d2f2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc865230-b872-4394-be18-ac24bcfb93bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4369690d-ee75-468c-88a0-8d5506f865de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5588a909-35ab-4fd7-8d0f-a6b172846ced",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bf4ced6-a0ca-4d6b-8129-fc36c16ef222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7436ab4-db00-4073-834a-a31f871e9bbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "702ae9fe-647c-4029-b4d4-ae8376759643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecc9d286-d50d-420d-88a4-579b40a3d8e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e25552f-3c90-4480-8785-26b982550dbb",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5cf4676-98cb-42b4-97b0-ee58a3e066c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41dbd4c5-244b-4fc7-a3ed-c0eca6aad559"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a47448-32f2-4f1b-a4f2-b485428844ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c276cd2a-6c30-42d0-a553-f5b5008170c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf6f8aea-1c82-4a5e-8904-b1dbab61b2cf",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f459b9-73a9-463a-acf0-575afe4a474d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb7814a4-f09b-4db0-b18f-fc1f60764d75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2845facb-31e2-4b42-af29-ef6457922018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7397f67-1d64-4635-9141-c07f83ee08ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b0c90d1-50b9-4184-a4da-ac97d0c4264e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f746b7-6e99-42d6-ac4c-ded2c7d1dd48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "966f06a4-8852-4327-902c-b8efc40e6894"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "212c45eb-e2ac-4409-884c-68da29266ac7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92ae9c1c-c644-490e-b8d8-b5a0966f542f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6e0419-e346-43a0-b2a7-1381741a482e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f960ef2-6f5b-4744-833c-52e9e32ac943",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dde68264-6dbd-4157-8eaa-d3e93ed6dedd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7781f0c4-9ec0-4a16-ace9-da7e0b3cd9f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d806780-d592-4b3c-ad48-1d0b2cc71f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46206c6f-991d-4594-a8a1-3646624f3ad1",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620d0fa0-bee3-4328-b25c-3066a5f46136",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e649e892-a2ca-4fb2-97a8-effeb9fa45c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27023341-9705-4c71-9b92-931dd86a2567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f775f43-cc5d-4d78-a842-6c4ec55ee00b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b697fbc-dd08-471c-843f-1750d5f12fa9",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8131cd3-2a40-438c-8a0d-03b792a502b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea8978d3-5be5-49b3-a72d-9b4bfa1929b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c624999-16a3-4dca-9397-1f6dab0873d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0fdf004-0586-482f-9de6-e541fb7ef706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece6c2e9-9589-4f00-a359-62bb2ef17e24",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "571b93ed-4f42-4596-91bd-26a102d72050",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f531e10c-921c-4231-ba51-6a0503336314"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e409ab1-d624-4b7d-8328-dc5468ef7e7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ba7844b-7e65-4419-b357-7c650afb65b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb658d1-4d82-4542-8bed-468ba4aecfa4",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a55ad9-c6f5-46c5-9f46-8697551f4b87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9b9ebb6-e0e4-403b-a06a-15a99b3b4151"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22a51534-1000-4a4f-9460-787c1649fe6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "991157a0-7448-4917-a529-4682ee034519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14eef1f5-62a9-4d8d-9ba8-deaf7f65abf6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e60ee03-9157-4b6a-91f9-f113aa6fb4db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f48148a-22ad-4616-b17b-6172689c2508"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f249f31-f9ee-4d87-93f1-052d65306aef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d88c1ac0-bb74-4be4-bcf6-859f3ac96ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19283ddd-2434-4940-b754-e319bfd8dc74",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a212abe5-9947-4077-80f6-481e5b29b1aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20dc5a1b-7b55-4908-acd3-1c6c8f1c129b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "148c4c1b-803b-452d-a861-02158014c411",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73085f90-2028-4684-89ca-5446ef2cd9f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "978687c2-7d8d-4eed-9739-40272180b205",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234bc2fc-c7dc-4df9-b374-08a80dc0f6bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bfc25ef-83c1-44d1-b4a1-2ffecbf06c46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3accbbb-814c-46d2-b6f4-fbd3eccfa919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a5e53ac-2253-45cc-b5da-8d95251f5c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99cbdee9-54fc-4d1b-ae21-701bbb8715ca",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a39084e-562b-4030-90e4-37d89b0aae2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "882dac15-c8fc-4336-9741-cd176b888fe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca44551b-c0d0-4131-868c-f8ba50d2be88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ce42393-9df7-4dae-9e79-d9216e7a7efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "898fbb27-5c97-46e3-8944-aabc57568f2b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb7719c-2740-4091-bc35-ffba9f4eadb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80fc40a1-48d9-46a2-823f-c72e8774ad98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77a92b2-bf5b-4f18-8ae0-a3b416680747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db7039be-ed09-45ff-8527-c9fc6fcf43c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a03bf6-4ef3-4a6f-a310-3eb75b418bb6",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f22bce3f-8073-4cc8-bd4c-1ddad095eec2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e13e51e-a6d9-48c3-ad08-999fb43f17ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e7eabc6-748d-414a-9b6e-2591d11f2c13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc690079-66c0-437f-a6d4-7e54ac2777bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "291a4fd3-0fd4-489f-83e2-ebd12894da68",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a76d6d2-ed4e-49de-8d20-50d10f1681c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "363cf3f7-12f3-4486-abcb-762738134bd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c8b0652-45e5-46c6-aa41-fff9add73df1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c442453-3508-4fba-8a94-896483e7b4d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3a521a-db33-46aa-952d-13f765751e0f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a5f3a3-583c-454c-8abe-f30fcaf0d505",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ad80386-e3cf-4ca6-acf0-9c51fb3c1ce2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "966904f5-6025-41c7-b022-f30ba8caf745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ead57239-6ad1-414a-a614-6d3f16b7e4df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d6dd82-c40a-490b-9f00-337dfc718d60",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bdff8c3-a5e9-41a3-bd14-7be2417a69a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80e3af89-b48b-48bb-aa52-d8831a400787"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9014214e-a1c3-4835-a89d-c8efa5fe48d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f548c956-3bdb-4967-afe4-ad820986133c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55b27e71-8870-4a51-906a-96e7cebff684",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b67eeee1-d64e-4c67-9a94-0d194a3ca6ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25550728-4b58-4f94-8bbc-617f47e836d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "132318f2-93fe-4b0c-9ec9-56503f916d4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13147b83-5522-4c47-a2e0-8fcb2d23c72b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d434aa7a-9263-4730-84c6-68bd3fe8672f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1580328d-8453-448f-9d3b-8b8c10ce77ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b02750ee-7976-4eb7-a878-93e118f4a1be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48da3c5b-5dfd-4d04-8b7a-6d7933c58696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ed1c114-c345-4a27-9958-db9e86114b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c3315a-14f0-4d47-8d82-6f20f31d65e6",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e0b776b-64c6-472c-bbd7-26013fdbf4c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47928d35-30ff-41b5-a7a7-9366d62ff233"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad649ff-f70b-4de4-a856-1bdbb09e8978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68e76907-f4e8-45c6-9b11-e960500fec49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a65dfc-4909-4d4d-bd31-5df649b36166",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e74f807f-12cc-4cc2-964e-6e609cbad0e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8e9e62b-fad1-4ddf-a6e3-b14c318e5dff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1b6a01-258d-49d5-9951-887314c6f7b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44215380-6a08-468d-929c-591fc794f47d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39bb55c0-7007-4673-b010-2cd93d702c62",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd175491-1448-4e46-a27f-bc78988e599d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe1efcb5-27cb-4d8e-b68c-d7cf01684a9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b56b60e8-1f5b-45a2-a2c2-922738f5381a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8071088c-1a1e-4857-951c-24471cd3ac39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dfb10b2-e7bd-49ef-a5bd-1562bfbe1bd3",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d098cf-93b6-46d0-b6e9-15668bf13c29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48ec6c75-fe8b-4934-a531-45adabf1661e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a317fd03-2f94-4776-89d3-854f45c3fd06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21130619-267b-44fe-b81f-88ab684f7633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f206134f-7b5f-46fc-adf5-dd2be30eb696",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a01e9ea-efbc-4abd-b79e-3d33a50f57f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c252a6c0-2569-458f-97bd-1899efd0e688"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a62c5c5c-2231-49f4-9700-4bca44f6f219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "597bfdd0-483e-4253-a30c-d25baf83e1c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7615827-45cd-49aa-88f5-b2e29b59419f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f9b14b-2562-4e2d-8756-5887a8957dea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "250889f8-4054-45d4-92e2-ee825eb17be7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5202927a-0bdb-436f-9b7c-7ef1b57f442a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bad3224-277f-419e-a7a3-802aedc4d840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1940da16-b370-43f1-8b0f-f522c144a6a5",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355b75bc-91cc-48b1-adcf-cc09aad05b97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ba15618-f915-45fe-b5bd-dc5a205690ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "222cc312-a647-4f19-95c8-475c56d25517",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5574ce5-7247-40ec-aa89-972aae43bdb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b14bf82-de40-4acf-abb2-e75f1d96eb97",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f062a414-a71c-4c45-af8b-bf80179edacb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0bca8e9-03fd-45e9-a2ee-f8eeeb7f2246"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24dc3835-27ee-4600-be66-e7205c08f0b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "542442da-86d9-480f-8cc9-766c80fdefad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e4d52c-8c6b-4d32-86b5-aba71fb08a70",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7838f4-e1a4-458d-b45d-7f420ccb1e87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b36f9d7e-6122-4177-8f51-ee24be0ab078"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b89ed0fc-2aa4-465c-ac16-495be695b1ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b25e3130-3162-4d40-b53d-fb52d1c7f570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a5ac86-67a7-4bbb-825b-8a8499cc86d7",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6618f669-e783-435d-be49-62880575edcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1196d8b6-1156-4065-96d3-e30d6220e5fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96860efa-df44-417f-8286-592db9ae58b5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f38cde5-9551-4a43-a4d2-ab1d0b3de0f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e1ed3a-5864-4371-a8c4-c1cda8e15977",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "601e697f-9e0a-41ed-9db6-69250d152fd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8ba51e2-fa5e-43aa-9c60-f00a47fa0501"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "504cb73f-ce14-467e-b3b7-b1faeb4069cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67d316e0-d1e2-4721-9bc0-1c36e5366be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c09c39-c1e0-4f0c-b2c6-6bb302092d4c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af6dcb6-aaca-4222-8024-9dec7e3b3173",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4195334-e50a-4238-a871-94ded39ceb56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d62bbd3-b7ec-4474-bffa-b3e8aaf9af9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bb15f07-a4da-4c1b-a6ee-cdba31e34c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e9fa55-ede2-493e-9dee-27aa6c38d44a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6ad966-20cf-413c-a5a5-0934ad6b0bf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9eb384b-f6d7-4298-8ca4-7bc9053a2512"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8864a200-9b8e-4b87-b588-01e0e9f01b95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd4ca493-d374-4a3c-bd8c-e03d0f32b76c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "901964d3-8b09-49b2-974f-6b36beeb73f9",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ada65e-a297-4e54-b0b6-d2294387b66c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4f5c335-2cc6-4fbc-a328-d542a448c5af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "343f13f4-6d2f-4cb4-988e-d824da11772d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a39b522-b424-4e20-8a9e-12066e09eee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3244bf70-a929-43ad-9f8b-76b9687c3174",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9642308-2c0f-4d2f-b001-be78a039cd5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "219962f5-bc37-4c65-b0d7-121a50d13bf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7928014-b31d-4d90-a329-9a81982d06c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58344b0b-5d9b-40fe-9c1c-599c21c8f97b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f60e7894-09f4-4f94-86b6-59c349947002",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5dc5f14-5508-4897-8c73-f1c9aefcf07e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73fb3c35-d729-4dfd-8503-8cc1d4ab4333"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "595a6ea2-d498-4737-b363-c9ebf583a693",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34b75191-1fe6-4425-9290-c9e183535456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a6a843-de92-4316-afa8-76bc4fa9e52e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6932ae21-c8ae-435e-ac2d-43a6de8cbdd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26292b21-3136-4578-8a3a-21636dc8be4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ac34ee-cd16-47d8-a6e9-b848343a0507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6da95e91-562f-4424-9381-7714428c701a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68d116d5-baf7-4279-9bc8-47468301db38",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd4c7eee-49df-4c2c-a4fb-a5c4e241092c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce309b78-c6dc-419a-8fd8-a83091a49950",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d6f41c85-b233-4cc9-acc1-2ae6127dd0be"
                    }
                  }
                ]
              },
              {
                "id": "468632b4-e9e3-4e84-ab82-87b0920e1986",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6a11c72f-dc24-4a54-a31f-5de6a4d34388",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd1b5d6-d1cf-4595-a299-f1537eda6467",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "419584b0-5543-4774-8485-8945ed203b22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "081dad4c-b828-4bee-94f7-034148768419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee0e36d7-ac12-4e00-8777-fd3eef673b7b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "67cc87a0-e711-4c9f-acc8-7204513e93ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71f7af56-eeea-4c19-bf4b-f6f03c9acb10"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d986f0d-599e-4b62-a68d-8b8c74b89128",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c340fa03-8b73-43cf-bf34-f2d9e17f7e3d"
                    }
                  }
                ]
              },
              {
                "id": "a9dffb0c-4570-46c6-8dc1-0999a5377cab",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "14e5da17-65fe-4fe7-86e5-21c46ddadfad",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f59758-a1df-4987-8a2d-85484e01e68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d713ba55-aab4-400d-bcb2-1c3cdf2502bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61ba1bcc-f74c-4917-8130-fc522d93fed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7b524dc-900a-4982-bee1-caedd419f5ee"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9117a080-4d6d-4416-a39f-9ac2d0334daf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b3e2dd8c-ea42-4be3-ac38-884efd414802",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c65fbc59-901e-4eab-8d4c-edea30baed3a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "75d7c4d8-bceb-4ca5-a781-f0b0cba24408"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b475c63f-de24-455d-a82b-3ac7a2c1fa8e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9417fafa-9159-47f1-84c5-fa6fbb6a057f"
                    }
                  }
                ]
              },
              {
                "id": "4b3dfe84-c8b4-439e-8d48-f553c02dc07f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "958dcf53-e30c-4210-9da5-ef9a53e1dd5c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ca9eb1b3-e5a7-4389-9184-169141863f63"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51c59984-1a5a-4bca-ae90-aa22024f8554",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0288d573-bbd6-46b0-943d-507b770831e0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "681fc99e-b9a4-4b7a-b234-147692b1306e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b914b409-54af-412e-b591-1c38c7a537f8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1f730914-7037-41d7-b2c4-dbf125a9d8a7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0b09c43f-8a64-4fae-9518-db5d2fb1fccc"
            }
          }
        ]
      },
      {
        "id": "6ccc2bb3-7850-4079-baaa-20db455be04d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7edf9383-f3d8-418a-bfb8-10d8f93a5496",
            "name": "Negative Testing",
            "item": [
              {
                "id": "35b7ff91-846d-4b21-8181-12643d2f0dca",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a0eb4ece-ebaf-4f6a-8cdf-1a72a26c2475",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "711d44c2-d2d5-450c-a0f7-56e9ede40cc3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "05f39eb1-7c49-47ec-b227-ce4b0c601036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0860b24f-bdc2-468a-a617-aeed6557f7f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "283a8204-101f-492c-8f87-db7aec93455c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79392bb0-72bb-4cfc-a3f3-45efef80185a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83750511-e415-4c72-a411-d6fae74c2037"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2e238e9-c139-416f-aadd-f288473d4076",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "daa30c04-6ed9-41f9-8bb8-91d897951a36"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b539509e-bb9d-4eed-a76a-0b36f1d51cc1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e41a87fd-f3c3-4bc8-93bc-cc25adcaa6bd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "87b19043-baf8-4e46-84a3-24e495ab0f97",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "70d13fa4-75af-4231-ba59-59ec25eb4e1d"
            }
          }
        ]
      },
      {
        "id": "7ec7f461-e626-4914-b1a0-fe5048e7af69",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5e3a56e2-a14a-4337-8a1a-c5b41422736c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "80871091-e859-4c11-aed0-b903ff9731e6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3a93c6ab-f8f7-4fd4-8cbb-81f02fcbb6a9",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f073ce2-cc68-4bdf-8b3d-d27582021749",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e07a8d1b-c0a3-43b0-9866-ebf4ee9d7359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "283cd942-5f7f-4830-a0dd-3c066789f363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "317121d0-59e3-4b15-bcad-a85d4564876f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "690b006d-b55a-400e-bd7a-7e3e3598d120",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1667787-50bd-41d4-9961-249335ee053e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d22561e-9b41-4fcb-a6ba-a0f2544464ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c158d99-b5df-40c7-a028-5bdb67bc967a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ad7e88b3-b38d-4ad0-b882-a569d6f76ba9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1c606a6d-e168-43ae-a864-8f38cae22d48"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "62b9ecd8-f13d-4ab2-bdd6-5198a17979af",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5f98add5-9718-49bf-8213-05615dfc3d28"
            }
          }
        ]
      },
      {
        "id": "ffb729bf-ac0e-4195-b905-1aa91c4e0181",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0fb0009c-b672-45db-9b03-57fca5e34c30",
            "name": "Negative Testing",
            "item": [
              {
                "id": "da763cac-0d03-4eff-850a-b65da1f07c19",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "107bb250-f8c3-4601-b89e-6946449337d8",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e195a675-6fce-4727-b230-b5d6fcba5f49",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10e126a1-41c6-481f-ab07-3f42c6fee256"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5838e19f-2f20-4f39-b3f9-0ce5e9355096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b4f980a-1814-4a73-a696-b7392aba3ea5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3bb3d244-3467-4c2d-92cd-6edb2bae045a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5b6aae4f-6bf6-4d80-8ee0-ca3ed1f2d826"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "28705b65-ea14-4fb0-8ad9-c1dd2b4592cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3452030e-fd62-4dbf-a01e-ede0eb3b6ea1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6f65b995-6382-444d-9c5b-aaac2f8ac09a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7cb71874-1fe2-4cb7-bfea-40874f1a024f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "41ddb438-c6a1-4db0-be4a-24bc24370452",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8b811fd6-139c-4105-936c-f1dde338f865"
            }
          }
        ]
      },
      {
        "id": "566026ad-7790-4bb8-a2d4-c25e4a06ffe0",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "54a5d674-6f0d-49af-8df9-feced0cf49dc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b0cb4ce5-a18f-40dc-bc42-f3e55cf0b26c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "2deb21bf-2424-4adb-8991-3ced931580a2",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ae230637-d2cc-471f-9632-c9d3fb93c8de",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "63a421da-bbed-4ff2-bf8b-053a2a293ef9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 110.27368421052635,
      "responseMin": 6,
      "responseMax": 2806,
      "responseSd": 323.90906593006906,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1702686923461,
      "completed": 1702686964233
    },
    "executions": [
      {
        "id": "18e9276d-e2c4-4f98-85f9-727cd000cea1",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ed3f35cf-5e3e-47db-b01d-4d628eb3583c",
          "httpRequestId": "a4fe4963-8ff9-4b7d-91a2-dfd1068112e5"
        },
        "item": {
          "id": "18e9276d-e2c4-4f98-85f9-727cd000cea1",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "21d2ac41-be3f-4b0f-88ba-7d3ff7d4afa5",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 0
        }
      },
      {
        "id": "6bff3689-3f53-43ac-90ab-34d5c361b4b8",
        "cursor": {
          "ref": "98c3d552-e6e1-4a51-ba30-3b67395fcd0a",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1b7cfbd2-f15b-443f-9af8-436219a7630a"
        },
        "item": {
          "id": "6bff3689-3f53-43ac-90ab-34d5c361b4b8",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "cf9cf347-8156-49be-af17-f2ecd3202d2b",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "69e97224-e320-45fb-a630-f05538c4bc13",
        "cursor": {
          "ref": "98c40ed0-27bd-4a3d-b01c-dfd2d35e16f1",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "81ca9d35-6f7d-4b7c-bd97-0913c882a90b"
        },
        "item": {
          "id": "69e97224-e320-45fb-a630-f05538c4bc13",
          "name": "did_json"
        },
        "response": {
          "id": "a610e095-e7fb-4851-bf59-d8f985e7971b",
          "status": "OK",
          "code": 200,
          "responseTime": 676,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d053ec-8191-4a58-a5f8-d3903396f9ef",
        "cursor": {
          "ref": "a98f4505-c895-448f-ada0-bc0fc2cc0df5",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ad5e5a82-7a47-43b7-94a8-5d2ce41e35dc"
        },
        "item": {
          "id": "76d053ec-8191-4a58-a5f8-d3903396f9ef",
          "name": "did:invalid"
        },
        "response": {
          "id": "a6622ba0-9dbf-42dd-8f1b-f02f9a24cdcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d053ec-8191-4a58-a5f8-d3903396f9ef",
        "cursor": {
          "ref": "a98f4505-c895-448f-ada0-bc0fc2cc0df5",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ad5e5a82-7a47-43b7-94a8-5d2ce41e35dc"
        },
        "item": {
          "id": "76d053ec-8191-4a58-a5f8-d3903396f9ef",
          "name": "did:invalid"
        },
        "response": {
          "id": "a6622ba0-9dbf-42dd-8f1b-f02f9a24cdcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec14eff-a202-4610-96d4-ed13f179d600",
        "cursor": {
          "ref": "2797f774-ed5c-4c31-8437-acacad2201af",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "57546030-21ab-4521-a711-25761d22e2f6"
        },
        "item": {
          "id": "4ec14eff-a202-4610-96d4-ed13f179d600",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d87d31ab-ba3d-40d5-8349-6bb620786452",
          "status": "Not Found",
          "code": 404,
          "responseTime": 166,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba6eb32-aad4-4ad2-bea8-3244265ea179",
        "cursor": {
          "ref": "45882d68-ff8b-43c6-9f89-ffd160c1bf40",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4f6e61ad-468f-4c58-9d29-cb2c53e5bc77"
        },
        "item": {
          "id": "9ba6eb32-aad4-4ad2-bea8-3244265ea179",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "6bfdc2fb-d291-4ad6-bd13-c99813709d17",
          "status": "Not Found",
          "code": 404,
          "responseTime": 56,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439b3155-497d-42d6-a465-0a0b68962b49",
        "cursor": {
          "ref": "19375f91-2326-45ca-9334-37e1c2743f0b",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6ef135f8-c3f3-4605-bb70-6306218be744"
        },
        "item": {
          "id": "439b3155-497d-42d6-a465-0a0b68962b49",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3197ce64-e3de-4216-b044-d47ef5732926",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14804a22-f782-4fa0-bc7f-8b4ad4eac46c",
        "cursor": {
          "ref": "0fb87bde-61ee-426c-b774-2521cb6dd608",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b95bc24e-0901-43fb-bcb7-8a5a51b5d5ba"
        },
        "item": {
          "id": "14804a22-f782-4fa0-bc7f-8b4ad4eac46c",
          "name": "identifiers"
        },
        "response": {
          "id": "0a45d3a1-3928-4a5b-b0a9-7fe062273389",
          "status": "OK",
          "code": 200,
          "responseTime": 300,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b4e3a2-55f7-42df-979c-c549fcd030fa",
        "cursor": {
          "ref": "08614d39-3356-49a2-86ac-068545d19a87",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "cc3014cf-ab26-4400-99af-997a0e8d6d06"
        },
        "item": {
          "id": "60b4e3a2-55f7-42df-979c-c549fcd030fa",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "92929abe-b8d7-4c21-ad82-b55843851a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa895ac-7679-47fe-b582-793b890d2827",
        "cursor": {
          "ref": "dd623a8d-a2db-4504-b670-9bdaa61cc60f",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "bdbcae6b-94cf-45af-8af7-640496720303"
        },
        "item": {
          "id": "dfa895ac-7679-47fe-b582-793b890d2827",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "0c4e741e-ad8e-4282-bac8-19c0737e8f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de48815-3708-4147-b9f1-3cc58b3df062",
        "cursor": {
          "ref": "477235ac-06d9-4384-a2f9-445fd766b44b",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e5b2c316-4b98-4215-8cb7-70b7a4b6519c"
        },
        "item": {
          "id": "5de48815-3708-4147-b9f1-3cc58b3df062",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "20f1aa0d-583a-413d-9e99-cb66855c2892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "949ac4a3-5dc0-430f-92c2-15c1a289a408",
        "cursor": {
          "ref": "cccae0bd-7a42-4ec7-838c-84ccca71bf91",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c571f9dc-06a6-4d2c-82cd-e408c182e12f"
        },
        "item": {
          "id": "949ac4a3-5dc0-430f-92c2-15c1a289a408",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "8bab6a62-c349-45cc-bac9-b497b097acdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c82066-ace6-48c5-9db1-3a3d3e1dbd18",
        "cursor": {
          "ref": "6e976365-fa9f-4f36-8aa3-404563d0bc06",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "801c55ec-7998-447d-9cb5-1f77c924613c"
        },
        "item": {
          "id": "a1c82066-ace6-48c5-9db1-3a3d3e1dbd18",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b0b206ab-8509-493f-afb6-2e443e5291b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdfe52a2-5166-43ef-a975-f355d7d92282",
        "cursor": {
          "ref": "088bfde7-e8a8-4f96-bfe2-844fddf3931f",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "7c427f6c-a357-482f-9e20-b030ca60f00e"
        },
        "item": {
          "id": "fdfe52a2-5166-43ef-a975-f355d7d92282",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f43d50a3-b1b3-4819-966d-2aaacf46c51b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5ea654-29d2-46b1-a161-67d5a35baa6f",
        "cursor": {
          "ref": "1f4fa947-4a56-4ae4-a0f9-d343a0434381",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0034c2ed-bf15-448a-859c-b904be75fe67"
        },
        "item": {
          "id": "2e5ea654-29d2-46b1-a161-67d5a35baa6f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "66daf549-c7a3-4b17-9a7b-ddeaddd6c1f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "434a98ad-3bf2-4240-96d5-4a195c1e6409",
        "cursor": {
          "ref": "573ab246-b294-408f-91f5-1c5f528083c2",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "5c3d45a6-d968-43f0-a75d-1736de10743f"
        },
        "item": {
          "id": "434a98ad-3bf2-4240-96d5-4a195c1e6409",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "239be1eb-76fc-460b-a2e4-a4fd9b13201b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "835ed8b1-f361-4856-90d2-210dbfe013de",
        "cursor": {
          "ref": "10709867-8438-430d-b9f1-032d95005edf",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "6be7a93e-6f3f-4c34-9a26-912c1077b83c"
        },
        "item": {
          "id": "835ed8b1-f361-4856-90d2-210dbfe013de",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "4995e260-78e0-4459-be2d-f4597ef57428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d58c44-199d-434f-822d-759199995eec",
        "cursor": {
          "ref": "11b729ba-e50f-4ecb-9a77-2cc956567e27",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9a6c294c-a216-4dde-8f60-e745f5346f74"
        },
        "item": {
          "id": "f6d58c44-199d-434f-822d-759199995eec",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e023651e-a68b-4408-b087-acdc76e689ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc43eaf0-c78f-45af-8146-a72cd5b092e4",
        "cursor": {
          "ref": "8a685f57-69e3-4368-861e-5e2592323285",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e7914a97-60b2-4d5d-b7a9-18085d83babf"
        },
        "item": {
          "id": "cc43eaf0-c78f-45af-8146-a72cd5b092e4",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5b868920-bf33-4b77-8d17-819470d6f421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "565ba022-c2e1-4f8d-b41a-aae8f5789719",
        "cursor": {
          "ref": "008a14ac-6b5c-4bc6-9d44-0023fe4ff958",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4a16be48-89be-4b81-aa10-cc19cfbe6621"
        },
        "item": {
          "id": "565ba022-c2e1-4f8d-b41a-aae8f5789719",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "3279f690-c098-418a-bc21-d13c801d60ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8241adf1-837e-4ed2-87bc-9d93b5f28035",
        "cursor": {
          "ref": "8109cdac-1ca9-4cc2-bd93-ac8ea1575fe6",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "0d06de8d-e170-43d8-b8dc-3ebcce2fdbc2"
        },
        "item": {
          "id": "8241adf1-837e-4ed2-87bc-9d93b5f28035",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3f53d5de-372a-4608-b77b-b2f3bb96e19b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5a1de2-b488-4d1d-9c10-3d2686e2ad67",
        "cursor": {
          "ref": "58b7cf6f-40c7-4831-a6cb-3e0db5498fa3",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "41e67b3e-afe7-441f-913a-ac3630b8535c"
        },
        "item": {
          "id": "4a5a1de2-b488-4d1d-9c10-3d2686e2ad67",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f0c86820-a3e5-4569-b212-bd449f577bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c988cd7-d7db-4b54-bf15-a7438c4dd02b",
        "cursor": {
          "ref": "7b43c929-e4f6-4818-8092-cc58893b6cb7",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7054b21b-b325-41da-aefe-8b15b95911f2"
        },
        "item": {
          "id": "1c988cd7-d7db-4b54-bf15-a7438c4dd02b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8a45b35c-407d-47d0-a399-5397a41eca2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb63be23-a6aa-4ba3-9b1f-29091eb62f58",
        "cursor": {
          "ref": "7c65b220-a44a-42cc-97cc-44f14ad7b0bd",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "708de362-7c33-437d-b292-42c41709ee2f"
        },
        "item": {
          "id": "cb63be23-a6aa-4ba3-9b1f-29091eb62f58",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "76a9428c-d844-4d15-847a-c59a284cdc28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f57850-17ca-43e4-a192-e2a9a5a83f69",
        "cursor": {
          "ref": "afdcd710-7a03-4fe9-bd40-18de314f0b83",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e7be902d-4449-465e-8f77-6492694d20dc"
        },
        "item": {
          "id": "a8f57850-17ca-43e4-a192-e2a9a5a83f69",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8e4714cb-778e-4386-a64b-2adda42bf40b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b159b4-db2a-436c-8bb8-0d21fa33b693",
        "cursor": {
          "ref": "5b52e27f-291e-4aa8-a557-904411f70a8b",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7239bc07-8fae-4d14-af74-eac56c6d6864"
        },
        "item": {
          "id": "36b159b4-db2a-436c-8bb8-0d21fa33b693",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "9346f613-e509-462f-8f3c-374614c46954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af03631f-62c5-442f-8875-0b48019a7aa7",
        "cursor": {
          "ref": "b16b70c5-fde2-4b88-8a5a-9337aadf8789",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "98320740-ceb7-4ce8-8b1b-6408c9bae56e"
        },
        "item": {
          "id": "af03631f-62c5-442f-8875-0b48019a7aa7",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d32aae54-eb84-490a-8fa3-9e656c53d3b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee709bb1-b082-4e3f-af76-a33d1349c13b",
        "cursor": {
          "ref": "bf1cb231-6c91-44a4-afa6-e404dc056ddf",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "073e151e-b6a3-4b60-a108-be4a35e70e20"
        },
        "item": {
          "id": "ee709bb1-b082-4e3f-af76-a33d1349c13b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "686a5977-2324-420c-a01e-cf34afa45438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3214455-241f-4180-a10e-9878cde25764",
        "cursor": {
          "ref": "07da433f-f125-4d92-ade8-9d081f606615",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "08fe801a-0e5d-46e7-9b69-5254682e9088"
        },
        "item": {
          "id": "c3214455-241f-4180-a10e-9878cde25764",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "789f74ba-7450-444f-9dbf-c9dd9a016a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "182ce49f-b659-4e8e-b2f5-771d73cfb565",
        "cursor": {
          "ref": "4f234638-fc4a-4d93-a013-8153aa839525",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2ce938f7-ef37-48dd-9423-7a03343aba8d"
        },
        "item": {
          "id": "182ce49f-b659-4e8e-b2f5-771d73cfb565",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "a339a342-5fb6-4494-b7b2-78ebe0caf6fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d7dbb6-d5a3-485c-9254-8602c8a663cf",
        "cursor": {
          "ref": "7c7d4bfc-6da3-4ee6-b400-258eb7b0c08f",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d11bc2a7-42bb-4e6a-bfd8-bf2be7a36022"
        },
        "item": {
          "id": "98d7dbb6-d5a3-485c-9254-8602c8a663cf",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "1933b323-30b9-4db2-9e99-7330dc4e28d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d78505b-653d-4dc2-9754-45f0ed62661b",
        "cursor": {
          "ref": "db56c44e-160e-4622-b8c5-38706f35f279",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "fb971290-b3d5-4f25-940a-8382b67586ec"
        },
        "item": {
          "id": "2d78505b-653d-4dc2-9754-45f0ed62661b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "90e84b59-e2f7-4e63-b46f-ab9a8ca83746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89984812-45ed-4169-ac7b-2964cb9d138d",
        "cursor": {
          "ref": "d55b15ff-ec8c-4f4f-a9fe-2a3ec29c1dc3",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7047a166-3e59-4107-ba44-5c39b229661c"
        },
        "item": {
          "id": "89984812-45ed-4169-ac7b-2964cb9d138d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b9586ba1-147a-40b9-b243-650f69ffb95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae50b94b-7e28-4837-b9ac-72c298d16356",
        "cursor": {
          "ref": "ecc231ae-f7d7-43ff-a6aa-5bdeaa7a4e1e",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "30bc875b-311f-417b-a4b7-619d0ef85756"
        },
        "item": {
          "id": "ae50b94b-7e28-4837-b9ac-72c298d16356",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f6ef1236-c282-49bc-a685-e0e374a3e5a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c2d4f4-111e-419c-a29b-96d4905e9b98",
        "cursor": {
          "ref": "1de8c262-e54b-4ef1-b8cc-2c1a7a8d7109",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "e80ba32e-eb96-402a-9601-bdbd37916149"
        },
        "item": {
          "id": "90c2d4f4-111e-419c-a29b-96d4905e9b98",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "585c4152-b359-4731-b7e3-c70c8b359dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05fafeb3-d72a-4913-9a75-9a1100e4ad7e",
        "cursor": {
          "ref": "cabdabc0-2d50-4b68-9aab-e8761dc60fd2",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "4767946a-edee-48bf-aa00-ecbef12a4ba2"
        },
        "item": {
          "id": "05fafeb3-d72a-4913-9a75-9a1100e4ad7e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "6a455cca-1aac-4371-8833-dc9fc3df3195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16355059-1d83-490d-bc99-0b1de0407012",
        "cursor": {
          "ref": "0c63f121-4dd6-4298-9b41-def7d25cb35a",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c6cedc45-ed4b-4cfb-b808-dd756cb34f3e"
        },
        "item": {
          "id": "16355059-1d83-490d-bc99-0b1de0407012",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "5c1ab136-3236-4458-a77c-39ad067b2a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c2f85b8-03f4-46c8-910e-d4732aca8155",
        "cursor": {
          "ref": "96408a8e-84e5-4794-af8f-b01314126564",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "19ab96d8-235b-49ff-a42e-6eebfaeb95a7"
        },
        "item": {
          "id": "6c2f85b8-03f4-46c8-910e-d4732aca8155",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "5ba11c6a-9171-47b2-af41-fd6f47e9929d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8cb428b-8a65-46cf-b5ca-c2f45dec3352",
        "cursor": {
          "ref": "c16347ac-2068-46c6-be93-53b9a4539db1",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6d8d087c-4ab0-4b1a-ad03-d3be4ecc2ab0"
        },
        "item": {
          "id": "d8cb428b-8a65-46cf-b5ca-c2f45dec3352",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ac86e2f0-3f29-4686-ba69-b90ca4fa2077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb1e57d-d376-4a92-a951-389df8ed625e",
        "cursor": {
          "ref": "e046bdf8-6504-45fa-a475-7560a343a7da",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c98e3976-5de0-41f3-ac2e-5bb7b0f61d1c"
        },
        "item": {
          "id": "1eb1e57d-d376-4a92-a951-389df8ed625e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "37540248-6031-4412-9111-ae53970ff945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "582e894e-0f8e-445d-a0a0-b1641ff08261",
        "cursor": {
          "ref": "5d5a27a6-cb6c-4c97-a2a9-7fb914bed91f",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "45c91d3f-c1d3-4c1e-acd1-ae78a3ee5952"
        },
        "item": {
          "id": "582e894e-0f8e-445d-a0a0-b1641ff08261",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "289b4d92-fce2-479a-9a1d-f2fc94cf7ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8b9854-5c3b-4e26-ab6e-755967949c36",
        "cursor": {
          "ref": "07e4488b-b8bb-495a-b502-b3928cd87e51",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e6ff1810-8ca9-4341-b444-50d84f4f014c"
        },
        "item": {
          "id": "7d8b9854-5c3b-4e26-ab6e-755967949c36",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "0916d0bc-854a-4f09-a355-7d2d79d9d326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358aed15-0f66-45a0-bbb2-723921b3bce1",
        "cursor": {
          "ref": "e9002742-459d-4cc2-a1a6-17e105d4ddc9",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e3c4e64e-33d6-4d2b-b831-02828e21513a"
        },
        "item": {
          "id": "358aed15-0f66-45a0-bbb2-723921b3bce1",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "18e4c080-816c-4ffb-b898-87ff0e74f729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3062e5b-d8c2-4688-b328-3a1f985a1021",
        "cursor": {
          "ref": "94d56d9b-3ea7-4ed5-802f-0fc8a9909500",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f2ba465c-fd47-4ed3-9bd0-bcab8033953d"
        },
        "item": {
          "id": "b3062e5b-d8c2-4688-b328-3a1f985a1021",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "26268120-0753-477e-bb01-446f944c8e0c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 322,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7906b294-c14e-4145-bbe1-89359260f326",
        "cursor": {
          "ref": "b583055a-1da5-4ed2-a0fd-17f992dc0dcf",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "cba3c55e-2c03-48c5-b2aa-01034cf8518a"
        },
        "item": {
          "id": "7906b294-c14e-4145-bbe1-89359260f326",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6e8155d6-d173-4fc4-bb77-609e8f6ac42f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "708a9505-97ba-4e72-ae9c-cee72799fb3b",
        "cursor": {
          "ref": "d8b8e1cc-14c0-4297-82e8-e11311169a29",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "23f7fd7f-6517-4926-bf84-e24f35be1beb"
        },
        "item": {
          "id": "708a9505-97ba-4e72-ae9c-cee72799fb3b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "23037506-e8f7-490f-be13-53c9c9a478ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "017f2a15-abf4-4b78-983a-45071e1dfba6",
        "cursor": {
          "ref": "2b0c3efc-0c4f-4f4b-95b0-3b9c22780c26",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a45bb78f-9830-47af-ac8d-903d8c382b44"
        },
        "item": {
          "id": "017f2a15-abf4-4b78-983a-45071e1dfba6",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6d24e7ab-0e81-434a-b19c-bac37c13b026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab1204b-7723-4346-9a70-d94f356dbd32",
        "cursor": {
          "ref": "dcccd1e6-4640-411c-aa92-18813eb57cfa",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0d665ab6-4f8e-44e9-bb37-fef01e68e840"
        },
        "item": {
          "id": "7ab1204b-7723-4346-9a70-d94f356dbd32",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "6b4813f4-b355-48b5-a008-f1282a9277ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8cdf723-2caf-4cdd-af1a-e8df2c1fd6b7",
        "cursor": {
          "ref": "36d1644d-dc8b-4d2a-a682-93a0413db81a",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "6dc43071-96f8-46fb-8645-1252113873d6"
        },
        "item": {
          "id": "e8cdf723-2caf-4cdd-af1a-e8df2c1fd6b7",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "1d515261-f0d8-4ccd-9adf-ae1991010db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da2b7eb-8f16-437e-9760-a8ecd4ce3f7f",
        "cursor": {
          "ref": "1dcb2a5f-b3e9-4d47-90c3-c3fe84c696b5",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "4bdf7106-44e8-4615-a0d3-1fe78ecf0cdc"
        },
        "item": {
          "id": "8da2b7eb-8f16-437e-9760-a8ecd4ce3f7f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b5d8479d-de45-4e97-b819-43bc36fe3000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3226d05-3b89-40c4-9d5b-444777803e96",
        "cursor": {
          "ref": "5bb4efa3-e3b4-4453-8193-a6f50fefa45c",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d2d32b16-a307-449a-9ca0-d733d9c343cd"
        },
        "item": {
          "id": "c3226d05-3b89-40c4-9d5b-444777803e96",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "9dfdf3fd-caa8-4e25-a0ac-6934e96e601e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 325,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dbfbb8d-b72f-4f57-8d1a-6be8d1c85b74",
        "cursor": {
          "ref": "7f156a7c-32ec-4be3-bd1a-a33be3ec2dc6",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7aad367f-3553-49fd-ac68-8abf121c9add"
        },
        "item": {
          "id": "4dbfbb8d-b72f-4f57-8d1a-6be8d1c85b74",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "212313c7-89c6-4352-a5bb-4d7e25c40a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c418f2-c43b-4950-97a6-de9d4111d493",
        "cursor": {
          "ref": "6ee7ef95-dcaf-420b-b2fb-417f243151ac",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ffd9a877-06eb-4861-a3ef-842f1a097422"
        },
        "item": {
          "id": "f0c418f2-c43b-4950-97a6-de9d4111d493",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ae5aa1fd-fa8e-4f61-ab96-fe28b8511edc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96eaf089-031b-43a5-ba6a-a640620229a0",
        "cursor": {
          "ref": "9252f1d3-7d87-418e-9325-647f046fa7d6",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "8a1004de-54c6-4261-99bb-feeb4f4f3991"
        },
        "item": {
          "id": "96eaf089-031b-43a5-ba6a-a640620229a0",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "2d445ee9-7f74-4c15-bf87-88a3212c1950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d1f9ea-91e9-4619-ac5b-df4fa2e115e4",
        "cursor": {
          "ref": "6de5a30f-244b-47ad-86ef-4817c94e3b6b",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8ecba8cf-dc6c-44cc-ad40-c7f7fb06bcba"
        },
        "item": {
          "id": "d1d1f9ea-91e9-4619-ac5b-df4fa2e115e4",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "5892ec03-7def-4f2b-91bb-9f23d49edd12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "411ff540-46a3-4654-8d04-d6a0bb629a1a",
        "cursor": {
          "ref": "913ad416-b066-4642-88e5-8d458fac8d12",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "1f36c22c-a812-44ce-9b35-d3b348b1c06e"
        },
        "item": {
          "id": "411ff540-46a3-4654-8d04-d6a0bb629a1a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c8c13e70-90fd-4049-9bb1-9f0739c9cb38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf0e9331-7b2d-4519-825f-4fa000412531",
        "cursor": {
          "ref": "056257de-cb9c-4b9a-bffd-768bda7c6fb7",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "09ac136f-d881-484e-a715-b9afa198d330"
        },
        "item": {
          "id": "bf0e9331-7b2d-4519-825f-4fa000412531",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "84dbfc2d-9c72-4f28-a307-317f4301f3d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1e3bc2-261c-4e2d-b995-ddca9509f48d",
        "cursor": {
          "ref": "6efeafe4-6a7e-49aa-a06f-54391cbdd481",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "19664186-4468-4f3d-bd51-b81ef55fbcff"
        },
        "item": {
          "id": "bb1e3bc2-261c-4e2d-b995-ddca9509f48d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6c3290cc-6a9e-43b4-84bd-36e0459ad119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e1860e-5374-4503-9671-b3634e7e5c13",
        "cursor": {
          "ref": "8191dcf7-fc45-4988-b2a5-9449bed7682e",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a9a758c2-3180-420e-84ef-5d8b1c502ff0"
        },
        "item": {
          "id": "26e1860e-5374-4503-9671-b3634e7e5c13",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d7d8feb9-5abd-4a4f-af03-852d30d961f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd775436-0a5d-4a80-bb0e-79a1d5d39e25",
        "cursor": {
          "ref": "b2586f03-b875-4d58-8e34-68db952e0820",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "2e03924c-2a76-49d0-95f6-de234c1368e1"
        },
        "item": {
          "id": "dd775436-0a5d-4a80-bb0e-79a1d5d39e25",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "54909e54-d98d-4eee-8deb-92bd9950dc11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5800d2b7-882e-44cf-8157-f805e3dbd66f",
        "cursor": {
          "ref": "fbc5df72-865c-4bdd-a955-d803d36b3182",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4e85f281-ce5a-40b0-b078-372e8ce8b217"
        },
        "item": {
          "id": "5800d2b7-882e-44cf-8157-f805e3dbd66f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "dadc97b4-5cbb-4093-ad73-ec043e6799b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5fcc07-9463-4637-9dc4-992ea4ab3b14",
        "cursor": {
          "ref": "f3d5ff40-4585-4255-942e-0294e094217c",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "4b1f2130-4e24-4b9c-8a2b-2a406052f57c"
        },
        "item": {
          "id": "fe5fcc07-9463-4637-9dc4-992ea4ab3b14",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4d356d08-e48f-453e-ba3c-7f562ab64fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8714f99c-dec2-4dcb-abd3-93a2b4682836",
        "cursor": {
          "ref": "beb52d90-585a-4c76-9f29-42873035efa7",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "062c0edb-2697-4c3a-b7bb-d26193e307e8"
        },
        "item": {
          "id": "8714f99c-dec2-4dcb-abd3-93a2b4682836",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "7a628485-d168-403c-97e9-ae94bea1470f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea8bb5f4-401f-49bf-bb44-4fc07d3a75da",
        "cursor": {
          "ref": "744dac4c-6ece-4f70-8b28-74bd084e2be3",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9e24bc24-00a4-41ed-955b-0fe54abdd840"
        },
        "item": {
          "id": "ea8bb5f4-401f-49bf-bb44-4fc07d3a75da",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "1411f70e-3310-4158-93d6-19d1c7fe9116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de19341-cd22-4ca1-a6b2-710f0dc4cc0d",
        "cursor": {
          "ref": "971476dc-0d53-4d08-a929-5d7c1a6833af",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "8778fb06-bfe1-4cb2-88f9-f702264fa8b4"
        },
        "item": {
          "id": "5de19341-cd22-4ca1-a6b2-710f0dc4cc0d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b4b16407-0194-4761-8a39-fd9f970ffba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd03128b-36a0-43a3-836d-5ef4c56b5a3e",
        "cursor": {
          "ref": "3a6d4b91-a4c6-4f06-a486-9639a274c100",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "0e0f1654-ed48-4c51-b0b1-804d22837d5b"
        },
        "item": {
          "id": "dd03128b-36a0-43a3-836d-5ef4c56b5a3e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f133dde3-10ad-485d-925e-c8419694a18b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f6aa47-104d-4c27-8e10-2985359f2e4d",
        "cursor": {
          "ref": "0df53eeb-83aa-4c03-8b6e-59c416db38ce",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c4969678-21d8-4770-a85d-6ff6bf7fbda1"
        },
        "item": {
          "id": "88f6aa47-104d-4c27-8e10-2985359f2e4d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "1f68ed75-1c85-4fa7-af54-8a4ebb50c9af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7319dc7a-8bed-421f-9a0f-42e61208149e",
        "cursor": {
          "ref": "969cae71-eca5-4afc-bdc1-c0c1f7878055",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "954aaf3b-f897-4580-bd00-2fa8a97114fa"
        },
        "item": {
          "id": "7319dc7a-8bed-421f-9a0f-42e61208149e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e8af5908-2d9d-4874-8c59-99fce66b215e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f08a5022-9f59-4190-961c-d6d0d9244828",
        "cursor": {
          "ref": "e16a3d52-ef53-42c9-8b88-3c2292ab52a8",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2c10f5e5-19af-42d8-95dd-bfcec5f273c2"
        },
        "item": {
          "id": "f08a5022-9f59-4190-961c-d6d0d9244828",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ff86a227-059d-4064-82ac-150307e00c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a13b475-ba9f-4b71-a2e4-7149f16ce69d",
        "cursor": {
          "ref": "65c124a6-7b00-4fec-8b5a-cc5c414a9426",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d2d3885f-fd62-4794-a08d-69a9341c082c"
        },
        "item": {
          "id": "8a13b475-ba9f-4b71-a2e4-7149f16ce69d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9cdea317-9f7e-4696-afc1-91ad5fe7720a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5ea4c9-da25-4118-ac24-292b374c4262",
        "cursor": {
          "ref": "ba8e4cd2-6f29-4afb-ae18-f295653c44c6",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e9a1fa93-9ac0-40db-8992-879f01142bd6"
        },
        "item": {
          "id": "ea5ea4c9-da25-4118-ac24-292b374c4262",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "0adeca96-40c2-4ff5-97d0-739f51b88e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5993880d-be01-4289-a7a4-13705ee57ebc",
        "cursor": {
          "ref": "635d0a68-29e8-47c6-88c3-6fc52f49802f",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "89163df8-71d7-49d8-901d-89faf9584c61"
        },
        "item": {
          "id": "5993880d-be01-4289-a7a4-13705ee57ebc",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "c81a366b-ddd5-4004-b922-40e3f7c9239e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f95af20d-23b2-4b4d-a9b0-ccf00d535097",
        "cursor": {
          "ref": "1100d6b8-855c-4030-a959-7c75694b0b8a",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0770f4e7-e44f-4b72-87cc-0599239e46d4"
        },
        "item": {
          "id": "f95af20d-23b2-4b4d-a9b0-ccf00d535097",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "08909eb0-334d-4bb4-b4fe-89c84f48188b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "715c760b-96c7-4bbc-ba06-95157906d2e6",
        "cursor": {
          "ref": "3bbf8d06-5af7-4d76-a334-53de68319732",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d617be40-7bf6-43a8-9c5d-6b7bf850e3aa"
        },
        "item": {
          "id": "715c760b-96c7-4bbc-ba06-95157906d2e6",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "0f4b5a38-2a35-43cc-ac84-4ff7ca447fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c6db68-ae6c-4f90-a602-fa773682673a",
        "cursor": {
          "ref": "4445f210-eb47-4f5b-9733-e5343c082009",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "79e60977-7381-48df-aff4-5a567e5090ca"
        },
        "item": {
          "id": "48c6db68-ae6c-4f90-a602-fa773682673a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f335dd49-0ccf-4817-974a-67cf735179e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df1ec58a-7065-475f-b0a3-e597e7151982",
        "cursor": {
          "ref": "5b1695c9-cf00-4614-ba15-d61d89b4d9cf",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ad779f44-4f3f-44dc-b6fc-9a8d9a83fbcc"
        },
        "item": {
          "id": "df1ec58a-7065-475f-b0a3-e597e7151982",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5a1bbba6-55ed-422d-b2bb-ba17d58b6a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8528fb15-c0b1-4d77-b9c7-913b15e82cfb",
        "cursor": {
          "ref": "df37f4a9-a1b2-48df-94e3-dd74cb85fe16",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6bbb817d-2967-4764-9468-69b24693ec49"
        },
        "item": {
          "id": "8528fb15-c0b1-4d77-b9c7-913b15e82cfb",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5b38a713-e7c6-464f-8e60-c47cb1ddc12f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa0945d-0a92-4f39-99d4-7e449e66c3e3",
        "cursor": {
          "ref": "202593a4-a91c-4d9d-92c0-9560c098ced2",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "efc3ed99-663e-4a96-a9dc-3de6d454d861"
        },
        "item": {
          "id": "0fa0945d-0a92-4f39-99d4-7e449e66c3e3",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f994e94a-cc61-494e-bbe9-5cd792e397c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490d9d6c-3210-4f10-ae75-6e96f1bf6a21",
        "cursor": {
          "ref": "0854901d-3692-42ba-a350-e955889d01b1",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "387d84dc-56cc-4b1a-b22d-14a376ad20e7"
        },
        "item": {
          "id": "490d9d6c-3210-4f10-ae75-6e96f1bf6a21",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "826ccafa-2913-4a3c-9a0d-86499e2a92d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7235964e-96ae-40ee-a94c-f86a267dc460",
        "cursor": {
          "ref": "696794e7-b139-400b-b7f8-040434a6fb46",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "31f3acf5-b73c-4b71-b885-539bda2b2942"
        },
        "item": {
          "id": "7235964e-96ae-40ee-a94c-f86a267dc460",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "09780358-4597-4573-8068-37e2b86da42d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99073c8-2c59-468b-a4d6-9bb64744517b",
        "cursor": {
          "ref": "553f3ff0-84ee-4cd0-82af-4c27ab857d2f",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "45782852-674f-452f-8d0a-8289e0e6ae6e"
        },
        "item": {
          "id": "e99073c8-2c59-468b-a4d6-9bb64744517b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "afe69ce9-fc1b-47d7-9175-1a706358aa3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b399311-d39f-4a7a-ad06-400b62e60f35",
        "cursor": {
          "ref": "6a510bdb-47b5-4e83-a43b-37aac29b2f95",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "80eda2e3-551f-43b7-96f8-6bf4b6e7c3b7"
        },
        "item": {
          "id": "1b399311-d39f-4a7a-ad06-400b62e60f35",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "abd476b2-f0a4-4b45-8030-6dd8f7c133db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "487bf437-eb68-4305-91df-86c3affd2330",
        "cursor": {
          "ref": "3a443a18-0ad5-4c60-8830-e0e0c5433fb1",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7fe88c40-039c-426c-90b3-937f7885dd06"
        },
        "item": {
          "id": "487bf437-eb68-4305-91df-86c3affd2330",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "13f7330d-8b0f-4d28-9502-9b3184d9846e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa9dceb-2149-4ed7-8eb7-b25cf80c077c",
        "cursor": {
          "ref": "267116ce-4e59-4644-a0fe-aa9e9d6d6063",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "2baa3cdd-8d2c-426d-8cc6-279574bb87f1"
        },
        "item": {
          "id": "efa9dceb-2149-4ed7-8eb7-b25cf80c077c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "775bc567-1cc3-4820-9902-dd1641f8a53a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b060fe-d88e-4898-bde5-f56fa89bcc70",
        "cursor": {
          "ref": "02f47978-1987-415e-9330-60f9657731e1",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "133c88ed-4fe7-4bb2-bd73-8fdb92751aad"
        },
        "item": {
          "id": "28b060fe-d88e-4898-bde5-f56fa89bcc70",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "37382c89-c921-436f-b180-2b5586f456cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7610472a-ba64-4d43-bfe4-ad28e3b56df7",
        "cursor": {
          "ref": "568e5fb2-67d0-42f5-9c82-1958b08239ab",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "3f7a9341-7450-4540-a2ba-2277fab5a7e1"
        },
        "item": {
          "id": "7610472a-ba64-4d43-bfe4-ad28e3b56df7",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "aeb1f618-855a-46b6-b81a-4a267416b591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7155beb-4b07-432b-944e-f7b5a7133884",
        "cursor": {
          "ref": "9a34dec8-91a2-410c-96b7-9373d2f23a36",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "3e9037c3-c05d-4e6c-b4b8-970218744b38"
        },
        "item": {
          "id": "b7155beb-4b07-432b-944e-f7b5a7133884",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2e83268c-b08c-4219-8b51-78ee44788bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97389ac8-06f4-4c47-922a-8615452c4e3b",
        "cursor": {
          "ref": "80d7b0bd-f01a-4c0f-9048-d5efad906a54",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "9de53d38-c5e4-4661-83c9-748461ec354d"
        },
        "item": {
          "id": "97389ac8-06f4-4c47-922a-8615452c4e3b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "03a837b5-9956-4a5f-a136-065ca22ef142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acbfdd11-878c-45d9-bd8b-69e3931e0a38",
        "cursor": {
          "ref": "70214553-690e-4491-ae21-e32dacaddc15",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7e04229d-aca4-4ecc-87e2-357488fcb9a2"
        },
        "item": {
          "id": "acbfdd11-878c-45d9-bd8b-69e3931e0a38",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e94586f6-3c8a-47ce-981e-7bf66c09ee13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5e6e4f-fb41-4134-bfb5-e0602aca5397",
        "cursor": {
          "ref": "1ed8e3f2-e1d2-48d2-82d0-5a84e30e93fb",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "31101c3b-d51c-4ada-b7c3-9a3e825c260b"
        },
        "item": {
          "id": "8c5e6e4f-fb41-4134-bfb5-e0602aca5397",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3c980979-4ca6-41fa-ad97-430085dc512f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2056f9-5f15-43fa-9036-13e01e36c1c4",
        "cursor": {
          "ref": "14cc428e-2268-430b-ac26-8cd1411b7b47",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "dd058d1c-0a82-40c9-9316-ede0fa5d1d8f"
        },
        "item": {
          "id": "ab2056f9-5f15-43fa-9036-13e01e36c1c4",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "1235533f-5a69-4ed0-84f1-1b9f360c674b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "511c9f37-5da1-4cbc-9a53-0b69754aff4a",
        "cursor": {
          "ref": "74735145-235f-41b7-89c6-ceb419dc0d04",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d64ef467-9b2e-463f-b5b9-c0b0d2036695"
        },
        "item": {
          "id": "511c9f37-5da1-4cbc-9a53-0b69754aff4a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4e4ca314-1737-4ff3-b8d5-d6f46240aa9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3f341a-2074-4f08-a29b-710af83ec9a3",
        "cursor": {
          "ref": "228fe49d-bc04-4448-a8ae-ccc7149f220f",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "db023e25-393b-49ec-94f5-053dabadd751"
        },
        "item": {
          "id": "da3f341a-2074-4f08-a29b-710af83ec9a3",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "74924d0a-df52-4926-a3f6-c35c0c02f856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4476e00f-f4c8-48c6-a1c3-076dcacc8293",
        "cursor": {
          "ref": "c14081aa-175d-41fa-b655-01e14e5b3ea0",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "be768c81-28f8-4c52-868b-68cba0ba7ede"
        },
        "item": {
          "id": "4476e00f-f4c8-48c6-a1c3-076dcacc8293",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "22768f4e-2201-4427-a6b3-777f8d44810e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f49a009-7bbf-4935-82c8-226a97c4dc4f",
        "cursor": {
          "ref": "3c0ed685-4ce1-4dce-9c43-bc2d5ae48dc6",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "fef4c6e1-4c78-4a6b-9503-71b531980405"
        },
        "item": {
          "id": "1f49a009-7bbf-4935-82c8-226a97c4dc4f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "303f57fd-e599-42cb-827d-b267d7def26c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "836681d6-9d52-4e90-afbf-207f80328553",
        "cursor": {
          "ref": "881ce3ae-eecf-4812-8196-4108aff12ef2",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "90fb4619-fb7c-4e3a-97e6-576f6dc8f6d8"
        },
        "item": {
          "id": "836681d6-9d52-4e90-afbf-207f80328553",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0ac661bd-2c69-4f43-8caf-c5bd583ac0b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7270d3f-5f8b-452e-92c3-0d623df18547",
        "cursor": {
          "ref": "d3bb71ab-a7c3-4ff5-9f25-688a37f693be",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "eb88d2ba-2d44-4c2b-9a69-33b9728e1143"
        },
        "item": {
          "id": "a7270d3f-5f8b-452e-92c3-0d623df18547",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "177e4b57-0de5-4be9-9ea6-107f86f65b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e55ec2-b0e9-46e1-9c88-15c700593f68",
        "cursor": {
          "ref": "8ce2ea71-cff5-4dfb-bc5f-d4264314b024",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "93aa87ab-3ebf-453d-9bd6-d7b82c0c1314"
        },
        "item": {
          "id": "c6e55ec2-b0e9-46e1-9c88-15c700593f68",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "fd04e478-b971-4fdb-9f54-8768e31951a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89dae70a-a1fe-4c95-b491-a9b51938fdeb",
        "cursor": {
          "ref": "8fd08996-caf0-492f-8fd9-cb011d6fbad7",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "33d3f9b5-ad1b-4d4c-b99e-90bf549e343a"
        },
        "item": {
          "id": "89dae70a-a1fe-4c95-b491-a9b51938fdeb",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "85360b2b-cc26-4949-a7ce-71887f37c166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e652b8ad-1e9b-4e26-a417-b11973ac7fef",
        "cursor": {
          "ref": "6e343c04-8b36-477c-9ef4-2054e8988205",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ff957323-8d72-410d-a2b3-2af7d8ea2013"
        },
        "item": {
          "id": "e652b8ad-1e9b-4e26-a417-b11973ac7fef",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5880b7db-3b5e-421d-9b14-9580ad65737e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a662ad2c-66fb-442f-b9d2-acc603fab54b",
        "cursor": {
          "ref": "06105aba-d9f5-45f2-a6f1-e984c804fd25",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "8abe4faa-380e-434a-914c-45d2f46ba213"
        },
        "item": {
          "id": "a662ad2c-66fb-442f-b9d2-acc603fab54b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "18b3db43-ee4c-4c7d-88be-dcd707d43cda",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94bba9bf-1c29-47a4-9ab9-9f87038f5877",
        "cursor": {
          "ref": "7b97a3a5-57a2-436d-a445-3825ec115706",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "88574a25-f2d8-43e6-b797-a6d1073342a9"
        },
        "item": {
          "id": "94bba9bf-1c29-47a4-9ab9-9f87038f5877",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "0f92d368-96c6-4a99-b261-5b84f561455b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "5d8b6dba-6e77-4e32-aea4-9d1281260712",
        "cursor": {
          "ref": "3ad95239-527d-4291-a8a8-ad4084be08fc",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ab796d70-1fc9-4a45-9add-6d69cc202842"
        },
        "item": {
          "id": "5d8b6dba-6e77-4e32-aea4-9d1281260712",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ae69b838-8b0f-40a1-a85c-74a87f0afa27",
          "status": "Created",
          "code": 201,
          "responseTime": 2806,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "25eb84ea-2f3a-40de-819b-33652e159a49",
        "cursor": {
          "ref": "090d92cb-4ef5-4117-a52e-3ba19d18d0fb",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4bb6f291-4b09-4de2-a561-526bb8aae516"
        },
        "item": {
          "id": "25eb84ea-2f3a-40de-819b-33652e159a49",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "2cda08b4-f064-41fb-8786-a2572174ecce",
          "status": "Created",
          "code": 201,
          "responseTime": 2554,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d64b6c-3851-429c-a3b0-0546190de0aa",
        "cursor": {
          "ref": "827b4086-a7f0-477c-9c34-f546269f37d6",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "2a79cf4e-3332-430d-a1d1-5a3d3f4ef280"
        },
        "item": {
          "id": "d2d64b6c-3851-429c-a3b0-0546190de0aa",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "4ae43072-dd62-4d4e-a5e0-4d6335407472",
          "status": "Created",
          "code": 201,
          "responseTime": 2091,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1982eca-568a-4440-b6de-dc49362b5871",
        "cursor": {
          "ref": "e47f6100-2326-49ab-ab16-9b39de77b212",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9e56983f-ae87-4dc8-a91a-fa6a62cc3d66"
        },
        "item": {
          "id": "a1982eca-568a-4440-b6de-dc49362b5871",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "16cfba98-b970-4ff0-8978-6ee79588bd21",
          "status": "Created",
          "code": 201,
          "responseTime": 2075,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66a3e15-e9aa-4875-bda6-c723ae12eddd",
        "cursor": {
          "ref": "c585b0bb-3f20-4b46-b011-9ae03514a3ee",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "bcdd1273-b38a-48ba-9533-9176276270e9"
        },
        "item": {
          "id": "a66a3e15-e9aa-4875-bda6-c723ae12eddd",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1e9dc687-4d05-4805-a38d-d23709b8ef06",
          "status": "Created",
          "code": 201,
          "responseTime": 2123,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c185700-71b6-4a8e-967a-62deab91fe45",
        "cursor": {
          "ref": "84f1ec7d-3328-413f-a6e3-167d07aecb51",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "1056b5a5-605b-4b53-a113-8a5200911019"
        },
        "item": {
          "id": "7c185700-71b6-4a8e-967a-62deab91fe45",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e4c56091-fac2-4477-b6fa-489092dc9ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "9cdc39a4-8f4c-4667-87eb-cef8c9143736",
        "cursor": {
          "ref": "ad436be5-5102-4fe0-882a-cd5512d204d9",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "cd6101a6-24a5-4aea-bc6f-9698323b120e"
        },
        "item": {
          "id": "9cdc39a4-8f4c-4667-87eb-cef8c9143736",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "dcea8788-baed-4955-bec4-a5f48a5a4db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd6b401-7c12-4259-aab2-e14a351408a2",
        "cursor": {
          "ref": "1206055c-febe-48ce-a735-36639b6132cc",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "68e3eafa-3211-49f4-837e-72ac04b20f8f"
        },
        "item": {
          "id": "9dd6b401-7c12-4259-aab2-e14a351408a2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f34649f6-8b48-43f6-b9d4-62ba84e5bf4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e6c2b7c-15a4-4347-a7d3-5ee5931fd781",
        "cursor": {
          "ref": "af74de30-e941-47ea-9066-1e6f414da8d1",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "99ea67bc-fe62-4f13-8349-fc306cb872a4"
        },
        "item": {
          "id": "1e6c2b7c-15a4-4347-a7d3-5ee5931fd781",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "851dfea9-49ee-4225-9f4e-2d7d68466fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0623263-ef8b-473f-afa4-d52fd891dab7",
        "cursor": {
          "ref": "ce5248b1-4303-47e6-80b3-e1bf3d504643",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "44d7c792-0eaf-47f1-aa4a-847a9f169032"
        },
        "item": {
          "id": "b0623263-ef8b-473f-afa4-d52fd891dab7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "87c0eeab-ddcb-4882-9646-a32dc04464c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52197688-20c9-414b-a7be-8f3fae991497",
        "cursor": {
          "ref": "1b0668a8-b423-4db7-a6c4-5af415ae5e9e",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "ddd2c818-1b4c-497b-962f-4748eef32be8"
        },
        "item": {
          "id": "52197688-20c9-414b-a7be-8f3fae991497",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8042afb5-b991-45a7-8a1d-dac653c1de24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "182ae9ce-066e-4f48-80b1-cfc35f097185",
        "cursor": {
          "ref": "27749d14-7230-4f4e-8d29-39faca595a6c",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "2c72f60e-94f4-4b1d-9f2e-7df656ba1506"
        },
        "item": {
          "id": "182ae9ce-066e-4f48-80b1-cfc35f097185",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e22b08e8-fc04-4276-9abf-cb59b242504d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814f1d87-b953-4c70-9f52-eaa9c89b930a",
        "cursor": {
          "ref": "afb2aab5-5530-4744-9e2d-086033163a4a",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8b8b86fa-7b2c-4102-95bc-6e3a5bc4a0c1"
        },
        "item": {
          "id": "814f1d87-b953-4c70-9f52-eaa9c89b930a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "11f337d7-a740-4810-842a-6b619376975a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a5e310-3ac6-45ae-bf01-bbf6c28f0af2",
        "cursor": {
          "ref": "87435ae3-f0fb-470f-881b-28b6c6d519da",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "5ffa0d14-5cb9-4558-9ccf-7c77552e2705"
        },
        "item": {
          "id": "79a5e310-3ac6-45ae-bf01-bbf6c28f0af2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9d5a3d44-1f3b-4bbf-accb-e7d46febbfcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57bc5af2-e95b-4a6e-8ccb-1ca644e12712",
        "cursor": {
          "ref": "2cf9f22f-7bb5-40a5-9a4e-bd6424b4a795",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "bab3a015-b815-43a4-b460-d42bdfe1226e"
        },
        "item": {
          "id": "57bc5af2-e95b-4a6e-8ccb-1ca644e12712",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "674cd036-3192-40d3-a28d-0b8f6d7be8ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be1a004a-6a0b-4cb5-9ca6-d2d11bf3d5e5",
        "cursor": {
          "ref": "734719f6-c0ae-4c63-92ec-bcde476cc89a",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8eeea1e2-6141-4883-bd31-ec09bb05089d"
        },
        "item": {
          "id": "be1a004a-6a0b-4cb5-9ca6-d2d11bf3d5e5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7fc128eb-a140-4b00-9b0f-ecaa5d7fabe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c29e9a52-6c36-44b5-8b20-5537bcf6b62f",
        "cursor": {
          "ref": "46067deb-ff5f-4142-ae1d-375bcd75c2a7",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "ede01cc6-6af1-42e4-a1a3-ad776370ca31"
        },
        "item": {
          "id": "c29e9a52-6c36-44b5-8b20-5537bcf6b62f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "07f0c992-815d-45c5-804b-acf59d2ea628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6358705d-4cdb-4376-a68f-49b62839d885",
        "cursor": {
          "ref": "0a150562-a4b9-4429-95b5-932ed1aae232",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "fbe91376-052e-4d57-97cb-47faae10e2ea"
        },
        "item": {
          "id": "6358705d-4cdb-4376-a68f-49b62839d885",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c06ec005-51c1-4012-86cd-386276310f77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae6ad6b5-7251-4394-b604-cfb5ad855317",
        "cursor": {
          "ref": "6e84587e-3f9e-4e75-8243-1b56cdbe4102",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f9488ae4-acfb-462a-83f0-1996a7ef5d33"
        },
        "item": {
          "id": "ae6ad6b5-7251-4394-b604-cfb5ad855317",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a991f787-0c7f-49a9-bdf8-5dbf1bf1c696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f623242b-e906-4968-9e58-892747b02ac7",
        "cursor": {
          "ref": "5a8d9b28-7edb-4af6-bb47-00735f8ef81d",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "24b6fd23-6e99-45b2-9602-4b4cb67bd72c"
        },
        "item": {
          "id": "f623242b-e906-4968-9e58-892747b02ac7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "83b6bc6b-9a76-416e-a422-4dda39b60957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35df75c1-6522-4d93-b776-57be7cd75d99",
        "cursor": {
          "ref": "2fa32708-22a0-4fb9-b17c-9bd68eb33016",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "11db8ae7-dc93-41c1-9d01-35dd5a9935a8"
        },
        "item": {
          "id": "35df75c1-6522-4d93-b776-57be7cd75d99",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "49449e3e-bd6c-4194-a833-65348940497b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b07834e-2fbf-4ded-9283-dbfe33778f7e",
        "cursor": {
          "ref": "2e8e809c-d8e1-4957-98e2-2017340aa33b",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "ea81e19b-4bbe-44e3-9dec-47efa3648dde"
        },
        "item": {
          "id": "1b07834e-2fbf-4ded-9283-dbfe33778f7e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "48d069eb-a66c-4cf2-a079-ffb249186296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b995cae-f85e-4f28-8ffb-675bcb205e38",
        "cursor": {
          "ref": "0b0d867b-88a1-429c-87c3-0cfef41a93d3",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a8dc2cd1-7c96-4dd6-b9d9-0f6bf711ef75"
        },
        "item": {
          "id": "9b995cae-f85e-4f28-8ffb-675bcb205e38",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "39341614-f07c-4e6a-a69d-a6e0e04c15b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb595f1-c380-4c4b-bf63-acf369e5cd43",
        "cursor": {
          "ref": "7b81d064-01e0-4b8e-93bc-9ebc2fb77253",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "774da012-6e1d-4689-8c98-9b31977c385d"
        },
        "item": {
          "id": "afb595f1-c380-4c4b-bf63-acf369e5cd43",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "09be47d7-bcc1-4477-9fd7-46ed1a3acb01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c0ad975-748c-44dc-bbc6-dc55c33f8027",
        "cursor": {
          "ref": "bcb46a42-f37b-470b-afb2-38b5f3c4cb8f",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "abd7667a-29d5-4537-87a8-66875122c97e"
        },
        "item": {
          "id": "7c0ad975-748c-44dc-bbc6-dc55c33f8027",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "de05843b-03c9-4309-908c-879875b3e520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d655be-485d-4b82-a15c-17391920b359",
        "cursor": {
          "ref": "85b9578d-d5fb-4094-a9f9-af3dc6de43b5",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a4c7c354-8824-42c1-9b87-296687d744f4"
        },
        "item": {
          "id": "f1d655be-485d-4b82-a15c-17391920b359",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "667ffebb-56fc-4e65-8125-bb86adc36414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc05e78c-a65e-417a-be68-12fa0628d04a",
        "cursor": {
          "ref": "9dae4616-2037-433f-834c-d46254a1c6e2",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c2ac1c1f-63aa-4451-9788-4b2702da520e"
        },
        "item": {
          "id": "fc05e78c-a65e-417a-be68-12fa0628d04a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a33d018d-05a9-4fb7-8679-2d0f4d61d6f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c1713c-6d46-47bf-8e40-7badc74de646",
        "cursor": {
          "ref": "6d1d3f69-9424-4da5-b64c-cf1c011744bd",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8dbf48c1-7316-43d8-ac68-9b3b35a64214"
        },
        "item": {
          "id": "41c1713c-6d46-47bf-8e40-7badc74de646",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a5509356-fa07-4cd9-8b55-451899f55aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df950dc1-7281-4fc3-a50a-253f037b6137",
        "cursor": {
          "ref": "c6a15594-f6da-4359-84fe-18a1d9d94068",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "6650a1e4-5188-4499-83fe-5bf99cd589fe"
        },
        "item": {
          "id": "df950dc1-7281-4fc3-a50a-253f037b6137",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2d1c9474-6cea-47a4-86b6-ed1d3783d77f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044c17be-3616-454e-b3c9-8eb782c4f3b6",
        "cursor": {
          "ref": "7c577221-a5b8-421f-8b0b-700f3429aa61",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "2f2edb6c-a781-4cdb-8c00-745252cd8a2e"
        },
        "item": {
          "id": "044c17be-3616-454e-b3c9-8eb782c4f3b6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3a74e2c6-2e80-4c7c-8120-e95b830da49c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "697b9511-1bd4-4557-9aba-df34957f1c77",
        "cursor": {
          "ref": "7fad5af4-f24e-4711-bf89-a84e30aff46f",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "5452256c-f732-478b-8430-d2727d87cc09"
        },
        "item": {
          "id": "697b9511-1bd4-4557-9aba-df34957f1c77",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f79620ad-2bd3-4f68-960d-96b4a5219e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d86061-dfb4-4fe8-80d7-b54e8e2d1c2a",
        "cursor": {
          "ref": "b40a1831-f699-4198-b4b1-127bd2c12848",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "89799f14-8b68-4d8e-b925-2be9e9dcf507"
        },
        "item": {
          "id": "d3d86061-dfb4-4fe8-80d7-b54e8e2d1c2a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "dbdd7c8d-5ddb-4091-b1fe-d89156157d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6700f84f-3f6c-4c21-af58-b86b481980ba",
        "cursor": {
          "ref": "d8c50fc9-1a24-41da-8744-d09dd46c4d6e",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4b899918-9bf1-4720-bc8b-1af9ffd0e6d6"
        },
        "item": {
          "id": "6700f84f-3f6c-4c21-af58-b86b481980ba",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c218d866-e115-4d05-a440-061041470fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd28e905-6007-435d-9b0e-04c6fe6072cf",
        "cursor": {
          "ref": "df6f1c62-4376-4638-8f4e-e409e6f13bdd",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "514168e7-79b7-4b81-bc3d-c71dbf26b5db"
        },
        "item": {
          "id": "fd28e905-6007-435d-9b0e-04c6fe6072cf",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a5fc736a-08ee-45ab-8d10-25a789e65dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6395708c-c86e-45d6-9c08-cd1ae6162fb9",
        "cursor": {
          "ref": "40787362-80a5-49b8-8457-8f0193bf65ab",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b807e0b2-dfb1-4742-85aa-bd18862acd2a"
        },
        "item": {
          "id": "6395708c-c86e-45d6-9c08-cd1ae6162fb9",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "cf6a8aad-62da-4a22-80a0-c5286e20e31f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "803cef56-4548-4276-b6f1-bc6d1a299947",
        "cursor": {
          "ref": "f36ae4c0-68e0-41c7-b187-00118ef4be29",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "77392c43-510e-4dfb-9950-767412a6063c"
        },
        "item": {
          "id": "803cef56-4548-4276-b6f1-bc6d1a299947",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4813ea29-dd05-45f3-a49c-bdc1844d14a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef2b92f-04f3-4d8a-90dd-671e976564e4",
        "cursor": {
          "ref": "7a34615a-f084-48db-adf9-0da66ee93e59",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "5e705660-e761-4386-9c4a-43564e65baa3"
        },
        "item": {
          "id": "4ef2b92f-04f3-4d8a-90dd-671e976564e4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f7cb49c5-f6b9-4f31-9d2a-e7e6b5f55996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c3e459-a56a-4875-99cb-b17d19caec9e",
        "cursor": {
          "ref": "4428d6fd-ef50-4ebb-a913-8c9a8aaa286d",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "0a41dd2e-1f2e-4d45-be97-6e85c6384efb"
        },
        "item": {
          "id": "94c3e459-a56a-4875-99cb-b17d19caec9e",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "d7080e7d-765b-4113-bae3-a26dd7b73423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f93da3b-ab32-4b1f-a53d-7d1d17e1aeaa",
        "cursor": {
          "ref": "c0d6c22d-a23a-47af-b136-c072bd45c3cc",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "532af938-3c6b-4dee-97c7-0bd03bc6d3f0"
        },
        "item": {
          "id": "7f93da3b-ab32-4b1f-a53d-7d1d17e1aeaa",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a3a07c9b-ea96-443d-8e02-9c7843d3b2c9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c221fcbf-c8e5-4c01-b9b8-e5a38f0b38d2",
        "cursor": {
          "ref": "b2ade8ff-9d2b-4bc6-b573-7e319b78017f",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "14001409-188d-4f90-ba47-128643ca331c"
        },
        "item": {
          "id": "c221fcbf-c8e5-4c01-b9b8-e5a38f0b38d2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "11842069-bb70-4af4-912a-f24ab6c5fd0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97b3303-9969-4f5f-983e-b3c4639295a1",
        "cursor": {
          "ref": "4e462205-5d5c-485a-bb57-a020b4d6c5e0",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5af1e146-ebff-47d3-b015-8e21768625f1"
        },
        "item": {
          "id": "f97b3303-9969-4f5f-983e-b3c4639295a1",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "bb9ad905-c702-4eee-bf25-60b60ab4373b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee47a77-a316-4050-a628-4b2f8bc31c8e",
        "cursor": {
          "ref": "8b2c8c0c-9c2a-4200-adf7-470f0008e054",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "42fa37a0-1310-4253-86e7-57bfa55dbadd"
        },
        "item": {
          "id": "1ee47a77-a316-4050-a628-4b2f8bc31c8e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e0e1a2e9-81f7-4351-808c-04bcec75b4d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "548103c7-17db-4533-8371-5b1a1455f157",
        "cursor": {
          "ref": "dd6ad083-5099-4f5d-9498-fefaea2ed76c",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "dac6e45b-7b4f-46dd-8558-edfb64aee22e"
        },
        "item": {
          "id": "548103c7-17db-4533-8371-5b1a1455f157",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "eb63754a-a2bb-4aed-817c-5b1debfcd03a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96febd45-316a-4806-8d22-16e9df2535ea",
        "cursor": {
          "ref": "c58a1f85-1423-4aba-aaef-a216a10e95a7",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a84c895a-7aea-42f7-95f9-3219bb32f632"
        },
        "item": {
          "id": "96febd45-316a-4806-8d22-16e9df2535ea",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9cdea54b-2c4d-4338-a2ba-9667ea8a5692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed4275f-79ad-4a4b-898d-87464c837259",
        "cursor": {
          "ref": "33775dff-5f7d-401c-97b9-18d82a4a9677",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "00b90d05-1fb4-4bdc-86c6-0010d4f2ee64"
        },
        "item": {
          "id": "8ed4275f-79ad-4a4b-898d-87464c837259",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d1b30090-b8fd-4ada-9c50-d95a2a6b7a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1086ce6f-1085-4340-9ca3-98d487beee08",
        "cursor": {
          "ref": "4e61abb2-7ffa-4fde-850c-d3cb95904f34",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ba62ca8f-836a-47a1-8c4e-929a362a4338"
        },
        "item": {
          "id": "1086ce6f-1085-4340-9ca3-98d487beee08",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b92c17e9-40cf-4fab-80cf-06bb4ea8249a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c657c6ae-7dbf-42cf-80b7-9b11417eac48",
        "cursor": {
          "ref": "132adc1c-9503-4da4-8785-b154068b40d3",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f55c9223-bc54-4b15-b732-49210191ebb2"
        },
        "item": {
          "id": "c657c6ae-7dbf-42cf-80b7-9b11417eac48",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c9b00c4b-6834-42f6-8706-fabab3c697c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3717b96d-e602-4bd2-a20a-8b3bbf0b56d9",
        "cursor": {
          "ref": "7f579ec4-9884-468a-8299-be705002a613",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "966d1340-62ca-4288-8fa0-1be9b864cbaa"
        },
        "item": {
          "id": "3717b96d-e602-4bd2-a20a-8b3bbf0b56d9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "14275831-f708-46a0-89ce-5087104bbdef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1663dc4-6130-4cec-9733-0736bd6fda99",
        "cursor": {
          "ref": "aef23531-d5e7-4f06-aa07-b978ffc7da4b",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b1688a2f-cc43-4235-b890-9e53e11e1b3d"
        },
        "item": {
          "id": "a1663dc4-6130-4cec-9733-0736bd6fda99",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ed03b3ee-7d9c-4dd3-aabf-2ef01f0c21d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7891763-8f83-4e5a-858c-97987afc740b",
        "cursor": {
          "ref": "3d07d61f-79ae-4c15-9f29-c9903ee51cf0",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "49169bca-01aa-45c3-a5ab-07b66bbe7ff8"
        },
        "item": {
          "id": "f7891763-8f83-4e5a-858c-97987afc740b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2fae2f70-3316-44df-bc48-2e57b1d29d55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43bd10ac-d42a-4d4d-a34d-1ac2a0297063",
        "cursor": {
          "ref": "67641c30-d195-41db-8cd9-18b612a95492",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "23fe3aaf-4d83-4de4-82e5-43371893b89e"
        },
        "item": {
          "id": "43bd10ac-d42a-4d4d-a34d-1ac2a0297063",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9a0b6fb9-6a2c-47ca-bc39-21d30dca621a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c5de95-7bf4-4e03-9e02-a90a10685e17",
        "cursor": {
          "ref": "4cd58360-01ee-489e-a958-ba55d33a44f5",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d8467096-b239-4ee7-b04e-1e1db85e128d"
        },
        "item": {
          "id": "b9c5de95-7bf4-4e03-9e02-a90a10685e17",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "016a5243-166a-41c1-9b59-f077c62c7df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d23efad-5d79-4d70-beaa-7464f967aa14",
        "cursor": {
          "ref": "57dff94f-d06b-4221-acc9-3db50610f4d2",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "49a5cf14-b2ac-43fc-9a62-d930c3b55d34"
        },
        "item": {
          "id": "3d23efad-5d79-4d70-beaa-7464f967aa14",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "be7bc5c5-e770-479a-b846-d1df1ebf71a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "432b91b2-62d1-4ff5-b5af-4ce5d19920a3",
        "cursor": {
          "ref": "4ea35de0-f58f-4a8a-bfde-684737714a5e",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "33bc576b-026f-4ba8-88f0-49c746689c99"
        },
        "item": {
          "id": "432b91b2-62d1-4ff5-b5af-4ce5d19920a3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "59961c5d-7f26-418a-a241-643c7859b10b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f946dce8-5736-48b2-bf78-ad2b1cc15238",
        "cursor": {
          "ref": "4a7eef29-5126-4309-a1ff-d1400b535c7a",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "4fa7ba05-9bcd-4e32-86bf-da233139a5d4"
        },
        "item": {
          "id": "f946dce8-5736-48b2-bf78-ad2b1cc15238",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1113a064-a18f-40a9-a1df-09b4e3541fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0dc812-a287-4b19-a438-24f34f94eacf",
        "cursor": {
          "ref": "99f1ea37-987c-4ab9-84ec-ceca64f071ed",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "ae26c959-caa4-4123-8284-cacb396625b3"
        },
        "item": {
          "id": "8c0dc812-a287-4b19-a438-24f34f94eacf",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3e6e1b3e-292f-4a4b-b795-2c4c10956637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d3c655-9007-4295-8107-cc7863c11a22",
        "cursor": {
          "ref": "1b54bc2b-0453-4aa3-97cc-e5ecbb4ed0d3",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "aae0160a-cff9-4ba3-934b-6e1486ebed9c"
        },
        "item": {
          "id": "c2d3c655-9007-4295-8107-cc7863c11a22",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6d4f6841-9263-4247-a0da-39a087fa5167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce37a36b-0c94-4026-a313-467a9bb5f8eb",
        "cursor": {
          "ref": "b224455b-542e-4e5b-8cc0-b3cacba08808",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b6579c94-caed-4768-81a9-1e9d3773df80"
        },
        "item": {
          "id": "ce37a36b-0c94-4026-a313-467a9bb5f8eb",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "81bd367e-3acf-4d01-a70a-f656c5ae5019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d26dc43e-932a-4d47-a409-7c693efbc529",
        "cursor": {
          "ref": "4e25bb71-58d2-4c35-9b7c-6edbec129594",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "63fd018d-4d51-46c3-85cd-95a2cf59431b"
        },
        "item": {
          "id": "d26dc43e-932a-4d47-a409-7c693efbc529",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8d3d8dee-ec6c-4852-975e-6b54b6253649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c6531f-86f0-4494-8609-dcf03e983408",
        "cursor": {
          "ref": "acfef05f-0672-4444-9852-6ecf5801a5e8",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "6ef18acd-4f2b-4d0e-9aee-c3b93f437d3b"
        },
        "item": {
          "id": "41c6531f-86f0-4494-8609-dcf03e983408",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b02abc89-9aef-4d3b-aa84-2ed534f4cc01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d18ee4b-12ba-422f-98d4-5134bfdb2098",
        "cursor": {
          "ref": "bc3e8da9-c9a7-4fe4-8ac3-fa43c37ae2fd",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "52966c86-9f4c-46ad-985c-166d077a1d5c"
        },
        "item": {
          "id": "6d18ee4b-12ba-422f-98d4-5134bfdb2098",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "16df42b3-4700-486b-9b11-31be62639d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a77e8a-addc-4d40-85c5-b88304e22c58",
        "cursor": {
          "ref": "94fb60a9-fb70-45bc-882a-7ac09627a790",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "0b8c9ba2-4bfd-4c18-80b4-192845edf218"
        },
        "item": {
          "id": "67a77e8a-addc-4d40-85c5-b88304e22c58",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "fec0f257-065c-48d7-8426-39b8660d2b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8395e6f-ec2b-4369-88e4-785e11b0e6de",
        "cursor": {
          "ref": "e9968f1b-af2e-4c4f-9e61-5ce1a9319e55",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "91971d94-1623-4d2a-8948-baff41af9747"
        },
        "item": {
          "id": "d8395e6f-ec2b-4369-88e4-785e11b0e6de",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "144d7896-6001-4a39-8a09-73c08afb80be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549966a5-555c-40ed-8daa-002256870114",
        "cursor": {
          "ref": "a1559518-813b-482e-81ed-825799195615",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5c57db7b-3284-4c1d-ab8f-8557419923a1"
        },
        "item": {
          "id": "549966a5-555c-40ed-8daa-002256870114",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7a65c881-f4e7-4bc8-af97-3310a7ae7bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3231d936-f85f-4f46-992f-67a5c6769b23",
        "cursor": {
          "ref": "7032160f-c8bd-426e-96a6-8c1e840656e8",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "86d137b9-4524-4236-a863-22791d7727f5"
        },
        "item": {
          "id": "3231d936-f85f-4f46-992f-67a5c6769b23",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fd246824-d565-48ee-a288-62dafbdfc897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae8e3cde-3d37-4db2-8440-ec0f70d97f5e",
        "cursor": {
          "ref": "2e7cb73f-1fa7-4c0a-8bef-f9280f8e37d4",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "6ddad447-26f1-4834-b009-234673e5bada"
        },
        "item": {
          "id": "ae8e3cde-3d37-4db2-8440-ec0f70d97f5e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2ccfd72e-2418-47d1-87cc-024a2221f0cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329c87f6-0327-4bc5-938c-180c39a77ab7",
        "cursor": {
          "ref": "f0721bc0-4330-4156-8d30-15da25088357",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b57d6cdc-37ab-4f59-9b39-ae5e1b2b07cf"
        },
        "item": {
          "id": "329c87f6-0327-4bc5-938c-180c39a77ab7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "050bf995-b864-4d83-b83b-48125ff7e1bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7826eef3-22dc-4e90-a999-f5410de776f3",
        "cursor": {
          "ref": "69e2ccdb-a574-4364-b905-82790d2f83c5",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "bde71a83-c22a-4fd6-ba83-469bac782f3e"
        },
        "item": {
          "id": "7826eef3-22dc-4e90-a999-f5410de776f3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ab806609-aee7-48f6-be7b-58fccd9721a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8192fa98-edea-4222-b2fe-c2c3d1562c53",
        "cursor": {
          "ref": "0dfebe6b-0a14-4420-a248-754846aeebe5",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "7dbf980e-21fe-464b-9198-bd340b82afdc"
        },
        "item": {
          "id": "8192fa98-edea-4222-b2fe-c2c3d1562c53",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bade5b90-7916-4bd4-a759-4a56fa3e4d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89eae00c-e1c9-45c8-8c16-a357ea8aac88",
        "cursor": {
          "ref": "161b86ff-92fe-4e9f-815f-415afab50d2c",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a01856c2-666c-4f7c-abb9-a0073961f074"
        },
        "item": {
          "id": "89eae00c-e1c9-45c8-8c16-a357ea8aac88",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3dc1f2fb-224d-4d53-89bf-11ff8e01c0af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f70b21-2f9a-4bc7-82b0-ac252c4e1b35",
        "cursor": {
          "ref": "d5bd3aed-cb8b-44c1-bd9e-1451d8cd4ed9",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "19de6a70-f018-495d-b57b-3ad747b66827"
        },
        "item": {
          "id": "69f70b21-2f9a-4bc7-82b0-ac252c4e1b35",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "7d6466da-f345-4247-9104-369bbbd0aeda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f91ffec2-5023-4764-b18e-1546d1f01c0e",
        "cursor": {
          "ref": "514653bc-e966-4ce3-a933-4876b9676550",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b758bff7-8dc4-4a94-955f-89ac39044f07"
        },
        "item": {
          "id": "f91ffec2-5023-4764-b18e-1546d1f01c0e",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "b6e17f58-e1c2-4a84-87e2-56ea46af7f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ca6884-46df-4c11-afab-ea936844d938",
        "cursor": {
          "ref": "e776f426-f649-4646-8575-5427169a7a10",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c123316f-f08c-43d4-be32-d1c3975c124e"
        },
        "item": {
          "id": "16ca6884-46df-4c11-afab-ea936844d938",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "bb6eed4e-323d-4aff-8878-fa88413fac70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93bf59df-fcd0-4d98-812e-b038cd1fbfde",
        "cursor": {
          "ref": "79982709-59f5-484f-b760-2a6f72b1ba38",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "6c97cc10-a4d5-4359-adfe-501d3ead293b"
        },
        "item": {
          "id": "93bf59df-fcd0-4d98-812e-b038cd1fbfde",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "de0dc83b-cb95-4216-8bcf-a6f5edc6f595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ad7696-8572-4bfa-b117-920f4592e115",
        "cursor": {
          "ref": "3b95d91a-3f16-4d92-94e0-b038c47dc94b",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4e3058ad-1454-42cb-a0ee-6e458357352d"
        },
        "item": {
          "id": "62ad7696-8572-4bfa-b117-920f4592e115",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "1a039629-e95a-42e3-8dfc-085b431d6722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f9da01b-a63a-435f-adfb-aedcfe4998e3",
        "cursor": {
          "ref": "409e8e3e-6db0-41eb-99c0-baafad2b2d8c",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "0c5f3e82-1518-4b53-b0cd-a72517e3b4ff"
        },
        "item": {
          "id": "6f9da01b-a63a-435f-adfb-aedcfe4998e3",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "051a2914-2217-49b1-9eb1-32552fa991a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7fa47e9-a72d-436e-a218-db944a094e5f",
        "cursor": {
          "ref": "35748aec-def2-4228-b61b-f5fbfa27344e",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "49e0c836-a677-4da5-94f7-9a42ca3b9df5"
        },
        "item": {
          "id": "a7fa47e9-a72d-436e-a218-db944a094e5f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "bd1ef1ce-2e84-4c1c-b3c1-93273462b407",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf2d5f8f-c4ff-446d-80bd-d0cb27d5e36b",
        "cursor": {
          "ref": "f4f9f69f-1b82-4bb6-bd3f-ae51af2e4240",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4aba9a66-aac7-4d73-9ce7-0d87d4ccb2ea"
        },
        "item": {
          "id": "bf2d5f8f-c4ff-446d-80bd-d0cb27d5e36b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "41fe6889-55e2-4e22-b8a0-09bd68a61e35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c20766-b5ac-4984-91f1-a588775fc978",
        "cursor": {
          "ref": "13d6861d-5a32-47f6-81d8-41f85dad41a7",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "514aba33-a3be-48e2-b568-b540bca515c1"
        },
        "item": {
          "id": "22c20766-b5ac-4984-91f1-a588775fc978",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c1d2820a-192e-4fc0-a8e5-48dd7e922889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae0ed69-2cb3-4ebd-a838-5005f5c5e407",
        "cursor": {
          "ref": "31ffd8cf-5de9-45a6-8ee5-d6cb0b8aa1ee",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "4cb4bc8d-363a-4913-b3fd-2f1abd4d9d18"
        },
        "item": {
          "id": "5ae0ed69-2cb3-4ebd-a838-5005f5c5e407",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "53a71888-48a6-4453-a1a9-4f0675ee3675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda28ed6-625e-4e00-af9f-4c58f3507527",
        "cursor": {
          "ref": "205aee85-a65e-4185-adf8-0a5eac7293cf",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "937a59a7-946e-4424-8101-f52e71a30529"
        },
        "item": {
          "id": "dda28ed6-625e-4e00-af9f-4c58f3507527",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "cd3f6850-dda3-4cf5-8612-cdedba47f117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b70b1acb-147d-4c4d-bcab-682a7ee4d2c3",
        "cursor": {
          "ref": "f9bbce93-e3b1-4b40-b94e-3b8fae0a8a7a",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "0ea580af-8516-49fb-b801-aa2efcd2a247"
        },
        "item": {
          "id": "b70b1acb-147d-4c4d-bcab-682a7ee4d2c3",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "194ff764-3704-4da0-a885-7c9849df81c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c115c7-36b2-4dfb-96f9-5507e205ba1e",
        "cursor": {
          "ref": "e09a1350-3a6e-4397-8da5-a774e38a24d6",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d626189c-d2c9-4a2c-b6aa-e6f11091ebf2"
        },
        "item": {
          "id": "c5c115c7-36b2-4dfb-96f9-5507e205ba1e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b0d3fcb3-56cd-4265-8600-b5223b44692f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2ad311-836d-4b43-b9a2-cf9afbe68050",
        "cursor": {
          "ref": "ed200ab6-f8b1-4153-854f-f805f1a581a1",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2af3134c-8b41-474e-9580-447b94f6c249"
        },
        "item": {
          "id": "df2ad311-836d-4b43-b9a2-cf9afbe68050",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d60d4579-6345-4320-8594-dd32e4463d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be4eca4-8c54-4036-ae38-ea4969cfdfc2",
        "cursor": {
          "ref": "19339cb5-5130-443f-a101-54c58baea158",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "92e800b6-7dfe-4813-9848-b3c4d6110edb"
        },
        "item": {
          "id": "1be4eca4-8c54-4036-ae38-ea4969cfdfc2",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4ae6860f-0e24-4950-b5d5-60c33aa7c051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e69f1b9-da06-4539-b0bb-a8f702b5b572",
        "cursor": {
          "ref": "01de25b5-872a-44c7-9714-31dd677fd94a",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "039d5138-0a50-4af6-87c5-9d2b342c38d3"
        },
        "item": {
          "id": "3e69f1b9-da06-4539-b0bb-a8f702b5b572",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c73ac58e-dd07-481b-9583-514f4eaa97b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd7a70ed-6c8d-49f3-913b-03983ab573d0",
        "cursor": {
          "ref": "e50f574b-95d4-4f29-95a9-d18c56b047fc",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "c04db81c-9f16-4a28-8bd1-aae606c91548"
        },
        "item": {
          "id": "dd7a70ed-6c8d-49f3-913b-03983ab573d0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d78e8dd5-7a54-4075-adb0-ecbebbb2fe8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b6f817-9428-4f2f-bef9-94e2d7db9cdb",
        "cursor": {
          "ref": "32130ce6-c50e-41d8-ab7f-a298af6a0c6a",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "23c17220-d5ea-46f6-aa35-e2194bc77796"
        },
        "item": {
          "id": "98b6f817-9428-4f2f-bef9-94e2d7db9cdb",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "084346c2-bfae-4d4c-a57c-aa5664431987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce600180-9234-427e-9e0f-8d20619fd77c",
        "cursor": {
          "ref": "0fce2db8-a30d-4f8e-af6b-2f2b82c9310c",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a842f7c7-3cd2-4ec9-9148-0dc64d092284"
        },
        "item": {
          "id": "ce600180-9234-427e-9e0f-8d20619fd77c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5c713f90-c0fb-449e-bd18-e6d8e02ba6c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 150,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac40f4e-ab78-4cd1-905f-292ba71fa4d5",
        "cursor": {
          "ref": "6194e5c0-7bd3-4f1c-a713-19098a3e6912",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "f192b793-5af8-412f-aa4f-416cdd9211c3"
        },
        "item": {
          "id": "aac40f4e-ab78-4cd1-905f-292ba71fa4d5",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a71f26c1-da75-410c-bee7-934255106ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6cd6924-79d9-4315-8f59-46af642215a1",
        "cursor": {
          "ref": "f7305661-8fa5-4581-9beb-514df1a15989",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c1ef2998-9e02-4ff2-8d4d-c479f381f9ad"
        },
        "item": {
          "id": "f6cd6924-79d9-4315-8f59-46af642215a1",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "582fa2ac-f68c-4448-ab95-73ba047b3cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0898322-5ab1-45a9-84b7-4284483fd613",
        "cursor": {
          "ref": "def11812-cdf7-4dff-8a81-7e41e83e168d",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "af811d3b-a53a-4114-ad95-5f903b5b141c"
        },
        "item": {
          "id": "a0898322-5ab1-45a9-84b7-4284483fd613",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "5ac06f10-359f-4f11-9959-3c31a422e176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "069b360d-435f-4dee-a65c-e473937fecdc",
        "cursor": {
          "ref": "cb6b8b87-89bd-4385-8bfa-c3964500a083",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "38db128c-7a09-4f4a-a439-5b496362f1e9"
        },
        "item": {
          "id": "069b360d-435f-4dee-a65c-e473937fecdc",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "2ce0d15a-5aa1-4079-9a57-396d979c4bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fdb46d8-1421-4858-a3ae-6a9e62983076",
        "cursor": {
          "ref": "c66a86e4-6a1d-4e96-a18b-cbddb3bf22c5",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a09324c8-5d35-46c1-a52d-3bd6e4cfa463"
        },
        "item": {
          "id": "8fdb46d8-1421-4858-a3ae-6a9e62983076",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e9f9c800-fb0a-4cf1-982b-9505bdf16474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b589082e-fa88-4ba5-8e14-0e7b674f43b9",
        "cursor": {
          "ref": "723db9cc-fffb-46fe-8a22-a5446267ddb7",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1ea7e3e7-bd72-4bba-b9cb-2ffb9cff3e1d"
        },
        "item": {
          "id": "b589082e-fa88-4ba5-8e14-0e7b674f43b9",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f239e2d6-57c4-46e8-b958-67211d3051c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa66d196-4123-46f5-ac5f-d52ecf9c166c",
        "cursor": {
          "ref": "3e917342-7960-4524-ae57-4498c5cd51c0",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4c05f643-cb5f-4428-a822-03181ea39644"
        },
        "item": {
          "id": "aa66d196-4123-46f5-ac5f-d52ecf9c166c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e537745c-fc08-40bb-8530-c142a18a56dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33b8290-d693-4e50-9683-198a30af4758",
        "cursor": {
          "ref": "aeea7980-86f3-406e-8aa8-ef64f25e2a98",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3f5bc217-2cdf-46db-a903-8744cf36d171"
        },
        "item": {
          "id": "c33b8290-d693-4e50-9683-198a30af4758",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "243f4bb5-b818-4ab7-a3df-226740b8788f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083d4072-89fb-4947-a1d6-b209354eb15b",
        "cursor": {
          "ref": "ed4146a0-e9c0-4522-93ab-3ccf6158bf13",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d36acd58-1530-4bd1-86d9-6d4aebb2606d"
        },
        "item": {
          "id": "083d4072-89fb-4947-a1d6-b209354eb15b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4a1de540-fc4c-4fc4-b596-d5e492a7a150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ffbc4ba-182c-42ad-8d75-0eecb834af1b",
        "cursor": {
          "ref": "4d9439c6-0e58-4a07-aed8-c2d54b2798fb",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "9587e8ad-fbcf-4f10-8fae-32bf13d55d84"
        },
        "item": {
          "id": "4ffbc4ba-182c-42ad-8d75-0eecb834af1b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "70aa1e21-876f-4eb9-8d72-b25c1927e0eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba24929-bbe7-4ea4-98a4-bd6edfe02b83",
        "cursor": {
          "ref": "5475f8c0-4881-41c4-9814-3c9c3d42dd32",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "3d008a27-6339-4c67-84cb-8bb0cc979805"
        },
        "item": {
          "id": "5ba24929-bbe7-4ea4-98a4-bd6edfe02b83",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e15bbc6d-8fa0-4c9f-ac78-e7029e6bfcbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d0435a-16ca-4da0-bd71-69ecdb4d31dc",
        "cursor": {
          "ref": "eb87bbac-209a-4f25-972c-e69b4cc6ea6a",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "211c6120-196a-40c9-9c65-01e166fc5b0c"
        },
        "item": {
          "id": "76d0435a-16ca-4da0-bd71-69ecdb4d31dc",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "46b17caa-ee98-440a-ba8d-7a34ead4cb35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd41e5d7-1763-48df-ae89-fd6e949b1aec",
        "cursor": {
          "ref": "5b519a52-d291-45d8-a138-5f34a787f9d1",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c447674f-2afe-4fa8-9dd0-d4f94c7a797a"
        },
        "item": {
          "id": "cd41e5d7-1763-48df-ae89-fd6e949b1aec",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "68f18958-02c1-4954-b15f-6b6f52cb339d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d27a1e1-c02a-4195-8ff3-1c2c6f229b3d",
        "cursor": {
          "ref": "fa4b4cd8-ab05-4a38-ae05-13b97840ae32",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b7a2f3ab-63b7-4cc8-99fa-24c8df42a979"
        },
        "item": {
          "id": "5d27a1e1-c02a-4195-8ff3-1c2c6f229b3d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1a8cf878-b4e3-4895-bb75-a0ba8e6be52b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a40df9c3-3323-4a1d-ba4a-4dfbe249c6c6",
        "cursor": {
          "ref": "01372dde-0ddd-430c-99e9-4385cfe98a02",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "44605033-ab27-4268-bd78-5098c4fa8e8a"
        },
        "item": {
          "id": "a40df9c3-3323-4a1d-ba4a-4dfbe249c6c6",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9ad95107-623c-484e-9951-39ed61367d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ecd281-5209-41b4-8461-95e4e5f36b45",
        "cursor": {
          "ref": "d1cb8634-c2d2-401a-bc38-ec086f5c07a3",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b3faaf2c-0b20-45b1-927c-add80efa7228"
        },
        "item": {
          "id": "73ecd281-5209-41b4-8461-95e4e5f36b45",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "17ea77f9-7c1a-4cee-97bd-db478e7ec832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7305cc9a-f8ac-40e8-8b0a-f8cde6276a35",
        "cursor": {
          "ref": "105bbdf2-5d71-42ff-877c-f1df43c5bdcc",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e73ce541-74f1-437c-af37-2ca1e8780c1e"
        },
        "item": {
          "id": "7305cc9a-f8ac-40e8-8b0a-f8cde6276a35",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "80f02bbe-f629-4207-a3da-2f9f25280fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b3cd71-c73b-41b9-b1a1-cd79a8168a88",
        "cursor": {
          "ref": "edbcddc7-a03e-4235-9298-dd30012657bb",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0c5fb139-f5e0-4273-8183-e15426a6d1eb"
        },
        "item": {
          "id": "a6b3cd71-c73b-41b9-b1a1-cd79a8168a88",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "e4ee0f94-99a3-4e81-9078-52dfad26a036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "960d6576-5793-446a-946d-32c5eaba2db4",
        "cursor": {
          "ref": "e878b5a0-14a8-4a15-ab5f-0180ebc5b05c",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4ffcb1d9-02be-47db-a3b2-83d64b66c80b"
        },
        "item": {
          "id": "960d6576-5793-446a-946d-32c5eaba2db4",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c5a77afb-fe67-40a2-bafc-4ba1195ed1b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88ea6d6-37f6-4813-a4c3-0b81fe213a47",
        "cursor": {
          "ref": "9385767b-e9fe-43a6-9ac8-54ac4b1dd5c6",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8937d77e-95b0-41f6-8869-e08fdec702f5"
        },
        "item": {
          "id": "b88ea6d6-37f6-4813-a4c3-0b81fe213a47",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "6f296ffd-42f0-4d1c-b280-39ca7e44b55e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "589d379d-b017-4e70-a5ff-4ac6b410742b",
        "cursor": {
          "ref": "69082f02-a799-4efb-864b-f9db9dbdf812",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "66d9509c-533d-4cbe-a466-89126f45e82d"
        },
        "item": {
          "id": "589d379d-b017-4e70-a5ff-4ac6b410742b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "93df69c2-21b7-4286-b1e9-6ee57ad23874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "930de1cf-5532-4b7e-9a37-f8fadf3ad177",
        "cursor": {
          "ref": "4e16b34d-c4a6-4b92-8072-4c8dc8097b88",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "bf685fd7-44bd-4dad-a598-4d6d29be7724"
        },
        "item": {
          "id": "930de1cf-5532-4b7e-9a37-f8fadf3ad177",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "bb2a37f8-af13-49bc-84ad-6af0598d5190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59ca444-bbc1-4abf-9b09-a987a34ff508",
        "cursor": {
          "ref": "d48e81a0-abd7-4600-83e0-b84ff05e5716",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b421ea32-51c4-4f3d-a1a2-7158762bb97b"
        },
        "item": {
          "id": "f59ca444-bbc1-4abf-9b09-a987a34ff508",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "01d6496f-837d-43c2-b20a-dd4e52f0b874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7b098e-92f1-4a97-9561-44d51a9ec373",
        "cursor": {
          "ref": "e214d8cd-d9ee-4ddd-a249-9f43925d0fd1",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1013953f-2b21-4276-b3c9-9d99d89539cf"
        },
        "item": {
          "id": "ee7b098e-92f1-4a97-9561-44d51a9ec373",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d8a29669-8c7a-4032-83f0-9ebaab6e9599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ceb170-7e26-4dd6-88de-5130fe87eeeb",
        "cursor": {
          "ref": "20f51576-a97d-4435-8ac1-40303e6c1ff1",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1ef4d240-7fe3-4269-86f7-2c0eb7d47200"
        },
        "item": {
          "id": "88ceb170-7e26-4dd6-88de-5130fe87eeeb",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c7d7ac0a-b61a-4d3e-b34b-546c41d36eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58891f67-d3cb-47fd-ad5f-ca5f518ee586",
        "cursor": {
          "ref": "48ed7d36-259e-40c0-b71a-4627e1c6cda2",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "83b6778b-b9a7-4f7c-8557-0df3e3d86e6e"
        },
        "item": {
          "id": "58891f67-d3cb-47fd-ad5f-ca5f518ee586",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "5f94974c-63b6-4153-8d8b-fc23f4ee4578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ae37e0-67f3-487e-ac3e-f77f7561ba09",
        "cursor": {
          "ref": "8c023309-bcf5-444c-83af-437cf62f6aad",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "198bcda2-d3fd-4e66-87c5-8c91ed37ac5d"
        },
        "item": {
          "id": "13ae37e0-67f3-487e-ac3e-f77f7561ba09",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6bf3286f-985f-4be1-82cf-a693ea4f5bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecec7387-ffd6-49a5-89d9-b3ef483332ae",
        "cursor": {
          "ref": "22bcc108-1cdb-4ef2-96e4-629ce75f1191",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "49ad7048-1d35-4ea7-8b4f-7168ff09867a"
        },
        "item": {
          "id": "ecec7387-ffd6-49a5-89d9-b3ef483332ae",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e94780cc-dc48-48ce-a792-1def90194b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2763b5-4933-4464-ab85-77063879a27c",
        "cursor": {
          "ref": "029289e0-4c9d-498b-9453-30ed7dca169a",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b1b2d730-b5a5-4ab8-ab4a-f192caadcf59"
        },
        "item": {
          "id": "be2763b5-4933-4464-ab85-77063879a27c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e55189f6-bf31-45eb-97fb-2ddf1b4879c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f17abe-cde5-47a5-ba84-95a3e2668271",
        "cursor": {
          "ref": "dbcc3ac3-141f-4d42-a8c5-7bd418ff8308",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "37e5bf20-abdc-476f-b5b5-7b710af5b013"
        },
        "item": {
          "id": "82f17abe-cde5-47a5-ba84-95a3e2668271",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7ca8c11f-7630-46d9-b0de-76b14d7b9ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24318792-9a8c-43c8-8242-e05b97ae084d",
        "cursor": {
          "ref": "1b455984-e3a0-4191-9d95-b3402140c739",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "8fc0954c-af7f-45f9-919e-09e9aebd1fb3"
        },
        "item": {
          "id": "24318792-9a8c-43c8-8242-e05b97ae084d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0584cef7-e659-4090-987a-65ed565051bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9955ce-3981-4b92-9d4d-3b9df1a776b6",
        "cursor": {
          "ref": "40f3819f-f4e4-4969-9967-81ab48aaf6fd",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c6c4e254-608b-4fc0-a5d9-4e61e185cf6e"
        },
        "item": {
          "id": "ff9955ce-3981-4b92-9d4d-3b9df1a776b6",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a8feca5b-b76f-4a91-8bca-46526373c1e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec4dadf-097a-4a79-b691-b17fb4d94fd2",
        "cursor": {
          "ref": "45ab15e2-8255-436b-9265-c7c3aabfa435",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c46ea3c4-d6bf-4a85-b7e5-f659e2a68206"
        },
        "item": {
          "id": "3ec4dadf-097a-4a79-b691-b17fb4d94fd2",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e6276dae-1bba-4a41-bebd-475306d8a4b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6182eec8-caf8-4859-b033-4e5ccd2da1db",
        "cursor": {
          "ref": "e39b6de3-8da0-4bdb-b2eb-87d77005bf73",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4ed4a95d-c5a2-4ce8-97fb-6d0c24485687"
        },
        "item": {
          "id": "6182eec8-caf8-4859-b033-4e5ccd2da1db",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "f603f067-6205-493d-bba6-064bcc8b985a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc7410a-9490-4a34-ba12-1a32ba97bcf7",
        "cursor": {
          "ref": "dd4e1bb5-c801-4b6a-b299-8fd35b90e397",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "14cbfa9b-f34e-41d8-8afe-51f75cd67011"
        },
        "item": {
          "id": "3bc7410a-9490-4a34-ba12-1a32ba97bcf7",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d07aa3f5-b816-423d-9e1e-be22379c0448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c1a0fd3-011d-4574-a3ca-8f39e3d2a8a4",
        "cursor": {
          "ref": "454830bd-82fb-4b3e-95e0-aa98184aafa9",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "01834641-a614-4e3b-9a8b-c79c8d56b7f3"
        },
        "item": {
          "id": "2c1a0fd3-011d-4574-a3ca-8f39e3d2a8a4",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "37a869c2-2915-4090-ac92-ac728b5439aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e7a1da-b37a-4b9c-aee6-74706f74d294",
        "cursor": {
          "ref": "b23f5130-e45b-41a5-9e80-8300592ccea1",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ec2c25e0-cf85-4159-8a92-e306746ec4d7"
        },
        "item": {
          "id": "d6e7a1da-b37a-4b9c-aee6-74706f74d294",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1fd078f0-d4e0-4cc6-b3be-e39a02ed2190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a2c84b6-395a-480b-aa35-81ff159acdc6",
        "cursor": {
          "ref": "141695cc-7a7a-42cc-8f0a-9dcc6e9b9df5",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e7445f08-3d3f-466a-8351-c5ac5e6b3d3a"
        },
        "item": {
          "id": "5a2c84b6-395a-480b-aa35-81ff159acdc6",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "7f72277e-fb47-4622-96be-1ff14ffa236c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "731aea1c-5e6a-4c98-a163-56c009909f23",
        "cursor": {
          "ref": "8619c6bf-8434-4786-ac01-d9378e2e606b",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e99f2bbd-2701-45e4-94e8-d2072a74dd17"
        },
        "item": {
          "id": "731aea1c-5e6a-4c98-a163-56c009909f23",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "abbd64cd-77a9-4533-8429-9359222c05fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e9bbfd-4cec-4fdf-ad29-296852491a25",
        "cursor": {
          "ref": "d233adde-1fd8-4f17-9e8f-4a3b4c9126d6",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e2276163-16e8-41e5-a54a-9484326b6027"
        },
        "item": {
          "id": "85e9bbfd-4cec-4fdf-ad29-296852491a25",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "378f5440-2c11-4ac2-9fd4-9f751ba84937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b580ff8b-5a19-4167-abf3-ff9b8df7118c",
        "cursor": {
          "ref": "e23f3669-61fa-4d2a-b196-52a8a4412099",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ae1ecb56-4564-4d7a-8bb0-3fe94587012d"
        },
        "item": {
          "id": "b580ff8b-5a19-4167-abf3-ff9b8df7118c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0cfcb1da-f97e-4bc6-bb3c-6380be0757aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c1c4907-603a-40c8-bfe8-741ec8e33e0a",
        "cursor": {
          "ref": "8435bf4c-4af0-489f-afd8-57c6c4b1036a",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "926ed839-8c21-4f5f-b3a4-577cac246a81"
        },
        "item": {
          "id": "2c1c4907-603a-40c8-bfe8-741ec8e33e0a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c2e3c9a9-019e-4111-8c71-e260c89f8302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac15b18-51c4-4731-837e-6b846fa2df74",
        "cursor": {
          "ref": "99c27948-2a4d-4993-b7ad-58e7e7d9a726",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f5892c88-e94d-4a57-9f83-76fdaf8a9bc0"
        },
        "item": {
          "id": "2ac15b18-51c4-4731-837e-6b846fa2df74",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a5f44c4c-b81c-42eb-a8b5-111f92e9c503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdbcaee3-3bd9-423b-af2f-2b5ff9413328",
        "cursor": {
          "ref": "51f7ac31-ab62-4216-821c-8933c4e2fc19",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "20efeac5-fffd-4e50-b4f6-2bea3d27f5fe"
        },
        "item": {
          "id": "bdbcaee3-3bd9-423b-af2f-2b5ff9413328",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "72b700ed-1baf-436c-a3a7-5c237669be43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec5aab0-a714-42e9-a3fb-3d683ec7be65",
        "cursor": {
          "ref": "f4b67d4b-3899-4707-90e3-848195188670",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "75e9b365-6a15-4934-824f-21f7acb8f42d"
        },
        "item": {
          "id": "cec5aab0-a714-42e9-a3fb-3d683ec7be65",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "9e7e5ba3-e143-4b72-9098-e061a8e19c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82dda984-4b9f-4d9f-8bf0-002b889b7324",
        "cursor": {
          "ref": "18a9a520-ecc3-4e21-aea9-e4eda500962c",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ca7a51fb-b2fc-4508-8d4d-ba9f2fe3f270"
        },
        "item": {
          "id": "82dda984-4b9f-4d9f-8bf0-002b889b7324",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "7799cdcf-6ec7-4b52-8973-f56b4b9f785d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bde5e71-abf5-45ab-a856-457d2236d777",
        "cursor": {
          "ref": "1014a1ce-d3ed-4b93-bc5a-7c105141e0c2",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "110b6e0b-0df0-4bf0-8360-7cdc823b325d"
        },
        "item": {
          "id": "8bde5e71-abf5-45ab-a856-457d2236d777",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "fc607037-cca6-4b46-bd94-8c9e5b9c01bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f91d92-7ebd-47b5-ba32-48ad570492d4",
        "cursor": {
          "ref": "ae891e90-b7ce-4fb2-9c8d-1c4f9074872f",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "da925787-8eee-43db-9802-3b60b428541a"
        },
        "item": {
          "id": "17f91d92-7ebd-47b5-ba32-48ad570492d4",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3cf1b17a-7186-4cc3-892d-48be6e7f9e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5588a909-35ab-4fd7-8d0f-a6b172846ced",
        "cursor": {
          "ref": "831a292d-f6b0-4f6a-ac29-2684a904d54f",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a3372a41-745e-4ea0-8401-ef28a49bcf5e"
        },
        "item": {
          "id": "5588a909-35ab-4fd7-8d0f-a6b172846ced",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e5aba4ad-590c-4f4f-94b0-36e33dcfd35f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e25552f-3c90-4480-8785-26b982550dbb",
        "cursor": {
          "ref": "81e3ee60-d964-489e-8ac7-54ac7734de3a",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2fdb69ab-5859-4e11-b900-7975151a8ae5"
        },
        "item": {
          "id": "0e25552f-3c90-4480-8785-26b982550dbb",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "08ea5a11-6848-49f5-a18f-f55b2db78ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf6f8aea-1c82-4a5e-8904-b1dbab61b2cf",
        "cursor": {
          "ref": "c12cc5a4-0ba7-481d-9721-a73e4566b808",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "18cf4fec-1e29-4f0e-b6bf-0894cd78563f"
        },
        "item": {
          "id": "bf6f8aea-1c82-4a5e-8904-b1dbab61b2cf",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e2d4f2a9-5fe7-42dd-be66-26c4462539c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b0c90d1-50b9-4184-a4da-ac97d0c4264e",
        "cursor": {
          "ref": "5dc12158-086d-4bdc-b1de-f82c71f81f2f",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "de376489-5492-4b63-8b16-9214952bb6e3"
        },
        "item": {
          "id": "0b0c90d1-50b9-4184-a4da-ac97d0c4264e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "907aa2a7-d0c3-4e65-bc65-df093ec269c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6e0419-e346-43a0-b2a7-1381741a482e",
        "cursor": {
          "ref": "d8573f2b-dc0d-42e8-87b0-810c9ebe5832",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "6ad8bce5-f2aa-46de-9e56-56d5a8cae49b"
        },
        "item": {
          "id": "bb6e0419-e346-43a0-b2a7-1381741a482e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a3054ac5-59b9-4880-b943-49f200338957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46206c6f-991d-4594-a8a1-3646624f3ad1",
        "cursor": {
          "ref": "23a94389-18d3-412b-80dc-5f146c4fa096",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8a87f94f-e551-4232-96c0-7916db43fd0a"
        },
        "item": {
          "id": "46206c6f-991d-4594-a8a1-3646624f3ad1",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b715a4fd-baeb-43f9-91ee-17ff5834a106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b697fbc-dd08-471c-843f-1750d5f12fa9",
        "cursor": {
          "ref": "8215d38d-1c0a-40d3-86ae-841676c882a2",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2dc78382-e428-47bb-b2fd-e029694ad45c"
        },
        "item": {
          "id": "9b697fbc-dd08-471c-843f-1750d5f12fa9",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "388ae808-0901-466a-9cd0-26050c51e424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece6c2e9-9589-4f00-a359-62bb2ef17e24",
        "cursor": {
          "ref": "8f00a128-8989-4bcc-bfdb-92c456c4a90b",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "547b67a6-98d7-4dc4-8c7b-3e65eaac3c57"
        },
        "item": {
          "id": "ece6c2e9-9589-4f00-a359-62bb2ef17e24",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "96cdeb17-7f16-45bd-837f-c2f37446b26d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb658d1-4d82-4542-8bed-468ba4aecfa4",
        "cursor": {
          "ref": "b87a0f21-7165-496c-b8f1-66d39ddba6bd",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "881698ff-ea82-43a6-92ca-fefd2b99c456"
        },
        "item": {
          "id": "8eb658d1-4d82-4542-8bed-468ba4aecfa4",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d540fde7-82c9-420a-8a5f-d541946a7d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14eef1f5-62a9-4d8d-9ba8-deaf7f65abf6",
        "cursor": {
          "ref": "6f3e0dee-b459-4786-b05f-cd26b8de4085",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "93265c1a-1c22-4164-abe7-ae7a1f1d8092"
        },
        "item": {
          "id": "14eef1f5-62a9-4d8d-9ba8-deaf7f65abf6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "97798760-2900-484d-b7e9-011d4771beac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19283ddd-2434-4940-b754-e319bfd8dc74",
        "cursor": {
          "ref": "bfa0f5c5-c543-421a-92d7-e9ca63dd4ca2",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b27ce508-b38b-46bc-9e52-3b75d596f720"
        },
        "item": {
          "id": "19283ddd-2434-4940-b754-e319bfd8dc74",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e9fc42bc-51e2-4789-aebb-6e9c8241c86f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "978687c2-7d8d-4eed-9739-40272180b205",
        "cursor": {
          "ref": "8dbba0b8-5519-4aa8-9804-31cbaeeec897",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "b6753cdd-cb24-407e-8893-8b5ca84c29ef"
        },
        "item": {
          "id": "978687c2-7d8d-4eed-9739-40272180b205",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5f9a4e25-a639-4abd-9c61-0da0d227abe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99cbdee9-54fc-4d1b-ae21-701bbb8715ca",
        "cursor": {
          "ref": "0deb5113-e2fc-44a8-8299-eee94703f564",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "244962e9-e426-4c56-b5a1-6a0ab57e12fa"
        },
        "item": {
          "id": "99cbdee9-54fc-4d1b-ae21-701bbb8715ca",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "854eac74-2938-4ea3-aa94-c32d7c64d547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "898fbb27-5c97-46e3-8944-aabc57568f2b",
        "cursor": {
          "ref": "0de2683d-76be-4fb4-af5b-9245d7c54970",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "02032b71-67aa-42e5-8066-1652e91698ef"
        },
        "item": {
          "id": "898fbb27-5c97-46e3-8944-aabc57568f2b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7096d8ca-6498-4d35-8fec-8fa99d4a997e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a03bf6-4ef3-4a6f-a310-3eb75b418bb6",
        "cursor": {
          "ref": "6e9d405b-7e37-460c-8cab-ef0b10954f84",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "edd698f3-c5c2-46bb-bd65-a3cde7519adc"
        },
        "item": {
          "id": "d6a03bf6-4ef3-4a6f-a310-3eb75b418bb6",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "055b4d57-08b0-4c54-b0bd-fd44f92181d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291a4fd3-0fd4-489f-83e2-ebd12894da68",
        "cursor": {
          "ref": "fd89f9bc-2925-487b-97b3-e1cfdfb10c7f",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "37ac0aa1-de0b-404b-aafa-030d11f8981b"
        },
        "item": {
          "id": "291a4fd3-0fd4-489f-83e2-ebd12894da68",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c206d06c-f04a-4860-932f-95c9282bd88d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3a521a-db33-46aa-952d-13f765751e0f",
        "cursor": {
          "ref": "54169f11-8cd0-459f-9c54-876daaf7459a",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "63d5a63e-4e43-400f-93ec-1dcce023e467"
        },
        "item": {
          "id": "ce3a521a-db33-46aa-952d-13f765751e0f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "44c2b1c3-8979-4b65-bf60-0f6c5f8479b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d6dd82-c40a-490b-9f00-337dfc718d60",
        "cursor": {
          "ref": "465feedd-fa2d-40c8-80d0-b4845692b2ff",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "7ddb8fb0-affd-4d7d-97c2-e03ff57daeff"
        },
        "item": {
          "id": "f4d6dd82-c40a-490b-9f00-337dfc718d60",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c46040a4-4f60-4485-8930-606b71246ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55b27e71-8870-4a51-906a-96e7cebff684",
        "cursor": {
          "ref": "ab56c7fe-7558-4684-998a-85dcdd62b8e4",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "45de70db-5b30-4d52-893c-96dfdafab5fc"
        },
        "item": {
          "id": "55b27e71-8870-4a51-906a-96e7cebff684",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "fb602580-1c48-4a54-833a-180cb4379748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d434aa7a-9263-4730-84c6-68bd3fe8672f",
        "cursor": {
          "ref": "e159e97d-b078-47e0-a1f7-7a520d3d3cbe",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "ed9ca2e6-efa0-44ee-a212-a11b55760d67"
        },
        "item": {
          "id": "d434aa7a-9263-4730-84c6-68bd3fe8672f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e4769152-f922-4091-a8bc-a97a1970319b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c3315a-14f0-4d47-8d82-6f20f31d65e6",
        "cursor": {
          "ref": "a31e596f-2539-49ac-bfe1-8b315becdbfb",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "3b10270b-2a96-4fd3-8e1d-395ed8ae6c9e"
        },
        "item": {
          "id": "f1c3315a-14f0-4d47-8d82-6f20f31d65e6",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "303c7ad5-0b76-4a6c-8396-37851bfb99d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a65dfc-4909-4d4d-bd31-5df649b36166",
        "cursor": {
          "ref": "6620e6f8-2b62-4568-a0f9-86929cf57c48",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "cd00b03c-c21e-457c-8d87-34737241f5cf"
        },
        "item": {
          "id": "03a65dfc-4909-4d4d-bd31-5df649b36166",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d38c4c80-b81f-4941-b91e-9c3efb643eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39bb55c0-7007-4673-b010-2cd93d702c62",
        "cursor": {
          "ref": "1348817e-321d-4294-aed2-3eb23a91e766",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "20703f69-5c2b-47e5-8f1e-cb72b4c211a5"
        },
        "item": {
          "id": "39bb55c0-7007-4673-b010-2cd93d702c62",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "19b667de-4cff-4bd1-996d-1d3e5c2f9694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dfb10b2-e7bd-49ef-a5bd-1562bfbe1bd3",
        "cursor": {
          "ref": "f2d88817-7a82-4a6c-a9e4-f13926d48800",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "5d66e7d5-6445-4945-9909-fb90d81bc657"
        },
        "item": {
          "id": "2dfb10b2-e7bd-49ef-a5bd-1562bfbe1bd3",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "041818f2-99fd-4858-9363-a2043839d7a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f206134f-7b5f-46fc-adf5-dd2be30eb696",
        "cursor": {
          "ref": "e9a541bb-08dc-47d6-9df4-8baca585857d",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "83ae15cd-5dda-475d-a22a-947768cced8f"
        },
        "item": {
          "id": "f206134f-7b5f-46fc-adf5-dd2be30eb696",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "86d1af7d-6868-4cf7-9f80-d6f82e9a13cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7615827-45cd-49aa-88f5-b2e29b59419f",
        "cursor": {
          "ref": "967e09fc-c53e-4eb2-9264-e63a998b144e",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "c40df6c9-3260-4e24-9ec7-8d3c3255943f"
        },
        "item": {
          "id": "d7615827-45cd-49aa-88f5-b2e29b59419f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ce51d21c-da34-4184-ad7d-bc7230d88e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1940da16-b370-43f1-8b0f-f522c144a6a5",
        "cursor": {
          "ref": "5840ad40-e661-425e-a0e6-0234e589e0ed",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "b30f6ecd-b563-42be-bd8e-e2c801addc11"
        },
        "item": {
          "id": "1940da16-b370-43f1-8b0f-f522c144a6a5",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d16b6ed8-1e91-4338-abe0-94653de6f87f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b14bf82-de40-4acf-abb2-e75f1d96eb97",
        "cursor": {
          "ref": "83c20978-fc05-44e8-aa7c-e31b2fb9063c",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "b35e6646-ff43-4144-b1de-b8bf9144de68"
        },
        "item": {
          "id": "2b14bf82-de40-4acf-abb2-e75f1d96eb97",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "57658b42-6a50-4815-a80c-023c89ab1b01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e4d52c-8c6b-4d32-86b5-aba71fb08a70",
        "cursor": {
          "ref": "2d105b83-8443-4e00-81eb-963887fd8f26",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "90f19d88-1280-4acd-8dc4-94ffe1ddef55"
        },
        "item": {
          "id": "13e4d52c-8c6b-4d32-86b5-aba71fb08a70",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "55618e18-5c83-42f8-955e-1888a277e953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a5ac86-67a7-4bbb-825b-8a8499cc86d7",
        "cursor": {
          "ref": "38bf71b2-1047-4b3c-ada3-fc5663bd0fcf",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "bdd121d3-efd5-47a4-a7a3-bd0add113b25"
        },
        "item": {
          "id": "00a5ac86-67a7-4bbb-825b-8a8499cc86d7",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "65c736e9-50af-4cc5-9f82-506ee730a73b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e1ed3a-5864-4371-a8c4-c1cda8e15977",
        "cursor": {
          "ref": "1dcbeb7d-ae0c-4747-b051-fc24e583db50",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "4d95b96c-6504-4208-a137-0c290d21239e"
        },
        "item": {
          "id": "05e1ed3a-5864-4371-a8c4-c1cda8e15977",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b1780ec4-a553-41ee-8adf-acf9f9a3a52a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c09c39-c1e0-4f0c-b2c6-6bb302092d4c",
        "cursor": {
          "ref": "7b07d362-8dd7-479c-bd8a-63795fbe1e6d",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "befb91fb-3526-4b85-8412-ba4a5d86c3e4"
        },
        "item": {
          "id": "36c09c39-c1e0-4f0c-b2c6-6bb302092d4c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "eb2f6689-e345-4ae6-9b85-31ce87a8034f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e9fa55-ede2-493e-9dee-27aa6c38d44a",
        "cursor": {
          "ref": "362f34c0-b316-4d1a-98a8-f5af56488241",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "e8d07c3b-da1b-4070-a4fb-7a6aea2c08a3"
        },
        "item": {
          "id": "45e9fa55-ede2-493e-9dee-27aa6c38d44a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "684c8faa-9e53-480c-84f4-da6e45c44301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "901964d3-8b09-49b2-974f-6b36beeb73f9",
        "cursor": {
          "ref": "c96a6a2b-867f-43ed-bf1c-b199f4a870fc",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "582e7ca9-527b-4308-aa3c-79c1d3e8ec3c"
        },
        "item": {
          "id": "901964d3-8b09-49b2-974f-6b36beeb73f9",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "bca0c608-c996-4dd7-b151-cb3cf1d1c15c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3244bf70-a929-43ad-9f8b-76b9687c3174",
        "cursor": {
          "ref": "1ee73241-0632-4624-94a8-a33080e45c8f",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "03c0db2e-a9e9-4f16-8c37-49efaad64546"
        },
        "item": {
          "id": "3244bf70-a929-43ad-9f8b-76b9687c3174",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "352f19cf-ee31-4734-8087-7b4c6f00dd9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60e7894-09f4-4f94-86b6-59c349947002",
        "cursor": {
          "ref": "b654b84a-dd46-42d0-90ac-5a23d2bdd4e9",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "e9e2c8d6-15d9-4645-b66e-844984032631"
        },
        "item": {
          "id": "f60e7894-09f4-4f94-86b6-59c349947002",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a3dc0300-5d78-46e8-84f2-095241a002e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a6a843-de92-4316-afa8-76bc4fa9e52e",
        "cursor": {
          "ref": "514a0d79-48eb-43c2-8da4-ba4855b61faf",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "91ff618e-b813-49ed-b892-654de4a5186a"
        },
        "item": {
          "id": "b7a6a843-de92-4316-afa8-76bc4fa9e52e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c32bdb28-7ae4-41e1-8066-d909ebe2a8cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a11c72f-dc24-4a54-a31f-5de6a4d34388",
        "cursor": {
          "ref": "cb3f52a0-d791-4701-949c-b7265de00a17",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "985eca17-582a-4f93-851d-d4b990ee51a8"
        },
        "item": {
          "id": "6a11c72f-dc24-4a54-a31f-5de6a4d34388",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a073de6b-1017-4fcb-bb00-d4018f98bc65",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e5da17-65fe-4fe7-86e5-21c46ddadfad",
        "cursor": {
          "ref": "08830ff3-c360-4500-9445-2c84ae531530",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "a5dd877b-cdd1-4f07-b4d8-dc1dd511715e"
        },
        "item": {
          "id": "14e5da17-65fe-4fe7-86e5-21c46ddadfad",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4ce7ba6b-6556-4c51-b62b-d191451a90ec",
          "status": "OK",
          "code": 200,
          "responseTime": 92,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e2dd8c-ea42-4be3-ac38-884efd414802",
        "cursor": {
          "ref": "1c728ae8-77b1-435c-b738-fa832e6eed4c",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "0998eb2b-a6d1-4ce8-bf63-96ea56558e21"
        },
        "item": {
          "id": "b3e2dd8c-ea42-4be3-ac38-884efd414802",
          "name": "credentials_verify"
        },
        "response": {
          "id": "1a00ff67-1bb6-463d-94bc-286a6e16adff",
          "status": "OK",
          "code": 200,
          "responseTime": 1441,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b3dfe84-c8b4-439e-8d48-f553c02dc07f",
        "cursor": {
          "ref": "1a3752e1-4116-4a1c-bd2d-68f0a36abb42",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b130fcab-4a6f-4273-be14-f5cf8df77b82"
        },
        "item": {
          "id": "4b3dfe84-c8b4-439e-8d48-f553c02dc07f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "9821f34f-f30f-4c76-9c12-ceeab7ffa9ea",
          "status": "OK",
          "code": 200,
          "responseTime": 1354,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0eb4ece-ebaf-4f6a-8cdf-1a72a26c2475",
        "cursor": {
          "ref": "e1f89c01-e751-44f1-a71c-75bd2a72f1a8",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2c818dd5-3be4-459b-9f73-2b087ddca455"
        },
        "item": {
          "id": "a0eb4ece-ebaf-4f6a-8cdf-1a72a26c2475",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fb790a56-6897-4b18-ab6a-cd2935c160d8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 163,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0eb4ece-ebaf-4f6a-8cdf-1a72a26c2475",
        "cursor": {
          "ref": "e1f89c01-e751-44f1-a71c-75bd2a72f1a8",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2c818dd5-3be4-459b-9f73-2b087ddca455"
        },
        "item": {
          "id": "a0eb4ece-ebaf-4f6a-8cdf-1a72a26c2475",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fb790a56-6897-4b18-ab6a-cd2935c160d8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 163,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a93c6ab-f8f7-4fd4-8cbb-81f02fcbb6a9",
        "cursor": {
          "ref": "30840aa7-bb8c-4ca7-be2c-6ef41ed148d8",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "62064688-e825-4ea1-baa9-932b67a459a1"
        },
        "item": {
          "id": "3a93c6ab-f8f7-4fd4-8cbb-81f02fcbb6a9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "86500d9f-7f59-4eb3-9f02-6d40f7caf3a3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "107bb250-f8c3-4601-b89e-6946449337d8",
        "cursor": {
          "ref": "93c04e9d-e3b1-4a92-820b-6c2b33f684d0",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "51e325fe-f484-4009-a488-3d9c069c00a3"
        },
        "item": {
          "id": "107bb250-f8c3-4601-b89e-6946449337d8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9698a058-3a55-4c65-804d-2721df2248af",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}